// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    code = Pointer_stringify(code);
    if (code[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (code.indexOf('"', 1) === code.length-1) {
        code = code.substr(1, code.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + code + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + code + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    return rawList ? list : ret + flushList();
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 33554432;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 9632;


/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } });



































































































































































































































































var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,208,29,0,0,38,0,0,0,216,0,0,0,196,0,0,0,60,0,0,0,4,0,0,0,8,0,0,0,2,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,224,29,0,0,38,0,0,0,56,0,0,0,196,0,0,0,60,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;


































































































































































































































































var __ZN12b2ChainShapeD1Ev;
var __ZN12b2BroadPhaseC1Ev;
var __ZN12b2BroadPhaseD1Ev;
var __ZN13b2DynamicTreeC1Ev;
var __ZN13b2DynamicTreeD1Ev;
var __ZN8b2IslandC1EiiiP16b2StackAllocatorP17b2ContactListener;
var __ZN8b2IslandD1Ev;
var __ZN12b2MouseJointC1EPK15b2MouseJointDef;
var __ZN12b2MotorJointC1EPK15b2MotorJointDef;
var __ZN15b2DistanceJointC1EPK18b2DistanceJointDef;
var __ZN15b2FrictionJointC1EPK18b2FrictionJointDef;
var __ZN11b2WeldJointC1EPK14b2WeldJointDef;
var __ZN11b2GearJointC1EPK14b2GearJointDef;
var __ZN16b2PrismaticJointC1EPK19b2PrismaticJointDef;
var __ZN11b2RopeJointC1EPK14b2RopeJointDef;
var __ZN15b2RevoluteJointC1EPK18b2RevoluteJointDef;
var __ZN12b2WheelJointC1EPK15b2WheelJointDef;
var __ZN13b2PulleyJointC1EPK16b2PulleyJointDef;
var __ZN15b2ContactSolverC1EP18b2ContactSolverDef;
var __ZN15b2ContactSolverD1Ev;
var __ZN9b2FixtureC1Ev;
var __ZN7b2WorldC1ERK6b2Vec2;
var __ZN7b2WorldD1Ev;
var __ZN6b2BodyC1EPK9b2BodyDefP7b2World;
var __ZN6b2BodyD1Ev;
var __ZN16b2ContactManagerC1Ev;
var __ZN16b2VoronoiDiagramC1EP16b2StackAllocatori;
var __ZN16b2VoronoiDiagramD1Ev;
var __ZN15b2ParticleGroupC1Ev;
var __ZN16b2ParticleSystemC1EPK19b2ParticleSystemDefP7b2World;
var __ZN16b2ParticleSystemD1Ev;
var __ZN16b2BlockAllocatorC1Ev;
var __ZN16b2BlockAllocatorD1Ev;
var __ZN7b2TimerC1Ev;
var __ZN16b2StackAllocatorC1Ev;
var __ZN16b2StackAllocatorD1Ev;
/* memory initializer */ allocate([224,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,6,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,19,0,0,0,0,0,0,184,20,0,0,0,0,0,0,32,32,106,100,46,108,101,110,103,116,104,66,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,0,32,32,106,100,46,109,97,120,77,111,116,111,114,84,111,114,113,117,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,100,46,117,112,112,101,114,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,108,111,119,101,114,84,114,97,110,115,108,97,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,108,101,110,103,116,104,65,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,0,32,32,106,100,46,109,111,116,111,114,83,112,101,101,100,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,108,111,119,101,114,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,101,110,97,98,108,101,76,105,109,105,116,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,32,32,106,100,46,100,97,109,112,105,110,103,82,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,100,97,109,112,105,110,103,82,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,32,32,106,100,46,99,111,114,114,101,99,116,105,111,110,70,97,99,116,111,114,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,101,110,97,98,108,101,77,111,116,111,114,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,32,32,106,100,46,101,110,97,98,108,101,76,105,109,105,116,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,114,101,102,101,114,101,110,99,101,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,102,114,101,113,117,101,110,99,121,72,122,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,32,32,106,100,46,109,97,120,84,111,114,113,117,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,32,32,106,100,46,102,114,101,113,117,101,110,99,121,72,122,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,32,32,106,100,46,109,97,120,84,111,114,113,117,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,120,105,115,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,32,32,106,100,46,114,101,102,101,114,101,110,99,101,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,100,46,109,97,120,76,101,110,103,116,104,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,120,105,115,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,32,32,106,100,46,114,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,32,32,106,100,46,114,101,102,101,114,101,110,99,101,65,110,103,108,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,100,46,109,97,120,70,111,114,99,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,101,110,103,116,104,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,100,46,109,97,120,70,111,114,99,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,32,32,106,100,46,103,114,111,117,110,100,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,106,111,105,110,116,50,32,61,32,106,111,105,110,116,115,91,37,100,93,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,66,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,97,110,103,117,108,97,114,79,102,102,115,101,116,32,61,32,37,46,49,53,108,101,102,59,10,0,0,76,105,113,117,105,100,70,117,110,32,49,46,48,46,48,0,32,32,106,100,46,103,114,111,117,110,100,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,106,111,105,110,116,49,32,61,32,106,111,105,110,116,115,91,37,100,93,59,10,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,111,99,97,108,65,110,99,104,111,114,65,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,32,32,106,100,46,108,105,110,101,97,114,79,102,102,115,101,116,46,83,101,116,40,37,46,49,53,108,101,102,44,32,37,46,49,53,108,101,102,41,59,10,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,99,111,108,108,105,100,101,67,111,110,110,101,99,116,101,100,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,98,50,80,117,108,108,101,121,74,111,105,110,116,68,101,102,32,106,100,59,10,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,66,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,98,50,87,104,101,101,108,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,32,32,98,50,82,101,118,111,108,117,116,101,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,0,0,0,0,47,47,32,68,117,109,112,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,105,115,32,106,111,105,110,116,32,116,121,112,101,46,10,0,0,32,32,98,50,82,111,112,101,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,32,32,98,50,80,114,105,115,109,97,116,105,99,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,0,0,0,32,32,98,50,71,101,97,114,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,98,50,87,101,108,100,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,32,32,106,100,46,109,97,120,77,111,116,111,114,70,111,114,99,101,32,61,32,37,46,49,53,108,101,102,59,10,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,109,97,120,77,111,116,111,114,84,111,114,113,117,101,32,61,32,37,46,49,53,108,101,102,59,10,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,0,0,0,0,32,32,106,100,46,109,111,116,111,114,83,112,101,101,100,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,111,105,110,116,115,91,37,100,93,32,61,32,109,95,119,111,114,108,100,45,62,67,114,101,97,116,101,74,111,105,110,116,40,38,106,100,41,59,10,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,100,97,109,112,105,110,103,82,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,32,32,106,100,46,109,111,116,111,114,83,112,101,101,100,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,32,32,106,100,46,101,110,97,98,108,101,77,111,116,111,114,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,32,32,98,50,68,105,115,116,97,110,99,101,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,0,0,0,0,0,32,32,98,50,77,111,116,111,114,74,111,105,110,116,68,101,102,32,106,100,59,10,0,0,32,32,106,100,46,114,97,116,105,111,32,61,32,37,46,49,53,108,101,102,59,10,0,0,32,32,106,100,46,102,114,101,113,117,101,110,99,121,72,122,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,32,32,106,100,46,101,110,97,98,108,101,77,111,116,111,114,32,61,32,98,111,111,108,40,37,100,41,59,10,0,0,0,32,32,106,100,46,117,112,112,101,114,84,114,97,110,115,108,97,116,105,111,110,32,61,32,37,46,49,53,108,101,102,59,10,0,0,0,0,0,0,0,32,32,106,100,46,98,111,100,121,65,32,61,32,98,111,100,105,101,115,91,37,100,93,59,10,0,0,0,0,0,0,0,77,111,117,115,101,32,106,111,105,110,116,32,100,117,109,112,105,110,103,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,10,0,0,0,0,0,0,64,29,0,0,134,0,0,0,122,0,0,0,8,0,0,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,29,0,0,80,0,0,0,166,0,0,0,20,0,0,0,10,0,0,0,16,0,0,0,6,0,0,0,12,0,0,0,6,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,29,0,0,10,0,0,0,6,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,29,0,0,120,0,0,0,2,0,0,0,14,0,0,0,6,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,29,0,0,198,0,0,0,82,0,0,0,46,0,0,0,12,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,29,0,0,94,0,0,0,194,0,0,0,34,0,0,0,6,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,29,0,0,86,0,0,0,170,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,29,0,0,112,0,0,0,18,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,29,0,0,190,0,0,0,152,0,0,0,46,0,0,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,2,0,0,0,46,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,30,0,0,118,0,0,0,116,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,30,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,102,0,0,0,94,0,0,0,210,0,0,0,26,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,30,0,0,14,0,0,0,32,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,30,0,0,4,0,0,0,114,0,0,0,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,30,0,0,24,0,0,0,104,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,30,0,0,34,0,0,0,72,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,30,0,0,58,0,0,0,176,0,0,0,64,0,0,0,124,0,0,0,12,0,0,0,22,0,0,0,2,0,0,0,32,0,0,0,4,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,30,0,0,30,0,0,0,66,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,30,0,0,78,0,0,0,24,0,0,0,30,0,0,0,44,0,0,0,12,0,0,0,22,0,0,0,2,0,0,0,32,0,0,0,16,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,30,0,0,70,0,0,0,110,0,0,0,24,0,0,0,16,0,0,0,16,0,0,0,94,0,0,0,218,0,0,0,50,0,0,0,12,0,0,0,22,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,30,0,0,12,0,0,0,84,0,0,0,126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,30,0,0,14,0,0,0,26,0,0,0,4,0,0,0,2,0,0,0,68,0,0,0,94,0,0,0,36,0,0,0,200,0,0,0,128,0,0,0,68,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,30,0,0,178,0,0,0,14,0,0,0,2,0,0,0,6,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,30,0,0,108,0,0,0,102,0,0,0,28,0,0,0,10,0,0,0,136,0,0,0,94,0,0,0,74,0,0,0,30,0,0,0,132,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,30,0,0,130,0,0,0,16,0,0,0,16,0,0,0,12,0,0,0,100,0,0,0,94,0,0,0,180,0,0,0,42,0,0,0,74,0,0,0,34,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,30,0,0,172,0,0,0,110,0,0,0,14,0,0,0,8,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,30,0,0,8,0,0,0,138,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,30,0,0,76,0,0,0,140,0,0,0,10,0,0,0,4,0,0,0,8,0,0,0,10,0,0,0,6,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,90,0,0,0,24,0,0,0,22,0,0,0,22,0,0,0,130,0,0,0,40,0,0,0,128,0,0,0,70,0,0,0,62,0,0,0,88,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,31,0,0,220,0,0,0,160,0,0,0,22,0,0,0,6,0,0,0,20,0,0,0,12,0,0,0,22,0,0,0,26,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,31,0,0,136,0,0,0,134,0,0,0,10,0,0,0,4,0,0,0,186,0,0,0,94,0,0,0,4,0,0,0,62,0,0,0,84,0,0,0,54,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,31,0,0,4,0,0,0,126,0,0,0,8,0,0,0,6,0,0,0,54,0,0,0,8,0,0,0,158,0,0,0,204,0,0,0,56,0,0,0,20,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,31,0,0,58,0,0,0,92,0,0,0,12,0,0,0,8,0,0,0,212,0,0,0,94,0,0,0,184,0,0,0,108,0,0,0,18,0,0,0,142,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,31,0,0,148,0,0,0,174,0,0,0,54,0,0,0,22,0,0,0,18,0,0,0,16,0,0,0,16,0,0,0,18,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,31,0,0,114,0,0,0,104,0,0,0,14,0,0,0,20,0,0,0,92,0,0,0,94,0,0,0,192,0,0,0,28,0,0,0,6,0,0,0,120,0,0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,31,0,0,86,0,0,0,76,0,0,0,30,0,0,0,18,0,0,0,202,0,0,0,94,0,0,0,34,0,0,0,90,0,0,0,138,0,0,0,36,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,31,0,0,72,0,0,0,28,0,0,0,26,0,0,0,14,0,0,0,214,0,0,0,94,0,0,0,182,0,0,0,146,0,0,0,140,0,0,0,42,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,31,0,0,206,0,0,0,40,0,0,0,50,0,0,0,20,0,0,0,10,0,0,0,4,0,0,0,20,0,0,0,20,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,78,49,54,98,50,80,97,114,116,105,99,108,101,83,121,115,116,101,109,52,49,85,112,100,97,116,101,80,97,105,114,115,65,110,100,84,114,105,97,100,115,87,105,116,104,82,101,97,99,116,105,118,101,80,97,114,116,105,99,108,101,115,69,118,69,49,52,82,101,97,99,116,105,118,101,70,105,108,116,101,114,0,0,0,0,0,0,90,78,49,54,98,50,80,97,114,116,105,99,108,101,83,121,115,116,101,109,51,51,67,114,101,97,116,101,80,97,114,116,105,99,108,101,115,87,105,116,104,83,104,97,112,101,115,70,111,114,71,114,111,117,112,69,80,75,80,75,55,98,50,83,104,97,112,101,105,82,75,49,56,98,50,80,97,114,116,105,99,108,101,71,114,111,117,112,68,101,102,82,75,49,49,98,50,84,114,97,110,115,102,111,114,109,69,49,52,67,111,109,112,111,115,105,116,101,83,104,97,112,101,0,0,0,0,0,90,78,49,54,98,50,80,97,114,116,105,99,108,101,83,121,115,116,101,109,50,48,85,112,100,97,116,101,80,97,105,114,115,65,110,100,84,114,105,97,100,115,69,105,105,82,75,78,83,95,49,54,67,111,110,110,101,99,116,105,111,110,70,105,108,116,101,114,69,69,50,48,85,112,100,97,116,101,84,114,105,97,100,115,67,97,108,108,98,97,99,107,0,0,0,0,90,78,49,54,98,50,80,97,114,116,105,99,108,101,83,121,115,116,101,109,49,56,85,112,100,97,116,101,66,111,100,121,67,111,110,116,97,99,116,115,69,118,69,50,54,85,112,100,97,116,101,66,111,100,121,67,111,110,116,97,99,116,115,67,97,108,108,98,97,99,107,0,90,78,49,54,98,50,80,97,114,116,105,99,108,101,83,121,115,116,101,109,49,56,74,111,105,110,80,97,114,116,105,99,108,101,71,114,111,117,112,115,69,80,49,53,98,50,80,97,114,116,105,99,108,101,71,114,111,117,112,83,49,95,69,50,52,74,111,105,110,80,97,114,116,105,99,108,101,71,114,111,117,112,115,70,105,108,116,101,114,0,0,0,0,0,0,0,90,78,49,54,98,50,80,97,114,116,105,99,108,101,83,121,115,116,101,109,49,52,83,111,108,118,101,67,111,108,108,105,115,105,111,110,69,82,75,49,48,98,50,84,105,109,101,83,116,101,112,69,50,50,83,111,108,118,101,67,111,108,108,105,115,105,111,110,67,97,108,108,98,97,99,107,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,78,49,54,98,50,86,111,114,111,110,111,105,68,105,97,103,114,97,109,49,50,78,111,100,101,67,97,108,108,98,97,99,107,69,0,0,0,0,0,0,78,49,54,98,50,80,97,114,116,105,99,108,101,83,121,115,116,101,109,49,54,67,111,110,110,101,99,116,105,111,110,70,105,108,116,101,114,69,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,57,98,50,67,111,110,116,97,99,116,0,0,0,0,0,0,55,98,50,83,104,97,112,101,0,0,0,0,0,0,0,0,55,98,50,74,111,105,110,116,0,0,0,0,0,0,0,0,50,53,98,50,80,111,108,121,103,111,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,0,0,0,50,52,98,50,67,104,97,105,110,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0,0,0,0,0,0,50,51,98,50,69,100,103,101,65,110,100,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0,0,0,0,0,0,0,50,51,98,50,67,104,97,105,110,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,0,0,0,0,0,50,50,98,50,87,111,114,108,100,67,111,110,116,97,99,116,76,105,115,116,101,110,101,114,0,0,0,0,0,0,0,0,50,50,98,50,69,100,103,101,65,110,100,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,0,0,0,0,0,0,49,55,98,50,67,111,110,116,97,99,116,76,105,115,116,101,110,101,114,0,0,0,0,0,49,54,98,50,80,114,105,115,109,97,116,105,99,74,111,105,110,116,0,0,0,0,0,0,49,54,98,50,80,111,108,121,103,111,110,67,111,110,116,97,99,116,0,0,0,0,0,0,49,53,98,50,82,101,118,111,108,117,116,101,74,111,105,110,116,0,0,0,0,0,0,0,49,53,98,50,81,117,101,114,121,67,97,108,108,98,97,99,107,0,0,0,0,0,0,0,49,53,98,50,70,114,105,99,116,105,111,110,74,111,105,110,116,0,0,0,0,0,0,0,49,53,98,50,68,105,115,116,97,110,99,101,74,111,105,110,116,0,0,0,0,0,0,0,49,53,98,50,67,111,110,116,97,99,116,70,105,108,116,101,114,0,0,0,0,0,0,0,49,53,98,50,67,105,114,99,108,101,67,111,110,116,97,99,116,0,0,0,0,0,0,0,49,52,98,50,80,111,108,121,103,111,110,83,104,97,112,101,0,0,0,0,0,0,0,0,49,51,98,50,80,117,108,108,101,121,74,111,105,110,116,0,49,51,98,50,67,105,114,99,108,101,83,104,97,112,101,0,49,50,98,50,87,104,101,101,108,74,111,105,110,116,0,0,49,50,98,50,77,111,117,115,101,74,111,105,110,116,0,0,49,50,98,50,77,111,116,111,114,74,111,105,110,116,0,0,49,50,98,50,67,104,97,105,110,83,104,97,112,101,0,0,49,49,98,50,87,101,108,100,74,111,105,110,116,0,0,0,49,49,98,50,82,111,112,101,74,111,105,110,116,0,0,0,49,49,98,50,71,101,97,114,74,111,105,110,116,0,0,0,49,49,98,50,69,100,103,101,83,104,97,112,101,0,0,0,0,0,0,0,152,23,0,0,200,29,0,0,0,0,0,0,0,0,0,0,240,23,0,0,8,30,0,0,0,0,0,0,0,0,0,0,112,24,0,0,192,29,0,0,0,0,0,0,0,0,0,0,208,24,0,0,176,30,0,0,0,0,0,0,0,0,0,0,24,25,0,0,200,29,0,0,0,0,0,0,0,0,0,0,120,25,0,0,176,30,0,0,0,0,0,0,0,0,0,0,200,25,0,0,0,0,0,0,216,25,0,0,0,0,0,0,232,25,0,0,168,29,0,0,0,0,0,0,0,0,0,0,248,25,0,0,0,0,0,0,32,26,0,0,0,0,0,0,72,26,0,0,224,29,0,0,0,0,0,0,0,0,0,0,112,26,0,0,240,29,0,0,0,0,0,0,0,0,0,0,152,26,0,0,160,29,0,0,0,0,0,0,0,0,0,0,192,26,0,0,0,0,0,0,208,26,0,0,0,0,0,0,224,26,0,0,0,0,0,0,240,26,0,0,0,30,0,0,0,0,0,0,0,0,0,0,16,27,0,0,0,30,0,0,0,0,0,0,0,0,0,0,48,27,0,0,0,30,0,0,0,0,0,0,0,0,0,0,80,27,0,0,0,30,0,0,0,0,0,0,0,0,0,0,112,27,0,0,120,30,0,0,0,0,0,0,0,0,0,0,144,27,0,0,0,30,0,0,0,0,0,0,0,0,0,0,176,27,0,0,0,0,0,0,200,27,0,0,16,30,0,0,0,0,0,0,0,0,0,0,224,27,0,0,0,30,0,0,0,0,0,0,0,0,0,0,248,27,0,0,16,30,0,0,0,0,0,0,0,0,0,0,16,28,0,0,0,0,0,0,40,28,0,0,16,30,0,0,0,0,0,0,0,0,0,0,64,28,0,0,16,30,0,0,0,0,0,0,0,0,0,0,88,28,0,0,0,0,0,0,112,28,0,0,0,30,0,0,0,0,0,0,0,0,0,0,136,28,0,0,8,30,0,0,0,0,0,0,0,0,0,0,160,28,0,0,16,30,0,0,0,0,0,0,0,0,0,0,176,28,0,0,8,30,0,0,0,0,0,0,0,0,0,0,192,28,0,0,16,30,0,0,0,0,0,0,0,0,0,0,208,28,0,0,16,30,0,0,0,0,0,0,0,0,0,0,224,28,0,0,16,30,0,0,0,0,0,0,0,0,0,0,240,28,0,0,8,30,0,0,0,0,0,0,0,0,0,0,0,29,0,0,16,30,0,0,0,0,0,0,0,0,0,0,16,29,0,0,16,30,0,0,0,0,0,0,0,0,0,0,32,29,0,0,16,30,0,0,0,0,0,0,0,0,0,0,48,29,0,0,8,30,0,0,0,0,0,0,16,0,0,0,32,0,0,0,64,0,0,0,96,0,0,0,128,0,0,0,160,0,0,0,192,0,0,0,224,0,0,0,0,1,0,0,64,1,0,0,128,1,0,0,192,1,0,0,0,2,0,0,128,2,0,0,8,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);



var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  
  
  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
  
  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  function _b2WorldPostSolve(contactPtr, impulsePtr) {
      b2World.PostSolve(contactPtr, impulsePtr);
    }

  function _b2WorldPreSolve(contactPtr, oldManifoldPtr) {
      b2World.PreSolve(contactPtr, oldManifoldPtr);
    }

  function _b2WorldEndContactBody(contactPtr) {
      b2World.EndContactBody(contactPtr);
    }

  function _b2WorldBeginContactBody(contactPtr) {
      b2World.BeginContactBody(contactPtr);
    }

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  
   
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i64=_memset;

  var _sqrtf=Math_sqrt;

  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  var _sinf=Math_sin;

  var _cosf=Math_cos;

  var _floorf=Math_floor;

  var _llvm_memset_p0i8_i32=_memset;

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}

  
   
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  function __ZNSt9exceptionD2Ev() {}

  function _abort() {
      Module['abort']();
    }

  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }function ___errno_location() {
      return ___errno_state;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }

  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  
  var ___cxa_caught_exceptions=[];function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr - ___cxa_exception_header_size);
      } catch(e) { // XXX FIXME
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = ___cxa_caught_exceptions.pop();
      if (ptr) {
        header = ptr - ___cxa_exception_header_size;
        var destructor = HEAP32[(((header)+(4))>>2)];
        if (destructor) {
          Runtime.dynCall('vi', destructor, [ptr]);
          HEAP32[(((header)+(4))>>2)]=0;
        }
        ___cxa_free_exception(ptr);
        ___cxa_last_thrown_exception = 0;
      }
    }





   
  Module["_strlen"] = _strlen;

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
  
              if (!hasByteServing) chunkSize = datalength;
  
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
  
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
  
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
  
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_fif(index,a1,a2) {
  try {
    return Module["dynCall_fif"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viif(index,a1,a2,a3) {
  try {
    Module["dynCall_viif"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ctlz_i8=env.ctlz_i8|0;
  var __ZTVN10__cxxabiv120__si_class_type_infoE=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;
  var __ZTVN10__cxxabiv117__class_type_infoE=env.__ZTVN10__cxxabiv117__class_type_infoE|0;
  var NaN=+env.NaN;
  var Infinity=+env.Infinity;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var asmPrintInt=env.asmPrintInt;
  var asmPrintFloat=env.asmPrintFloat;
  var Math_min=env.min;
  var invoke_ii=env.invoke_ii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_fif=env.invoke_fif;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viif=env.invoke_viif;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_viiii=env.invoke_viiii;
  var _llvm_lifetime_end=env._llvm_lifetime_end;
  var _cosf=env._cosf;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var _floorf=env._floorf;
  var ___cxa_throw=env.___cxa_throw;
  var _sinf=env._sinf;
  var _abort=env._abort;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var _b2WorldBeginContactBody=env._b2WorldBeginContactBody;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var _fflush=env._fflush;
  var _sqrtf=env._sqrtf;
  var _sysconf=env._sysconf;
  var ___setErrNo=env.___setErrNo;
  var _exit=env._exit;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var _b2WorldEndContactBody=env._b2WorldEndContactBody;
  var _time=env._time;
  var ___cxa_is_number_type=env.___cxa_is_number_type;
  var ___cxa_does_inherit=env.___cxa_does_inherit;
  var __ZSt9terminatev=env.__ZSt9terminatev;
  var _b2WorldPreSolve=env._b2WorldPreSolve;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _sbrk=env._sbrk;
  var __ZNSt9exceptionD2Ev=env.__ZNSt9exceptionD2Ev;
  var ___errno_location=env.___errno_location;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var _b2WorldPostSolve=env._b2WorldPostSolve;
  var _llvm_lifetime_start=env._llvm_lifetime_start;
  var ___resumeException=env.___resumeException;
  var __exit=env.__exit;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
STACKTOP = (STACKTOP + 7)&-8;
  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1|0] = HEAP8[ptr+1|0];
  HEAP8[tempDoublePtr+2|0] = HEAP8[ptr+2|0];
  HEAP8[tempDoublePtr+3|0] = HEAP8[ptr+3|0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1|0] = HEAP8[ptr+1|0];
  HEAP8[tempDoublePtr+2|0] = HEAP8[ptr+2|0];
  HEAP8[tempDoublePtr+3|0] = HEAP8[ptr+3|0];
  HEAP8[tempDoublePtr+4|0] = HEAP8[ptr+4|0];
  HEAP8[tempDoublePtr+5|0] = HEAP8[ptr+5|0];
  HEAP8[tempDoublePtr+6|0] = HEAP8[ptr+6|0];
  HEAP8[tempDoublePtr+7|0] = HEAP8[ptr+7|0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}

function setTempRet1(value) {
  value = value|0;
  tempRet1 = value;
}

function setTempRet2(value) {
  value = value|0;
  tempRet2 = value;
}

function setTempRet3(value) {
  value = value|0;
  tempRet3 = value;
}

function setTempRet4(value) {
  value = value|0;
  tempRet4 = value;
}

function setTempRet5(value) {
  value = value|0;
  tempRet5 = value;
}

function setTempRet6(value) {
  value = value|0;
  tempRet6 = value;
}

function setTempRet7(value) {
  value = value|0;
  tempRet7 = value;
}

function setTempRet8(value) {
  value = value|0;
  tempRet8 = value;
}

function setTempRet9(value) {
  value = value|0;
  tempRet9 = value;
}
function runPostSets() {

HEAP32[((7488 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7504 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7520 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7536 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7552 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7568 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7584 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7592 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7600 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7616 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7624 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7632 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7648 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7664 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7680 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7688 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7696 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7704 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7720 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7736 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7752 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7768 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7784 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7800 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7808 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7824 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7840 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7856 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7864 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7880 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7896 )>>2)]=(((__ZTVN10__cxxabiv117__class_type_infoE+8)|0));
HEAP32[((7904 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7920 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7936 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7952 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7968 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((7984 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((8000 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((8016 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((8032 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((8048 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((8064 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((8080 )>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
}

function _b2Manifold_GetPointCount($manifold){
 $manifold=($manifold)|0;
 var $1=0,$2=0,$3=0,$4=.0,label=0;

 $1=(($manifold+60)|0);
 $2=$1;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(+((($3|0))|0));
 return (+($4));
}


function _b2ChainShape_CreateFixture($body,$density,$friction,$isSensor,$restitution,$userData,$categoryBits,$groupIndex,$maskBits,$vertices,$length){
 $body=($body)|0;
 $density=+($density);
 $friction=+($friction);
 $isSensor=+($isSensor);
 $restitution=+($restitution);
 $userData=+($userData);
 $categoryBits=+($categoryBits);
 $groupIndex=+($groupIndex);
 $maskBits=+($maskBits);
 $vertices=($vertices)|0;
 $length=+($length);
 var $0=0,$def=0,$chain=0,$vertexArr=0,$1=0,$2=.0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0;
 var $17=0,$18=0,$19=0,$20=.0,$tmpcast=0,$21=0,$22=0,$i_019=0,$j_018=0,$23=0,$24=.0,$25=0,$26=0,$27=.0,$28=0,$29=0,$ld$0$0=0,$30$0=0,$ld$1$1=0,$30$1=0;
 var $st$2$0=0,$st$3$1=0,$31=0,$32=0,$33=.0,$34=0,$38=0,$39=0,$40=0,$41=0,$43=0,$36$0=0,$36$1=0,$46$0=0,$46$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+1112)|0;
 $0=((sp)|0);
 $def=(((sp)+(8))|0);
 $chain=(((sp)+(40))|0);
 $vertexArr=(((sp)+(80))|0);
 $1=(((sp)+(1104))|0);
 HEAPF64[(($0)>>3)]=$userData;
 __ZN12b2FixtureDefC1Ev($def);
 $2=$density;
 $3=(($def+16)|0);
 HEAPF32[(($3)>>2)]=$2;
 $4=$friction;
 $5=(($def+8)|0);
 HEAPF32[(($5)>>2)]=$4;
 $6=$isSensor!=(0.0);
 $7=(($def+20)|0);
 $8=($6&1);
 HEAP8[($7)]=$8;
 $9=$restitution;
 $10=(($def+12)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=$0;
 $12=(($def+4)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(~~($categoryBits));
 $14=(($def+22)|0);
 HEAP16[(($14)>>1)]=$13;
 $15=(~~($groupIndex));
 $16=(($def+26)|0);
 HEAP16[(($16)>>1)]=$15;
 $17=(~~($maskBits));
 $18=(($def+24)|0);
 HEAP16[(($18)>>1)]=$17;
 __ZN12b2ChainShapeC1Ev($chain);
 $19=(($vertexArr)|0);
 $20=($length)*((0.5));
 $tmpcast=$1;
 $21=(~~($20));
 $22=$length>(0.0);
 if ($22) {
  $j_018=0;$i_019=0;
  while(1) {


   $23=(($vertices+($i_019<<2))|0);
   $24=(+(HEAPF32[(($23)>>2)]));
   $25=$i_019|1;
   $26=(($vertices+($25<<2))|0);
   $27=(+(HEAPF32[(($26)>>2)]));
   __ZN6b2Vec2C1Eff($tmpcast,$24,$27);
   $28=(($vertexArr+($j_018<<3))|0);
   $29=$28;
   $ld$0$0=(($1)|0);
   $30$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($1+4)|0);
   $30$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($29)|0);
   HEAP32[(($st$2$0)>>2)]=$30$0;
   $st$3$1=(($29+4)|0);
   HEAP32[(($st$3$1)>>2)]=$30$1;
   $31=((($i_019)+(2))|0);
   $32=((($j_018)+(1))|0);
   $33=(+((($31|0))|0));
   $34=$33<$length;
   if ($34) {
    $j_018=$32;$i_019=$31;
   } else {
    break;
   }
  }
 }
 __ZN12b2ChainShape11CreateChainEPK6b2Vec2i($chain,$19,$21);
 $38=(($chain)|0);
 $39=(($def)|0);
 HEAP32[(($39)>>2)]=$38;
 $40=$body;
 $41=((__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($40,$def))|0);
 $43=$41;
 __ZN12b2ChainShapeD2Ev($chain);
 STACKTOP=sp;return (($43)|0);
}


function __ZN12b2FixtureDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN12b2FixtureDefC2Ev($this);
 return;
}


function __ZN12b2ChainShapeC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN12b2ChainShapeC2Ev($this);
 return;
}


function __ZN6b2Vec2C1Eff($this,$x,$y){
 $this=($this)|0;
 $x=+($x);
 $y=+($y);
 var label=0;

 __ZN6b2Vec2C2Eff($this,$x,$y);
 return;
}


function _b2CircleShape_CreateFixture($body,$density,$friction,$isSensor,$restitution,$userData,$categoryBits,$groupIndex,$maskBits,$px,$py,$radius){
 $body=($body)|0;
 $density=+($density);
 $friction=+($friction);
 $isSensor=+($isSensor);
 $restitution=+($restitution);
 $userData=+($userData);
 $categoryBits=+($categoryBits);
 $groupIndex=+($groupIndex);
 $maskBits=+($maskBits);
 $px=+($px);
 $py=+($py);
 $radius=+($radius);
 var $1=0,$def=0,$circle=0,$2=.0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$20=.0,$21=.0,$22=.0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $1=((sp)|0);
 $def=(((sp)+(8))|0);
 $circle=(((sp)+(40))|0);
 HEAPF64[(($1)>>3)]=$userData;
 __ZN12b2FixtureDefC1Ev($def);
 $2=$density;
 $3=(($def+16)|0);
 HEAPF32[(($3)>>2)]=$2;
 $4=$friction;
 $5=(($def+8)|0);
 HEAPF32[(($5)>>2)]=$4;
 $6=$isSensor!=(0.0);
 $7=(($def+20)|0);
 $8=($6&1);
 HEAP8[($7)]=$8;
 $9=$restitution;
 $10=(($def+12)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=$1;
 $12=(($def+4)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(~~($categoryBits));
 $14=(($def+22)|0);
 HEAP16[(($14)>>1)]=$13;
 $15=(~~($groupIndex));
 $16=(($def+26)|0);
 HEAP16[(($16)>>1)]=$15;
 $17=(~~($maskBits));
 $18=(($def+24)|0);
 HEAP16[(($18)>>1)]=$17;
 __ZN13b2CircleShapeC1Ev($circle);
 $19=(($circle+12)|0);
 $20=$px;
 $21=$py;
 __ZN6b2Vec23SetEff($19,$20,$21);
 $22=$radius;
 $23=(($circle)|0);
 $24=(($circle+8)|0);
 HEAPF32[(($24)>>2)]=$22;
 $25=(($def)|0);
 HEAP32[(($25)>>2)]=$23;
 $26=$body;
 $27=((__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($26,$def))|0);
 $28=$27;
 STACKTOP=sp;return (($28)|0);
}


function __ZN13b2CircleShapeC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN13b2CircleShapeC2Ev($this);
 return;
}


function __ZN6b2Vec23SetEff($this,$x_,$y_){
 $this=($this)|0;
 $x_=+($x_);
 $y_=+($y_);
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$x_;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$y_;
 return;
}


function __ZN13b2CircleShapeD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function _b2CircleShape_CreateParticleGroup($particleSystem,$angle,$angularVelocity,$colorR,$colorG,$colorB,$colorA,$flags,$group,$groupFlags,$lifetime,$linearVelocityX,$linearVelocityY,$positionX,$positionY,$positionData,$particleCount,$strength,$stride,$userData,$px,$py,$radius){
 $particleSystem=($particleSystem)|0;
 $angle=+($angle);
 $angularVelocity=+($angularVelocity);
 $colorR=+($colorR);
 $colorG=+($colorG);
 $colorB=+($colorB);
 $colorA=+($colorA);
 $flags=+($flags);
 $group=+($group);
 $groupFlags=+($groupFlags);
 $lifetime=+($lifetime);
 $linearVelocityX=+($linearVelocityX);
 $linearVelocityY=+($linearVelocityY);
 $positionX=+($positionX);
 $positionY=+($positionY);
 $positionData=+($positionData);
 $particleCount=+($particleCount);
 $strength=+($strength);
 $stride=+($stride);
 $userData=+($userData);
 $px=+($px);
 $py=+($py);
 $radius=+($radius);
 var $1=0,$def=0,$2=0,$3=0,$tmpcast=0,$4=0,$tmpcast22=0,$c=0,$5=0,$tmpcast23=0,$6=.0,$7=0,$8=.0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0;
 var $16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=.0,$26=0,$27=0,$28=.0,$29=.0,$30=0,$ld$0$0=0,$31$0=0,$ld$1$1=0,$31$1=0,$st$2$0=0;
 var $st$3$1=0,$32=0,$33=.0,$34=.0,$35=0,$ld$4$0=0,$36$0=0,$ld$5$1=0,$36$1=0,$st$6$0=0,$st$7$1=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=.0,$43=0,$44=.0,$45=0;
 var $46=0,$47=0,$48=.0,$49=.0,$50=0,$51=0,$ld$8$0=0,$52$0=0,$ld$9$1=0,$52$1=0,$st$10$0=0,$st$11$1=0,$53=.0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+104)|0;
 $1=((sp)|0);
 $def=(((sp)+(8))|0);
 $2=(((sp)+(88))|0);
 $3=(((sp)+(96))|0);
 $tmpcast=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast22=$4;
 $c=STACKTOP;STACKTOP = (STACKTOP + 20)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast23=$5;
 HEAPF64[(($1)>>3)]=$userData;
 __ZN18b2ParticleGroupDefC1Ev($def);
 $6=$angle;
 $7=(($def+16)|0);
 HEAPF32[(($7)>>2)]=$6;
 $8=$angularVelocity;
 $9=(($def+28)|0);
 HEAPF32[(($9)>>2)]=$8;
 $10=(($def+32)|0);
 $11=(~~($colorR));
 $12=(~~($colorG));
 $13=(~~($colorB));
 $14=(~~($colorA));
 $15=(($2)|0);
 HEAP8[($15)]=$11;
 $16=(($2+1)|0);
 HEAP8[($16)]=$12;
 $17=(($2+2)|0);
 HEAP8[($17)]=$13;
 $18=(($2+3)|0);
 HEAP8[($18)]=$14;
 $19=((__ZN15b2ParticleColoraSERKS_($10,$2))|0);
 $20=(~~($flags));
 $21=(($def)|0);
 HEAP32[(($21)>>2)]=$20;
 $22=(($def+72)|0);
 HEAP32[(($22)>>2)]=0;
 $23=(~~($groupFlags));
 $24=(($def+4)|0);
 HEAP32[(($24)>>2)]=$23;
 $25=$lifetime;
 $26=(($def+64)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=(($def+20)|0);
 $28=$linearVelocityX;
 $29=$linearVelocityY;
 __ZN6b2Vec2C1Eff($tmpcast,$28,$29);
 $30=$27;
 $ld$0$0=(($3)|0);
 $31$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($3+4)|0);
 $31$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($30)|0);
 HEAP32[(($st$2$0)>>2)]=$31$0;
 $st$3$1=(($30+4)|0);
 HEAP32[(($st$3$1)>>2)]=$31$1;
 $32=(($def+8)|0);
 $33=$positionX;
 $34=$positionY;
 __ZN6b2Vec2C1Eff($tmpcast22,$33,$34);
 $35=$32;
 $ld$4$0=(($4)|0);
 $36$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($4+4)|0);
 $36$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($35)|0);
 HEAP32[(($st$6$0)>>2)]=$36$0;
 $st$7$1=(($35+4)|0);
 HEAP32[(($st$7$1)>>2)]=$36$1;
 $37=(($def+60)|0);
 HEAP32[(($37)>>2)]=0;
 $38=(~~($particleCount));
 $39=(($def+56)|0);
 HEAP32[(($39)>>2)]=$38;
 $40=(($def+48)|0);
 HEAP32[(($40)>>2)]=0;
 $41=(($def+44)|0);
 HEAP32[(($41)>>2)]=0;
 $42=$strength;
 $43=(($def+36)|0);
 HEAPF32[(($43)>>2)]=$42;
 $44=$stride;
 $45=(($def+52)|0);
 HEAPF32[(($45)>>2)]=$44;
 $46=$1;
 $47=(($def+68)|0);
 HEAP32[(($47)>>2)]=$46;
 __ZN13b2CircleShapeC1Ev($c);
 $48=$px;
 $49=$py;
 __ZN6b2Vec2C1Eff($tmpcast23,$48,$49);
 $50=(($c+12)|0);
 $51=$50;
 $ld$8$0=(($5)|0);
 $52$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($5+4)|0);
 $52$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($51)|0);
 HEAP32[(($st$10$0)>>2)]=$52$0;
 $st$11$1=(($51+4)|0);
 HEAP32[(($st$11$1)>>2)]=$52$1;
 $53=$radius;
 $54=(($c)|0);
 $55=(($c+8)|0);
 HEAPF32[(($55)>>2)]=$53;
 $56=(($def+40)|0);
 HEAP32[(($56)>>2)]=$54;
 $57=$particleSystem;
 $58=((__ZN16b2ParticleSystem19CreateParticleGroupERK18b2ParticleGroupDef($57,$def))|0);
 $59=$58;
 STACKTOP=sp;return (($59)|0);
}


function __ZN18b2ParticleGroupDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN18b2ParticleGroupDefC2Ev($this);
 return;
}


function __ZN15b2ParticleColoraSERKS_($this,$color){
 $this=($this)|0;
 $color=($color)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($color)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($color+1)|0);
 $4=((HEAP8[($3)])|0);
 $5=(($color+2)|0);
 $6=((HEAP8[($5)])|0);
 $7=(($color+3)|0);
 $8=((HEAP8[($7)])|0);
 $9=(($this)|0);
 HEAP8[($9)]=$2;
 $10=(($this+1)|0);
 HEAP8[($10)]=$4;
 $11=(($this+2)|0);
 HEAP8[($11)]=$6;
 $12=(($this+3)|0);
 HEAP8[($12)]=$8;
 return (($this)|0);
}


function _b2EdgeShape_CreateFixture($body,$density,$friction,$isSensor,$restitution,$userData,$categoryBits,$groupIndex,$maskBits,$x0,$y0,$x1,$y1){
 $body=($body)|0;
 $density=+($density);
 $friction=+($friction);
 $isSensor=+($isSensor);
 $restitution=+($restitution);
 $userData=+($userData);
 $categoryBits=+($categoryBits);
 $groupIndex=+($groupIndex);
 $maskBits=+($maskBits);
 $x0=+($x0);
 $y0=+($y0);
 $x1=+($x1);
 $y1=+($y1);
 var $1=0,$def=0,$v0=0,$v1=0,$edge=0,$2=.0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0;
 var $17=0,$18=0,$19=.0,$20=.0,$21=.0,$22=.0,$23=0,$24=0,$25=0,$26=0,$27=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+104)|0;
 $1=((sp)|0);
 $def=(((sp)+(8))|0);
 $v0=(((sp)+(40))|0);
 $v1=(((sp)+(48))|0);
 $edge=(((sp)+(56))|0);
 HEAPF64[(($1)>>3)]=$userData;
 __ZN12b2FixtureDefC1Ev($def);
 $2=$density;
 $3=(($def+16)|0);
 HEAPF32[(($3)>>2)]=$2;
 $4=$friction;
 $5=(($def+8)|0);
 HEAPF32[(($5)>>2)]=$4;
 $6=$isSensor!=(0.0);
 $7=(($def+20)|0);
 $8=($6&1);
 HEAP8[($7)]=$8;
 $9=$restitution;
 $10=(($def+12)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=$1;
 $12=(($def+4)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(~~($categoryBits));
 $14=(($def+22)|0);
 HEAP16[(($14)>>1)]=$13;
 $15=(~~($groupIndex));
 $16=(($def+26)|0);
 HEAP16[(($16)>>1)]=$15;
 $17=(~~($maskBits));
 $18=(($def+24)|0);
 HEAP16[(($18)>>1)]=$17;
 $19=$x0;
 $20=$y0;
 __ZN6b2Vec2C1Eff($v0,$19,$20);
 $21=$x1;
 $22=$y1;
 __ZN6b2Vec2C1Eff($v1,$21,$22);
 __ZN11b2EdgeShapeC1Ev($edge);
 __ZN11b2EdgeShape3SetERK6b2Vec2S2_($edge,$v0,$v1);
 $23=(($edge)|0);
 $24=(($def)|0);
 HEAP32[(($24)>>2)]=$23;
 $25=$body;
 $26=((__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($25,$def))|0);
 $27=$26;
 STACKTOP=sp;return (($27)|0);
}


function __ZN11b2EdgeShapeC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN11b2EdgeShapeC2Ev($this);
 return;
}


function __ZN11b2EdgeShapeD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function _b2PolygonShape_CreateFixture_3($body,$density,$friction,$isSensor,$restitution,$userData,$categoryBits,$groupIndex,$maskBits,$x0,$y0,$x1,$y1,$x2,$y2){
 $body=($body)|0;
 $density=+($density);
 $friction=+($friction);
 $isSensor=+($isSensor);
 $restitution=+($restitution);
 $userData=+($userData);
 $categoryBits=+($categoryBits);
 $groupIndex=+($groupIndex);
 $maskBits=+($maskBits);
 $x0=+($x0);
 $y0=+($y0);
 $x1=+($x1);
 $y1=+($y1);
 $x2=+($x2);
 $y2=+($y2);
 var $1=0,$def=0,$points=0,$polygon=0,$2=.0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0;
 var $18=0,$19=0,$20=.0,$21=.0,$22=0,$23=.0,$24=.0,$25=0,$26=.0,$27=.0,$28=0,$29=0,$30=0,$31=0,$32=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+216)|0;
 $1=((sp)|0);
 $def=(((sp)+(8))|0);
 $points=(((sp)+(40))|0);
 $polygon=(((sp)+(64))|0);
 HEAPF64[(($1)>>3)]=$userData;
 __ZN12b2FixtureDefC1Ev($def);
 $2=$density;
 $3=(($def+16)|0);
 HEAPF32[(($3)>>2)]=$2;
 $4=$friction;
 $5=(($def+8)|0);
 HEAPF32[(($5)>>2)]=$4;
 $6=$isSensor!=(0.0);
 $7=(($def+20)|0);
 $8=($6&1);
 HEAP8[($7)]=$8;
 $9=$restitution;
 $10=(($def+12)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=$1;
 $12=(($def+4)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(~~($categoryBits));
 $14=(($def+22)|0);
 HEAP16[(($14)>>1)]=$13;
 $15=(~~($groupIndex));
 $16=(($def+26)|0);
 HEAP16[(($16)>>1)]=$15;
 $17=(~~($maskBits));
 $18=(($def+24)|0);
 HEAP16[(($18)>>1)]=$17;
 $19=(($points)|0);
 $20=$x0;
 $21=$y0;
 __ZN6b2Vec2C1Eff($19,$20,$21);
 $22=(($points+8)|0);
 $23=$x1;
 $24=$y1;
 __ZN6b2Vec2C1Eff($22,$23,$24);
 $25=(($points+16)|0);
 $26=$x2;
 $27=$y2;
 __ZN6b2Vec2C1Eff($25,$26,$27);
 __ZN14b2PolygonShapeC1Ev($polygon);
 __ZN14b2PolygonShape3SetEPK6b2Vec2i($polygon,$19,3);
 $28=(($polygon)|0);
 $29=(($def)|0);
 HEAP32[(($29)>>2)]=$28;
 $30=$body;
 $31=((__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($30,$def))|0);
 $32=$31;
 STACKTOP=sp;return (($32)|0);
}


function __ZN14b2PolygonShapeC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN14b2PolygonShapeC2Ev($this);
 return;
}


function __ZN14b2PolygonShapeD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function _b2PolygonShape_CreateFixture_4($body,$density,$friction,$isSensor,$restitution,$userData,$categoryBits,$groupIndex,$maskBits,$x0,$y0,$x1,$y1,$x2,$y2,$x3,$y3){
 $body=($body)|0;
 $density=+($density);
 $friction=+($friction);
 $isSensor=+($isSensor);
 $restitution=+($restitution);
 $userData=+($userData);
 $categoryBits=+($categoryBits);
 $groupIndex=+($groupIndex);
 $maskBits=+($maskBits);
 $x0=+($x0);
 $y0=+($y0);
 $x1=+($x1);
 $y1=+($y1);
 $x2=+($x2);
 $y2=+($y2);
 $x3=+($x3);
 $y3=+($y3);
 var $1=0,$def=0,$points=0,$polygon=0,$2=.0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0;
 var $18=0,$19=0,$20=.0,$21=.0,$22=0,$23=.0,$24=.0,$25=0,$26=.0,$27=.0,$28=0,$29=.0,$30=.0,$31=0,$32=0,$33=0,$34=0,$35=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+224)|0;
 $1=((sp)|0);
 $def=(((sp)+(8))|0);
 $points=(((sp)+(40))|0);
 $polygon=(((sp)+(72))|0);
 HEAPF64[(($1)>>3)]=$userData;
 __ZN12b2FixtureDefC1Ev($def);
 $2=$density;
 $3=(($def+16)|0);
 HEAPF32[(($3)>>2)]=$2;
 $4=$friction;
 $5=(($def+8)|0);
 HEAPF32[(($5)>>2)]=$4;
 $6=$isSensor!=(0.0);
 $7=(($def+20)|0);
 $8=($6&1);
 HEAP8[($7)]=$8;
 $9=$restitution;
 $10=(($def+12)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=$1;
 $12=(($def+4)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(~~($categoryBits));
 $14=(($def+22)|0);
 HEAP16[(($14)>>1)]=$13;
 $15=(~~($groupIndex));
 $16=(($def+26)|0);
 HEAP16[(($16)>>1)]=$15;
 $17=(~~($maskBits));
 $18=(($def+24)|0);
 HEAP16[(($18)>>1)]=$17;
 $19=(($points)|0);
 $20=$x0;
 $21=$y0;
 __ZN6b2Vec2C1Eff($19,$20,$21);
 $22=(($points+8)|0);
 $23=$x1;
 $24=$y1;
 __ZN6b2Vec2C1Eff($22,$23,$24);
 $25=(($points+16)|0);
 $26=$x2;
 $27=$y2;
 __ZN6b2Vec2C1Eff($25,$26,$27);
 $28=(($points+24)|0);
 $29=$x3;
 $30=$y3;
 __ZN6b2Vec2C1Eff($28,$29,$30);
 __ZN14b2PolygonShapeC1Ev($polygon);
 __ZN14b2PolygonShape3SetEPK6b2Vec2i($polygon,$19,4);
 $31=(($polygon)|0);
 $32=(($def)|0);
 HEAP32[(($32)>>2)]=$31;
 $33=$body;
 $34=((__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($33,$def))|0);
 $35=$34;
 STACKTOP=sp;return (($35)|0);
}


function _b2PolygonShape_CreateFixture_5($body,$density,$friction,$isSensor,$restitution,$userData,$categoryBits,$groupIndex,$maskBits,$x0,$y0,$x1,$y1,$x2,$y2,$x3,$y3,$x4,$y4){
 $body=($body)|0;
 $density=+($density);
 $friction=+($friction);
 $isSensor=+($isSensor);
 $restitution=+($restitution);
 $userData=+($userData);
 $categoryBits=+($categoryBits);
 $groupIndex=+($groupIndex);
 $maskBits=+($maskBits);
 $x0=+($x0);
 $y0=+($y0);
 $x1=+($x1);
 $y1=+($y1);
 $x2=+($x2);
 $y2=+($y2);
 $x3=+($x3);
 $y3=+($y3);
 $x4=+($x4);
 $y4=+($y4);
 var $1=0,$def=0,$points=0,$polygon=0,$2=.0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0;
 var $18=0,$19=0,$20=.0,$21=.0,$22=0,$23=.0,$24=.0,$25=0,$26=.0,$27=.0,$28=0,$29=.0,$30=.0,$31=0,$32=.0,$33=.0,$34=0,$35=0,$36=0,$37=0;
 var $38=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+232)|0;
 $1=((sp)|0);
 $def=(((sp)+(8))|0);
 $points=(((sp)+(40))|0);
 $polygon=(((sp)+(80))|0);
 HEAPF64[(($1)>>3)]=$userData;
 __ZN12b2FixtureDefC1Ev($def);
 $2=$density;
 $3=(($def+16)|0);
 HEAPF32[(($3)>>2)]=$2;
 $4=$friction;
 $5=(($def+8)|0);
 HEAPF32[(($5)>>2)]=$4;
 $6=$isSensor!=(0.0);
 $7=(($def+20)|0);
 $8=($6&1);
 HEAP8[($7)]=$8;
 $9=$restitution;
 $10=(($def+12)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=$1;
 $12=(($def+4)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(~~($categoryBits));
 $14=(($def+22)|0);
 HEAP16[(($14)>>1)]=$13;
 $15=(~~($groupIndex));
 $16=(($def+26)|0);
 HEAP16[(($16)>>1)]=$15;
 $17=(~~($maskBits));
 $18=(($def+24)|0);
 HEAP16[(($18)>>1)]=$17;
 $19=(($points)|0);
 $20=$x0;
 $21=$y0;
 __ZN6b2Vec2C1Eff($19,$20,$21);
 $22=(($points+8)|0);
 $23=$x1;
 $24=$y1;
 __ZN6b2Vec2C1Eff($22,$23,$24);
 $25=(($points+16)|0);
 $26=$x2;
 $27=$y2;
 __ZN6b2Vec2C1Eff($25,$26,$27);
 $28=(($points+24)|0);
 $29=$x3;
 $30=$y3;
 __ZN6b2Vec2C1Eff($28,$29,$30);
 $31=(($points+32)|0);
 $32=$x4;
 $33=$y4;
 __ZN6b2Vec2C1Eff($31,$32,$33);
 __ZN14b2PolygonShapeC1Ev($polygon);
 __ZN14b2PolygonShape3SetEPK6b2Vec2i($polygon,$19,5);
 $34=(($polygon)|0);
 $35=(($def)|0);
 HEAP32[(($35)>>2)]=$34;
 $36=$body;
 $37=((__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($36,$def))|0);
 $38=$37;
 STACKTOP=sp;return (($38)|0);
}


function _b2PolygonShape_CreateFixture_6($body,$density,$friction,$isSensor,$restitution,$userData,$categoryBits,$groupIndex,$maskBits,$x0,$y0,$x1,$y1,$x2,$y2,$x3,$y3,$x4,$y4,$x5,$y5){
 $body=($body)|0;
 $density=+($density);
 $friction=+($friction);
 $isSensor=+($isSensor);
 $restitution=+($restitution);
 $userData=+($userData);
 $categoryBits=+($categoryBits);
 $groupIndex=+($groupIndex);
 $maskBits=+($maskBits);
 $x0=+($x0);
 $y0=+($y0);
 $x1=+($x1);
 $y1=+($y1);
 $x2=+($x2);
 $y2=+($y2);
 $x3=+($x3);
 $y3=+($y3);
 $x4=+($x4);
 $y4=+($y4);
 $x5=+($x5);
 $y5=+($y5);
 var $1=0,$def=0,$points=0,$polygon=0,$2=.0,$3=0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0;
 var $18=0,$19=0,$20=.0,$21=.0,$22=0,$23=.0,$24=.0,$25=0,$26=.0,$27=.0,$28=0,$29=.0,$30=.0,$31=0,$32=.0,$33=.0,$34=0,$35=.0,$36=.0,$37=0;
 var $38=0,$39=0,$40=0,$41=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+240)|0;
 $1=((sp)|0);
 $def=(((sp)+(8))|0);
 $points=(((sp)+(40))|0);
 $polygon=(((sp)+(88))|0);
 HEAPF64[(($1)>>3)]=$userData;
 __ZN12b2FixtureDefC1Ev($def);
 $2=$density;
 $3=(($def+16)|0);
 HEAPF32[(($3)>>2)]=$2;
 $4=$friction;
 $5=(($def+8)|0);
 HEAPF32[(($5)>>2)]=$4;
 $6=$isSensor!=(0.0);
 $7=(($def+20)|0);
 $8=($6&1);
 HEAP8[($7)]=$8;
 $9=$restitution;
 $10=(($def+12)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=$1;
 $12=(($def+4)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(~~($categoryBits));
 $14=(($def+22)|0);
 HEAP16[(($14)>>1)]=$13;
 $15=(~~($groupIndex));
 $16=(($def+26)|0);
 HEAP16[(($16)>>1)]=$15;
 $17=(~~($maskBits));
 $18=(($def+24)|0);
 HEAP16[(($18)>>1)]=$17;
 $19=(($points)|0);
 $20=$x0;
 $21=$y0;
 __ZN6b2Vec2C1Eff($19,$20,$21);
 $22=(($points+8)|0);
 $23=$x1;
 $24=$y1;
 __ZN6b2Vec2C1Eff($22,$23,$24);
 $25=(($points+16)|0);
 $26=$x2;
 $27=$y2;
 __ZN6b2Vec2C1Eff($25,$26,$27);
 $28=(($points+24)|0);
 $29=$x3;
 $30=$y3;
 __ZN6b2Vec2C1Eff($28,$29,$30);
 $31=(($points+32)|0);
 $32=$x4;
 $33=$y4;
 __ZN6b2Vec2C1Eff($31,$32,$33);
 $34=(($points+40)|0);
 $35=$x5;
 $36=$y5;
 __ZN6b2Vec2C1Eff($34,$35,$36);
 __ZN14b2PolygonShapeC1Ev($polygon);
 __ZN14b2PolygonShape3SetEPK6b2Vec2i($polygon,$19,6);
 $37=(($polygon)|0);
 $38=(($def)|0);
 HEAP32[(($38)>>2)]=$37;
 $39=$body;
 $40=((__ZN6b2Body13CreateFixtureEPK12b2FixtureDef($39,$def))|0);
 $41=$40;
 STACKTOP=sp;return (($41)|0);
}


function _b2PolygonShape_CreateParticleGroup_4($particleSystem,$angle,$angularVelocity,$colorR,$colorG,$colorB,$colorA,$flags,$group,$groupFlags,$lifetime,$linearVelocityX,$linearVelocityY,$positionX,$positionY,$positionData,$particleCount,$strength,$stride,$userData,$x0,$y0,$x1,$y1,$x2,$y2,$x3,$y3){
 $particleSystem=($particleSystem)|0;
 $angle=+($angle);
 $angularVelocity=+($angularVelocity);
 $colorR=+($colorR);
 $colorG=+($colorG);
 $colorB=+($colorB);
 $colorA=+($colorA);
 $flags=+($flags);
 $group=+($group);
 $groupFlags=+($groupFlags);
 $lifetime=+($lifetime);
 $linearVelocityX=+($linearVelocityX);
 $linearVelocityY=+($linearVelocityY);
 $positionX=+($positionX);
 $positionY=+($positionY);
 $positionData=+($positionData);
 $particleCount=+($particleCount);
 $strength=+($strength);
 $stride=+($stride);
 $userData=+($userData);
 $x0=+($x0);
 $y0=+($y0);
 $x1=+($x1);
 $y1=+($y1);
 $x2=+($x2);
 $y2=+($y2);
 $x3=+($x3);
 $y3=+($y3);
 var $1=0,$def=0,$2=0,$3=0,$tmpcast=0,$4=0,$tmpcast27=0,$points=0,$p=0,$5=.0,$6=0,$7=.0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0;
 var $16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=.0,$25=0,$26=0,$27=.0,$28=.0,$29=0,$ld$0$0=0,$30$0=0,$ld$1$1=0,$30$1=0,$st$2$0=0,$st$3$1=0;
 var $31=0,$32=.0,$33=.0,$34=0,$ld$4$0=0,$35$0=0,$ld$5$1=0,$35$1=0,$st$6$0=0,$st$7$1=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=.0,$42=0,$43=.0,$44=0,$45=0;
 var $46=0,$47=0,$48=.0,$49=.0,$50=0,$51=.0,$52=.0,$53=0,$54=.0,$55=.0,$56=0,$57=.0,$58=.0,$59=0,$60=0,$61=0,$62=0,$63=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+104)|0;
 $1=((sp)|0);
 $def=(((sp)+(8))|0);
 $2=(((sp)+(88))|0);
 $3=(((sp)+(96))|0);
 $tmpcast=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast27=$4;
 $points=STACKTOP;STACKTOP = (STACKTOP + 32)|0;
 $p=STACKTOP;STACKTOP = (STACKTOP + 152)|0;
 HEAPF64[(($1)>>3)]=$userData;
 __ZN18b2ParticleGroupDefC1Ev($def);
 $5=$angle;
 $6=(($def+16)|0);
 HEAPF32[(($6)>>2)]=$5;
 $7=$angularVelocity;
 $8=(($def+28)|0);
 HEAPF32[(($8)>>2)]=$7;
 $9=(($def+32)|0);
 $10=(~~($colorR));
 $11=(~~($colorG));
 $12=(~~($colorB));
 $13=(~~($colorA));
 $14=(($2)|0);
 HEAP8[($14)]=$10;
 $15=(($2+1)|0);
 HEAP8[($15)]=$11;
 $16=(($2+2)|0);
 HEAP8[($16)]=$12;
 $17=(($2+3)|0);
 HEAP8[($17)]=$13;
 $18=((__ZN15b2ParticleColoraSERKS_($9,$2))|0);
 $19=(~~($flags));
 $20=(($def)|0);
 HEAP32[(($20)>>2)]=$19;
 $21=(($def+72)|0);
 HEAP32[(($21)>>2)]=0;
 $22=(~~($groupFlags));
 $23=(($def+4)|0);
 HEAP32[(($23)>>2)]=$22;
 $24=$lifetime;
 $25=(($def+64)|0);
 HEAPF32[(($25)>>2)]=$24;
 $26=(($def+20)|0);
 $27=$linearVelocityX;
 $28=$linearVelocityY;
 __ZN6b2Vec2C1Eff($tmpcast,$27,$28);
 $29=$26;
 $ld$0$0=(($3)|0);
 $30$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($3+4)|0);
 $30$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($29)|0);
 HEAP32[(($st$2$0)>>2)]=$30$0;
 $st$3$1=(($29+4)|0);
 HEAP32[(($st$3$1)>>2)]=$30$1;
 $31=(($def+8)|0);
 $32=$positionX;
 $33=$positionY;
 __ZN6b2Vec2C1Eff($tmpcast27,$32,$33);
 $34=$31;
 $ld$4$0=(($4)|0);
 $35$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($4+4)|0);
 $35$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($34)|0);
 HEAP32[(($st$6$0)>>2)]=$35$0;
 $st$7$1=(($34+4)|0);
 HEAP32[(($st$7$1)>>2)]=$35$1;
 $36=(($def+60)|0);
 HEAP32[(($36)>>2)]=0;
 $37=(~~($particleCount));
 $38=(($def+56)|0);
 HEAP32[(($38)>>2)]=$37;
 $39=(($def+48)|0);
 HEAP32[(($39)>>2)]=0;
 $40=(($def+44)|0);
 HEAP32[(($40)>>2)]=0;
 $41=$strength;
 $42=(($def+36)|0);
 HEAPF32[(($42)>>2)]=$41;
 $43=$stride;
 $44=(($def+52)|0);
 HEAPF32[(($44)>>2)]=$43;
 $45=$1;
 $46=(($def+68)|0);
 HEAP32[(($46)>>2)]=$45;
 $47=(($points)|0);
 $48=$x0;
 $49=$y0;
 __ZN6b2Vec2C1Eff($47,$48,$49);
 $50=(($points+8)|0);
 $51=$x1;
 $52=$y1;
 __ZN6b2Vec2C1Eff($50,$51,$52);
 $53=(($points+16)|0);
 $54=$x2;
 $55=$y2;
 __ZN6b2Vec2C1Eff($53,$54,$55);
 $56=(($points+24)|0);
 $57=$x3;
 $58=$y3;
 __ZN6b2Vec2C1Eff($56,$57,$58);
 __ZN14b2PolygonShapeC1Ev($p);
 __ZN14b2PolygonShape3SetEPK6b2Vec2i($p,$47,4);
 $59=(($p)|0);
 $60=(($def+40)|0);
 HEAP32[(($60)>>2)]=$59;
 $61=$particleSystem;
 $62=((__ZN16b2ParticleSystem19CreateParticleGroupERK18b2ParticleGroupDef($61,$def))|0);
 $63=$62;
 STACKTOP=sp;return (($63)|0);
}


function _b2Body_ApplyAngularImpulse($body,$impulse,$wake){
 $body=($body)|0;
 $impulse=+($impulse);
 $wake=+($wake);
 var $1=0,$2=.0,$3=0,label=0;

 $1=$body;
 $2=$impulse;
 $3=$wake!=(0.0);
 __ZN6b2Body19ApplyAngularImpulseEfb($1,$2,$3);
 return;
}


function __ZN6b2Body19ApplyAngularImpulseEfb($this,$impulse,$wake){
 $this=($this)|0;
 $impulse=+($impulse);
 $wake=($wake)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$9=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=.0,$19=.0,$20=0,$21=.0,$22=.0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==2;
 if (!($3)) {
  return;
 }
 do {
  if ($wake) {
   $6=(($this+4)|0);
   $7=((HEAP16[(($6)>>1)])|0);
   $8=$7&2;
   $9=(($8<<16)>>16)==0;
   if (!($9)) {
    break;
   }
   __ZN6b2Body8SetAwakeEb($this,1);
  }
 } while(0);
 $12=(($this+4)|0);
 $13=((HEAP16[(($12)>>1)])|0);
 $14=$13&2;
 $15=(($14<<16)>>16)==0;
 if ($15) {
  return;
 }
 $17=(($this+144)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=($18)*($impulse);
 $20=(($this+88)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=($21)+($19);
 HEAPF32[(($20)>>2)]=$22;
 return;
}


function _b2Body_ApplyForce($body,$forceX,$forceY,$pointX,$pointY,$wake){
 $body=($body)|0;
 $forceX=+($forceX);
 $forceY=+($forceY);
 $pointX=+($pointX);
 $pointY=+($pointY);
 $wake=+($wake);
 var $1=0,$2=0,$3=0,$4=.0,$5=.0,$6=.0,$7=.0,$8=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=$body;
 $4=$forceX;
 $5=$forceY;
 __ZN6b2Vec2C1Eff($1,$4,$5);
 $6=$pointX;
 $7=$pointY;
 __ZN6b2Vec2C1Eff($2,$6,$7);
 $8=$wake!=(0.0);
 __ZN6b2Body10ApplyForceERK6b2Vec2S2_b($3,$1,$2,$8);
 STACKTOP=sp;return;
}


function __ZN6b2Body10ApplyForceERK6b2Vec2S2_b($this,$force,$point,$wake){
 $this=($this)|0;
 $force=($force)|0;
 $point=($point)|0;
 $wake=($wake)|0;
 var $1=0,$2=0,$3=0,$4=0,$7=0,$8=0,$9=0,$10=0,$13=0,$14=0,$15=0,$16=0,$18=0,$19=0,$20=.0,$21=0,$22=.0,$23=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($3|0)==2;
 if (!($4)) {
  STACKTOP=sp;return;
 }
 do {
  if ($wake) {
   $7=(($this+4)|0);
   $8=((HEAP16[(($7)>>1)])|0);
   $9=$8&2;
   $10=(($9<<16)>>16)==0;
   if (!($10)) {
    break;
   }
   __ZN6b2Body8SetAwakeEb($this,1);
  }
 } while(0);
 $13=(($this+4)|0);
 $14=((HEAP16[(($13)>>1)])|0);
 $15=$14&2;
 $16=(($15<<16)>>16)==0;
 if ($16) {
  STACKTOP=sp;return;
 }
 $18=(($this+92)|0);
 __ZN6b2Vec2pLERKS_($18,$force);
 $19=(($this+60)|0);
 __ZmiRK6b2Vec2S1_($1,$point,$19);
 $20=(+(__Z7b2CrossRK6b2Vec2S1_($1,$force)));
 $21=(($this+100)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=($20)+($22);
 HEAPF32[(($21)>>2)]=$23;
 STACKTOP=sp;return;
}


function _b2Body_ApplyTorque($body,$force,$wake){
 $body=($body)|0;
 $force=+($force);
 $wake=+($wake);
 var $1=0,$2=.0,$3=0,label=0;

 $1=$body;
 $2=$force;
 $3=$wake!=(0.0);
 __ZN6b2Body11ApplyTorqueEfb($1,$2,$3);
 return;
}


function __ZN6b2Body11ApplyTorqueEfb($this,$torque,$wake){
 $this=($this)|0;
 $torque=+($torque);
 $wake=($wake)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$9=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=.0,$19=.0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==2;
 if (!($3)) {
  return;
 }
 do {
  if ($wake) {
   $6=(($this+4)|0);
   $7=((HEAP16[(($6)>>1)])|0);
   $8=$7&2;
   $9=(($8<<16)>>16)==0;
   if (!($9)) {
    break;
   }
   __ZN6b2Body8SetAwakeEb($this,1);
  }
 } while(0);
 $12=(($this+4)|0);
 $13=((HEAP16[(($12)>>1)])|0);
 $14=$13&2;
 $15=(($14<<16)>>16)==0;
 if ($15) {
  return;
 }
 $17=(($this+100)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=($18)+($torque);
 HEAPF32[(($17)>>2)]=$19;
 return;
}


function _b2Body_DestroyFixture($body,$fixture){
 $body=($body)|0;
 $fixture=($fixture)|0;
 var $1=0,$2=0,label=0;

 $1=$body;
 $2=$fixture;
 __ZN6b2Body14DestroyFixtureEP9b2Fixture($1,$2);
 return;
}


function _b2Body_GetAngle($body){
 $body=($body)|0;
 var $1=0,$2=.0,$3=.0,label=0;

 $1=$body;
 $2=(+(__ZNK6b2Body8GetAngleEv($1)));
 $3=$2;
 return (+($3));
}


function __ZNK6b2Body8GetAngleEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+72)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _b2Body_GetAngularVelocity($body){
 $body=($body)|0;
 var $1=0,$2=.0,$3=.0,label=0;

 $1=$body;
 $2=(+(__ZNK6b2Body18GetAngularVelocityEv($1)));
 $3=$2;
 return (+($3));
}


function __ZNK6b2Body18GetAngularVelocityEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+88)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _b2Body_GetInertia($body){
 $body=($body)|0;
 var $1=0,$2=.0,$3=.0,label=0;

 $1=$body;
 $2=(+(__ZNK6b2Body10GetInertiaEv($1)));
 $3=$2;
 return (+($3));
}


function __ZNK6b2Body10GetInertiaEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=.0,$8=.0,label=0;

 $1=(($this+140)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+132)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+44)|0);
 $6=(+(__Z5b2DotRK6b2Vec2S1_($5,$5)));
 $7=($4)*($6);
 $8=($2)+($7);
 return (+($8));
}


function _b2Body_GetLinearVelocity($body,$arr){
 $body=($body)|0;
 $arr=($arr)|0;
 var $1=0,$2=0,$linVelocity_sroa_0_0__idx=0,$linVelocity_sroa_0_0_copyload=.0,$linVelocity_sroa_1_4__idx1=0,$linVelocity_sroa_1_4_copyload=.0,$3=0,label=0;

 $1=$body;
 $2=((__ZNK6b2Body17GetLinearVelocityEv($1))|0);
 $linVelocity_sroa_0_0__idx=(($2)|0);
 $linVelocity_sroa_0_0_copyload=(+(HEAPF32[(($linVelocity_sroa_0_0__idx)>>2)]));
 $linVelocity_sroa_1_4__idx1=(($2+4)|0);
 $linVelocity_sroa_1_4_copyload=(+(HEAPF32[(($linVelocity_sroa_1_4__idx1)>>2)]));
 HEAPF32[(($arr)>>2)]=$linVelocity_sroa_0_0_copyload;
 $3=(($arr+4)|0);
 HEAPF32[(($3)>>2)]=$linVelocity_sroa_1_4_copyload;
 return;
}


function __ZNK6b2Body17GetLinearVelocityEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+80)|0);
 return (($1)|0);
}


function _b2Body_GetMass($body){
 $body=($body)|0;
 var $1=0,$2=.0,$3=.0,label=0;

 $1=$body;
 $2=(+(__ZNK6b2Body7GetMassEv($1)));
 $3=$2;
 return (+($3));
}


function __ZNK6b2Body7GetMassEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 $1=(($this+132)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function _b2Body_GetPosition($body,$arr){
 $body=($body)|0;
 $arr=($arr)|0;
 var $1=0,$2=0,$pos_sroa_0_0__idx=0,$pos_sroa_0_0_copyload=.0,$pos_sroa_1_4__idx1=0,$pos_sroa_1_4_copyload=.0,$3=0,label=0;

 $1=$body;
 $2=((__ZNK6b2Body11GetPositionEv($1))|0);
 $pos_sroa_0_0__idx=(($2)|0);
 $pos_sroa_0_0_copyload=(+(HEAPF32[(($pos_sroa_0_0__idx)>>2)]));
 $pos_sroa_1_4__idx1=(($2+4)|0);
 $pos_sroa_1_4_copyload=(+(HEAPF32[(($pos_sroa_1_4__idx1)>>2)]));
 HEAPF32[(($arr)>>2)]=$pos_sroa_0_0_copyload;
 $3=(($arr+4)|0);
 HEAPF32[(($3)>>2)]=$pos_sroa_1_4_copyload;
 return;
}


function __ZNK6b2Body11GetPositionEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 return (($1)|0);
}


function _b2Body_GetTransform($body,$arr){
 $body=($body)|0;
 $arr=($arr)|0;
 var $1=0,$2=0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=.0,$13=0,label=0;

 $1=$body;
 $2=((__ZNK6b2Body12GetTransformEv($1))|0);
 $3=(($2)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 HEAPF32[(($arr)>>2)]=$4;
 $5=(($2+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($arr+4)|0);
 HEAPF32[(($7)>>2)]=$6;
 $8=(($2+8)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=(($arr+8)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=(($2+12)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($arr+12)|0);
 HEAPF32[(($13)>>2)]=$12;
 return;
}


function __ZNK6b2Body12GetTransformEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 return (($1)|0);
}


function _b2Body_GetType($body){
 $body=($body)|0;
 var $1=0,$2=0,$3=.0,label=0;

 $1=$body;
 $2=((__ZNK6b2Body7GetTypeEv($1))|0);
 $3=(+((($2>>>0))>>>0));
 return (+($3));
}


function __ZNK6b2Body7GetTypeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _b2Body_GetWorldCenter($body,$arr){
 $body=($body)|0;
 $arr=($arr)|0;
 var $1=0,$2=0,$worldCenter_sroa_0_0__idx=0,$worldCenter_sroa_0_0_copyload=.0,$worldCenter_sroa_1_4__idx1=0,$worldCenter_sroa_1_4_copyload=.0,$3=0,label=0;

 $1=$body;
 $2=((__ZNK6b2Body14GetWorldCenterEv($1))|0);
 $worldCenter_sroa_0_0__idx=(($2)|0);
 $worldCenter_sroa_0_0_copyload=(+(HEAPF32[(($worldCenter_sroa_0_0__idx)>>2)]));
 $worldCenter_sroa_1_4__idx1=(($2+4)|0);
 $worldCenter_sroa_1_4_copyload=(+(HEAPF32[(($worldCenter_sroa_1_4__idx1)>>2)]));
 HEAPF32[(($arr)>>2)]=$worldCenter_sroa_0_0_copyload;
 $3=(($arr+4)|0);
 HEAPF32[(($3)>>2)]=$worldCenter_sroa_1_4_copyload;
 return;
}


function __ZNK6b2Body14GetWorldCenterEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+60)|0);
 return (($1)|0);
}


function _b2Body_GetWorldPoint($body,$pointX,$pointY,$arr){
 $body=($body)|0;
 $pointX=+($pointX);
 $pointY=+($pointY);
 $arr=($arr)|0;
 var $worldPoint=0,$1=0,$2=0,$3=.0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $worldPoint=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=$body;
 $3=$pointX;
 $4=$pointY;
 __ZN6b2Vec2C1Eff($1,$3,$4);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($worldPoint,$2,$1);
 $5=(($worldPoint)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 HEAPF32[(($arr)>>2)]=$6;
 $7=(($worldPoint+4)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($arr+4)|0);
 HEAPF32[(($9)>>2)]=$8;
 STACKTOP=sp;return;
}


function __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$this,$localPoint){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $localPoint=($localPoint)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($agg_result,$1,$localPoint);
 return;
}


function _b2Body_GetWorldVector($body,$vX,$vY,$arr){
 $body=($body)|0;
 $vX=+($vX);
 $vY=+($vY);
 $arr=($arr)|0;
 var $worldVec=0,$1=0,$2=0,$3=.0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $worldVec=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=$body;
 $3=$vX;
 $4=$vY;
 __ZN6b2Vec2C1Eff($1,$3,$4);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($worldVec,$2,$1);
 $5=(($worldVec)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 HEAPF32[(($arr)>>2)]=$6;
 $7=(($worldVec+4)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($arr+4)|0);
 HEAPF32[(($9)>>2)]=$8;
 STACKTOP=sp;return;
}


function _b2Body_SetAngularVelocity($body,$angle){
 $body=($body)|0;
 $angle=+($angle);
 var $1=0,$2=.0,label=0;

 $1=$body;
 $2=$angle;
 __ZN6b2Body18SetAngularVelocityEf($1,$2);
 return;
}


function __ZN6b2Body18SetAngularVelocityEf($this,$w){
 $this=($this)|0;
 $w=+($w);
 var $1=0,$2=0,$3=0,$5=.0,$6=0,$9=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 }
 $5=($w)*($w);
 $6=$5>(0.0);
 if ($6) {
  __ZN6b2Body8SetAwakeEb($this,1);
 }
 $9=(($this+88)|0);
 HEAPF32[(($9)>>2)]=$w;
 return;
}


function _b2Body_SetLinearVelocity($body,$x,$y){
 $body=($body)|0;
 $x=+($x);
 $y=+($y);
 var $1=0,$2=0,$3=.0,$4=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=$body;
 $3=$x;
 $4=$y;
 __ZN6b2Vec2C1Eff($1,$3,$4);
 __ZN6b2Body17SetLinearVelocityERK6b2Vec2($2,$1);
 STACKTOP=sp;return;
}


function __ZN6b2Body17SetLinearVelocityERK6b2Vec2($this,$v){
 $this=($this)|0;
 $v=($v)|0;
 var $1=0,$2=0,$3=0,$5=.0,$6=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 }
 $5=(+(__Z5b2DotRK6b2Vec2S1_($v,$v)));
 $6=$5>(0.0);
 if ($6) {
  __ZN6b2Body8SetAwakeEb($this,1);
 }
 $9=(($this+80)|0);
 $10=$v;
 $11=$9;
 $ld$0$0=(($10)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($10+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($11)|0);
 HEAP32[(($st$2$0)>>2)]=$12$0;
 $st$3$1=(($11+4)|0);
 HEAP32[(($st$3$1)>>2)]=$12$1;
 return;
}


function _b2Body_SetTransform($body,$x,$y,$angle){
 $body=($body)|0;
 $x=+($x);
 $y=+($y);
 $angle=+($angle);
 var $1=0,$2=0,$3=.0,$4=.0,$5=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=$body;
 $3=$x;
 $4=$y;
 __ZN6b2Vec2C1Eff($1,$3,$4);
 $5=$angle;
 __ZN6b2Body12SetTransformERK6b2Vec2f($2,$1,$5);
 STACKTOP=sp;return;
}


function _b2Body_SetType($body,$type){
 $body=($body)|0;
 $type=+($type);
 var $1=0,$2=0,label=0;

 $1=$body;
 $2=(~~($type));
 __ZN6b2Body7SetTypeE10b2BodyType($1,$2);
 return;
}


function __ZN22b2WorldContactListenerD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function _b2World_Create($x,$y){
 $x=+($x);
 $y=+($y);
 var $1=0,$2=0,$3=.0,$4=.0,$5=0,$8$0=0,$8$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=((__Znwj(103048))|0);
 $3=$x;
 $4=$y;
 __ZN6b2Vec2C1Eff($1,$3,$4);
 $5=$2;
 __ZN7b2WorldC2ERK6b2Vec2($5,$1);
 STACKTOP=sp;return (($2)|0);
}


function _b2World_CreateBody($world,$active,$allowSleep,$angle,$angularVelocity,$angularDamping,$awake,$bullet,$fixedRotation,$gravityScale,$linearDamping,$linearVelocityX,$linearVelocityY,$positionX,$positionY,$type,$userData){
 $world=($world)|0;
 $active=+($active);
 $allowSleep=+($allowSleep);
 $angle=+($angle);
 $angularVelocity=+($angularVelocity);
 $angularDamping=+($angularDamping);
 $awake=+($awake);
 $bullet=+($bullet);
 $fixedRotation=+($fixedRotation);
 $gravityScale=+($gravityScale);
 $linearDamping=+($linearDamping);
 $linearVelocityX=+($linearVelocityX);
 $linearVelocityY=+($linearVelocityY);
 $positionX=+($positionX);
 $positionY=+($positionY);
 $type=+($type);
 $userData=+($userData);
 var $1=0,$def=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=0,$12=.0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $20=0,$21=0,$22=0,$23=.0,$24=0,$25=.0,$26=0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $1=((sp)|0);
 $def=(((sp)+(8))|0);
 HEAPF64[(($1)>>3)]=$userData;
 __ZN9b2BodyDefC1Ev($def);
 $2=$active!=(0.0);
 $3=(($def+40)|0);
 $4=($2&1);
 HEAP8[($3)]=$4;
 $5=$allowSleep!=(0.0);
 $6=(($def+36)|0);
 $7=($5&1);
 HEAP8[($6)]=$7;
 $8=$angle;
 $9=(($def+12)|0);
 HEAPF32[(($9)>>2)]=$8;
 $10=$angularVelocity;
 $11=(($def+24)|0);
 HEAPF32[(($11)>>2)]=$10;
 $12=$angularDamping;
 $13=(($def+32)|0);
 HEAPF32[(($13)>>2)]=$12;
 $14=$awake!=(0.0);
 $15=(($def+37)|0);
 $16=($14&1);
 HEAP8[($15)]=$16;
 $17=$bullet!=(0.0);
 $18=(($def+39)|0);
 $19=($17&1);
 HEAP8[($18)]=$19;
 $20=$fixedRotation!=(0.0);
 $21=(($def+38)|0);
 $22=($20&1);
 HEAP8[($21)]=$22;
 $23=$gravityScale;
 $24=(($def+48)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=$linearDamping;
 $26=(($def+28)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=(($def+16)|0);
 $28=$linearVelocityX;
 $29=$linearVelocityY;
 __ZN6b2Vec23SetEff($27,$28,$29);
 $30=(($def+4)|0);
 $31=$positionX;
 $32=$positionY;
 __ZN6b2Vec23SetEff($30,$31,$32);
 $33=(~~($type));
 $34=(($def)|0);
 HEAP32[(($34)>>2)]=$33;
 $35=$1;
 $36=(($def+44)|0);
 HEAP32[(($36)>>2)]=$35;
 $37=$world;
 $38=((__ZN7b2World10CreateBodyEPK9b2BodyDef($37,$def))|0);
 $39=$38;
 STACKTOP=sp;return (($39)|0);
}


function __ZN9b2BodyDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN9b2BodyDefC2Ev($this);
 return;
}


function _b2World_CreateParticleSystem($world,$colorMixingStrength,$dampingStrength,$destroyByAge,$ejectionStrength,$elasticStrength,$lifetimeGranularity,$powderStrength,$pressureStrength,$radius,$repulsiveStrength,$springStrength,$staticPressureIterations,$staticPressureRelaxation,$staticPressureStrength,$surfaceTensionNormalStrength,$surfaceTensionPressureStrength,$viscousStrength){
 $world=($world)|0;
 $colorMixingStrength=+($colorMixingStrength);
 $dampingStrength=+($dampingStrength);
 $destroyByAge=+($destroyByAge);
 $ejectionStrength=+($ejectionStrength);
 $elasticStrength=+($elasticStrength);
 $lifetimeGranularity=+($lifetimeGranularity);
 $powderStrength=+($powderStrength);
 $pressureStrength=+($pressureStrength);
 $radius=+($radius);
 $repulsiveStrength=+($repulsiveStrength);
 $springStrength=+($springStrength);
 $staticPressureIterations=+($staticPressureIterations);
 $staticPressureRelaxation=+($staticPressureRelaxation);
 $staticPressureStrength=+($staticPressureStrength);
 $surfaceTensionNormalStrength=+($surfaceTensionNormalStrength);
 $surfaceTensionPressureStrength=+($surfaceTensionPressureStrength);
 $viscousStrength=+($viscousStrength);
 var $def=0,$1=.0,$2=0,$3=.0,$4=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=0,$12=.0,$13=0,$14=.0,$15=0,$16=.0,$17=0,$18=.0,$19=0;
 var $20=.0,$21=0,$22=.0,$23=0,$24=0,$25=0,$26=.0,$27=0,$28=.0,$29=0,$30=.0,$31=0,$32=.0,$33=0,$34=.0,$35=0,$36=0,$37=0,$38=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $def=((sp)|0);
 __ZN19b2ParticleSystemDefC1Ev($def);
 $1=$colorMixingStrength;
 $2=(($def+56)|0);
 HEAPF32[(($2)>>2)]=$1;
 $3=$dampingStrength;
 $4=(($def+8)|0);
 HEAPF32[(($4)>>2)]=$3;
 $5=$destroyByAge!=(0.0);
 $6=(($def+60)|0);
 $7=($5&1);
 HEAP8[($6)]=$7;
 $8=$ejectionStrength;
 $9=(($def+40)|0);
 HEAPF32[(($9)>>2)]=$8;
 $10=$elasticStrength;
 $11=(($def+12)|0);
 HEAPF32[(($11)>>2)]=$10;
 $12=$lifetimeGranularity;
 $13=(($def+64)|0);
 HEAPF32[(($13)>>2)]=$12;
 $14=$powderStrength;
 $15=(($def+36)|0);
 HEAPF32[(($15)>>2)]=$14;
 $16=$pressureStrength;
 $17=(($def+4)|0);
 HEAPF32[(($17)>>2)]=$16;
 $18=$radius;
 $19=(($def)|0);
 HEAPF32[(($19)>>2)]=$18;
 $20=$repulsiveStrength;
 $21=(($def+32)|0);
 HEAPF32[(($21)>>2)]=$20;
 $22=$springStrength;
 $23=(($def+16)|0);
 HEAPF32[(($23)>>2)]=$22;
 $24=(~~($staticPressureIterations));
 $25=(($def+52)|0);
 HEAP32[(($25)>>2)]=$24;
 $26=$staticPressureRelaxation;
 $27=(($def+48)|0);
 HEAPF32[(($27)>>2)]=$26;
 $28=$staticPressureStrength;
 $29=(($def+44)|0);
 HEAPF32[(($29)>>2)]=$28;
 $30=$surfaceTensionNormalStrength;
 $31=(($def+28)|0);
 HEAPF32[(($31)>>2)]=$30;
 $32=$surfaceTensionPressureStrength;
 $33=(($def+24)|0);
 HEAPF32[(($33)>>2)]=$32;
 $34=$viscousStrength;
 $35=(($def+20)|0);
 HEAPF32[(($35)>>2)]=$34;
 $36=$world;
 $37=((__ZN7b2World20CreateParticleSystemEPK19b2ParticleSystemDef($36,$def))|0);
 $38=(($37)|0);
 STACKTOP=sp;return (($38)|0);
}


function __ZN19b2ParticleSystemDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN19b2ParticleSystemDefC2Ev($this);
 return;
}


function _b2World_Delete($world){
 $world=($world)|0;
 var $1=0,$3=0,$7$0=0,$7$1=0,label=0;

 $1=($world|0)==0;
 if ($1) {
  return;
 }
 $3=$world;
 __ZN7b2WorldD2Ev($3);
 __ZdlPv($world);
 return;
}


function _b2World_DestroyBody($world,$body){
 $world=($world)|0;
 $body=($body)|0;
 var $1=0,$2=0,label=0;

 $1=$world;
 $2=$body;
 __ZN7b2World11DestroyBodyEP6b2Body($1,$2);
 return;
}


function _b2World_DestroyJoint($world,$joint){
 $world=($world)|0;
 $joint=($joint)|0;
 var $1=0,$2=0,label=0;

 $1=$world;
 $2=$joint;
 __ZN7b2World12DestroyJointEP7b2Joint($1,$2);
 return;
}


function _b2World_DestroyParticleSystem($world,$particleSystem){
 $world=($world)|0;
 $particleSystem=($particleSystem)|0;
 var $1=0,$2=0,label=0;

 $1=$world;
 $2=$particleSystem;
 __ZN7b2World21DestroyParticleSystemEP16b2ParticleSystem($1,$2);
 return;
}


function _b2World_SetContactListener($world){
 $world=($world)|0;
 var $1=0,label=0;

 $1=$world;
 __ZN7b2World18SetContactListenerEP17b2ContactListener($1,8);
 return;
}


function _b2World_SetGravity($world,$x,$y){
 $world=($world)|0;
 $x=+($x);
 $y=+($y);
 var $1=0,$2=0,$3=.0,$4=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=$world;
 $3=$x;
 $4=$y;
 __ZN6b2Vec2C1Eff($1,$3,$4);
 __ZN7b2World10SetGravityERK6b2Vec2($2,$1);
 STACKTOP=sp;return;
}


function __ZN7b2World10SetGravityERK6b2Vec2($this,$gravity){
 $this=($this)|0;
 $gravity=($gravity)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+102980)|0);
 $2=$gravity;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function _b2World_Step($world,$step,$vIterations,$pIterations){
 $world=($world)|0;
 $step=+($step);
 $vIterations=+($vIterations);
 $pIterations=+($pIterations);
 var $1=0,$2=0,$3=0,label=0;

 $1=$world;
 $2=(~~($vIterations));
 $3=(~~($pIterations));
 __ZN7b2World4StepEfiii($1,$step,$2,$3,3);
 return;
}


function _b2Contact_GetManifold($contact){
 $contact=($contact)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=$contact;
 $2=((__ZN9b2Contact11GetManifoldEv($1))|0);
 $3=$2;
 return (($3)|0);
}


function __ZN9b2Contact11GetManifoldEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+64)|0);
 return (($1)|0);
}


function _b2DistanceJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$dampingRatio,$frequencyHz,$length,$localAnchorAx,$localAnchorAy,$localAnchorBx,$localAnchorBy){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $dampingRatio=+($dampingRatio);
 $frequencyHz=+($frequencyHz);
 $length=+($length);
 $localAnchorAx=+($localAnchorAx);
 $localAnchorAy=+($localAnchorAy);
 $localAnchorBx=+($localAnchorBx);
 $localAnchorBy=+($localAnchorBy);
 var $def=0,$1=0,$tmpcast=0,$2=0,$tmpcast10=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=.0,$12=0,$13=.0,$14=0,$15=0,$16=.0,$17=.0;
 var $18=0,$ld$0$0=0,$19$0=0,$ld$1$1=0,$19$1=0,$st$2$0=0,$st$3$1=0,$20=0,$21=.0,$22=.0,$23=0,$ld$4$0=0,$24$0=0,$ld$5$1=0,$24$1=0,$st$6$0=0,$st$7$1=0,$25=0,$26=0,$27=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $def=((sp)|0);
 $1=(((sp)+(48))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast10=$2;
 __ZN18b2DistanceJointDefC1Ev($def);
 $3=$bodyA;
 $4=(($def)|0);
 $5=(($def+8)|0);
 HEAP32[(($5)>>2)]=$3;
 $6=$bodyB;
 $7=(($def+12)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=$collideConnected!=(0.0);
 $9=(($def+16)|0);
 $10=($8&1);
 HEAP8[($9)]=$10;
 $11=$dampingRatio;
 $12=(($def+44)|0);
 HEAPF32[(($12)>>2)]=$11;
 $13=$frequencyHz;
 $14=(($def+40)|0);
 HEAPF32[(($14)>>2)]=$13;
 $15=(($def+20)|0);
 $16=$localAnchorAx;
 $17=$localAnchorAy;
 __ZN6b2Vec2C1Eff($tmpcast,$16,$17);
 $18=$15;
 $ld$0$0=(($1)|0);
 $19$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $19$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($18)|0);
 HEAP32[(($st$2$0)>>2)]=$19$0;
 $st$3$1=(($18+4)|0);
 HEAP32[(($st$3$1)>>2)]=$19$1;
 $20=(($def+28)|0);
 $21=$localAnchorBx;
 $22=$localAnchorBy;
 __ZN6b2Vec2C1Eff($tmpcast10,$21,$22);
 $23=$20;
 $ld$4$0=(($2)|0);
 $24$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $24$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($23)|0);
 HEAP32[(($st$6$0)>>2)]=$24$0;
 $st$7$1=(($23+4)|0);
 HEAP32[(($st$7$1)>>2)]=$24$1;
 $25=$world;
 $26=((__ZN7b2World11CreateJointEPK10b2JointDef($25,$4))|0);
 $27=$26;
 STACKTOP=sp;return (($27)|0);
}


function __ZN18b2DistanceJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN18b2DistanceJointDefC2Ev($this);
 return;
}


function _b2DistanceJointDef_InitializeAndCreate($world,$bodyA,$bodyB,$anchorAx,$anchorAy,$anchorBx,$anchorBy,$collideConnected,$dampingRatio,$frequencyHz){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $anchorAx=+($anchorAx);
 $anchorAy=+($anchorAy);
 $anchorBx=+($anchorBx);
 $anchorBy=+($anchorBy);
 $collideConnected=+($collideConnected);
 $dampingRatio=+($dampingRatio);
 $frequencyHz=+($frequencyHz);
 var $def=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=.0,$8=0,$9=.0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=.0,$16=.0,$17=0,$18=0,$19=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $def=((sp)|0);
 $1=(((sp)+(48))|0);
 $2=(((sp)+(56))|0);
 __ZN18b2DistanceJointDefC1Ev($def);
 $3=$collideConnected!=(0.0);
 $4=(($def)|0);
 $5=(($def+16)|0);
 $6=($3&1);
 HEAP8[($5)]=$6;
 $7=$dampingRatio;
 $8=(($def+44)|0);
 HEAPF32[(($8)>>2)]=$7;
 $9=$frequencyHz;
 $10=(($def+40)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=$bodyA;
 $12=$bodyB;
 $13=$anchorAx;
 $14=$anchorAy;
 __ZN6b2Vec2C1Eff($1,$13,$14);
 $15=$anchorBx;
 $16=$anchorBy;
 __ZN6b2Vec2C1Eff($2,$15,$16);
 __ZN18b2DistanceJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($def,$11,$12,$1,$2);
 $17=$world;
 $18=((__ZN7b2World11CreateJointEPK10b2JointDef($17,$4))|0);
 $19=$18;
 STACKTOP=sp;return (($19)|0);
}


function _b2FrictionJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$localAnchorAx,$localAnchorAy,$localAnchorBx,$localAnchorBy,$maxForce,$maxTorque){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $localAnchorAx=+($localAnchorAx);
 $localAnchorAy=+($localAnchorAy);
 $localAnchorBx=+($localAnchorBx);
 $localAnchorBy=+($localAnchorBy);
 $maxForce=+($maxForce);
 $maxTorque=+($maxTorque);
 var $def=0,$1=0,$tmpcast=0,$2=0,$tmpcast10=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=.0,$13=.0,$14=0,$ld$0$0=0,$15$0=0,$ld$1$1=0;
 var $15$1=0,$st$2$0=0,$st$3$1=0,$16=0,$17=.0,$18=.0,$19=0,$ld$4$0=0,$20$0=0,$ld$5$1=0,$20$1=0,$st$6$0=0,$st$7$1=0,$21=.0,$22=0,$23=.0,$24=0,$25=0,$26=0,$27=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $def=((sp)|0);
 $1=(((sp)+(48))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast10=$2;
 __ZN18b2FrictionJointDefC1Ev($def);
 $3=$bodyA;
 $4=(($def)|0);
 $5=(($def+8)|0);
 HEAP32[(($5)>>2)]=$3;
 $6=$bodyB;
 $7=(($def+12)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=$collideConnected!=(0.0);
 $9=(($def+16)|0);
 $10=($8&1);
 HEAP8[($9)]=$10;
 $11=(($def+20)|0);
 $12=$localAnchorAx;
 $13=$localAnchorAy;
 __ZN6b2Vec2C1Eff($tmpcast,$12,$13);
 $14=$11;
 $ld$0$0=(($1)|0);
 $15$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $15$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($14)|0);
 HEAP32[(($st$2$0)>>2)]=$15$0;
 $st$3$1=(($14+4)|0);
 HEAP32[(($st$3$1)>>2)]=$15$1;
 $16=(($def+28)|0);
 $17=$localAnchorBx;
 $18=$localAnchorBy;
 __ZN6b2Vec2C1Eff($tmpcast10,$17,$18);
 $19=$16;
 $ld$4$0=(($2)|0);
 $20$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $20$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($19)|0);
 HEAP32[(($st$6$0)>>2)]=$20$0;
 $st$7$1=(($19+4)|0);
 HEAP32[(($st$7$1)>>2)]=$20$1;
 $21=$maxForce;
 $22=(($def+36)|0);
 HEAPF32[(($22)>>2)]=$21;
 $23=$maxTorque;
 $24=(($def+40)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=$world;
 $26=((__ZN7b2World11CreateJointEPK10b2JointDef($25,$4))|0);
 $27=$26;
 STACKTOP=sp;return (($27)|0);
}


function __ZN18b2FrictionJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN18b2FrictionJointDefC2Ev($this);
 return;
}


function _b2FrictionJointDef_InitializeAndCreate($world,$bodyA,$bodyB,$anchorX,$anchorY,$collideConnected,$maxForce,$maxTorque){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $anchorX=+($anchorX);
 $anchorY=+($anchorY);
 $collideConnected=+($collideConnected);
 $maxForce=+($maxForce);
 $maxTorque=+($maxTorque);
 var $fJoint=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=.0,$9=0,$10=0,$11=0,$12=.0,$13=.0,$14=0,$15=0,$16=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $fJoint=((sp)|0);
 $1=(((sp)+(48))|0);
 __ZN18b2FrictionJointDefC1Ev($fJoint);
 $2=$collideConnected!=(0.0);
 $3=(($fJoint)|0);
 $4=(($fJoint+16)|0);
 $5=($2&1);
 HEAP8[($4)]=$5;
 $6=$maxForce;
 $7=(($fJoint+36)|0);
 HEAPF32[(($7)>>2)]=$6;
 $8=$maxTorque;
 $9=(($fJoint+40)|0);
 HEAPF32[(($9)>>2)]=$8;
 $10=$bodyA;
 $11=$bodyB;
 $12=$anchorX;
 $13=$anchorY;
 __ZN6b2Vec2C1Eff($1,$12,$13);
 __ZN18b2FrictionJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($fJoint,$10,$11,$1);
 $14=$world;
 $15=((__ZN7b2World11CreateJointEPK10b2JointDef($14,$3))|0);
 $16=$15;
 STACKTOP=sp;return (($16)|0);
}


function _b2GearJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$joint1,$joint2,$ratio){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $joint1=($joint1)|0;
 $joint2=($joint2)|0;
 $ratio=+($ratio);
 var $def=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=0,$15=0,$16=0,$17=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $def=((sp)|0);
 __ZN14b2GearJointDefC1Ev($def);
 $1=$bodyA;
 $2=(($def)|0);
 $3=(($def+8)|0);
 HEAP32[(($3)>>2)]=$1;
 $4=$bodyB;
 $5=(($def+12)|0);
 HEAP32[(($5)>>2)]=$4;
 $6=$collideConnected!=(0.0);
 $7=(($def+16)|0);
 $8=($6&1);
 HEAP8[($7)]=$8;
 $9=$joint1;
 $10=(($def+20)|0);
 HEAP32[(($10)>>2)]=$9;
 $11=$joint2;
 $12=(($def+24)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=$ratio;
 $14=(($def+28)|0);
 HEAPF32[(($14)>>2)]=$13;
 $15=$world;
 $16=((__ZN7b2World11CreateJointEPK10b2JointDef($15,$2))|0);
 $17=$16;
 STACKTOP=sp;return (($17)|0);
}


function __ZN14b2GearJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN14b2GearJointDefC2Ev($this);
 return;
}


function _b2MotorJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$angularOffset,$correctionFactor,$linearOffsetX,$linearOffsetY,$maxForce,$maxTorque){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $angularOffset=+($angularOffset);
 $correctionFactor=+($correctionFactor);
 $linearOffsetX=+($linearOffsetX);
 $linearOffsetY=+($linearOffsetY);
 $maxForce=+($maxForce);
 $maxTorque=+($maxTorque);
 var $def=0,$1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=.0,$11=0,$12=.0,$13=0,$14=0,$15=.0,$16=.0,$17=0,$ld$0$0=0;
 var $18$0=0,$ld$1$1=0,$18$1=0,$st$2$0=0,$st$3$1=0,$19=.0,$20=0,$21=.0,$22=0,$23=0,$24=0,$25=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $def=((sp)|0);
 $1=(((sp)+(48))|0);
 $tmpcast=$1;
 __ZN15b2MotorJointDefC1Ev($def);
 $2=$bodyA;
 $3=(($def)|0);
 $4=(($def+8)|0);
 HEAP32[(($4)>>2)]=$2;
 $5=$bodyB;
 $6=(($def+12)|0);
 HEAP32[(($6)>>2)]=$5;
 $7=$collideConnected!=(0.0);
 $8=(($def+16)|0);
 $9=($7&1);
 HEAP8[($8)]=$9;
 $10=$angularOffset;
 $11=(($def+28)|0);
 HEAPF32[(($11)>>2)]=$10;
 $12=$correctionFactor;
 $13=(($def+40)|0);
 HEAPF32[(($13)>>2)]=$12;
 $14=(($def+20)|0);
 $15=$linearOffsetX;
 $16=$linearOffsetY;
 __ZN6b2Vec2C1Eff($tmpcast,$15,$16);
 $17=$14;
 $ld$0$0=(($1)|0);
 $18$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $18$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($17)|0);
 HEAP32[(($st$2$0)>>2)]=$18$0;
 $st$3$1=(($17+4)|0);
 HEAP32[(($st$3$1)>>2)]=$18$1;
 $19=$maxForce;
 $20=(($def+32)|0);
 HEAPF32[(($20)>>2)]=$19;
 $21=$maxTorque;
 $22=(($def+36)|0);
 HEAPF32[(($22)>>2)]=$21;
 $23=$world;
 $24=((__ZN7b2World11CreateJointEPK10b2JointDef($23,$3))|0);
 $25=$24;
 STACKTOP=sp;return (($25)|0);
}


function __ZN15b2MotorJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2MotorJointDefC2Ev($this);
 return;
}


function _b2MotorJointDef_InitializeAndCreate($world,$bodyA,$bodyB,$collideConnected,$correctionFactor,$maxForce,$maxTorque){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $correctionFactor=+($correctionFactor);
 $maxForce=+($maxForce);
 $maxTorque=+($maxTorque);
 var $def=0,$1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $def=((sp)|0);
 __ZN15b2MotorJointDefC1Ev($def);
 $1=$collideConnected!=(0.0);
 $2=(($def)|0);
 $3=(($def+16)|0);
 $4=($1&1);
 HEAP8[($3)]=$4;
 $5=$correctionFactor;
 $6=(($def+40)|0);
 HEAPF32[(($6)>>2)]=$5;
 $7=$maxForce;
 $8=(($def+32)|0);
 HEAPF32[(($8)>>2)]=$7;
 $9=$maxTorque;
 $10=(($def+36)|0);
 HEAPF32[(($10)>>2)]=$9;
 $11=$bodyA;
 $12=$bodyB;
 __ZN15b2MotorJointDef10InitializeEP6b2BodyS1_($def,$11,$12);
 $13=$world;
 $14=((__ZN7b2World11CreateJointEPK10b2JointDef($13,$2))|0);
 $15=$14;
 STACKTOP=sp;return (($15)|0);
}


function _b2MouseJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$dampingRatio,$frequencyHz,$maxForce,$targetX,$targetY){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $dampingRatio=+($dampingRatio);
 $frequencyHz=+($frequencyHz);
 $maxForce=+($maxForce);
 $targetX=+($targetX);
 $targetY=+($targetY);
 var $def=0,$1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=.0,$11=0,$12=.0,$13=0,$14=.0,$15=0,$16=0,$17=.0,$18=.0;
 var $19=0,$ld$0$0=0,$20$0=0,$ld$1$1=0,$20$1=0,$st$2$0=0,$st$3$1=0,$21=0,$22=0,$23=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $def=((sp)|0);
 $1=(((sp)+(40))|0);
 $tmpcast=$1;
 __ZN15b2MouseJointDefC1Ev($def);
 $2=$bodyA;
 $3=(($def)|0);
 $4=(($def+8)|0);
 HEAP32[(($4)>>2)]=$2;
 $5=$bodyB;
 $6=(($def+12)|0);
 HEAP32[(($6)>>2)]=$5;
 $7=$collideConnected!=(0.0);
 $8=(($def+16)|0);
 $9=($7&1);
 HEAP8[($8)]=$9;
 $10=$dampingRatio;
 $11=(($def+36)|0);
 HEAPF32[(($11)>>2)]=$10;
 $12=$frequencyHz;
 $13=(($def+32)|0);
 HEAPF32[(($13)>>2)]=$12;
 $14=$maxForce;
 $15=(($def+28)|0);
 HEAPF32[(($15)>>2)]=$14;
 $16=(($def+20)|0);
 $17=$targetX;
 $18=$targetY;
 __ZN6b2Vec2C1Eff($tmpcast,$17,$18);
 $19=$16;
 $ld$0$0=(($1)|0);
 $20$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $20$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($19)|0);
 HEAP32[(($st$2$0)>>2)]=$20$0;
 $st$3$1=(($19+4)|0);
 HEAP32[(($st$3$1)>>2)]=$20$1;
 $21=$world;
 $22=((__ZN7b2World11CreateJointEPK10b2JointDef($21,$3))|0);
 $23=$22;
 STACKTOP=sp;return (($23)|0);
}


function __ZN15b2MouseJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2MouseJointDefC2Ev($this);
 return;
}


function _b2PrismaticJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$enableLimit,$enableMotor,$localAnchorAx,$localAnchorAy,$localAnchorBx,$localAnchorBy,$localAxisAx,$localAxisAy,$lowerTranslation,$maxMotorForce,$motorSpeed,$referenceAngle,$upperTranslation){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $enableLimit=+($enableLimit);
 $enableMotor=+($enableMotor);
 $localAnchorAx=+($localAnchorAx);
 $localAnchorAy=+($localAnchorAy);
 $localAnchorBx=+($localAnchorBx);
 $localAnchorBy=+($localAnchorBy);
 $localAxisAx=+($localAxisAx);
 $localAxisAy=+($localAxisAy);
 $lowerTranslation=+($lowerTranslation);
 $maxMotorForce=+($maxMotorForce);
 $motorSpeed=+($motorSpeed);
 $referenceAngle=+($referenceAngle);
 $upperTranslation=+($upperTranslation);
 var $def=0,$1=0,$tmpcast=0,$2=0,$tmpcast17=0,$3=0,$tmpcast18=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0;
 var $17=0,$18=0,$19=.0,$20=.0,$21=0,$ld$0$0=0,$22$0=0,$ld$1$1=0,$22$1=0,$st$2$0=0,$st$3$1=0,$23=0,$24=.0,$25=.0,$26=0,$ld$4$0=0,$27$0=0,$ld$5$1=0,$27$1=0,$st$6$0=0;
 var $st$7$1=0,$28=0,$29=.0,$30=.0,$31=0,$ld$8$0=0,$32$0=0,$ld$9$1=0,$32$1=0,$st$10$0=0,$st$11$1=0,$33=.0,$34=0,$35=.0,$36=0,$37=.0,$38=0,$39=.0,$40=0,$41=.0;
 var $42=0,$43=0,$44=0,$45=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+80)|0;
 $def=((sp)|0);
 $1=(((sp)+(72))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast17=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast18=$3;
 __ZN19b2PrismaticJointDefC1Ev($def);
 $4=$bodyA;
 $5=(($def)|0);
 $6=(($def+8)|0);
 HEAP32[(($6)>>2)]=$4;
 $7=$bodyB;
 $8=(($def+12)|0);
 HEAP32[(($8)>>2)]=$7;
 $9=$collideConnected!=(0.0);
 $10=(($def+16)|0);
 $11=($9&1);
 HEAP8[($10)]=$11;
 $12=$enableLimit!=(0.0);
 $13=(($def+48)|0);
 $14=($12&1);
 HEAP8[($13)]=$14;
 $15=$enableMotor!=(0.0);
 $16=(($def+60)|0);
 $17=($15&1);
 HEAP8[($16)]=$17;
 $18=(($def+20)|0);
 $19=$localAnchorAx;
 $20=$localAnchorAy;
 __ZN6b2Vec2C1Eff($tmpcast,$19,$20);
 $21=$18;
 $ld$0$0=(($1)|0);
 $22$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $22$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($21)|0);
 HEAP32[(($st$2$0)>>2)]=$22$0;
 $st$3$1=(($21+4)|0);
 HEAP32[(($st$3$1)>>2)]=$22$1;
 $23=(($def+28)|0);
 $24=$localAnchorBx;
 $25=$localAnchorBy;
 __ZN6b2Vec2C1Eff($tmpcast17,$24,$25);
 $26=$23;
 $ld$4$0=(($2)|0);
 $27$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $27$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($26)|0);
 HEAP32[(($st$6$0)>>2)]=$27$0;
 $st$7$1=(($26+4)|0);
 HEAP32[(($st$7$1)>>2)]=$27$1;
 $28=(($def+36)|0);
 $29=$localAxisAx;
 $30=$localAxisAy;
 __ZN6b2Vec2C1Eff($tmpcast18,$29,$30);
 $31=$28;
 $ld$8$0=(($3)|0);
 $32$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($3+4)|0);
 $32$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($31)|0);
 HEAP32[(($st$10$0)>>2)]=$32$0;
 $st$11$1=(($31+4)|0);
 HEAP32[(($st$11$1)>>2)]=$32$1;
 $33=$lowerTranslation;
 $34=(($def+52)|0);
 HEAPF32[(($34)>>2)]=$33;
 $35=$maxMotorForce;
 $36=(($def+64)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=$motorSpeed;
 $38=(($def+68)|0);
 HEAPF32[(($38)>>2)]=$37;
 $39=$referenceAngle;
 $40=(($def+44)|0);
 HEAPF32[(($40)>>2)]=$39;
 $41=$upperTranslation;
 $42=(($def+56)|0);
 HEAPF32[(($42)>>2)]=$41;
 $43=$world;
 $44=((__ZN7b2World11CreateJointEPK10b2JointDef($43,$5))|0);
 $45=$44;
 STACKTOP=sp;return (($45)|0);
}


function __ZN19b2PrismaticJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN19b2PrismaticJointDefC2Ev($this);
 return;
}


function _b2PrismaticJointDef_InitializeAndCreate($world,$bodyA,$bodyB,$anchorX,$anchorY,$axisX,$axisY,$collideConnected,$enableLimit,$enableMotor,$lowerTranslation,$maxMotorForce,$motorSpeed,$upperTranslation){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $anchorX=+($anchorX);
 $anchorY=+($anchorY);
 $axisX=+($axisX);
 $axisY=+($axisY);
 $collideConnected=+($collideConnected);
 $enableLimit=+($enableLimit);
 $enableMotor=+($enableMotor);
 $lowerTranslation=+($lowerTranslation);
 $maxMotorForce=+($maxMotorForce);
 $motorSpeed=+($motorSpeed);
 $upperTranslation=+($upperTranslation);
 var $def=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=0,$15=.0,$16=0,$17=.0,$18=0,$19=.0;
 var $20=0,$21=0,$22=0,$23=.0,$24=.0,$25=.0,$26=.0,$27=0,$28=0,$29=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+88)|0;
 $def=((sp)|0);
 $1=(((sp)+(72))|0);
 $2=(((sp)+(80))|0);
 __ZN19b2PrismaticJointDefC1Ev($def);
 $3=$collideConnected!=(0.0);
 $4=(($def)|0);
 $5=(($def+16)|0);
 $6=($3&1);
 HEAP8[($5)]=$6;
 $7=$enableLimit!=(0.0);
 $8=(($def+48)|0);
 $9=($7&1);
 HEAP8[($8)]=$9;
 $10=$enableMotor!=(0.0);
 $11=(($def+60)|0);
 $12=($10&1);
 HEAP8[($11)]=$12;
 $13=$lowerTranslation;
 $14=(($def+52)|0);
 HEAPF32[(($14)>>2)]=$13;
 $15=$maxMotorForce;
 $16=(($def+64)|0);
 HEAPF32[(($16)>>2)]=$15;
 $17=$motorSpeed;
 $18=(($def+68)|0);
 HEAPF32[(($18)>>2)]=$17;
 $19=$upperTranslation;
 $20=(($def+56)|0);
 HEAPF32[(($20)>>2)]=$19;
 $21=$bodyA;
 $22=$bodyB;
 $23=$anchorX;
 $24=$anchorY;
 __ZN6b2Vec2C1Eff($1,$23,$24);
 $25=$axisX;
 $26=$axisY;
 __ZN6b2Vec2C1Eff($2,$25,$26);
 __ZN19b2PrismaticJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($def,$21,$22,$1,$2);
 $27=$world;
 $28=((__ZN7b2World11CreateJointEPK10b2JointDef($27,$4))|0);
 $29=$28;
 STACKTOP=sp;return (($29)|0);
}


function _b2PulleyJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$groundAnchorAx,$groundAnchorAy,$groundAnchorBx,$groundAnchorBy,$lengthA,$lengthB,$localAnchorAx,$localAnchorAy,$localAnchorBx,$localAnchorBy,$ratio){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $groundAnchorAx=+($groundAnchorAx);
 $groundAnchorAy=+($groundAnchorAy);
 $groundAnchorBx=+($groundAnchorBx);
 $groundAnchorBy=+($groundAnchorBy);
 $lengthA=+($lengthA);
 $lengthB=+($lengthB);
 $localAnchorAx=+($localAnchorAx);
 $localAnchorAy=+($localAnchorAy);
 $localAnchorBx=+($localAnchorBx);
 $localAnchorBy=+($localAnchorBy);
 $ratio=+($ratio);
 var $def=0,$1=0,$tmpcast=0,$2=0,$tmpcast15=0,$3=0,$tmpcast16=0,$4=0,$tmpcast17=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=.0,$15=.0;
 var $16=0,$ld$0$0=0,$17$0=0,$ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$18=0,$19=.0,$20=.0,$21=0,$ld$4$0=0,$22$0=0,$ld$5$1=0,$22$1=0,$st$6$0=0,$st$7$1=0,$23=.0,$24=0,$25=.0;
 var $26=0,$27=0,$28=.0,$29=.0,$30=0,$ld$8$0=0,$31$0=0,$ld$9$1=0,$31$1=0,$st$10$0=0,$st$11$1=0,$32=0,$33=.0,$34=.0,$35=0,$ld$12$0=0,$36$0=0,$ld$13$1=0,$36$1=0,$st$14$0=0;
 var $st$15$1=0,$37=.0,$38=0,$39=0,$40=0,$41=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $def=((sp)|0);
 $1=(((sp)+(64))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast16=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast17=$4;
 __ZN16b2PulleyJointDefC1Ev($def);
 $5=$bodyA;
 $6=(($def)|0);
 $7=(($def+8)|0);
 HEAP32[(($7)>>2)]=$5;
 $8=$bodyB;
 $9=(($def+12)|0);
 HEAP32[(($9)>>2)]=$8;
 $10=$collideConnected!=(0.0);
 $11=(($def+16)|0);
 $12=($10&1);
 HEAP8[($11)]=$12;
 $13=(($def+20)|0);
 $14=$groundAnchorAx;
 $15=$groundAnchorAy;
 __ZN6b2Vec2C1Eff($tmpcast,$14,$15);
 $16=$13;
 $ld$0$0=(($1)|0);
 $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($16)|0);
 HEAP32[(($st$2$0)>>2)]=$17$0;
 $st$3$1=(($16+4)|0);
 HEAP32[(($st$3$1)>>2)]=$17$1;
 $18=(($def+28)|0);
 $19=$groundAnchorBx;
 $20=$groundAnchorBy;
 __ZN6b2Vec2C1Eff($tmpcast15,$19,$20);
 $21=$18;
 $ld$4$0=(($2)|0);
 $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($21)|0);
 HEAP32[(($st$6$0)>>2)]=$22$0;
 $st$7$1=(($21+4)|0);
 HEAP32[(($st$7$1)>>2)]=$22$1;
 $23=$lengthA;
 $24=(($def+52)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=$lengthB;
 $26=(($def+56)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=(($def+36)|0);
 $28=$localAnchorAx;
 $29=$localAnchorAy;
 __ZN6b2Vec2C1Eff($tmpcast16,$28,$29);
 $30=$27;
 $ld$8$0=(($3)|0);
 $31$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($3+4)|0);
 $31$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($30)|0);
 HEAP32[(($st$10$0)>>2)]=$31$0;
 $st$11$1=(($30+4)|0);
 HEAP32[(($st$11$1)>>2)]=$31$1;
 $32=(($def+44)|0);
 $33=$localAnchorBx;
 $34=$localAnchorBy;
 __ZN6b2Vec2C1Eff($tmpcast17,$33,$34);
 $35=$32;
 $ld$12$0=(($4)|0);
 $36$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($4+4)|0);
 $36$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($35)|0);
 HEAP32[(($st$14$0)>>2)]=$36$0;
 $st$15$1=(($35+4)|0);
 HEAP32[(($st$15$1)>>2)]=$36$1;
 $37=$ratio;
 $38=(($def+60)|0);
 HEAPF32[(($38)>>2)]=$37;
 $39=$world;
 $40=((__ZN7b2World11CreateJointEPK10b2JointDef($39,$6))|0);
 $41=$40;
 STACKTOP=sp;return (($41)|0);
}


function __ZN16b2PulleyJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2PulleyJointDefC2Ev($this);
 return;
}


function _b2PulleyJointDef_InitializeAndCreate($world,$bodyA,$bodyB,$anchorAx,$anchorAy,$anchorBx,$anchorBy,$groundAnchorAx,$groundAnchorAy,$groundAnchorBx,$groundAnchorBy,$ratio,$collideConnected){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $anchorAx=+($anchorAx);
 $anchorAy=+($anchorAy);
 $anchorBx=+($anchorBx);
 $anchorBy=+($anchorBy);
 $groundAnchorAx=+($groundAnchorAx);
 $groundAnchorAy=+($groundAnchorAy);
 $groundAnchorBx=+($groundAnchorBx);
 $groundAnchorBy=+($groundAnchorBy);
 $ratio=+($ratio);
 $collideConnected=+($collideConnected);
 var $def=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=.0,$12=.0,$13=.0,$14=.0,$15=.0,$16=.0,$17=.0,$18=.0,$19=.0;
 var $20=0,$21=0,$22=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+96)|0;
 $def=((sp)|0);
 $1=(((sp)+(64))|0);
 $2=(((sp)+(72))|0);
 $3=(((sp)+(80))|0);
 $4=(((sp)+(88))|0);
 __ZN16b2PulleyJointDefC1Ev($def);
 $5=$collideConnected!=(0.0);
 $6=(($def)|0);
 $7=(($def+16)|0);
 $8=($5&1);
 HEAP8[($7)]=$8;
 $9=$bodyA;
 $10=$bodyB;
 $11=$groundAnchorAx;
 $12=$groundAnchorAy;
 __ZN6b2Vec2C1Eff($1,$11,$12);
 $13=$groundAnchorBx;
 $14=$groundAnchorBy;
 __ZN6b2Vec2C1Eff($2,$13,$14);
 $15=$anchorAx;
 $16=$anchorAy;
 __ZN6b2Vec2C1Eff($3,$15,$16);
 $17=$anchorBx;
 $18=$anchorBy;
 __ZN6b2Vec2C1Eff($4,$17,$18);
 $19=$ratio;
 __ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f($def,$9,$10,$1,$2,$3,$4,$19);
 $20=$world;
 $21=((__ZN7b2World11CreateJointEPK10b2JointDef($20,$6))|0);
 $22=$21;
 STACKTOP=sp;return (($22)|0);
}


function _b2RevoluteJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$enableLimit,$enableMotor,$lowerAngle,$localAnchorAx,$localAnchorAy,$localAnchorBx,$localAnchorBy,$maxMotorTorque,$motorSpeed,$referenceAngle,$upperAngle){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $enableLimit=+($enableLimit);
 $enableMotor=+($enableMotor);
 $lowerAngle=+($lowerAngle);
 $localAnchorAx=+($localAnchorAx);
 $localAnchorAy=+($localAnchorAy);
 $localAnchorBx=+($localAnchorBx);
 $localAnchorBy=+($localAnchorBy);
 $maxMotorTorque=+($maxMotorTorque);
 $motorSpeed=+($motorSpeed);
 $referenceAngle=+($referenceAngle);
 $upperAngle=+($upperAngle);
 var $revJoint=0,$1=0,$tmpcast=0,$2=0,$tmpcast15=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0;
 var $18=.0,$19=.0,$20=0,$ld$0$0=0,$21$0=0,$ld$1$1=0,$21$1=0,$st$2$0=0,$st$3$1=0,$22=0,$23=.0,$24=.0,$25=0,$ld$4$0=0,$26$0=0,$ld$5$1=0,$26$1=0,$st$6$0=0,$st$7$1=0,$27=.0;
 var $28=0,$29=.0,$30=0,$31=.0,$32=0,$33=.0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $revJoint=((sp)|0);
 $1=(((sp)+(64))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$2;
 __ZN18b2RevoluteJointDefC1Ev($revJoint);
 $3=$bodyA;
 $4=(($revJoint)|0);
 $5=(($revJoint+8)|0);
 HEAP32[(($5)>>2)]=$3;
 $6=$bodyB;
 $7=(($revJoint+12)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=$collideConnected!=(0.0);
 $9=(($revJoint+16)|0);
 $10=($8&1);
 HEAP8[($9)]=$10;
 $11=$enableLimit!=(0.0);
 $12=(($revJoint+40)|0);
 $13=($11&1);
 HEAP8[($12)]=$13;
 $14=$enableMotor!=(0.0);
 $15=(($revJoint+52)|0);
 $16=($14&1);
 HEAP8[($15)]=$16;
 $17=(($revJoint+20)|0);
 $18=$localAnchorAx;
 $19=$localAnchorAy;
 __ZN6b2Vec2C1Eff($tmpcast,$18,$19);
 $20=$17;
 $ld$0$0=(($1)|0);
 $21$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $21$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($20)|0);
 HEAP32[(($st$2$0)>>2)]=$21$0;
 $st$3$1=(($20+4)|0);
 HEAP32[(($st$3$1)>>2)]=$21$1;
 $22=(($revJoint+28)|0);
 $23=$localAnchorBx;
 $24=$localAnchorBy;
 __ZN6b2Vec2C1Eff($tmpcast15,$23,$24);
 $25=$22;
 $ld$4$0=(($2)|0);
 $26$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $26$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($25)|0);
 HEAP32[(($st$6$0)>>2)]=$26$0;
 $st$7$1=(($25+4)|0);
 HEAP32[(($st$7$1)>>2)]=$26$1;
 $27=$lowerAngle;
 $28=(($revJoint+44)|0);
 HEAPF32[(($28)>>2)]=$27;
 $29=$maxMotorTorque;
 $30=(($revJoint+60)|0);
 HEAPF32[(($30)>>2)]=$29;
 $31=$motorSpeed;
 $32=(($revJoint+56)|0);
 HEAPF32[(($32)>>2)]=$31;
 $33=$referenceAngle;
 $34=(($revJoint+36)|0);
 HEAPF32[(($34)>>2)]=$33;
 $35=$upperAngle;
 $36=(($revJoint+48)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=$world;
 $38=((__ZN7b2World11CreateJointEPK10b2JointDef($37,$4))|0);
 $39=$38;
 STACKTOP=sp;return (($39)|0);
}


function __ZN18b2RevoluteJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN18b2RevoluteJointDefC2Ev($this);
 return;
}


function _b2RevoluteJointDef_InitializeAndCreate($world,$bodyA,$bodyB,$anchorX,$anchorY,$collideConnected,$enableLimit,$enableMotor,$lowerAngle,$maxMotorTorque,$motorSpeed,$upperAngle){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $anchorX=+($anchorX);
 $anchorY=+($anchorY);
 $collideConnected=+($collideConnected);
 $enableLimit=+($enableLimit);
 $enableMotor=+($enableMotor);
 $lowerAngle=+($lowerAngle);
 $maxMotorTorque=+($maxMotorTorque);
 $motorSpeed=+($motorSpeed);
 $upperAngle=+($upperAngle);
 var $revJoint=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=.0,$13=0,$14=.0,$15=0,$16=.0,$17=0,$18=.0,$19=0;
 var $20=0,$21=0,$22=.0,$23=.0,$24=0,$25=0,$26=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $revJoint=((sp)|0);
 $1=(((sp)+(64))|0);
 __ZN18b2RevoluteJointDefC1Ev($revJoint);
 $2=$collideConnected!=(0.0);
 $3=(($revJoint)|0);
 $4=(($revJoint+16)|0);
 $5=($2&1);
 HEAP8[($4)]=$5;
 $6=$enableLimit!=(0.0);
 $7=(($revJoint+40)|0);
 $8=($6&1);
 HEAP8[($7)]=$8;
 $9=$enableMotor!=(0.0);
 $10=(($revJoint+52)|0);
 $11=($9&1);
 HEAP8[($10)]=$11;
 $12=$lowerAngle;
 $13=(($revJoint+44)|0);
 HEAPF32[(($13)>>2)]=$12;
 $14=$maxMotorTorque;
 $15=(($revJoint+60)|0);
 HEAPF32[(($15)>>2)]=$14;
 $16=$motorSpeed;
 $17=(($revJoint+56)|0);
 HEAPF32[(($17)>>2)]=$16;
 $18=$upperAngle;
 $19=(($revJoint+48)|0);
 HEAPF32[(($19)>>2)]=$18;
 $20=$bodyA;
 $21=$bodyB;
 $22=$anchorX;
 $23=$anchorY;
 __ZN6b2Vec2C1Eff($1,$22,$23);
 __ZN18b2RevoluteJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($revJoint,$20,$21,$1);
 $24=$world;
 $25=((__ZN7b2World11CreateJointEPK10b2JointDef($24,$3))|0);
 $26=$25;
 STACKTOP=sp;return (($26)|0);
}


function _b2RevoluteJoint_SetMotorSpeed($joint,$speed){
 $joint=($joint)|0;
 $speed=+($speed);
 var $1=0,$2=.0,label=0;

 $1=$joint;
 $2=$speed;
 __ZN15b2RevoluteJoint13SetMotorSpeedEf($1,$2);
 return;
}


function _b2RopeJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$localAnchorAx,$localAnchorAy,$localAnchorBx,$localAnchorBy,$maxLength){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $localAnchorAx=+($localAnchorAx);
 $localAnchorAy=+($localAnchorAy);
 $localAnchorBx=+($localAnchorBx);
 $localAnchorBy=+($localAnchorBy);
 $maxLength=+($maxLength);
 var $def=0,$1=0,$tmpcast=0,$2=0,$tmpcast9=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=.0,$13=.0,$14=0,$ld$0$0=0,$15$0=0,$ld$1$1=0;
 var $15$1=0,$st$2$0=0,$st$3$1=0,$16=0,$17=.0,$18=.0,$19=0,$ld$4$0=0,$20$0=0,$ld$5$1=0,$20$1=0,$st$6$0=0,$st$7$1=0,$21=.0,$22=0,$23=0,$24=0,$25=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $def=((sp)|0);
 $1=(((sp)+(40))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast9=$2;
 __ZN14b2RopeJointDefC1Ev($def);
 $3=$bodyA;
 $4=(($def)|0);
 $5=(($def+8)|0);
 HEAP32[(($5)>>2)]=$3;
 $6=$bodyB;
 $7=(($def+12)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=$collideConnected!=(0.0);
 $9=(($def+16)|0);
 $10=($8&1);
 HEAP8[($9)]=$10;
 $11=(($def+20)|0);
 $12=$localAnchorAx;
 $13=$localAnchorAy;
 __ZN6b2Vec2C1Eff($tmpcast,$12,$13);
 $14=$11;
 $ld$0$0=(($1)|0);
 $15$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $15$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($14)|0);
 HEAP32[(($st$2$0)>>2)]=$15$0;
 $st$3$1=(($14+4)|0);
 HEAP32[(($st$3$1)>>2)]=$15$1;
 $16=(($def+28)|0);
 $17=$localAnchorBx;
 $18=$localAnchorBy;
 __ZN6b2Vec2C1Eff($tmpcast9,$17,$18);
 $19=$16;
 $ld$4$0=(($2)|0);
 $20$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $20$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($19)|0);
 HEAP32[(($st$6$0)>>2)]=$20$0;
 $st$7$1=(($19+4)|0);
 HEAP32[(($st$7$1)>>2)]=$20$1;
 $21=$maxLength;
 $22=(($def+36)|0);
 HEAPF32[(($22)>>2)]=$21;
 $23=$world;
 $24=((__ZN7b2World11CreateJointEPK10b2JointDef($23,$4))|0);
 $25=$24;
 STACKTOP=sp;return (($25)|0);
}


function __ZN14b2RopeJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN14b2RopeJointDefC2Ev($this);
 return;
}


function _b2WeldJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$dampingRatio,$frequencyHz,$localAnchorAx,$localAnchorAy,$localAnchorBx,$localAnchorBy,$referenceAngle){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $dampingRatio=+($dampingRatio);
 $frequencyHz=+($frequencyHz);
 $localAnchorAx=+($localAnchorAx);
 $localAnchorAy=+($localAnchorAy);
 $localAnchorBx=+($localAnchorBx);
 $localAnchorBy=+($localAnchorBy);
 $referenceAngle=+($referenceAngle);
 var $def=0,$1=0,$tmpcast=0,$2=0,$tmpcast11=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=.0,$12=0,$13=.0,$14=0,$15=0,$16=.0,$17=.0;
 var $18=0,$ld$0$0=0,$19$0=0,$ld$1$1=0,$19$1=0,$st$2$0=0,$st$3$1=0,$20=0,$21=.0,$22=.0,$23=0,$ld$4$0=0,$24$0=0,$ld$5$1=0,$24$1=0,$st$6$0=0,$st$7$1=0,$25=.0,$26=0,$27=0;
 var $28=0,$29=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $def=((sp)|0);
 $1=(((sp)+(48))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast11=$2;
 __ZN14b2WeldJointDefC1Ev($def);
 $3=$bodyA;
 $4=(($def)|0);
 $5=(($def+8)|0);
 HEAP32[(($5)>>2)]=$3;
 $6=$bodyB;
 $7=(($def+12)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=$collideConnected!=(0.0);
 $9=(($def+16)|0);
 $10=($8&1);
 HEAP8[($9)]=$10;
 $11=$dampingRatio;
 $12=(($def+44)|0);
 HEAPF32[(($12)>>2)]=$11;
 $13=$frequencyHz;
 $14=(($def+40)|0);
 HEAPF32[(($14)>>2)]=$13;
 $15=(($def+20)|0);
 $16=$localAnchorAx;
 $17=$localAnchorAy;
 __ZN6b2Vec2C1Eff($tmpcast,$16,$17);
 $18=$15;
 $ld$0$0=(($1)|0);
 $19$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $19$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($18)|0);
 HEAP32[(($st$2$0)>>2)]=$19$0;
 $st$3$1=(($18+4)|0);
 HEAP32[(($st$3$1)>>2)]=$19$1;
 $20=(($def+28)|0);
 $21=$localAnchorBx;
 $22=$localAnchorBy;
 __ZN6b2Vec2C1Eff($tmpcast11,$21,$22);
 $23=$20;
 $ld$4$0=(($2)|0);
 $24$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $24$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($23)|0);
 HEAP32[(($st$6$0)>>2)]=$24$0;
 $st$7$1=(($23+4)|0);
 HEAP32[(($st$7$1)>>2)]=$24$1;
 $25=$referenceAngle;
 $26=(($def+36)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=$world;
 $28=((__ZN7b2World11CreateJointEPK10b2JointDef($27,$4))|0);
 $29=$28;
 STACKTOP=sp;return (($29)|0);
}


function __ZN14b2WeldJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN14b2WeldJointDefC2Ev($this);
 return;
}


function _b2WeldJointDef_InitializeAndCreate($world,$bodyA,$bodyB,$anchorX,$anchorY,$collideConnected,$dampingRatio,$frequencyHz){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $anchorX=+($anchorX);
 $anchorY=+($anchorY);
 $collideConnected=+($collideConnected);
 $dampingRatio=+($dampingRatio);
 $frequencyHz=+($frequencyHz);
 var $def=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=.0,$9=0,$10=0,$11=0,$12=.0,$13=.0,$14=0,$15=0,$16=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $def=((sp)|0);
 $1=(((sp)+(48))|0);
 __ZN14b2WeldJointDefC1Ev($def);
 $2=$collideConnected!=(0.0);
 $3=(($def)|0);
 $4=(($def+16)|0);
 $5=($2&1);
 HEAP8[($4)]=$5;
 $6=$dampingRatio;
 $7=(($def+44)|0);
 HEAPF32[(($7)>>2)]=$6;
 $8=$frequencyHz;
 $9=(($def+40)|0);
 HEAPF32[(($9)>>2)]=$8;
 $10=$bodyA;
 $11=$bodyB;
 $12=$anchorX;
 $13=$anchorY;
 __ZN6b2Vec2C1Eff($1,$12,$13);
 __ZN14b2WeldJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($def,$10,$11,$1);
 $14=$world;
 $15=((__ZN7b2World11CreateJointEPK10b2JointDef($14,$3))|0);
 $16=$15;
 STACKTOP=sp;return (($16)|0);
}


function _b2WheelJoint_SetMotorSpeed($wheel,$speed){
 $wheel=($wheel)|0;
 $speed=+($speed);
 var $1=0,$2=.0,label=0;

 $1=$wheel;
 $2=$speed;
 __ZN12b2WheelJoint13SetMotorSpeedEf($1,$2);
 return;
}


function _b2WheelJoint_SetSpringFrequencyHz($wheel,$frequency){
 $wheel=($wheel)|0;
 $frequency=+($frequency);
 var $1=0,$2=.0,label=0;

 $1=$wheel;
 $2=$frequency;
 __ZN12b2WheelJoint20SetSpringFrequencyHzEf($1,$2);
 return;
}


function __ZN12b2WheelJoint20SetSpringFrequencyHzEf($this,$hz){
 $this=($this)|0;
 $hz=+($hz);
 var $1=0,label=0;

 $1=(($this+68)|0);
 HEAPF32[(($1)>>2)]=$hz;
 return;
}


function _b2WheelJointDef_Create($world,$bodyA,$bodyB,$collideConnected,$dampingRatio,$enableMotor,$frequencyHz,$localAnchorAx,$localAnchorAy,$localAnchorBx,$localAnchorBy,$localAxisAx,$localAxisAy,$maxMotorTorque,$motorSpeed){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $collideConnected=+($collideConnected);
 $dampingRatio=+($dampingRatio);
 $enableMotor=+($enableMotor);
 $frequencyHz=+($frequencyHz);
 $localAnchorAx=+($localAnchorAx);
 $localAnchorAy=+($localAnchorAy);
 $localAnchorBx=+($localAnchorBx);
 $localAnchorBy=+($localAnchorBy);
 $localAxisAx=+($localAxisAx);
 $localAxisAy=+($localAxisAy);
 $maxMotorTorque=+($maxMotorTorque);
 $motorSpeed=+($motorSpeed);
 var $def=0,$1=0,$tmpcast=0,$2=0,$tmpcast15=0,$3=0,$tmpcast16=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=.0,$13=0,$14=0,$15=0,$16=0;
 var $17=.0,$18=0,$19=0,$20=.0,$21=.0,$22=0,$ld$0$0=0,$23$0=0,$ld$1$1=0,$23$1=0,$st$2$0=0,$st$3$1=0,$24=0,$25=.0,$26=.0,$27=0,$ld$4$0=0,$28$0=0,$ld$5$1=0,$28$1=0;
 var $st$6$0=0,$st$7$1=0,$29=0,$30=.0,$31=.0,$32=0,$ld$8$0=0,$33$0=0,$ld$9$1=0,$33$1=0,$st$10$0=0,$st$11$1=0,$34=.0,$35=0,$36=.0,$37=0,$38=0,$39=0,$40=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $def=((sp)|0);
 $1=(((sp)+(64))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast16=$3;
 __ZN15b2WheelJointDefC1Ev($def);
 $4=$bodyA;
 $5=(($def)|0);
 $6=(($def+8)|0);
 HEAP32[(($6)>>2)]=$4;
 $7=$bodyB;
 $8=(($def+12)|0);
 HEAP32[(($8)>>2)]=$7;
 $9=$collideConnected!=(0.0);
 $10=(($def+16)|0);
 $11=($9&1);
 HEAP8[($10)]=$11;
 $12=$dampingRatio;
 $13=(($def+60)|0);
 HEAPF32[(($13)>>2)]=$12;
 $14=$enableMotor!=(0.0);
 $15=(($def+44)|0);
 $16=($14&1);
 HEAP8[($15)]=$16;
 $17=$frequencyHz;
 $18=(($def+56)|0);
 HEAPF32[(($18)>>2)]=$17;
 $19=(($def+20)|0);
 $20=$localAnchorAx;
 $21=$localAnchorAy;
 __ZN6b2Vec2C1Eff($tmpcast,$20,$21);
 $22=$19;
 $ld$0$0=(($1)|0);
 $23$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $23$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($22)|0);
 HEAP32[(($st$2$0)>>2)]=$23$0;
 $st$3$1=(($22+4)|0);
 HEAP32[(($st$3$1)>>2)]=$23$1;
 $24=(($def+28)|0);
 $25=$localAnchorBx;
 $26=$localAnchorBy;
 __ZN6b2Vec2C1Eff($tmpcast15,$25,$26);
 $27=$24;
 $ld$4$0=(($2)|0);
 $28$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $28$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($27)|0);
 HEAP32[(($st$6$0)>>2)]=$28$0;
 $st$7$1=(($27+4)|0);
 HEAP32[(($st$7$1)>>2)]=$28$1;
 $29=(($def+36)|0);
 $30=$localAxisAx;
 $31=$localAxisAy;
 __ZN6b2Vec2C1Eff($tmpcast16,$30,$31);
 $32=$29;
 $ld$8$0=(($3)|0);
 $33$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($3+4)|0);
 $33$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($32)|0);
 HEAP32[(($st$10$0)>>2)]=$33$0;
 $st$11$1=(($32+4)|0);
 HEAP32[(($st$11$1)>>2)]=$33$1;
 $34=$maxMotorTorque;
 $35=(($def+48)|0);
 HEAPF32[(($35)>>2)]=$34;
 $36=$motorSpeed;
 $37=(($def+52)|0);
 HEAPF32[(($37)>>2)]=$36;
 $38=$world;
 $39=((__ZN7b2World11CreateJointEPK10b2JointDef($38,$5))|0);
 $40=$39;
 STACKTOP=sp;return (($40)|0);
}


function __ZN15b2WheelJointDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2WheelJointDefC2Ev($this);
 return;
}


function _b2WheelJointDef_InitializeAndCreate($world,$bodyA,$bodyB,$anchorX,$anchorY,$axisX,$axisY,$collideConnected,$dampingRatio,$enableMotor,$frequencyHz,$maxMotorTorque,$motorSpeed){
 $world=($world)|0;
 $bodyA=($bodyA)|0;
 $bodyB=($bodyB)|0;
 $anchorX=+($anchorX);
 $anchorY=+($anchorY);
 $axisX=+($axisX);
 $axisY=+($axisY);
 $collideConnected=+($collideConnected);
 $dampingRatio=+($dampingRatio);
 $enableMotor=+($enableMotor);
 $frequencyHz=+($frequencyHz);
 $maxMotorTorque=+($maxMotorTorque);
 $motorSpeed=+($motorSpeed);
 var $def=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=.0,$8=0,$9=0,$10=0,$11=0,$12=.0,$13=0,$14=.0,$15=0,$16=.0,$17=0,$18=0,$19=0;
 var $20=.0,$21=.0,$22=.0,$23=.0,$24=0,$25=0,$26=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+80)|0;
 $def=((sp)|0);
 $1=(((sp)+(64))|0);
 $2=(((sp)+(72))|0);
 __ZN15b2WheelJointDefC1Ev($def);
 $3=$collideConnected!=(0.0);
 $4=(($def)|0);
 $5=(($def+16)|0);
 $6=($3&1);
 HEAP8[($5)]=$6;
 $7=$dampingRatio;
 $8=(($def+60)|0);
 HEAPF32[(($8)>>2)]=$7;
 $9=$enableMotor!=(0.0);
 $10=(($def+44)|0);
 $11=($9&1);
 HEAP8[($10)]=$11;
 $12=$frequencyHz;
 $13=(($def+56)|0);
 HEAPF32[(($13)>>2)]=$12;
 $14=$maxMotorTorque;
 $15=(($def+48)|0);
 HEAPF32[(($15)>>2)]=$14;
 $16=$motorSpeed;
 $17=(($def+52)|0);
 HEAPF32[(($17)>>2)]=$16;
 $18=$bodyA;
 $19=$bodyB;
 $20=$anchorX;
 $21=$anchorY;
 __ZN6b2Vec2C1Eff($1,$20,$21);
 $22=$axisX;
 $23=$axisY;
 __ZN6b2Vec2C1Eff($2,$22,$23);
 __ZN15b2WheelJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($def,$18,$19,$1,$2);
 $24=$world;
 $25=((__ZN7b2World11CreateJointEPK10b2JointDef($24,$4))|0);
 $26=$25;
 STACKTOP=sp;return (($26)|0);
}


function _b2ParticleSystem_CreateParticle($particleSystem,$colorR,$colorB,$colorG,$colorA,$flags,$group,$lifetime,$positionX,$positionY,$userData,$velocityX,$velocityY){
 $particleSystem=($particleSystem)|0;
 $colorR=+($colorR);
 $colorB=+($colorB);
 $colorG=+($colorG);
 $colorA=+($colorA);
 $flags=+($flags);
 $group=+($group);
 $lifetime=+($lifetime);
 $positionX=+($positionX);
 $positionY=+($positionY);
 $userData=+($userData);
 $velocityX=+($velocityX);
 $velocityY=+($velocityY);
 var $1=0,$2=0,$def=0,$3=0,$4=0,$tmpcast=0,$5=0,$tmpcast11=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0;
 var $18=0,$19=0,$20=.0,$21=0,$22=0,$23=.0,$24=.0,$25=0,$ld$0$0=0,$26$0=0,$ld$1$1=0,$26$1=0,$st$2$0=0,$st$3$1=0,$27=0,$28=0,$29=0,$30=.0,$31=.0,$32=0;
 var $ld$4$0=0,$33$0=0,$ld$5$1=0,$33$1=0,$st$6$0=0,$st$7$1=0,$34=0,$35=0,$36=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $def=(((sp)+(16))|0);
 $3=(((sp)+(56))|0);
 $4=(((sp)+(64))|0);
 $tmpcast=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast11=$5;
 HEAPF64[(($1)>>3)]=$group;
 HEAPF64[(($2)>>3)]=$userData;
 __ZN13b2ParticleDefC1Ev($def);
 $6=(($def+20)|0);
 $7=(~~($colorR));
 $8=(~~($colorG));
 $9=(~~($colorB));
 $10=(~~($colorA));
 $11=(($3)|0);
 HEAP8[($11)]=$7;
 $12=(($3+1)|0);
 HEAP8[($12)]=$8;
 $13=(($3+2)|0);
 HEAP8[($13)]=$9;
 $14=(($3+3)|0);
 HEAP8[($14)]=$10;
 $15=((__ZN15b2ParticleColoraSERKS_($6,$3))|0);
 $16=(~~($flags));
 $17=(($def)|0);
 HEAP32[(($17)>>2)]=$16;
 $18=$1;
 $19=(($def+32)|0);
 HEAP32[(($19)>>2)]=$18;
 $20=$lifetime;
 $21=(($def+24)|0);
 HEAPF32[(($21)>>2)]=$20;
 $22=(($def+4)|0);
 $23=$positionX;
 $24=$positionY;
 __ZN6b2Vec2C1Eff($tmpcast,$23,$24);
 $25=$22;
 $ld$0$0=(($4)|0);
 $26$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($4+4)|0);
 $26$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($25)|0);
 HEAP32[(($st$2$0)>>2)]=$26$0;
 $st$3$1=(($25+4)|0);
 HEAP32[(($st$3$1)>>2)]=$26$1;
 $27=$2;
 $28=(($def+28)|0);
 HEAP32[(($28)>>2)]=$27;
 $29=(($def+12)|0);
 $30=$velocityX;
 $31=$velocityY;
 __ZN6b2Vec2C1Eff($tmpcast11,$30,$31);
 $32=$29;
 $ld$4$0=(($5)|0);
 $33$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($5+4)|0);
 $33$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($32)|0);
 HEAP32[(($st$6$0)>>2)]=$33$0;
 $st$7$1=(($32+4)|0);
 HEAP32[(($st$7$1)>>2)]=$33$1;
 $34=$particleSystem;
 $35=((__ZN16b2ParticleSystem14CreateParticleERK13b2ParticleDef($34,$def))|0);
 $36=(+((($35|0))|0));
 STACKTOP=sp;return (+($36));
}


function __ZN13b2ParticleDefC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN13b2ParticleDefC2Ev($this);
 return;
}


function _b2ParticleSystem_GetColorBuffer($particleSystem){
 $particleSystem=($particleSystem)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=$particleSystem;
 $2=((__ZN16b2ParticleSystem14GetColorBufferEv($1))|0);
 $3=(($2)|0);
 return (($3)|0);
}


function _b2ParticleSystem_GetParticleCount($particleSystem){
 $particleSystem=($particleSystem)|0;
 var $1=0,$2=0,$3=.0,label=0;

 $1=$particleSystem;
 $2=((__ZNK16b2ParticleSystem16GetParticleCountEv($1))|0);
 $3=(+((($2|0))|0));
 return (+($3));
}


function __ZNK16b2ParticleSystem16GetParticleCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+56)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _b2ParticleSystem_GetPositionBuffer($particleSystem){
 $particleSystem=($particleSystem)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=$particleSystem;
 $2=((__ZN16b2ParticleSystem17GetPositionBufferEv($1))|0);
 $3=$2;
 return (($3)|0);
}


function __ZN16b2ParticleSystem17GetPositionBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+112)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function _b2ParticleSystem_SetDamping($particleSystem,$damping){
 $particleSystem=($particleSystem)|0;
 $damping=+($damping);
 var $1=0,$2=.0,label=0;

 $1=$particleSystem;
 $2=$damping;
 __ZN16b2ParticleSystem10SetDampingEf($1,$2);
 return;
}


function __ZN16b2ParticleSystem10SetDampingEf($this,$damping){
 $this=($this)|0;
 $damping=+($damping);
 var $1=0,label=0;

 $1=(($this+316)|0);
 HEAPF32[(($1)>>2)]=$damping;
 return;
}


function _b2ParticleSystem_SetDensity($particleSystem,$density){
 $particleSystem=($particleSystem)|0;
 $density=+($density);
 var $1=0,$2=.0,label=0;

 $1=$particleSystem;
 $2=$density;
 __ZN16b2ParticleSystem10SetDensityEf($1,$2);
 return;
}


function __ZN16b2ParticleSystem10SetDensityEf($this,$density){
 $this=($this)|0;
 $density=+($density);
 var $1=0,$2=.0,$3=0,label=0;

 $1=(($this+28)|0);
 HEAPF32[(($1)>>2)]=$density;
 $2=((1.0))/($density);
 $3=(($this+32)|0);
 HEAPF32[(($3)>>2)]=$2;
 return;
}


function _b2ParticleSystem_SetRadius($particleSystem,$radius){
 $particleSystem=($particleSystem)|0;
 $radius=+($radius);
 var $1=0,$2=.0,label=0;

 $1=$particleSystem;
 $2=$radius;
 __ZN16b2ParticleSystem9SetRadiusEf($1,$2);
 return;
}


function __ZN16b2ParticleSystem9SetRadiusEf($this,$radius){
 $this=($this)|0;
 $radius=+($radius);
 var $1=.0,$2=0,$3=.0,$4=0,$5=.0,$6=.0,$7=0,label=0;

 $1=($radius)*((2.0));
 $2=(($this+40)|0);
 HEAPF32[(($2)>>2)]=$1;
 $3=($1)*($1);
 $4=(($this+48)|0);
 HEAPF32[(($4)>>2)]=$3;
 $5=(+(HEAPF32[(($2)>>2)]));
 $6=((1.0))/($5);
 $7=(($this+44)|0);
 HEAPF32[(($7)>>2)]=$6;
 return;
}


function __ZN13b2ParticleDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$$etemp$0=0,$ld$1$0=0,$6$0=0,$ld$2$1=0,$6$1=0,$st$3$0=0,$st$4$1=0,$7=0,$$etemp$5=0,$ld$6$0=0,$8$0=0,$ld$7$1=0,$8$1=0,$st$8$0=0,$st$9$1=0;
 var $9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+4)|0);
 $2=(($this+12)|0);
 $3=(($this+20)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=0;
 $5=$1;
 $$etemp$0=8264;
 $ld$1$0=(($$etemp$0)|0);
 $6$0=((HEAP32[(($ld$1$0)>>2)])|0);
 $ld$2$1=(($$etemp$0+4)|0);
 $6$1=((HEAP32[(($ld$2$1)>>2)])|0);
 $st$3$0=(($5)|0);
 HEAP32[(($st$3$0)>>2)]=$6$0;
 $st$4$1=(($5+4)|0);
 HEAP32[(($st$4$1)>>2)]=$6$1;
 $7=$2;
 $$etemp$5=8264;
 $ld$6$0=(($$etemp$5)|0);
 $8$0=((HEAP32[(($ld$6$0)>>2)])|0);
 $ld$7$1=(($$etemp$5+4)|0);
 $8$1=((HEAP32[(($ld$7$1)>>2)])|0);
 $st$8$0=(($7)|0);
 HEAP32[(($st$8$0)>>2)]=$8$0;
 $st$9$1=(($7+4)|0);
 HEAP32[(($st$9$1)>>2)]=$8$1;
 $9=((__ZN15b2ParticleColoraSERKS_($3,8272))|0);
 $10=(($this+24)|0);
 HEAPF32[(($10)>>2)]=0.0;
 $11=(($this+28)|0);
 HEAP32[(($11)>>2)]=0;
 $12=(($this+32)|0);
 HEAP32[(($12)>>2)]=0;
 return;
}


function __ZN15b2WheelJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this+36)|0);
 $5=(($this)|0);
 HEAP32[(($5)>>2)]=7;
 __ZN6b2Vec27SetZeroEv($2);
 __ZN6b2Vec27SetZeroEv($3);
 __ZN6b2Vec23SetEff($4,1.0,0.0);
 $6=(($this+44)|0);
 HEAP8[($6)]=0;
 $7=(($this+48)|0);
 HEAPF32[(($7)>>2)]=0.0;
 $8=(($this+52)|0);
 HEAPF32[(($8)>>2)]=0.0;
 $9=(($this+56)|0);
 HEAPF32[(($9)>>2)]=2.0;
 $10=(($this+60)|0);
 HEAPF32[(($10)>>2)]=0.699999988079071;
 return;
}


function __ZN10b2JointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 _memset((((($1)|0))|0), ((((0)|0))|0), ((((17)|0))|0))|0;
 return;
}


function __ZN6b2Vec27SetZeroEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=0.0;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=0.0;
 return;
}


function __ZN14b2WeldJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=8;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 __ZN6b2Vec23SetEff($3,0.0,0.0);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+40)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+44)|0);
 HEAPF32[(($7)>>2)]=0.0;
 return;
}


function __ZN14b2RopeJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=10;
 __ZN6b2Vec23SetEff($2,-1.0,0.0);
 __ZN6b2Vec23SetEff($3,1.0,0.0);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=0.0;
 return;
}


function __ZN18b2RevoluteJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=1;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 __ZN6b2Vec23SetEff($3,0.0,0.0);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+44)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+48)|0);
 HEAPF32[(($7)>>2)]=0.0;
 $8=(($this+60)|0);
 HEAPF32[(($8)>>2)]=0.0;
 $9=(($this+56)|0);
 HEAPF32[(($9)>>2)]=0.0;
 $10=(($this+40)|0);
 HEAP8[($10)]=0;
 $11=(($this+52)|0);
 HEAP8[($11)]=0;
 return;
}


function __ZN16b2PulleyJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this+36)|0);
 $5=(($this+44)|0);
 $6=(($this)|0);
 HEAP32[(($6)>>2)]=4;
 __ZN6b2Vec23SetEff($2,-1.0,1.0);
 __ZN6b2Vec23SetEff($3,1.0,1.0);
 __ZN6b2Vec23SetEff($4,-1.0,0.0);
 __ZN6b2Vec23SetEff($5,1.0,0.0);
 $7=(($this+52)|0);
 HEAPF32[(($7)>>2)]=0.0;
 $8=(($this+56)|0);
 HEAPF32[(($8)>>2)]=0.0;
 $9=(($this+60)|0);
 HEAPF32[(($9)>>2)]=1.0;
 $10=(($this+16)|0);
 HEAP8[($10)]=1;
 return;
}


function __ZN19b2PrismaticJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this+36)|0);
 $5=(($this)|0);
 HEAP32[(($5)>>2)]=2;
 __ZN6b2Vec27SetZeroEv($2);
 __ZN6b2Vec27SetZeroEv($3);
 __ZN6b2Vec23SetEff($4,1.0,0.0);
 $6=(($this+44)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+48)|0);
 HEAP8[($7)]=0;
 $8=(($this+52)|0);
 HEAPF32[(($8)>>2)]=0.0;
 $9=(($this+56)|0);
 HEAPF32[(($9)>>2)]=0.0;
 $10=(($this+60)|0);
 HEAP8[($10)]=0;
 $11=(($this+64)|0);
 HEAPF32[(($11)>>2)]=0.0;
 $12=(($this+68)|0);
 HEAPF32[(($12)>>2)]=0.0;
 return;
}


function __ZN15b2MouseJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=5;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 $4=(($this+28)|0);
 HEAPF32[(($4)>>2)]=0.0;
 $5=(($this+32)|0);
 HEAPF32[(($5)>>2)]=5.0;
 $6=(($this+36)|0);
 HEAPF32[(($6)>>2)]=0.699999988079071;
 return;
}


function __ZN15b2MotorJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=11;
 __ZN6b2Vec27SetZeroEv($2);
 $4=(($this+28)|0);
 HEAPF32[(($4)>>2)]=0.0;
 $5=(($this+32)|0);
 HEAPF32[(($5)>>2)]=1.0;
 $6=(($this+36)|0);
 HEAPF32[(($6)>>2)]=1.0;
 $7=(($this+40)|0);
 HEAPF32[(($7)>>2)]=0.30000001192092896;
 return;
}


function __ZN14b2GearJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=6;
 $3=(($this+20)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+24)|0);
 HEAP32[(($4)>>2)]=0;
 $5=(($this+28)|0);
 HEAPF32[(($5)>>2)]=1.0;
 return;
}


function __ZN18b2FrictionJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=9;
 __ZN6b2Vec27SetZeroEv($2);
 __ZN6b2Vec27SetZeroEv($3);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+40)|0);
 HEAPF32[(($6)>>2)]=0.0;
 return;
}


function __ZN18b2DistanceJointDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this)|0);
 __ZN10b2JointDefC2Ev($1);
 $2=(($this+20)|0);
 $3=(($this+28)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=3;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 __ZN6b2Vec23SetEff($3,0.0,0.0);
 $5=(($this+36)|0);
 HEAPF32[(($5)>>2)]=1.0;
 $6=(($this+40)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+44)|0);
 HEAPF32[(($7)>>2)]=0.0;
 return;
}


function __ZN19b2ParticleSystemDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=1.0;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=0.05000000074505806;
 $3=(($this+8)|0);
 HEAPF32[(($3)>>2)]=1.0;
 $4=(($this+12)|0);
 HEAPF32[(($4)>>2)]=0.25;
 $5=(($this+16)|0);
 HEAPF32[(($5)>>2)]=0.25;
 $6=(($this+20)|0);
 HEAPF32[(($6)>>2)]=0.25;
 $7=(($this+24)|0);
 HEAPF32[(($7)>>2)]=0.20000000298023224;
 $8=(($this+28)|0);
 HEAPF32[(($8)>>2)]=0.20000000298023224;
 $9=(($this+32)|0);
 HEAPF32[(($9)>>2)]=1.0;
 $10=(($this+36)|0);
 HEAPF32[(($10)>>2)]=0.5;
 $11=(($this+40)|0);
 HEAPF32[(($11)>>2)]=0.5;
 $12=(($this+44)|0);
 HEAPF32[(($12)>>2)]=0.20000000298023224;
 $13=(($this+48)|0);
 HEAPF32[(($13)>>2)]=0.20000000298023224;
 $14=(($this+52)|0);
 HEAP32[(($14)>>2)]=8;
 $15=(($this+56)|0);
 HEAPF32[(($15)>>2)]=0.5;
 $16=(($this+60)|0);
 HEAP8[($16)]=1;
 $17=(($this+64)|0);
 HEAPF32[(($17)>>2)]=0.01666666753590107;
 return;
}


function __ZN9b2BodyDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,label=0;

 $1=(($this+4)|0);
 $2=(($this+16)|0);
 $3=(($this+44)|0);
 HEAP32[(($3)>>2)]=0;
 __ZN6b2Vec23SetEff($1,0.0,0.0);
 $4=(($this+12)|0);
 HEAPF32[(($4)>>2)]=0.0;
 __ZN6b2Vec23SetEff($2,0.0,0.0);
 $5=(($this+24)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+28)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+32)|0);
 HEAPF32[(($7)>>2)]=0.0;
 $8=(($this+36)|0);
 HEAP8[($8)]=1;
 $9=(($this+37)|0);
 HEAP8[($9)]=1;
 $10=(($this+38)|0);
 HEAP8[($10)]=0;
 $11=(($this+39)|0);
 HEAP8[($11)]=0;
 $12=(($this)|0);
 HEAP32[(($12)>>2)]=0;
 $13=(($this+40)|0);
 HEAP8[($13)]=1;
 $14=(($this+48)|0);
 HEAPF32[(($14)>>2)]=1.0;
 return;
}


function __ZN22b2WorldContactListenerD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN22b2WorldContactListener12BeginContactEP9b2Contact($this,$contact){
 $this=($this)|0;
 $contact=($contact)|0;
 var $1=0,label=0;

 $1=$contact;
 _b2WorldBeginContactBody((($1)|0));
 return;
}


function __ZN22b2WorldContactListener10EndContactEP9b2Contact($this,$contact){
 $this=($this)|0;
 $contact=($contact)|0;
 var $1=0,label=0;

 $1=$contact;
 _b2WorldEndContactBody((($1)|0));
 return;
}


function __ZN17b2ContactListener12BeginContactEP16b2ParticleSystemP21b2ParticleBodyContact($this,$particleSystem,$particleBodyContact){
 $this=($this)|0;
 $particleSystem=($particleSystem)|0;
 $particleBodyContact=($particleBodyContact)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListener10EndContactEP9b2FixtureP16b2ParticleSystemi($this,$fixture,$particleSystem,$index){
 $this=($this)|0;
 $fixture=($fixture)|0;
 $particleSystem=($particleSystem)|0;
 $index=($index)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListener12BeginContactEP16b2ParticleSystemP17b2ParticleContact($this,$particleSystem,$particleContact){
 $this=($this)|0;
 $particleSystem=($particleSystem)|0;
 $particleContact=($particleContact)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListener10EndContactEP16b2ParticleSystemii($this,$particleSystem,$indexA,$indexB){
 $this=($this)|0;
 $particleSystem=($particleSystem)|0;
 $indexA=($indexA)|0;
 $indexB=($indexB)|0;
 var label=0;

 return;
}


function __ZN22b2WorldContactListener8PreSolveEP9b2ContactPK10b2Manifold($this,$contact,$oldManifold){
 $this=($this)|0;
 $contact=($contact)|0;
 $oldManifold=($oldManifold)|0;
 var $1=0,$2=0,label=0;

 $1=$contact;
 $2=$oldManifold;
 _b2WorldPreSolve((($1)|0),(($2)|0));
 return;
}


function __ZN22b2WorldContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse($this,$contact,$impulse){
 $this=($this)|0;
 $contact=($contact)|0;
 $impulse=($impulse)|0;
 var $1=0,$2=0,label=0;

 $1=$contact;
 $2=$impulse;
 _b2WorldPostSolve((($1)|0),(($2)|0));
 return;
}


function __Z5b2DotRK6b2Vec2S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 return (+($11));
}


function __ZN6b2Body8SetAwakeEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$4=0,$5=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 if (!($flag)) {
  $10=$2&-3;
  HEAP16[(($1)>>1)]=$10;
  $11=(($this+160)|0);
  HEAPF32[(($11)>>2)]=0.0;
  $12=(($this+80)|0);
  __ZN6b2Vec27SetZeroEv($12);
  $13=(($this+88)|0);
  HEAPF32[(($13)>>2)]=0.0;
  $14=(($this+92)|0);
  __ZN6b2Vec27SetZeroEv($14);
  $15=(($this+100)|0);
  HEAPF32[(($15)>>2)]=0.0;
  return;
 }
 $4=$2&2;
 $5=(($4<<16)>>16)==0;
 if (!($5)) {
  return;
 }
 $7=$2|2;
 HEAP16[(($1)>>1)]=$7;
 $8=(($this+160)|0);
 HEAPF32[(($8)>>2)]=0.0;
 return;
}


function __Z5b2MulRK11b2TransformRK6b2Vec2($agg_result,$T,$v){
 $agg_result=($agg_result)|0;
 $T=($T)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=.0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var label=0;

 $1=(($T+12)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($T+8)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 $12=(($T)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($13)+($11);
 $15=($4)*($7);
 $16=($2)*($9);
 $17=($15)+($16);
 $18=(($T+4)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=($17)+($19);
 __ZN6b2Vec2C1Eff($agg_result,$14,$20);
 return;
}


function __ZN6b2Vec2pLERKS_($this,$v){
 $this=($this)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($v)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)+($4);
 HEAPF32[(($3)>>2)]=$5;
 $6=(($v+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)+($9);
 HEAPF32[(($8)>>2)]=$10;
 return;
}


function __Z7b2CrossRK6b2Vec2S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b+4)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 return (+($11));
}


function __ZmiRK6b2Vec2S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)-($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 __ZN6b2Vec2C1Eff($agg_result,$5,$10);
 return;
}


function __ZN14b2PolygonShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN7b2ShapeC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=5376;
 $3=(($this+12)|0);
 $4=(($this+4)|0);
 HEAP32[(($4)>>2)]=2;
 $5=(($this+8)|0);
 HEAPF32[(($5)>>2)]=0.009999999776482582;
 $6=(($this+148)|0);
 HEAP32[(($6)>>2)]=0;
 __ZN6b2Vec27SetZeroEv($3);
 return;
}


function __ZN7b2ShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=4584;
 return;
}


function __ZN14b2PolygonShapeD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN7b2ShapeD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN7b2ShapeD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN11b2EdgeShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN7b2ShapeC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=5992;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=1;
 $4=(($this+8)|0);
 HEAPF32[(($4)>>2)]=0.009999999776482582;
 $5=(($this+28)|0);
 $6=$5;
 _memset((((($6)|0))|0), ((((0)|0))|0), ((((18)|0))|0))|0;
 return;
}


function __ZN11b2EdgeShapeD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN18b2ParticleGroupDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$$etemp$0=0,$ld$1$0=0,$7$0=0,$ld$2$1=0,$7$1=0,$st$3$0=0,$st$4$1=0,$8=0,$9=0,$$etemp$5=0,$ld$6$0=0,$10$0=0,$ld$7$1=0,$10$1=0;
 var $st$8$0=0,$st$9$1=0,$11=0,$12=0,$13=0,$14=0,$15=0,label=0;

 $1=(($this+8)|0);
 $2=(($this+20)|0);
 $3=(($this+32)|0);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=0;
 $5=(($this+4)|0);
 HEAP32[(($5)>>2)]=0;
 $6=$1;
 $$etemp$0=8264;
 $ld$1$0=(($$etemp$0)|0);
 $7$0=((HEAP32[(($ld$1$0)>>2)])|0);
 $ld$2$1=(($$etemp$0+4)|0);
 $7$1=((HEAP32[(($ld$2$1)>>2)])|0);
 $st$3$0=(($6)|0);
 HEAP32[(($st$3$0)>>2)]=$7$0;
 $st$4$1=(($6+4)|0);
 HEAP32[(($st$4$1)>>2)]=$7$1;
 $8=(($this+16)|0);
 HEAPF32[(($8)>>2)]=0.0;
 $9=$2;
 $$etemp$5=8264;
 $ld$6$0=(($$etemp$5)|0);
 $10$0=((HEAP32[(($ld$6$0)>>2)])|0);
 $ld$7$1=(($$etemp$5+4)|0);
 $10$1=((HEAP32[(($ld$7$1)>>2)])|0);
 $st$8$0=(($9)|0);
 HEAP32[(($st$8$0)>>2)]=$10$0;
 $st$9$1=(($9+4)|0);
 HEAP32[(($st$9$1)>>2)]=$10$1;
 $11=(($this+28)|0);
 HEAPF32[(($11)>>2)]=0.0;
 $12=((__ZN15b2ParticleColoraSERKS_($3,8272))|0);
 $13=(($this+36)|0);
 HEAPF32[(($13)>>2)]=1.0;
 $14=(($this+40)|0);
 $15=$14;
 _memset((((($15)|0))|0), ((((0)|0))|0), ((((36)|0))|0))|0;
 return;
}


function __ZN13b2CircleShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 __ZN7b2ShapeC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=5496;
 $3=(($this+12)|0);
 $4=(($this+4)|0);
 HEAP32[(($4)>>2)]=0;
 $5=(($this+8)|0);
 HEAPF32[(($5)>>2)]=0.0;
 __ZN6b2Vec27SetZeroEv($3);
 return;
}


function __ZN13b2CircleShapeD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN6b2Vec2C2Eff($this,$x,$y){
 $this=($this)|0;
 $x=+($x);
 $y=+($y);
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$x;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$y;
 return;
}


function __ZN12b2ChainShapeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this)|0);
 __ZN7b2ShapeC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=5744;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=3;
 $4=(($this+8)|0);
 HEAPF32[(($4)>>2)]=0.009999999776482582;
 $5=(($this+12)|0);
 HEAP32[(($5)>>2)]=0;
 $6=(($this+16)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($this+36)|0);
 HEAP8[($7)]=0;
 $8=(($this+37)|0);
 HEAP8[($8)]=0;
 return;
}


function __ZN12b2FixtureDefC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this+22)|0);
 __ZN8b2FilterC1Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+8)|0);
 HEAPF32[(($4)>>2)]=0.20000000298023224;
 $5=(($this+12)|0);
 HEAPF32[(($5)>>2)]=0.0;
 $6=(($this+16)|0);
 HEAPF32[(($6)>>2)]=0.0;
 $7=(($this+20)|0);
 HEAP8[($7)]=0;
 return;
}


function __ZN8b2FilterC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN8b2FilterC2Ev($this);
 return;
}


function __ZN8b2FilterC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAP16[(($1)>>1)]=1;
 $2=(($this+2)|0);
 HEAP16[(($2)>>1)]=-1;
 $3=(($this+4)|0);
 HEAP16[(($3)>>1)]=0;
 return;
}


function __Z10b2DistanceRK6b2Vec2S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $c=0,$1=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $c=((sp)|0);
 __ZmiRK6b2Vec2S1_($c,$a,$b);
 $1=(+(__ZNK6b2Vec26LengthEv($c)));
 STACKTOP=sp;return (+($1));
}


function __ZmlfRK6b2Vec2($agg_result,$s,$a){
 $agg_result=($agg_result)|0;
 $s=+($s);
 $a=($a)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($s);
 $4=(($a+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($s);
 __ZN6b2Vec2C1Eff($agg_result,$3,$6);
 return;
}


function __ZN6b2Vec2mLEf($this,$a){
 $this=($this)|0;
 $a=+($a);
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($a);
 HEAPF32[(($1)>>2)]=$3;
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($a);
 HEAPF32[(($4)>>2)]=$6;
 return;
}


function __ZN6b2Vec29NormalizeEv($this){
 $this=($this)|0;
 var $1=.0,$2=0,$4=.0,$5=0,$6=.0,$7=.0,$8=0,$9=.0,$10=.0,$_0=.0,label=0;

 $1=(+(__ZNK6b2Vec26LengthEv($this)));
 $2=$1<(1.1920928955078125e-7);
 if ($2) {
  $_0=0.0;

  return (+($_0));
 }
 $4=((1.0))/($1);
 $5=(($this)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=($4)*($6);
 HEAPF32[(($5)>>2)]=$7;
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($4)*($9);
 HEAPF32[(($8)>>2)]=$10;
 $_0=$1;

 return (+($_0));
}


function __ZN6b2Vec2mIERKS_($this,$v){
 $this=($this)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($v)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($4)-($2);
 HEAPF32[(($3)>>2)]=$5;
 $6=(($v+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($9)-($7);
 HEAPF32[(($8)>>2)]=$10;
 return;
}


function __ZNK6b2Vec213LengthSquaredEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($2);
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($5);
 $7=($3)+($6);
 return (+($7));
}


function __ZNK6b2Vec2ngEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=((-.0))-($2);
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=((-.0))-($5);
 __ZN6b2Vec23SetEff($agg_result,$3,$6);
 return;
}


function __ZNK6b2Vec26LengthEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=.0,$8=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($2);
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($5);
 $7=($3)+($6);
 $8=(+(Math_sqrt($7)));
 return (+($8));
}


function __Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput($output,$input){
 $output=($output)|0;
 $input=($input)|0;
 var $timer=0,$sweepA=0,$sweepB=0,$cache=0,$distanceInput=0,$xfA=0,$xfB=0,$distanceOutput=0,$fcn=0,$indexA=0,$indexB=0,$1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=0,$9=0;
 var $10=0,$11=0,$12=0,$13=0,$14=0,$15=.0,$16=0,$17=.0,$18=0,$19=.0,$20=.0,$21=.0,$22=.0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0;
 var $30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=.0,$38=.0,$iter_0=0,$t1_0=.0,$40=.0,$41=0,$44=0,$47=.0,$t2_0=.0,$pushBackIter_0=0,$49=.0,$50=0,$53=0;
 var $55=0,$56=0,$57=.0,$58=0,$61=0,$62=0,$63=0,$s2_0=.0,$s1_0=.0,$rootIterCount_0=0,$a1_0=.0,$a2_0=.0,$66=0,$67=0,$69=.0,$70=.0,$71=.0,$72=.0,$73=.0,$74=.0;
 var $76=.0,$77=.0,$t_0=.0,$79=0,$80=0,$81=0,$82=.0,$83=.0,$84=.0,$85=0,$87=0,$s2_0_=.0,$_s1_0=.0,$t_0_a1_0=.0,$a2_0_t_0=.0,$88=0,$t2_1=.0,$90=0,$91=0,$92=0;
 var $93=0,$94=0,$95=0,$96=0,$t1_1=.0,$98=0,$99=0,$100=0,$101=0,$iter_1=0,$104=0,$105=0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+376)|0;
 $timer=((sp)|0);
 $sweepA=(((sp)+(8))|0);
 $sweepB=(((sp)+(48))|0);
 $cache=(((sp)+(88))|0);
 $distanceInput=(((sp)+(104))|0);
 $xfA=(((sp)+(200))|0);
 $xfB=(((sp)+(216))|0);
 $distanceOutput=(((sp)+(232))|0);
 $fcn=(((sp)+(256))|0);
 $indexA=(((sp)+(360))|0);
 $indexB=(((sp)+(368))|0);
 __ZN7b2TimerC2Ev($timer);
 $1=((HEAP32[((8232)>>2)])|0);
 $2=((($1)+(1))|0);
 HEAP32[((8232)>>2)]=$2;
 $3=(($output)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($input+128)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($output+4)|0);
 HEAPF32[(($6)>>2)]=$5;
 $7=(($input)|0);
 $8=(($input+28)|0);
 $9=(($input+56)|0);
 $10=$sweepA;
 $11=$9;
 (_memcpy((($10)|0), (($11)|0), 36)|0);
 $12=(($input+92)|0);
 $13=$sweepB;
 $14=$12;
 (_memcpy((($13)|0), (($14)|0), 36)|0);
 __ZN7b2Sweep9NormalizeEv($sweepA);
 __ZN7b2Sweep9NormalizeEv($sweepB);
 $15=(+(HEAPF32[(($4)>>2)]));
 $16=(($input+24)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($input+52)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=($17)+($19);
 $21=($20)+((-0.014999999664723873));
 $22=(+(__Z5b2MaxIfET_S0_S0_(0.004999999888241291,$21)));
 $23=(($cache+4)|0);
 HEAP16[(($23)>>1)]=0;
 __ZN15b2DistanceInputC1Ev($distanceInput);
 $24=$distanceInput;
 $25=$input;
 HEAP32[(($24)>>2)]=((HEAP32[(($25)>>2)])|0);HEAP32[((($24)+(4))>>2)]=((HEAP32[((($25)+(4))>>2)])|0);HEAP32[((($24)+(8))>>2)]=((HEAP32[((($25)+(8))>>2)])|0);HEAP32[((($24)+(12))>>2)]=((HEAP32[((($25)+(12))>>2)])|0);HEAP32[((($24)+(16))>>2)]=((HEAP32[((($25)+(16))>>2)])|0);HEAP32[((($24)+(20))>>2)]=((HEAP32[((($25)+(20))>>2)])|0);HEAP32[((($24)+(24))>>2)]=((HEAP32[((($25)+(24))>>2)])|0);
 $26=(($distanceInput+28)|0);
 $27=$26;
 $28=$8;
 HEAP32[(($27)>>2)]=((HEAP32[(($28)>>2)])|0);HEAP32[((($27)+(4))>>2)]=((HEAP32[((($28)+(4))>>2)])|0);HEAP32[((($27)+(8))>>2)]=((HEAP32[((($28)+(8))>>2)])|0);HEAP32[((($27)+(12))>>2)]=((HEAP32[((($28)+(12))>>2)])|0);HEAP32[((($27)+(16))>>2)]=((HEAP32[((($28)+(16))>>2)])|0);HEAP32[((($27)+(20))>>2)]=((HEAP32[((($28)+(20))>>2)])|0);HEAP32[((($27)+(24))>>2)]=((HEAP32[((($28)+(24))>>2)])|0);
 $29=(($distanceInput+88)|0);
 HEAP8[($29)]=0;
 $30=(($distanceInput+56)|0);
 $31=$30;
 $32=$xfA;
 $33=(($distanceInput+72)|0);
 $34=$33;
 $35=$xfB;
 $36=(($distanceOutput+16)|0);
 $37=($22)+((0.0012499999720603228));
 $38=($22)+((-0.0012499999720603228));
 $t1_0=0.0;$iter_0=0;
 L1: while(1) {


  __ZNK7b2Sweep12GetTransformEP11b2Transformf($sweepA,$xfA,$t1_0);
  __ZNK7b2Sweep12GetTransformEP11b2Transformf($sweepB,$xfB,$t1_0);
  HEAP32[(($31)>>2)]=((HEAP32[(($32)>>2)])|0);HEAP32[((($31)+(4))>>2)]=((HEAP32[((($32)+(4))>>2)])|0);HEAP32[((($31)+(8))>>2)]=((HEAP32[((($32)+(8))>>2)])|0);HEAP32[((($31)+(12))>>2)]=((HEAP32[((($32)+(12))>>2)])|0);
  HEAP32[(($34)>>2)]=((HEAP32[(($35)>>2)])|0);HEAP32[((($34)+(4))>>2)]=((HEAP32[((($35)+(4))>>2)])|0);HEAP32[((($34)+(8))>>2)]=((HEAP32[((($35)+(8))>>2)])|0);HEAP32[((($34)+(12))>>2)]=((HEAP32[((($35)+(12))>>2)])|0);
  __Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput($distanceOutput,$cache,$distanceInput);
  $40=(+(HEAPF32[(($36)>>2)]));
  $41=$40>(0.0);
  if (!($41)) {
   label = 3;
   break;
  }
  $44=$40<$37;
  if ($44) {
   label = 5;
   break;
  }
  $47=(+(__ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f($fcn,$cache,$7,$sweepA,$8,$sweepB,$t1_0)));
  $pushBackIter_0=0;$t2_0=$15;
  while(1) {


   $49=(+(__ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f($fcn,$indexA,$indexB,$t2_0)));
   $50=$49>$37;
   if ($50) {
    label = 8;
    break L1;
   }
   $53=$49>$38;
   if ($53) {
    $t1_1=$t2_0;
    break;
   }
   $55=((HEAP32[(($indexA)>>2)])|0);
   $56=((HEAP32[(($indexB)>>2)])|0);
   $57=(+(__ZNK20b2SeparationFunction8EvaluateEiif($fcn,$55,$56,$t1_0)));
   $58=$57<$38;
   if ($58) {
    label = 11;
    break L1;
   }
   $61=$57>$37;
   if (!($61)) {
    label = 14;
    break L1;
   }
   $62=((HEAP32[(($indexA)>>2)])|0);
   $63=((HEAP32[(($indexB)>>2)])|0);
   $a2_0=$t2_0;$a1_0=$t1_0;$rootIterCount_0=0;$s1_0=$57;$s2_0=$49;
   while(1) {





    $66=$rootIterCount_0&1;
    $67=($66|0)==0;
    if ($67) {
     $76=($a1_0)+($a2_0);
     $77=($76)*((0.5));
     $t_0=$77;
    } else {
     $69=($22)-($s1_0);
     $70=($a2_0)-($a1_0);
     $71=($69)*($70);
     $72=($s2_0)-($s1_0);
     $73=($71)/($72);
     $74=($a1_0)+($73);
     $t_0=$74;
    }

    $79=((($rootIterCount_0)+(1))|0);
    $80=((HEAP32[((8200)>>2)])|0);
    $81=((($80)+(1))|0);
    HEAP32[((8200)>>2)]=$81;
    $82=(+(__ZNK20b2SeparationFunction8EvaluateEiif($fcn,$62,$63,$t_0)));
    $83=($82)-($22);
    $84=(+(__Z5b2AbsIfET_S0_($83)));
    $85=$84<(0.0012499999720603228);
    if ($85) {
     $t2_1=$t_0;
     break;
    }
    $87=$82>$22;
    $s2_0_=($87?$s2_0:$82);
    $_s1_0=($87?$82:$s1_0);
    $t_0_a1_0=($87?$t_0:$a1_0);
    $a2_0_t_0=($87?$a2_0:$t_0);
    $88=($79|0)==50;
    if ($88) {
     $t2_1=$t2_0;
     break;
    } else {
     $a2_0=$a2_0_t_0;$a1_0=$t_0_a1_0;$rootIterCount_0=$79;$s1_0=$_s1_0;$s2_0=$s2_0_;
    }
   }

   $90=((HEAP32[((8208)>>2)])|0);
   $91=((__Z5b2MaxIiET_S0_S0_($90,$79))|0);
   HEAP32[((8208)>>2)]=$91;
   $92=((($pushBackIter_0)+(1))|0);
   $93=($92|0)==8;
   if ($93) {
    $t1_1=$t1_0;
    break;
   } else {
    $pushBackIter_0=$92;$t2_0=$t2_1;
   }
  }

  $98=((($iter_0)+(1))|0);
  $99=((HEAP32[((8224)>>2)])|0);
  $100=((($99)+(1))|0);
  HEAP32[((8224)>>2)]=$100;
  $101=($98|0)==20;
  if ($101) {
   label = 23;
   break;
  } else {
   $t1_0=$t1_1;$iter_0=$98;
  }
 }
 if ((label|0) == 3) {
  HEAP32[(($3)>>2)]=2;
  HEAPF32[(($6)>>2)]=0.0;
  $iter_1=$iter_0;
 }
 else if ((label|0) == 5) {
  HEAP32[(($3)>>2)]=3;
  HEAPF32[(($6)>>2)]=$t1_0;
  $iter_1=$iter_0;
 }
 else if ((label|0) == 8) {
  HEAP32[(($3)>>2)]=4;
  HEAPF32[(($6)>>2)]=$15;
  label = 21;
 }
 else if ((label|0) == 11) {
  HEAP32[(($3)>>2)]=1;
  HEAPF32[(($6)>>2)]=$t1_0;
  label = 21;
 }
 else if ((label|0) == 14) {
  HEAP32[(($3)>>2)]=3;
  HEAPF32[(($6)>>2)]=$t1_0;
  label = 21;
 }
 else if ((label|0) == 23) {
  HEAP32[(($3)>>2)]=1;
  HEAPF32[(($6)>>2)]=$t1_1;
  $iter_1=20;
 }
 if ((label|0) == 21) {
  $94=((($iter_0)+(1))|0);
  $95=((HEAP32[((8224)>>2)])|0);
  $96=((($95)+(1))|0);
  HEAP32[((8224)>>2)]=$96;
  $iter_1=$94;
 }

 $104=((HEAP32[((8216)>>2)])|0);
 $105=((__Z5b2MaxIiET_S0_S0_($104,$iter_1))|0);
 HEAP32[((8216)>>2)]=$105;
 $106=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $107=(+(HEAPF32[((24)>>2)]));
 $108=(+(__Z5b2MaxIfET_S0_S0_($107,$106)));
 HEAPF32[((24)>>2)]=$108;
 $109=(+(HEAPF32[((16)>>2)]));
 $110=($106)+($109);
 HEAPF32[((16)>>2)]=$110;
 STACKTOP=sp;return;
}


function __ZN7b2Sweep9NormalizeEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=.0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($this+24)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)/((6.2831854820251465));
 $4=(+(Math_floor($3)));
 $5=($4)*((6.2831854820251465));
 $6=($2)-($5);
 HEAPF32[(($1)>>2)]=$6;
 $7=(($this+28)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($8)-($5);
 HEAPF32[(($7)>>2)]=$9;
 return;
}


function __Z5b2MaxIfET_S0_S0_($a,$b){
 $a=+($a);
 $b=+($b);
 var $1=0,$2=.0,label=0;

 $1=$a>$b;
 $2=($1?$a:$b);
 return (+($2));
}


function __ZN15b2DistanceInputC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2DistanceInputC2Ev($this);
 return;
}


function __ZNK7b2Sweep12GetTransformEP11b2Transformf($this,$xf,$beta){
 $this=($this)|0;
 $xf=($xf)|0;
 $beta=+($beta);
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=.0,$13=.0,$14=0;
 var $15=.0,$16=.0,$17=.0,$18=0,$19=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($xf)|0);
 $6=((1.0))-($beta);
 $7=(($this+8)|0);
 __ZmlfRK6b2Vec2($2,$6,$7);
 $8=(($this+16)|0);
 __ZmlfRK6b2Vec2($3,$beta,$8);
 __ZplRK6b2Vec2S1_($tmpcast,$2,$3);
 $9=$xf;
 $ld$0$0=(($1)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($this+24)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=($6)*($12);
 $14=(($this+28)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=($15)*($beta);
 $17=($13)+($16);
 $18=(($xf+8)|0);
 __ZN5b2Rot3SetEf($18,$17);
 $19=(($this)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($4,$18,$19);
 __ZN6b2Vec2mIERKS_($5,$4);
 STACKTOP=sp;return;
}


function __ZN20b2SeparationFunction10InitializeEPK14b2SimplexCachePK15b2DistanceProxyRK7b2SweepS5_S8_f($this,$cache,$proxyA,$sweepA,$proxyB,$sweepB,$t1){
 $this=($this)|0;
 $cache=($cache)|0;
 $proxyA=($proxyA)|0;
 $sweepA=($sweepA)|0;
 $proxyB=($proxyB)|0;
 $sweepB=($sweepB)|0;
 $t1=+($t1);
 var $xfA=0,$xfB=0,$localPointA=0,$localPointB=0,$pointA=0,$pointB=0,$1=0,$localPointB1=0,$tmpcast31=0,$localPointB2=0,$tmpcast32=0,$2=0,$tmpcast33=0,$3=0,$normal=0,$4=0,$tmpcast34=0,$5=0,$pointB1=0,$localPointA2=0;
 var $tmpcast35=0,$pointA3=0,$6=0,$7=0,$tmpcast36=0,$localPointA1=0,$tmpcast=0,$localPointA25=0,$tmpcast26=0,$8=0,$tmpcast27=0,$9=0,$normal6=0,$10=0,$tmpcast28=0,$11=0,$pointA7=0,$localPointB8=0,$tmpcast29=0,$pointB9=0;
 var $12=0,$13=0,$tmpcast30=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$tmpcast39=0,$tmpcast38=0,$tmpcast37=0,$26=0,$27=0,$28=0;
 var $29=0,$30=0,$31=0,$32=0,$ld$0$0=0,$33$0=0,$ld$1$1=0,$33$1=0,$st$2$0=0,$st$3$1=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$ld$4$0=0,$40$0=0,$ld$5$1=0,$40$1=0;
 var $st$6$0=0,$st$7$1=0,$41=0,$42=0,$ld$8$0=0,$43$0=0,$ld$9$1=0,$43$1=0,$st$10$0=0,$st$11$1=0,$44=.0,$45=0,$46=0,$$etemp$12=0,$ld$13$0=0,$47$0=0,$ld$14$1=0,$47$1=0,$st$15$0=0,$st$16$1=0;
 var $49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$56=0,$57=0,$58=0,$59=0,$60=0,$ld$17$0=0,$61$0=0,$ld$18$1=0,$61$1=0,$st$19$0=0,$st$20$1=0,$62=0,$63=0,$64=0;
 var $65=0,$66=0,$ld$21$0=0,$67$0=0,$ld$22$1=0,$67$1=0,$st$23$0=0,$st$24$1=0,$68=0,$69=0,$ld$25$0=0,$70$0=0,$ld$26$1=0,$70$1=0,$st$27$0=0,$st$28$1=0,$71=.0,$72=0,$73=0,$74=0;
 var $ld$29$0=0,$75$0=0,$ld$30$1=0,$75$1=0,$st$31$0=0,$st$32$1=0,$76=0,$77=0,$78=0,$79=0,$ld$33$0=0,$80$0=0,$ld$34$1=0,$80$1=0,$st$35$0=0,$st$36$1=0,$81=.0,$82=0,$ld$37$0=0,$84$0=0;
 var $ld$38$1=0,$84$1=0,$st$39$0=0,$st$40$1=0,$85=.0,$87=0,$88=0,$89=0,$90=0,$91=0,$ld$41$0=0,$92$0=0,$ld$42$1=0,$92$1=0,$st$43$0=0,$st$44$1=0,$93=0,$94=0,$95=0,$96=0;
 var $97=0,$ld$45$0=0,$98$0=0,$ld$46$1=0,$98$1=0,$st$47$0=0,$st$48$1=0,$99=0,$100=0,$ld$49$0=0,$101$0=0,$ld$50$1=0,$101$1=0,$st$51$0=0,$st$52$1=0,$102=.0,$103=0,$104=0,$105=0,$ld$53$0=0;
 var $106$0=0,$ld$54$1=0,$106$1=0,$st$55$0=0,$st$56$1=0,$107=0,$108=0,$109=0,$110=0,$111=0,$112=0,$ld$57$0=0,$113$0=0,$ld$58$1=0,$113$1=0,$st$59$0=0,$st$60$1=0,$114=.0,$115=0,$ld$61$0=0;
 var $117$0=0,$ld$62$1=0,$117$1=0,$st$63$0=0,$st$64$1=0,$118=.0,$_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+80)|0;
 $xfA=((sp)|0);
 $xfB=(((sp)+(16))|0);
 $localPointA=(((sp)+(32))|0);
 $localPointB=(((sp)+(40))|0);
 $pointA=(((sp)+(48))|0);
 $pointB=(((sp)+(56))|0);
 $1=(((sp)+(64))|0);
 $localPointB1=(((sp)+(72))|0);
 $tmpcast31=$localPointB1;
 $localPointB2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$localPointB2;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pointB1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $localPointA2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$localPointA2;
 $pointA3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$7;
 $localPointA1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$localPointA1;
 $localPointA25=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast26=$localPointA25;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast27=$8;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normal6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast28=$10;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pointA7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $localPointB8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast29=$localPointB8;
 $pointB9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$13;
 $14=(($this)|0);
 HEAP32[(($14)>>2)]=$proxyA;
 $15=(($this+4)|0);
 HEAP32[(($15)>>2)]=$proxyB;
 $16=(($cache+4)|0);
 $17=((HEAP16[(($16)>>1)])|0);
 $18=(($this+8)|0);
 $19=$18;
 $20=$sweepA;
 (_memcpy((($19)|0), (($20)|0), 36)|0);
 $21=(($this+44)|0);
 $22=$21;
 $23=$sweepB;
 (_memcpy((($22)|0), (($23)|0), 36)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($18,$xfA,$t1);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($21,$xfB,$t1);
 $24=(($17<<16)>>16)==1;
 if ($24) {
  $tmpcast39=$1;
  $tmpcast38=$localPointB;
  $tmpcast37=$localPointA;
  $26=(($this+80)|0);
  HEAP32[(($26)>>2)]=0;
  $27=((HEAP32[(($14)>>2)])|0);
  $28=(($cache+6)|0);
  $29=((HEAP8[($28)])|0);
  $30=($29&255);
  $31=((__ZNK15b2DistanceProxy9GetVertexEi($27,$30))|0);
  $32=$31;
  $ld$0$0=(($32)|0);
  $33$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($32+4)|0);
  $33$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localPointA)|0);
  HEAP32[(($st$2$0)>>2)]=$33$0;
  $st$3$1=(($localPointA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$33$1;
  $34=((HEAP32[(($15)>>2)])|0);
  $35=(($cache+9)|0);
  $36=((HEAP8[($35)])|0);
  $37=($36&255);
  $38=((__ZNK15b2DistanceProxy9GetVertexEi($34,$37))|0);
  $39=$38;
  $ld$4$0=(($39)|0);
  $40$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($39+4)|0);
  $40$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localPointB)|0);
  HEAP32[(($st$6$0)>>2)]=$40$0;
  $st$7$1=(($localPointB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$40$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$tmpcast37);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$tmpcast38);
  $41=(($this+92)|0);
  __ZmiRK6b2Vec2S1_($tmpcast39,$pointB,$pointA);
  $42=$41;
  $ld$8$0=(($1)|0);
  $43$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($1+4)|0);
  $43$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($42)|0);
  HEAP32[(($st$10$0)>>2)]=$43$0;
  $st$11$1=(($42+4)|0);
  HEAP32[(($st$11$1)>>2)]=$43$1;
  $44=(+(__ZN6b2Vec29NormalizeEv($41)));
  $45=(($this+84)|0);
  $46=$45;
  $$etemp$12=8264;
  $ld$13$0=(($$etemp$12)|0);
  $47$0=((HEAP32[(($ld$13$0)>>2)])|0);
  $ld$14$1=(($$etemp$12+4)|0);
  $47$1=((HEAP32[(($ld$14$1)>>2)])|0);
  $st$15$0=(($46)|0);
  HEAP32[(($st$15$0)>>2)]=$47$0;
  $st$16$1=(($46+4)|0);
  HEAP32[(($st$16$1)>>2)]=$47$1;
  $_0=$44;

  STACKTOP=sp;return (+($_0));
 }
 $49=(($cache+6)|0);
 $50=((HEAP8[($49)])|0);
 $51=(($cache+7)|0);
 $52=((HEAP8[($51)])|0);
 $53=(($50<<24)>>24)==(($52<<24)>>24);
 $54=(($this+80)|0);
 if ($53) {
  HEAP32[(($54)>>2)]=2;
  $56=(($cache+9)|0);
  $57=((HEAP8[($56)])|0);
  $58=($57&255);
  $59=((__ZNK15b2DistanceProxy9GetVertexEi($proxyB,$58))|0);
  $60=$59;
  $ld$17$0=(($60)|0);
  $61$0=((HEAP32[(($ld$17$0)>>2)])|0);
  $ld$18$1=(($60+4)|0);
  $61$1=((HEAP32[(($ld$18$1)>>2)])|0);
  $st$19$0=(($localPointB1)|0);
  HEAP32[(($st$19$0)>>2)]=$61$0;
  $st$20$1=(($localPointB1+4)|0);
  HEAP32[(($st$20$1)>>2)]=$61$1;
  $62=(($cache+10)|0);
  $63=((HEAP8[($62)])|0);
  $64=($63&255);
  $65=((__ZNK15b2DistanceProxy9GetVertexEi($proxyB,$64))|0);
  $66=$65;
  $ld$21$0=(($66)|0);
  $67$0=((HEAP32[(($ld$21$0)>>2)])|0);
  $ld$22$1=(($66+4)|0);
  $67$1=((HEAP32[(($ld$22$1)>>2)])|0);
  $st$23$0=(($localPointB2)|0);
  HEAP32[(($st$23$0)>>2)]=$67$0;
  $st$24$1=(($localPointB2+4)|0);
  HEAP32[(($st$24$1)>>2)]=$67$1;
  $68=(($this+92)|0);
  __ZmiRK6b2Vec2S1_($3,$tmpcast32,$tmpcast31);
  __Z7b2CrossRK6b2Vec2f($tmpcast33,$3,1.0);
  $69=$68;
  $ld$25$0=(($2)|0);
  $70$0=((HEAP32[(($ld$25$0)>>2)])|0);
  $ld$26$1=(($2+4)|0);
  $70$1=((HEAP32[(($ld$26$1)>>2)])|0);
  $st$27$0=(($69)|0);
  HEAP32[(($st$27$0)>>2)]=$70$0;
  $st$28$1=(($69+4)|0);
  HEAP32[(($st$28$1)>>2)]=$70$1;
  $71=(+(__ZN6b2Vec29NormalizeEv($68)));
  $72=(($xfB+8)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal,$72,$68);
  $73=(($this+84)|0);
  __ZplRK6b2Vec2S1_($5,$tmpcast31,$tmpcast32);
  __ZmlfRK6b2Vec2($tmpcast34,0.5,$5);
  $74=$73;
  $ld$29$0=(($4)|0);
  $75$0=((HEAP32[(($ld$29$0)>>2)])|0);
  $ld$30$1=(($4+4)|0);
  $75$1=((HEAP32[(($ld$30$1)>>2)])|0);
  $st$31$0=(($74)|0);
  HEAP32[(($st$31$0)>>2)]=$75$0;
  $st$32$1=(($74+4)|0);
  HEAP32[(($st$32$1)>>2)]=$75$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB1,$xfB,$73);
  $76=((HEAP8[($49)])|0);
  $77=($76&255);
  $78=((__ZNK15b2DistanceProxy9GetVertexEi($proxyA,$77))|0);
  $79=$78;
  $ld$33$0=(($79)|0);
  $80$0=((HEAP32[(($ld$33$0)>>2)])|0);
  $ld$34$1=(($79+4)|0);
  $80$1=((HEAP32[(($ld$34$1)>>2)])|0);
  $st$35$0=(($localPointA2)|0);
  HEAP32[(($st$35$0)>>2)]=$80$0;
  $st$36$1=(($localPointA2+4)|0);
  HEAP32[(($st$36$1)>>2)]=$80$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA3,$xfA,$tmpcast35);
  __ZmiRK6b2Vec2S1_($6,$pointA3,$pointB1);
  $81=(+(__Z5b2DotRK6b2Vec2S1_($6,$normal)));
  $82=$81<(0.0);
  if (!($82)) {
   $_0=$81;

   STACKTOP=sp;return (+($_0));
  }
  __ZNK6b2Vec2ngEv($tmpcast36,$68);
  $ld$37$0=(($7)|0);
  $84$0=((HEAP32[(($ld$37$0)>>2)])|0);
  $ld$38$1=(($7+4)|0);
  $84$1=((HEAP32[(($ld$38$1)>>2)])|0);
  $st$39$0=(($69)|0);
  HEAP32[(($st$39$0)>>2)]=$84$0;
  $st$40$1=(($69+4)|0);
  HEAP32[(($st$40$1)>>2)]=$84$1;
  $85=((-.0))-($81);
  $_0=$85;

  STACKTOP=sp;return (+($_0));
 } else {
  HEAP32[(($54)>>2)]=1;
  $87=((HEAP32[(($14)>>2)])|0);
  $88=((HEAP8[($49)])|0);
  $89=($88&255);
  $90=((__ZNK15b2DistanceProxy9GetVertexEi($87,$89))|0);
  $91=$90;
  $ld$41$0=(($91)|0);
  $92$0=((HEAP32[(($ld$41$0)>>2)])|0);
  $ld$42$1=(($91+4)|0);
  $92$1=((HEAP32[(($ld$42$1)>>2)])|0);
  $st$43$0=(($localPointA1)|0);
  HEAP32[(($st$43$0)>>2)]=$92$0;
  $st$44$1=(($localPointA1+4)|0);
  HEAP32[(($st$44$1)>>2)]=$92$1;
  $93=((HEAP32[(($14)>>2)])|0);
  $94=((HEAP8[($51)])|0);
  $95=($94&255);
  $96=((__ZNK15b2DistanceProxy9GetVertexEi($93,$95))|0);
  $97=$96;
  $ld$45$0=(($97)|0);
  $98$0=((HEAP32[(($ld$45$0)>>2)])|0);
  $ld$46$1=(($97+4)|0);
  $98$1=((HEAP32[(($ld$46$1)>>2)])|0);
  $st$47$0=(($localPointA25)|0);
  HEAP32[(($st$47$0)>>2)]=$98$0;
  $st$48$1=(($localPointA25+4)|0);
  HEAP32[(($st$48$1)>>2)]=$98$1;
  $99=(($this+92)|0);
  __ZmiRK6b2Vec2S1_($9,$tmpcast26,$tmpcast);
  __Z7b2CrossRK6b2Vec2f($tmpcast27,$9,1.0);
  $100=$99;
  $ld$49$0=(($8)|0);
  $101$0=((HEAP32[(($ld$49$0)>>2)])|0);
  $ld$50$1=(($8+4)|0);
  $101$1=((HEAP32[(($ld$50$1)>>2)])|0);
  $st$51$0=(($100)|0);
  HEAP32[(($st$51$0)>>2)]=$101$0;
  $st$52$1=(($100+4)|0);
  HEAP32[(($st$52$1)>>2)]=$101$1;
  $102=(+(__ZN6b2Vec29NormalizeEv($99)));
  $103=(($xfA+8)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal6,$103,$99);
  $104=(($this+84)|0);
  __ZplRK6b2Vec2S1_($11,$tmpcast,$tmpcast26);
  __ZmlfRK6b2Vec2($tmpcast28,0.5,$11);
  $105=$104;
  $ld$53$0=(($10)|0);
  $106$0=((HEAP32[(($ld$53$0)>>2)])|0);
  $ld$54$1=(($10+4)|0);
  $106$1=((HEAP32[(($ld$54$1)>>2)])|0);
  $st$55$0=(($105)|0);
  HEAP32[(($st$55$0)>>2)]=$106$0;
  $st$56$1=(($105+4)|0);
  HEAP32[(($st$56$1)>>2)]=$106$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA7,$xfA,$104);
  $107=((HEAP32[(($15)>>2)])|0);
  $108=(($cache+9)|0);
  $109=((HEAP8[($108)])|0);
  $110=($109&255);
  $111=((__ZNK15b2DistanceProxy9GetVertexEi($107,$110))|0);
  $112=$111;
  $ld$57$0=(($112)|0);
  $113$0=((HEAP32[(($ld$57$0)>>2)])|0);
  $ld$58$1=(($112+4)|0);
  $113$1=((HEAP32[(($ld$58$1)>>2)])|0);
  $st$59$0=(($localPointB8)|0);
  HEAP32[(($st$59$0)>>2)]=$113$0;
  $st$60$1=(($localPointB8+4)|0);
  HEAP32[(($st$60$1)>>2)]=$113$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB9,$xfB,$tmpcast29);
  __ZmiRK6b2Vec2S1_($12,$pointB9,$pointA7);
  $114=(+(__Z5b2DotRK6b2Vec2S1_($12,$normal6)));
  $115=$114<(0.0);
  if (!($115)) {
   $_0=$114;

   STACKTOP=sp;return (+($_0));
  }
  __ZNK6b2Vec2ngEv($tmpcast30,$99);
  $ld$61$0=(($13)|0);
  $117$0=((HEAP32[(($ld$61$0)>>2)])|0);
  $ld$62$1=(($13+4)|0);
  $117$1=((HEAP32[(($ld$62$1)>>2)])|0);
  $st$63$0=(($100)|0);
  HEAP32[(($st$63$0)>>2)]=$117$0;
  $st$64$1=(($100+4)|0);
  HEAP32[(($st$64$1)>>2)]=$117$1;
  $118=((-.0))-($114);
  $_0=$118;

  STACKTOP=sp;return (+($_0));
 }
  return .0;
}


function __ZNK20b2SeparationFunction17FindMinSeparationEPiS0_f($this,$indexA,$indexB,$t){
 $this=($this)|0;
 $indexA=($indexA)|0;
 $indexB=($indexB)|0;
 $t=+($t);
 var $xfA=0,$xfB=0,$axisA=0,$axisB=0,$1=0,$localPointA=0,$localPointB=0,$pointA=0,$pointB=0,$2=0,$normal=0,$pointA1=0,$axisB2=0,$3=0,$localPointB3=0,$pointB4=0,$4=0,$normal6=0,$pointB7=0,$axisA8=0;
 var $5=0,$localPointA9=0,$pointA10=0,$6=0,$7=0,$8=0,$9=0,$10=0,$tmpcast18=0,$tmpcast17=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0;
 var $22=0,$23=0,$24=0,$ld$0$0=0,$25$0=0,$ld$1$1=0,$25$1=0,$st$2$0=0,$st$3$1=0,$26=0,$27=0,$28=0,$29=0,$ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0,$st$7$1=0,$31=.0;
 var $tmpcast16=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$ld$8$0=0,$43$0=0,$ld$9$1=0,$43$1=0,$st$10$0=0,$st$11$1=0,$44=.0,$tmpcast=0,$46=0;
 var $47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$ld$12$0=0,$56$0=0,$ld$13$1=0,$56$1=0,$st$14$0=0,$st$15$1=0,$57=.0,$_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+208)|0;
 $xfA=((sp)|0);
 $xfB=(((sp)+(16))|0);
 $axisA=(((sp)+(32))|0);
 $axisB=(((sp)+(40))|0);
 $1=(((sp)+(48))|0);
 $localPointA=(((sp)+(56))|0);
 $localPointB=(((sp)+(64))|0);
 $pointA=(((sp)+(72))|0);
 $pointB=(((sp)+(80))|0);
 $2=(((sp)+(88))|0);
 $normal=(((sp)+(96))|0);
 $pointA1=(((sp)+(104))|0);
 $axisB2=(((sp)+(112))|0);
 $3=(((sp)+(120))|0);
 $localPointB3=(((sp)+(128))|0);
 $pointB4=(((sp)+(136))|0);
 $4=(((sp)+(144))|0);
 $normal6=(((sp)+(152))|0);
 $pointB7=(((sp)+(160))|0);
 $axisA8=(((sp)+(168))|0);
 $5=(((sp)+(176))|0);
 $localPointA9=(((sp)+(184))|0);
 $pointA10=(((sp)+(192))|0);
 $6=(((sp)+(200))|0);
 $7=(($this+8)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($7,$xfA,$t);
 $8=(($this+44)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($8,$xfB,$t);
 $9=(($this+80)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 if (((($10|0))|0)==((2)|0)) {
  $tmpcast=$localPointA9;
  $46=(($xfB+8)|0);
  $47=(($this+92)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal6,$46,$47);
  $48=(($this+84)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB7,$xfB,$48);
  $49=(($xfA+8)|0);
  __ZNK6b2Vec2ngEv($5,$normal6);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisA8,$49,$5);
  HEAP32[(($indexB)>>2)]=-1;
  $50=(($this)|0);
  $51=((HEAP32[(($50)>>2)])|0);
  $52=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($51,$axisA8))|0);
  HEAP32[(($indexA)>>2)]=$52;
  $53=((HEAP32[(($50)>>2)])|0);
  $54=((__ZNK15b2DistanceProxy9GetVertexEi($53,$52))|0);
  $55=$54;
  $ld$12$0=(($55)|0);
  $56$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($55+4)|0);
  $56$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($localPointA9)|0);
  HEAP32[(($st$14$0)>>2)]=$56$0;
  $st$15$1=(($localPointA9+4)|0);
  HEAP32[(($st$15$1)>>2)]=$56$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA10,$xfA,$tmpcast);
  __ZmiRK6b2Vec2S1_($6,$pointA10,$pointB7);
  $57=(+(__Z5b2DotRK6b2Vec2S1_($6,$normal6)));
  $_0=$57;

  STACKTOP=sp;return (+($_0));
 } else if (((($10|0))|0)==((0)|0)) {
  $tmpcast18=$localPointB;
  $tmpcast17=$localPointA;
  $12=(($xfA+8)|0);
  $13=(($this+92)|0);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisA,$12,$13);
  $14=(($xfB+8)|0);
  __ZNK6b2Vec2ngEv($1,$13);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisB,$14,$1);
  $15=(($this)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  $17=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($16,$axisA))|0);
  HEAP32[(($indexA)>>2)]=$17;
  $18=(($this+4)|0);
  $19=((HEAP32[(($18)>>2)])|0);
  $20=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($19,$axisB))|0);
  HEAP32[(($indexB)>>2)]=$20;
  $21=((HEAP32[(($15)>>2)])|0);
  $22=((HEAP32[(($indexA)>>2)])|0);
  $23=((__ZNK15b2DistanceProxy9GetVertexEi($21,$22))|0);
  $24=$23;
  $ld$0$0=(($24)|0);
  $25$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($24+4)|0);
  $25$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localPointA)|0);
  HEAP32[(($st$2$0)>>2)]=$25$0;
  $st$3$1=(($localPointA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$25$1;
  $26=((HEAP32[(($18)>>2)])|0);
  $27=((HEAP32[(($indexB)>>2)])|0);
  $28=((__ZNK15b2DistanceProxy9GetVertexEi($26,$27))|0);
  $29=$28;
  $ld$4$0=(($29)|0);
  $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($29+4)|0);
  $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localPointB)|0);
  HEAP32[(($st$6$0)>>2)]=$30$0;
  $st$7$1=(($localPointB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$30$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$tmpcast17);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$tmpcast18);
  __ZmiRK6b2Vec2S1_($2,$pointB,$pointA);
  $31=(+(__Z5b2DotRK6b2Vec2S1_($2,$13)));
  $_0=$31;

  STACKTOP=sp;return (+($_0));
 } else if (((($10|0))|0)==((1)|0)) {
  $tmpcast16=$localPointB3;
  $33=(($xfA+8)|0);
  $34=(($this+92)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal,$33,$34);
  $35=(($this+84)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA1,$xfA,$35);
  $36=(($xfB+8)|0);
  __ZNK6b2Vec2ngEv($3,$normal);
  __Z6b2MulTRK5b2RotRK6b2Vec2($axisB2,$36,$3);
  HEAP32[(($indexA)>>2)]=-1;
  $37=(($this+4)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $39=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($38,$axisB2))|0);
  HEAP32[(($indexB)>>2)]=$39;
  $40=((HEAP32[(($37)>>2)])|0);
  $41=((__ZNK15b2DistanceProxy9GetVertexEi($40,$39))|0);
  $42=$41;
  $ld$8$0=(($42)|0);
  $43$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($42+4)|0);
  $43$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($localPointB3)|0);
  HEAP32[(($st$10$0)>>2)]=$43$0;
  $st$11$1=(($localPointB3+4)|0);
  HEAP32[(($st$11$1)>>2)]=$43$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB4,$xfB,$tmpcast16);
  __ZmiRK6b2Vec2S1_($4,$pointB4,$pointA1);
  $44=(+(__Z5b2DotRK6b2Vec2S1_($4,$normal)));
  $_0=$44;

  STACKTOP=sp;return (+($_0));
 } else {
  HEAP32[(($indexA)>>2)]=-1;
  HEAP32[(($indexB)>>2)]=-1;
  $_0=0.0;

  STACKTOP=sp;return (+($_0));
 }
  return .0;
}


function __ZNK20b2SeparationFunction8EvaluateEiif($this,$indexA,$indexB,$t){
 $this=($this)|0;
 $indexA=($indexA)|0;
 $indexB=($indexB)|0;
 $t=+($t);
 var $xfA=0,$xfB=0,$localPointA=0,$localPointB=0,$pointA=0,$pointB=0,$1=0,$normal=0,$pointA1=0,$localPointB2=0,$pointB3=0,$2=0,$normal5=0,$pointB6=0,$localPointA7=0,$pointA8=0,$3=0,$4=0,$5=0,$6=0;
 var $7=0,$tmpcast10=0,$tmpcast9=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$16=0,$17=0,$ld$4$0=0,$18$0=0,$ld$5$1=0;
 var $18$1=0,$st$6$0=0,$st$7$1=0,$19=0,$20=.0,$tmpcast8=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$ld$8$0=0,$29$0=0,$ld$9$1=0,$29$1=0,$st$10$0=0,$st$11$1=0,$30=.0;
 var $tmpcast=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$ld$12$0=0,$39$0=0,$ld$13$1=0,$39$1=0,$st$14$0=0,$st$15$1=0,$40=.0,$_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+152)|0;
 $xfA=((sp)|0);
 $xfB=(((sp)+(16))|0);
 $localPointA=(((sp)+(32))|0);
 $localPointB=(((sp)+(40))|0);
 $pointA=(((sp)+(48))|0);
 $pointB=(((sp)+(56))|0);
 $1=(((sp)+(64))|0);
 $normal=(((sp)+(72))|0);
 $pointA1=(((sp)+(80))|0);
 $localPointB2=(((sp)+(88))|0);
 $pointB3=(((sp)+(96))|0);
 $2=(((sp)+(104))|0);
 $normal5=(((sp)+(112))|0);
 $pointB6=(((sp)+(120))|0);
 $localPointA7=(((sp)+(128))|0);
 $pointA8=(((sp)+(136))|0);
 $3=(((sp)+(144))|0);
 $4=(($this+8)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($4,$xfA,$t);
 $5=(($this+44)|0);
 __ZNK7b2Sweep12GetTransformEP11b2Transformf($5,$xfB,$t);
 $6=(($this+80)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 if (((($7|0))|0)==((1)|0)) {
  $tmpcast8=$localPointB2;
  $22=(($xfA+8)|0);
  $23=(($this+92)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal,$22,$23);
  $24=(($this+84)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA1,$xfA,$24);
  $25=(($this+4)|0);
  $26=((HEAP32[(($25)>>2)])|0);
  $27=((__ZNK15b2DistanceProxy9GetVertexEi($26,$indexB))|0);
  $28=$27;
  $ld$8$0=(($28)|0);
  $29$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($28+4)|0);
  $29$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($localPointB2)|0);
  HEAP32[(($st$10$0)>>2)]=$29$0;
  $st$11$1=(($localPointB2+4)|0);
  HEAP32[(($st$11$1)>>2)]=$29$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB3,$xfB,$tmpcast8);
  __ZmiRK6b2Vec2S1_($2,$pointB3,$pointA1);
  $30=(+(__Z5b2DotRK6b2Vec2S1_($2,$normal)));
  $_0=$30;

  STACKTOP=sp;return (+($_0));
 } else if (((($7|0))|0)==((2)|0)) {
  $tmpcast=$localPointA7;
  $32=(($xfB+8)|0);
  $33=(($this+92)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($normal5,$32,$33);
  $34=(($this+84)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB6,$xfB,$34);
  $35=(($this)|0);
  $36=((HEAP32[(($35)>>2)])|0);
  $37=((__ZNK15b2DistanceProxy9GetVertexEi($36,$indexA))|0);
  $38=$37;
  $ld$12$0=(($38)|0);
  $39$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($38+4)|0);
  $39$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($localPointA7)|0);
  HEAP32[(($st$14$0)>>2)]=$39$0;
  $st$15$1=(($localPointA7+4)|0);
  HEAP32[(($st$15$1)>>2)]=$39$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA8,$xfA,$tmpcast);
  __ZmiRK6b2Vec2S1_($3,$pointA8,$pointB6);
  $40=(+(__Z5b2DotRK6b2Vec2S1_($3,$normal5)));
  $_0=$40;

  STACKTOP=sp;return (+($_0));
 } else if (((($7|0))|0)==((0)|0)) {
  $tmpcast10=$localPointB;
  $tmpcast9=$localPointA;
  $9=(($this)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=((__ZNK15b2DistanceProxy9GetVertexEi($10,$indexA))|0);
  $12=$11;
  $ld$0$0=(($12)|0);
  $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($12+4)|0);
  $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localPointA)|0);
  HEAP32[(($st$2$0)>>2)]=$13$0;
  $st$3$1=(($localPointA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$13$1;
  $14=(($this+4)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=((__ZNK15b2DistanceProxy9GetVertexEi($15,$indexB))|0);
  $17=$16;
  $ld$4$0=(($17)|0);
  $18$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($17+4)|0);
  $18$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localPointB)|0);
  HEAP32[(($st$6$0)>>2)]=$18$0;
  $st$7$1=(($localPointB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$18$1;
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$tmpcast9);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$tmpcast10);
  __ZmiRK6b2Vec2S1_($1,$pointB,$pointA);
  $19=(($this+92)|0);
  $20=(+(__Z5b2DotRK6b2Vec2S1_($1,$19)));
  $_0=$20;

  STACKTOP=sp;return (+($_0));
 } else {
  $_0=0.0;

  STACKTOP=sp;return (+($_0));
 }
  return .0;
}


function __Z5b2AbsIfET_S0_($a){
 $a=+($a);
 var $1=0,$3=.0,$5=.0,label=0;

 $1=$a>(0.0);
 if ($1) {
  $5=$a;
 } else {
  $3=((-.0))-($a);
  $5=$3;
 }

 return (+($5));
}


function __Z5b2MaxIiET_S0_S0_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=($a|0)>($b|0);
 $2=($1?$a:$b);
 return (($2)|0);
}


function __ZNK15b2DistanceProxy9GetVertexEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+($index<<3))|0);
 return (($3)|0);
}


function __Z5b2MulRK5b2RotRK6b2Vec2($agg_result,$q,$v){
 $agg_result=($agg_result)|0;
 $q=($q)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=.0,$13=.0,$14=.0,label=0;

 $1=(($q+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($q)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 $12=($4)*($7);
 $13=($2)*($9);
 $14=($12)+($13);
 __ZN6b2Vec2C1Eff($agg_result,$11,$14);
 return;
}


function __Z6b2MulTRK5b2RotRK6b2Vec2($agg_result,$q,$v){
 $agg_result=($agg_result)|0;
 $q=($q)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=.0,$13=.0,$14=.0,$15=.0,label=0;

 $1=(($q+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($q)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 $12=((-.0))-($7);
 $13=($4)*($12);
 $14=($2)*($9);
 $15=($13)+($14);
 __ZN6b2Vec2C1Eff($agg_result,$11,$15);
 return;
}


function __ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($this,$d){
 $this=($this)|0;
 $d=($d)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$bestIndex_09=0,$i_08=0,$bestValue_07=.0,$9=0,$10=.0,$11=0,$bestValue_1=.0,$bestIndex_1=0,$12=0,$13=0,$bestIndex_0_lcssa=0,label=0;

 $1=(($this+20)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>1;
 if (!($3)) {
  $bestIndex_0_lcssa=0;

  return (($bestIndex_0_lcssa)|0);
 }
 $4=(($this+16)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(+(__Z5b2DotRK6b2Vec2S1_($5,$d)));
 $7=((HEAP32[(($1)>>2)])|0);
 $bestValue_07=$6;$i_08=1;$bestIndex_09=0;
 while(1) {



  $9=(($5+($i_08<<3))|0);
  $10=(+(__Z5b2DotRK6b2Vec2S1_($9,$d)));
  $11=$10>$bestValue_07;
  $bestValue_1=($11?$10:$bestValue_07);
  $bestIndex_1=($11?$i_08:$bestIndex_09);
  $12=((($i_08)+(1))|0);
  $13=($12|0)<($7|0);
  if ($13) {
   $bestValue_07=$bestValue_1;$i_08=$12;$bestIndex_09=$bestIndex_1;
  } else {
   $bestIndex_0_lcssa=$bestIndex_1;
   break;
  }
 }

 return (($bestIndex_0_lcssa)|0);
}


function __Z7b2CrossRK6b2Vec2f($agg_result,$a,$s){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $s=+($s);
 var $1=0,$2=.0,$3=.0,$4=.0,$5=0,$6=.0,$7=.0,label=0;

 $1=(($a+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($s);
 $4=((-.0))-($s);
 $5=(($a)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=($6)*($4);
 __ZN6b2Vec2C1Eff($agg_result,$3,$7);
 return;
}


function __ZplRK6b2Vec2S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)+($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)+($9);
 __ZN6b2Vec2C1Eff($agg_result,$5,$10);
 return;
}


function __ZN5b2Rot3SetEf($this,$angle){
 $this=($this)|0;
 $angle=+($angle);
 var $1=.0,$2=0,$3=.0,$4=0,label=0;

 $1=(+(Math_sin($angle)));
 $2=(($this)|0);
 HEAPF32[(($2)>>2)]=$1;
 $3=(+(Math_cos($angle)));
 $4=(($this+4)|0);
 HEAPF32[(($4)>>2)]=$3;
 return;
}


function __ZN15b2DistanceInputC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN15b2DistanceProxyC1Ev($1);
 $2=(($this+28)|0);
 __ZN15b2DistanceProxyC1Ev($2);
 return;
}


function __ZN15b2DistanceProxyC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2DistanceProxyC2Ev($this);
 return;
}


function __ZN15b2DistanceProxyC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+20)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+24)|0);
 HEAPF32[(($3)>>2)]=0.0;
 return;
}


function __ZN15b2DistanceProxy3SetEPK7b2Shapei($this,$shape,$index){
 $this=($this)|0;
 $shape=($shape)|0;
 $index=($index)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=.0,$19=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$26=0,$27=0,$ld$0$0=0,$28$0=0,$ld$1$1=0,$28$1=0,$st$2$0=0,$st$3$1=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$36=0,$37=0,$38=0,$ld$4$0=0;
 var $39$0=0,$ld$5$1=0,$39$1=0,$st$6$0=0,$st$7$1=0,$41=0,$42=0,$ld$8$0=0,$43$0=0,$ld$9$1=0,$43$1=0,$st$10$0=0,$st$11$1=0,$45=0,$46=0,$47=0,$48=.0,$49=0,$51=0,$52=0;
 var $53=0,$54=0,$55=0,$56=.0,$57=0,label=0;

 $1=((__ZNK7b2Shape7GetTypeEv($shape))|0);
 if (((($1|0))|0)==((1)|0)) {
  $51=(($shape+12)|0);
  $52=$51;
  $53=(($this+16)|0);
  HEAP32[(($53)>>2)]=$52;
  $54=(($this+20)|0);
  HEAP32[(($54)>>2)]=2;
  $55=(($shape+8)|0);
  $56=(+(HEAPF32[(($55)>>2)]));
  $57=(($this+24)|0);
  HEAPF32[(($57)>>2)]=$56;
  return;
 } else if (((($1|0))|0)==((0)|0)) {
  $3=(($shape+12)|0);
  $4=$3;
  $5=(($this+16)|0);
  HEAP32[(($5)>>2)]=$4;
  $6=(($this+20)|0);
  HEAP32[(($6)>>2)]=1;
  $7=(($shape+8)|0);
  $8=(+(HEAPF32[(($7)>>2)]));
  $9=(($this+24)|0);
  HEAPF32[(($9)>>2)]=$8;
  return;
 } else if (((($1|0))|0)==((2)|0)) {
  $11=(($shape+20)|0);
  $12=$11;
  $13=(($this+16)|0);
  HEAP32[(($13)>>2)]=$12;
  $14=(($shape+148)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=(($this+20)|0);
  HEAP32[(($16)>>2)]=$15;
  $17=(($shape+8)|0);
  $18=(+(HEAPF32[(($17)>>2)]));
  $19=(($this+24)|0);
  HEAPF32[(($19)>>2)]=$18;
  return;
 } else if (((($1|0))|0)==((3)|0)) {
  $21=(($this)|0);
  $22=(($shape+12)|0);
  $23=$22;
  $24=((HEAP32[(($23)>>2)])|0);
  $25=(($24+($index<<3))|0);
  $26=$25;
  $27=$this;
  $ld$0$0=(($26)|0);
  $28$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($26+4)|0);
  $28$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($27)|0);
  HEAP32[(($st$2$0)>>2)]=$28$0;
  $st$3$1=(($27+4)|0);
  HEAP32[(($st$3$1)>>2)]=$28$1;
  $29=((($index)+(1))|0);
  $30=(($shape+16)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($29|0)<($31|0);
  $33=(($this+8)|0);
  $34=((HEAP32[(($23)>>2)])|0);
  if ($32) {
   $36=(($34+($29<<3))|0);
   $37=$36;
   $38=$33;
   $ld$4$0=(($37)|0);
   $39$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($37+4)|0);
   $39$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($38)|0);
   HEAP32[(($st$6$0)>>2)]=$39$0;
   $st$7$1=(($38+4)|0);
   HEAP32[(($st$7$1)>>2)]=$39$1;
  } else {
   $41=$34;
   $42=$33;
   $ld$8$0=(($41)|0);
   $43$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($41+4)|0);
   $43$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($42)|0);
   HEAP32[(($st$10$0)>>2)]=$43$0;
   $st$11$1=(($42+4)|0);
   HEAP32[(($st$11$1)>>2)]=$43$1;
  }
  $45=(($this+16)|0);
  HEAP32[(($45)>>2)]=$21;
  $46=(($this+20)|0);
  HEAP32[(($46)>>2)]=2;
  $47=(($shape+8)|0);
  $48=(+(HEAPF32[(($47)>>2)]));
  $49=(($this+24)|0);
  HEAPF32[(($49)>>2)]=$48;
  return;
 } else {
  return;
 }
}


function __ZNK7b2Shape7GetTypeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2Simplex6Solve2Ev($this){
 $this=($this)|0;
 var $w1=0,$tmpcast=0,$w2=0,$tmpcast6=0,$e12=0,$1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,$4=0,$5=0,$6=0,$ld$4$0=0,$7$0=0,$ld$5$1=0,$7$1=0;
 var $st$6$0=0,$st$7$1=0,$8=.0,$9=.0,$10=0,$12=0,$13=0,$15=.0,$16=0,$18=0,$19=0,$20=0,$21=0,$23=.0,$24=.0,$25=.0,$26=0,$27=.0,$28=0,$29=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $w1=((sp)|0);
 $tmpcast=$w1;
 $w2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast6=$w2;
 $e12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($this+16)|0);
 $2=$1;
 $ld$0$0=(($2)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($w1)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($w1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 $4=(($this+36)|0);
 $5=(($this+52)|0);
 $6=$5;
 $ld$4$0=(($6)|0);
 $7$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($6+4)|0);
 $7$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($w2)|0);
 HEAP32[(($st$6$0)>>2)]=$7$0;
 $st$7$1=(($w2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$7$1;
 __ZmiRK6b2Vec2S1_($e12,$tmpcast6,$tmpcast);
 $8=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast,$e12)));
 $9=((-.0))-($8);
 $10=$8<(-.0);
 if (!($10)) {
  $12=(($this+24)|0);
  HEAPF32[(($12)>>2)]=1.0;
  $13=(($this+108)|0);
  HEAP32[(($13)>>2)]=1;
  STACKTOP=sp;return;
 }
 $15=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast6,$e12)));
 $16=$15>(0.0);
 if ($16) {
  $23=($15)-($8);
  $24=((1.0))/($23);
  $25=($15)*($24);
  $26=(($this+24)|0);
  HEAPF32[(($26)>>2)]=$25;
  $27=($24)*($9);
  $28=(($this+60)|0);
  HEAPF32[(($28)>>2)]=$27;
  $29=(($this+108)|0);
  HEAP32[(($29)>>2)]=2;
  STACKTOP=sp;return;
 } else {
  $18=(($this+60)|0);
  HEAPF32[(($18)>>2)]=1.0;
  $19=(($this+108)|0);
  HEAP32[(($19)>>2)]=1;
  $20=$this;
  $21=$4;
  (_memcpy((($20)|0), (($21)|0), 36)|0);
  STACKTOP=sp;return;
 }
}


function __ZN9b2Simplex6Solve3Ev($this){
 $this=($this)|0;
 var $w1=0,$tmpcast=0,$w2=0,$tmpcast32=0,$w3=0,$tmpcast33=0,$e12=0,$e13=0,$e23=0,$1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,$4=0,$5=0,$6=0;
 var $ld$4$0=0,$7$0=0,$ld$5$1=0,$7$1=0,$st$6$0=0,$st$7$1=0,$8=0,$9=0,$10=0,$ld$8$0=0,$11$0=0,$ld$9$1=0,$11$1=0,$st$10$0=0,$st$11$1=0,$12=.0,$13=.0,$14=.0,$15=.0,$16=.0;
 var $17=.0,$18=.0,$19=.0,$20=.0,$21=.0,$22=.0,$23=.0,$24=.0,$25=.0,$26=.0,$27=.0,$28=0,$29=0,$or_cond=0,$31=0,$32=0,$notlhs=0,$notrhs=0,$or_cond34_not=0,$34=0;
 var $or_cond35=0,$36=.0,$37=.0,$38=.0,$39=0,$40=.0,$41=0,$42=0,$notlhs42=0,$notrhs43=0,$or_cond36_not=0,$44=0,$or_cond37=0,$46=.0,$47=.0,$48=.0,$49=0,$50=.0,$51=0,$52=0;
 var $53=0,$54=0,$56=0,$57=0,$or_cond38=0,$59=0,$60=0,$61=0,$62=0,$64=0,$65=0,$or_cond39=0,$67=0,$68=0,$69=0,$70=0,$notlhs44=0,$notrhs45=0,$or_cond40_not=0,$72=0;
 var $or_cond41=0,$74=.0,$75=.0,$76=.0,$77=0,$78=.0,$79=0,$80=0,$81=0,$82=0,$84=.0,$85=.0,$86=.0,$87=.0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$93=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $w1=((sp)|0);
 $tmpcast=$w1;
 $w2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$w2;
 $w3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$w3;
 $e12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $e13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $e23=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($this+16)|0);
 $2=$1;
 $ld$0$0=(($2)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($w1)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($w1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 $4=(($this+36)|0);
 $5=(($this+52)|0);
 $6=$5;
 $ld$4$0=(($6)|0);
 $7$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($6+4)|0);
 $7$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($w2)|0);
 HEAP32[(($st$6$0)>>2)]=$7$0;
 $st$7$1=(($w2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$7$1;
 $8=(($this+72)|0);
 $9=(($this+88)|0);
 $10=$9;
 $ld$8$0=(($10)|0);
 $11$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($10+4)|0);
 $11$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($w3)|0);
 HEAP32[(($st$10$0)>>2)]=$11$0;
 $st$11$1=(($w3+4)|0);
 HEAP32[(($st$11$1)>>2)]=$11$1;
 __ZmiRK6b2Vec2S1_($e12,$tmpcast32,$tmpcast);
 $12=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast,$e12)));
 $13=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast32,$e12)));
 $14=((-.0))-($12);
 __ZmiRK6b2Vec2S1_($e13,$tmpcast33,$tmpcast);
 $15=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast,$e13)));
 $16=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast33,$e13)));
 $17=((-.0))-($15);
 __ZmiRK6b2Vec2S1_($e23,$tmpcast33,$tmpcast32);
 $18=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast32,$e23)));
 $19=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast33,$e23)));
 $20=((-.0))-($18);
 $21=(+(__Z7b2CrossRK6b2Vec2S1_($e12,$e13)));
 $22=(+(__Z7b2CrossRK6b2Vec2S1_($tmpcast32,$tmpcast33)));
 $23=($21)*($22);
 $24=(+(__Z7b2CrossRK6b2Vec2S1_($tmpcast33,$tmpcast)));
 $25=($21)*($24);
 $26=(+(__Z7b2CrossRK6b2Vec2S1_($tmpcast,$tmpcast32)));
 $27=($21)*($26);
 $28=$12<(-.0);
 $29=$15<(-.0);
 $or_cond=$28|$29;
 if (!($or_cond)) {
  $31=(($this+24)|0);
  HEAPF32[(($31)>>2)]=1.0;
  $32=(($this+108)|0);
  HEAP32[(($32)>>2)]=1;
  STACKTOP=sp;return;
 }
 $notlhs=$13<=(0.0);
 $notrhs=$12>=(-.0);
 $or_cond34_not=$notrhs|$notlhs;
 $34=$27>(0.0);
 $or_cond35=$or_cond34_not|$34;
 if (!($or_cond35)) {
  $36=($13)-($12);
  $37=((1.0))/($36);
  $38=($13)*($37);
  $39=(($this+24)|0);
  HEAPF32[(($39)>>2)]=$38;
  $40=($37)*($14);
  $41=(($this+60)|0);
  HEAPF32[(($41)>>2)]=$40;
  $42=(($this+108)|0);
  HEAP32[(($42)>>2)]=2;
  STACKTOP=sp;return;
 }
 $notlhs42=$16<=(0.0);
 $notrhs43=$15>=(-.0);
 $or_cond36_not=$notrhs43|$notlhs42;
 $44=$25>(0.0);
 $or_cond37=$or_cond36_not|$44;
 if (!($or_cond37)) {
  $46=($16)-($15);
  $47=((1.0))/($46);
  $48=($16)*($47);
  $49=(($this+24)|0);
  HEAPF32[(($49)>>2)]=$48;
  $50=($47)*($17);
  $51=(($this+96)|0);
  HEAPF32[(($51)>>2)]=$50;
  $52=(($this+108)|0);
  HEAP32[(($52)>>2)]=2;
  $53=$4;
  $54=$8;
  (_memcpy((($53)|0), (($54)|0), 36)|0);
  STACKTOP=sp;return;
 }
 $56=$13>(0.0);
 $57=$18<(-.0);
 $or_cond38=$56|$57;
 if (!($or_cond38)) {
  $59=(($this+60)|0);
  HEAPF32[(($59)>>2)]=1.0;
  $60=(($this+108)|0);
  HEAP32[(($60)>>2)]=1;
  $61=$this;
  $62=$4;
  (_memcpy((($61)|0), (($62)|0), 36)|0);
  STACKTOP=sp;return;
 }
 $64=$16>(0.0);
 $65=$19>(0.0);
 $or_cond39=$64|$65;
 if (!($or_cond39)) {
  $67=(($this+96)|0);
  HEAPF32[(($67)>>2)]=1.0;
  $68=(($this+108)|0);
  HEAP32[(($68)>>2)]=1;
  $69=$this;
  $70=$8;
  (_memcpy((($69)|0), (($70)|0), 36)|0);
  STACKTOP=sp;return;
 }
 $notlhs44=$19<=(0.0);
 $notrhs45=$18>=(-.0);
 $or_cond40_not=$notrhs45|$notlhs44;
 $72=$23>(0.0);
 $or_cond41=$or_cond40_not|$72;
 if ($or_cond41) {
  $84=($23)+($25);
  $85=($84)+($27);
  $86=((1.0))/($85);
  $87=($23)*($86);
  $88=(($this+24)|0);
  HEAPF32[(($88)>>2)]=$87;
  $89=($25)*($86);
  $90=(($this+60)|0);
  HEAPF32[(($90)>>2)]=$89;
  $91=($27)*($86);
  $92=(($this+96)|0);
  HEAPF32[(($92)>>2)]=$91;
  $93=(($this+108)|0);
  HEAP32[(($93)>>2)]=3;
  STACKTOP=sp;return;
 } else {
  $74=($19)-($18);
  $75=((1.0))/($74);
  $76=($19)*($75);
  $77=(($this+60)|0);
  HEAPF32[(($77)>>2)]=$76;
  $78=($75)*($20);
  $79=(($this+96)|0);
  HEAPF32[(($79)>>2)]=$78;
  $80=(($this+108)|0);
  HEAP32[(($80)>>2)]=2;
  $81=$this;
  $82=$8;
  (_memcpy((($81)|0), (($82)|0), 36)|0);
  STACKTOP=sp;return;
 }
}


function __Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput($output,$cache,$input){
 $output=($output)|0;
 $cache=($cache)|0;
 $input=($input)|0;
 var $transformA=0,$transformB=0,$simplex=0,$saveA=0,$saveB=0,$p=0,$d=0,$1=0,$2=0,$3=0,$tmpcast60=0,$4=0,$5=0,$tmpcast61=0,$6=0,$tmpcast62=0,$normal=0,$7=0,$8=0,$p2=0;
 var $tmpcast=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$_pr70=0,$27=0;
 var $iter_069=0,$28=0,$i_063=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$_pr=0,$41=0,$42=.0,$43=0,$45=0,$46=0,$47=0,$48=0;
 var $49=0,$50=0,$51=0,$ld$0$0=0,$52$0=0,$ld$1$1=0,$52$1=0,$st$2$0=0,$st$3$1=0,$53=0,$54=0,$55=0,$56=0,$57=0,$ld$4$0=0,$58$0=0,$ld$5$1=0,$58$1=0,$st$6$0=0,$st$7$1=0;
 var $59=0,$60=0,$ld$8$0=0,$61$0=0,$ld$9$1=0,$61$1=0,$st$10$0=0,$st$11$1=0,$62=0,$63=0,$64=0,$65=0,$66=0,$i1_064=0,$68=0,$69=0,$70=0,$72=0,$73=0,$74=0;
 var $75=0,$77=0,$78=0,$79=0,$80=0,$81=0,$iter_1=0,$82=0,$83=0,$84=0,$85=0,$86=.0,$87=0,$88=0,$89=0,$90=0,$91=0,$93=0,$94=.0,$95=0;
 var $96=.0,$97=.0,$98=.0,$99=0,$100=0,$or_cond=0,$102=.0,$103=.0,$105=0,$ld$12$0=0,$106$0=0,$ld$13$1=0,$106$1=0,$st$14$0=0,$st$15$1=0,$107=0,$ld$16$0=0,$108$0=0,$ld$17$1=0,$108$1=0;
 var $st$18$0=0,$st$19$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+216)|0;
 $transformA=((sp)|0);
 $transformB=(((sp)+(16))|0);
 $simplex=(((sp)+(32))|0);
 $saveA=(((sp)+(144))|0);
 $saveB=(((sp)+(160))|0);
 $p=(((sp)+(176))|0);
 $d=(((sp)+(184))|0);
 $1=(((sp)+(192))|0);
 $2=(((sp)+(200))|0);
 $3=(((sp)+(208))|0);
 $tmpcast60=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast61=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast62=$6;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $p2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$p2;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=((HEAP32[((8256)>>2)])|0);
 $11=((($10)+(1))|0);
 HEAP32[((8256)>>2)]=$11;
 $12=(($input)|0);
 $13=(($input+28)|0);
 $14=(($input+56)|0);
 $15=$transformA;
 $16=$14;
 HEAP32[(($15)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($15)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($15)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($15)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);
 $17=(($input+72)|0);
 $18=$transformB;
 $19=$17;
 HEAP32[(($18)>>2)]=((HEAP32[(($19)>>2)])|0);HEAP32[((($18)+(4))>>2)]=((HEAP32[((($19)+(4))>>2)])|0);HEAP32[((($18)+(8))>>2)]=((HEAP32[((($19)+(8))>>2)])|0);HEAP32[((($18)+(12))>>2)]=((HEAP32[((($19)+(12))>>2)])|0);
 __ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_($simplex,$cache,$12,$transformA,$13,$transformB);
 $20=(($simplex)|0);
 $21=$saveA;
 _memset((((($21)|0))|0), ((((0)|0))|0), ((((12)|0))|0))|0;
 $22=$saveB;
 _memset((((($22)|0))|0), ((((0)|0))|0), ((((12)|0))|0))|0;
 $23=(($simplex+108)|0);
 $24=(($transformA+8)|0);
 $25=(($transformB+8)|0);
 $_pr70=((HEAP32[(($23)>>2)])|0);
 $iter_069=0;$27=$_pr70;
 L1: while(1) {


  $28=($27|0)>0;
  if ($28) {
   $i_063=0;
   while(1) {

    $29=(($20+((($i_063)*(36))&-1)+28)|0);
    $30=((HEAP32[(($29)>>2)])|0);
    $31=(($saveA+($i_063<<2))|0);
    HEAP32[(($31)>>2)]=$30;
    $32=(($20+((($i_063)*(36))&-1)+32)|0);
    $33=((HEAP32[(($32)>>2)])|0);
    $34=(($saveB+($i_063<<2))|0);
    HEAP32[(($34)>>2)]=$33;
    $35=((($i_063)+(1))|0);
    $36=($35|0)<($27|0);
    if ($36) {
     $i_063=$35;
    } else {
     break;
    }
   }
  }
  $37=((HEAP32[(($23)>>2)])|0);
  if (((($37|0))|0)==((3)|0)) {
   __ZN9b2Simplex6Solve3Ev($simplex);
   label = 7;
  } else if (((($37|0))|0)==((2)|0)) {
   __ZN9b2Simplex6Solve2Ev($simplex);
   label = 7;
  }
  if ((label|0) == 7) {
   label = 0;
   $_pr=((HEAP32[(($23)>>2)])|0);
   $41=($_pr|0)==3;
   if ($41) {
    $iter_1=$iter_069;
    break;
   }
  }
  __ZNK9b2Simplex15GetClosestPointEv($p,$simplex);
  __ZNK9b2Simplex18GetSearchDirectionEv($d,$simplex);
  $42=(+(__ZNK6b2Vec213LengthSquaredEv($d)));
  $43=$42<(1.4210854715202004e-14);
  if ($43) {
   $iter_1=$iter_069;
   break;
  }
  $45=((HEAP32[(($23)>>2)])|0);
  $46=(($20+((($45)*(36))&-1))|0);
  __ZNK6b2Vec2ngEv($2,$d);
  __Z6b2MulTRK5b2RotRK6b2Vec2($1,$24,$2);
  $47=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($12,$1))|0);
  $48=(($20+((($45)*(36))&-1)+28)|0);
  HEAP32[(($48)>>2)]=$47;
  $49=(($46)|0);
  $50=((__ZNK15b2DistanceProxy9GetVertexEi($12,$47))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast60,$transformA,$50);
  $51=$46;
  $ld$0$0=(($3)|0);
  $52$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($3+4)|0);
  $52$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($51)|0);
  HEAP32[(($st$2$0)>>2)]=$52$0;
  $st$3$1=(($51+4)|0);
  HEAP32[(($st$3$1)>>2)]=$52$1;
  __Z6b2MulTRK5b2RotRK6b2Vec2($4,$25,$d);
  $53=((__ZNK15b2DistanceProxy10GetSupportERK6b2Vec2($13,$4))|0);
  $54=(($20+((($45)*(36))&-1)+32)|0);
  HEAP32[(($54)>>2)]=$53;
  $55=(($20+((($45)*(36))&-1)+8)|0);
  $56=((__ZNK15b2DistanceProxy9GetVertexEi($13,$53))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast61,$transformB,$56);
  $57=$55;
  $ld$4$0=(($5)|0);
  $58$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($5+4)|0);
  $58$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($57)|0);
  HEAP32[(($st$6$0)>>2)]=$58$0;
  $st$7$1=(($57+4)|0);
  HEAP32[(($st$7$1)>>2)]=$58$1;
  $59=(($20+((($45)*(36))&-1)+16)|0);
  __ZmiRK6b2Vec2S1_($tmpcast62,$55,$49);
  $60=$59;
  $ld$8$0=(($6)|0);
  $61$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($6+4)|0);
  $61$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($60)|0);
  HEAP32[(($st$10$0)>>2)]=$61$0;
  $st$11$1=(($60+4)|0);
  HEAP32[(($st$11$1)>>2)]=$61$1;
  $62=((($iter_069)+(1))|0);
  $63=((HEAP32[((8248)>>2)])|0);
  $64=((($63)+(1))|0);
  HEAP32[((8248)>>2)]=$64;
  $65=($27|0)>0;
  if ($65) {
   $66=((HEAP32[(($48)>>2)])|0);
   $i1_064=0;
   while(1) {

    $68=(($saveA+($i1_064<<2))|0);
    $69=((HEAP32[(($68)>>2)])|0);
    $70=($66|0)==($69|0);
    if ($70) {
     $72=((HEAP32[(($54)>>2)])|0);
     $73=(($saveB+($i1_064<<2))|0);
     $74=((HEAP32[(($73)>>2)])|0);
     $75=($72|0)==($74|0);
     if ($75) {
      $iter_1=$62;
      break L1;
     }
    }
    $77=((($i1_064)+(1))|0);
    $78=($77|0)<($27|0);
    if ($78) {
     $i1_064=$77;
    } else {
     break;
    }
   }
  }
  $79=((HEAP32[(($23)>>2)])|0);
  $80=((($79)+(1))|0);
  HEAP32[(($23)>>2)]=$80;
  $81=($62|0)<20;
  if ($81) {
   $iter_069=$62;$27=$80;
  } else {
   $iter_1=$62;
   break;
  }
 }

 $82=((HEAP32[((8240)>>2)])|0);
 $83=((__Z5b2MaxIiET_S0_S0_($82,$iter_1))|0);
 HEAP32[((8240)>>2)]=$83;
 $84=(($output)|0);
 $85=(($output+8)|0);
 __ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_($simplex,$84,$85);
 $86=(+(__Z10b2DistanceRK6b2Vec2S1_($84,$85)));
 $87=(($output+16)|0);
 HEAPF32[(($87)>>2)]=$86;
 $88=(($output+20)|0);
 HEAP32[(($88)>>2)]=$iter_1;
 __ZNK9b2Simplex10WriteCacheEP14b2SimplexCache($simplex,$cache);
 $89=(($input+88)|0);
 $90=((HEAP8[($89)])|0);
 $91=(($90<<24)>>24)==0;
 if ($91) {
  STACKTOP=sp;return;
 }
 $93=(($input+24)|0);
 $94=(+(HEAPF32[(($93)>>2)]));
 $95=(($input+52)|0);
 $96=(+(HEAPF32[(($95)>>2)]));
 $97=(+(HEAPF32[(($87)>>2)]));
 $98=($94)+($96);
 $99=$97>$98;
 $100=$97>(1.1920928955078125e-7);
 $or_cond=$99&$100;
 if ($or_cond) {
  $102=($97)-($98);
  HEAPF32[(($87)>>2)]=$102;
  __ZmiRK6b2Vec2S1_($normal,$85,$84);
  $103=(+(__ZN6b2Vec29NormalizeEv($normal)));
  __ZmlfRK6b2Vec2($7,$94,$normal);
  __ZN6b2Vec2pLERKS_($84,$7);
  __ZmlfRK6b2Vec2($8,$96,$normal);
  __ZN6b2Vec2mIERKS_($85,$8);
  STACKTOP=sp;return;
 } else {
  __ZplRK6b2Vec2S1_($9,$84,$85);
  __ZmlfRK6b2Vec2($tmpcast,0.5,$9);
  $105=$output;
  $ld$12$0=(($p2)|0);
  $106$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($p2+4)|0);
  $106$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($105)|0);
  HEAP32[(($st$14$0)>>2)]=$106$0;
  $st$15$1=(($105+4)|0);
  HEAP32[(($st$15$1)>>2)]=$106$1;
  $107=$85;
  $ld$16$0=(($p2)|0);
  $108$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($p2+4)|0);
  $108$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($107)|0);
  HEAP32[(($st$18$0)>>2)]=$108$0;
  $st$19$1=(($107+4)|0);
  HEAP32[(($st$19$1)>>2)]=$108$1;
  HEAPF32[(($87)>>2)]=0.0;
  STACKTOP=sp;return;
 }
}


function __ZN9b2Simplex9ReadCacheEPK14b2SimplexCachePK15b2DistanceProxyRK11b2TransformS5_S8_($this,$cache,$proxyA,$transformA,$proxyB,$transformB){
 $this=($this)|0;
 $cache=($cache)|0;
 $proxyA=($proxyA)|0;
 $transformA=($transformA)|0;
 $proxyB=($proxyB)|0;
 $transformB=($transformB)|0;
 var $wALocal=0,$tmpcast42=0,$wBLocal=0,$tmpcast43=0,$1=0,$tmpcast44=0,$2=0,$tmpcast45=0,$3=0,$tmpcast46=0,$wALocal2=0,$tmpcast=0,$wBLocal3=0,$tmpcast38=0,$4=0,$tmpcast39=0,$5=0,$tmpcast40=0,$6=0,$tmpcast41=0;
 var $7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$i_048=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$ld$0$0=0;
 var $25$0=0,$ld$1$1=0,$25$1=0,$st$2$0=0,$st$3$1=0,$26=0,$27=0,$28=0,$ld$4$0=0,$29$0=0,$ld$5$1=0,$29$1=0,$st$6$0=0,$st$7$1=0,$30=0,$31=0,$ld$8$0=0,$32$0=0,$ld$9$1=0,$32$1=0;
 var $st$10$0=0,$st$11$1=0,$33=0,$34=0,$ld$12$0=0,$35$0=0,$ld$13$1=0,$35$1=0,$st$14$0=0,$st$15$1=0,$36=0,$37=0,$ld$16$0=0,$38$0=0,$ld$17$1=0,$38$1=0,$st$18$0=0,$st$19$1=0,$39=0,$40=0;
 var $_pr=0,$41=0,$_lcssa=0,$42=0,$44=0,$45=.0,$46=.0,$47=.0,$48=0,$50=.0,$51=0,$52=0,$or_cond=0,$_pr47=0,$54=0,$56=0,$57=0,$58=0,$59=0,$ld$20$0=0;
 var $60$0=0,$ld$21$1=0,$60$1=0,$st$22$0=0,$st$23$1=0,$61=0,$62=0,$ld$24$0=0,$63$0=0,$ld$25$1=0,$63$1=0,$st$26$0=0,$st$27$1=0,$64=0,$65=0,$ld$28$0=0,$66$0=0,$ld$29$1=0,$66$1=0,$st$30$0=0;
 var $st$31$1=0,$67=0,$68=0,$ld$32$0=0,$69$0=0,$ld$33$1=0,$69$1=0,$st$34$0=0,$st$35$1=0,$70=0,$71=0,$ld$36$0=0,$72$0=0,$ld$37$1=0,$72$1=0,$st$38$0=0,$st$39$1=0,$73=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $wALocal=((sp)|0);
 $tmpcast42=$wALocal;
 $wBLocal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast43=$wBLocal;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast44=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast45=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast46=$3;
 $wALocal2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$wALocal2;
 $wBLocal3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast38=$wBLocal3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast39=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast40=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast41=$6;
 $7=(($cache+4)|0);
 $8=((HEAP16[(($7)>>1)])|0);
 $9=($8&65535);
 $10=(($this+108)|0);
 HEAP32[(($10)>>2)]=$9;
 $11=(($this)|0);
 $12=(($8<<16)>>16)==0;
 if ($12) {
  $_lcssa=$9;
 } else {
  $i_048=0;
  while(1) {

   $13=(($11+((($i_048)*(36))&-1))|0);
   $14=(($cache+6+$i_048)|0);
   $15=((HEAP8[($14)])|0);
   $16=($15&255);
   $17=(($11+((($i_048)*(36))&-1)+28)|0);
   HEAP32[(($17)>>2)]=$16;
   $18=(($cache+9+$i_048)|0);
   $19=((HEAP8[($18)])|0);
   $20=($19&255);
   $21=(($11+((($i_048)*(36))&-1)+32)|0);
   HEAP32[(($21)>>2)]=$20;
   $22=((HEAP32[(($17)>>2)])|0);
   $23=((__ZNK15b2DistanceProxy9GetVertexEi($proxyA,$22))|0);
   $24=$23;
   $ld$0$0=(($24)|0);
   $25$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($24+4)|0);
   $25$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($wALocal)|0);
   HEAP32[(($st$2$0)>>2)]=$25$0;
   $st$3$1=(($wALocal+4)|0);
   HEAP32[(($st$3$1)>>2)]=$25$1;
   $26=((HEAP32[(($21)>>2)])|0);
   $27=((__ZNK15b2DistanceProxy9GetVertexEi($proxyB,$26))|0);
   $28=$27;
   $ld$4$0=(($28)|0);
   $29$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($28+4)|0);
   $29$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($wBLocal)|0);
   HEAP32[(($st$6$0)>>2)]=$29$0;
   $st$7$1=(($wBLocal+4)|0);
   HEAP32[(($st$7$1)>>2)]=$29$1;
   $30=(($13)|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast44,$transformA,$tmpcast42);
   $31=$13;
   $ld$8$0=(($1)|0);
   $32$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($1+4)|0);
   $32$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($31)|0);
   HEAP32[(($st$10$0)>>2)]=$32$0;
   $st$11$1=(($31+4)|0);
   HEAP32[(($st$11$1)>>2)]=$32$1;
   $33=(($11+((($i_048)*(36))&-1)+8)|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast45,$transformB,$tmpcast43);
   $34=$33;
   $ld$12$0=(($2)|0);
   $35$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($2+4)|0);
   $35$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($34)|0);
   HEAP32[(($st$14$0)>>2)]=$35$0;
   $st$15$1=(($34+4)|0);
   HEAP32[(($st$15$1)>>2)]=$35$1;
   $36=(($11+((($i_048)*(36))&-1)+16)|0);
   __ZmiRK6b2Vec2S1_($tmpcast46,$33,$30);
   $37=$36;
   $ld$16$0=(($3)|0);
   $38$0=((HEAP32[(($ld$16$0)>>2)])|0);
   $ld$17$1=(($3+4)|0);
   $38$1=((HEAP32[(($ld$17$1)>>2)])|0);
   $st$18$0=(($37)|0);
   HEAP32[(($st$18$0)>>2)]=$38$0;
   $st$19$1=(($37+4)|0);
   HEAP32[(($st$19$1)>>2)]=$38$1;
   $39=(($11+((($i_048)*(36))&-1)+24)|0);
   HEAPF32[(($39)>>2)]=0.0;
   $40=((($i_048)+(1))|0);
   $_pr=((HEAP32[(($10)>>2)])|0);
   $41=($40|0)<($_pr|0);
   if ($41) {
    $i_048=$40;
   } else {
    $_lcssa=$_pr;
    break;
   }
  }
 }

 $42=($_lcssa|0)>1;
 do {
  if ($42) {
   $44=(($cache)|0);
   $45=(+(HEAPF32[(($44)>>2)]));
   $46=(+(__ZNK9b2Simplex9GetMetricEv($this)));
   $47=($45)*((0.5));
   $48=$46<$47;
   if (!($48)) {
    $50=($45)*((2.0));
    $51=$50<$46;
    $52=$46<(1.1920928955078125e-7);
    $or_cond=$51|$52;
    if (!($or_cond)) {
     label = 7;
     break;
    }
   }
   HEAP32[(($10)>>2)]=0;
  } else {
   label = 7;
  }
 } while(0);
 do {
  if ((label|0) == 7) {
   $_pr47=((HEAP32[(($10)>>2)])|0);
   $54=($_pr47|0)==0;
   if ($54) {
    break;
   }
   STACKTOP=sp;return;
  }
 } while(0);
 $56=(($this+28)|0);
 HEAP32[(($56)>>2)]=0;
 $57=(($this+32)|0);
 HEAP32[(($57)>>2)]=0;
 $58=((__ZNK15b2DistanceProxy9GetVertexEi($proxyA,0))|0);
 $59=$58;
 $ld$20$0=(($59)|0);
 $60$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($59+4)|0);
 $60$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($wALocal2)|0);
 HEAP32[(($st$22$0)>>2)]=$60$0;
 $st$23$1=(($wALocal2+4)|0);
 HEAP32[(($st$23$1)>>2)]=$60$1;
 $61=((__ZNK15b2DistanceProxy9GetVertexEi($proxyB,0))|0);
 $62=$61;
 $ld$24$0=(($62)|0);
 $63$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($62+4)|0);
 $63$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($wBLocal3)|0);
 HEAP32[(($st$26$0)>>2)]=$63$0;
 $st$27$1=(($wBLocal3+4)|0);
 HEAP32[(($st$27$1)>>2)]=$63$1;
 $64=(($this)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast39,$transformA,$tmpcast);
 $65=$this;
 $ld$28$0=(($4)|0);
 $66$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($4+4)|0);
 $66$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($65)|0);
 HEAP32[(($st$30$0)>>2)]=$66$0;
 $st$31$1=(($65+4)|0);
 HEAP32[(($st$31$1)>>2)]=$66$1;
 $67=(($this+8)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast40,$transformB,$tmpcast38);
 $68=$67;
 $ld$32$0=(($5)|0);
 $69$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($5+4)|0);
 $69$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($68)|0);
 HEAP32[(($st$34$0)>>2)]=$69$0;
 $st$35$1=(($68+4)|0);
 HEAP32[(($st$35$1)>>2)]=$69$1;
 $70=(($this+16)|0);
 __ZmiRK6b2Vec2S1_($tmpcast41,$67,$64);
 $71=$70;
 $ld$36$0=(($6)|0);
 $72$0=((HEAP32[(($ld$36$0)>>2)])|0);
 $ld$37$1=(($6+4)|0);
 $72$1=((HEAP32[(($ld$37$1)>>2)])|0);
 $st$38$0=(($71)|0);
 HEAP32[(($st$38$0)>>2)]=$72$0;
 $st$39$1=(($71+4)|0);
 HEAP32[(($st$39$1)>>2)]=$72$1;
 $73=(($this+24)|0);
 HEAPF32[(($73)>>2)]=1.0;
 HEAP32[(($10)>>2)]=1;
 STACKTOP=sp;return;
}


function __ZNK9b2Simplex15GetClosestPointEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$$etemp$0=0,$ld$1$0=0,$7$0=0,$ld$2$1=0,$7$1=0,$st$3$0=0,$st$4$1=0,$9=0,$10=0,$11=0,$ld$5$0=0,$12$0=0,$ld$6$1=0,$12$1=0,$st$7$0=0;
 var $st$8$1=0,$14=0,$15=.0,$16=0,$17=0,$18=.0,$19=0,$21=0,$$etemp$9=0,$ld$10$0=0,$22$0=0,$ld$11$1=0,$22$1=0,$st$12$0=0,$st$13$1=0,$24=0,$$etemp$14=0,$ld$15$0=0,$25$0=0,$ld$16$1=0;
 var $25$1=0,$st$17$0=0,$st$18$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(($this+108)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 if (((($4|0))|0)==((3)|0)) {
  $21=$agg_result;
  $$etemp$9=8264;
  $ld$10$0=(($$etemp$9)|0);
  $22$0=((HEAP32[(($ld$10$0)>>2)])|0);
  $ld$11$1=(($$etemp$9+4)|0);
  $22$1=((HEAP32[(($ld$11$1)>>2)])|0);
  $st$12$0=(($21)|0);
  HEAP32[(($st$12$0)>>2)]=$22$0;
  $st$13$1=(($21+4)|0);
  HEAP32[(($st$13$1)>>2)]=$22$1;
  STACKTOP=sp;return;
 } else if (((($4|0))|0)==((0)|0)) {
  $6=$agg_result;
  $$etemp$0=8264;
  $ld$1$0=(($$etemp$0)|0);
  $7$0=((HEAP32[(($ld$1$0)>>2)])|0);
  $ld$2$1=(($$etemp$0+4)|0);
  $7$1=((HEAP32[(($ld$2$1)>>2)])|0);
  $st$3$0=(($6)|0);
  HEAP32[(($st$3$0)>>2)]=$7$0;
  $st$4$1=(($6+4)|0);
  HEAP32[(($st$4$1)>>2)]=$7$1;
  STACKTOP=sp;return;
 } else if (((($4|0))|0)==((1)|0)) {
  $9=(($this+16)|0);
  $10=$9;
  $11=$agg_result;
  $ld$5$0=(($10)|0);
  $12$0=((HEAP32[(($ld$5$0)>>2)])|0);
  $ld$6$1=(($10+4)|0);
  $12$1=((HEAP32[(($ld$6$1)>>2)])|0);
  $st$7$0=(($11)|0);
  HEAP32[(($st$7$0)>>2)]=$12$0;
  $st$8$1=(($11+4)|0);
  HEAP32[(($st$8$1)>>2)]=$12$1;
  STACKTOP=sp;return;
 } else if (((($4|0))|0)==((2)|0)) {
  $14=(($this+24)|0);
  $15=(+(HEAPF32[(($14)>>2)]));
  $16=(($this+16)|0);
  __ZmlfRK6b2Vec2($1,$15,$16);
  $17=(($this+60)|0);
  $18=(+(HEAPF32[(($17)>>2)]));
  $19=(($this+52)|0);
  __ZmlfRK6b2Vec2($2,$18,$19);
  __ZplRK6b2Vec2S1_($agg_result,$1,$2);
  STACKTOP=sp;return;
 } else {
  $24=$agg_result;
  $$etemp$14=8264;
  $ld$15$0=(($$etemp$14)|0);
  $25$0=((HEAP32[(($ld$15$0)>>2)])|0);
  $ld$16$1=(($$etemp$14+4)|0);
  $25$1=((HEAP32[(($ld$16$1)>>2)])|0);
  $st$17$0=(($24)|0);
  HEAP32[(($st$17$0)>>2)]=$25$0;
  $st$18$1=(($24+4)|0);
  HEAP32[(($st$18$1)>>2)]=$25$1;
  STACKTOP=sp;return;
 }
}


function __ZNK9b2Simplex18GetSearchDirectionEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $e12=0,$1=0,$2=0,$3=0,$5=0,$7=0,$8=0,$9=.0,$10=0,$14=0,$$etemp$0=0,$ld$1$0=0,$15$0=0,$ld$2$1=0,$15$1=0,$st$3$0=0,$st$4$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $e12=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(($this+108)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 if (((($3|0))|0)==((1)|0)) {
  $5=(($this+16)|0);
  __ZNK6b2Vec2ngEv($agg_result,$5);
  STACKTOP=sp;return;
 } else if (((($3|0))|0)==((2)|0)) {
  $7=(($this+52)|0);
  $8=(($this+16)|0);
  __ZmiRK6b2Vec2S1_($e12,$7,$8);
  __ZNK6b2Vec2ngEv($1,$8);
  $9=(+(__Z7b2CrossRK6b2Vec2S1_($e12,$1)));
  $10=$9>(0.0);
  if ($10) {
   __Z7b2CrossfRK6b2Vec2($agg_result,1.0,$e12);
   STACKTOP=sp;return;
  } else {
   __Z7b2CrossRK6b2Vec2f($agg_result,$e12,1.0);
   STACKTOP=sp;return;
  }
 } else {
  $14=$agg_result;
  $$etemp$0=8264;
  $ld$1$0=(($$etemp$0)|0);
  $15$0=((HEAP32[(($ld$1$0)>>2)])|0);
  $ld$2$1=(($$etemp$0+4)|0);
  $15$1=((HEAP32[(($ld$2$1)>>2)])|0);
  $st$3$0=(($14)|0);
  HEAP32[(($st$3$0)>>2)]=$15$0;
  $st$4$1=(($14+4)|0);
  HEAP32[(($st$4$1)>>2)]=$15$1;
  STACKTOP=sp;return;
 }
}


function __ZNK9b2Simplex16GetWitnessPointsEP6b2Vec2S1_($this,$pA,$pB){
 $this=($this)|0;
 $pA=($pA)|0;
 $pB=($pB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$ld$0$0=0,$17$0=0,$ld$1$1=0,$17$1=0,$st$2$0=0;
 var $st$3$1=0,$18=0,$19=0,$20=0,$ld$4$0=0,$21$0=0,$ld$5$1=0,$21$1=0,$st$6$0=0,$st$7$1=0,$tmpcast8=0,$tmpcast=0,$23=0,$24=.0,$25=0,$26=0,$27=.0,$28=0,$29=0,$ld$8$0=0;
 var $30$0=0,$ld$9$1=0,$30$1=0,$st$10$0=0,$st$11$1=0,$31=.0,$32=0,$33=.0,$34=0,$35=0,$ld$12$0=0,$36$0=0,$ld$13$1=0,$36$1=0,$st$14$0=0,$st$15$1=0,$tmpcast9=0,$38=0,$39=.0,$40=0;
 var $41=0,$42=.0,$43=0,$44=0,$45=.0,$46=0,$47=0,$ld$16$0=0,$48$0=0,$ld$17$1=0,$48$1=0,$st$18$0=0,$st$19$1=0,$49=0,$st$20$0=0,$st$21$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+88)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(((sp)+(24))|0);
 $5=(((sp)+(32))|0);
 $6=(((sp)+(40))|0);
 $7=(((sp)+(48))|0);
 $8=(((sp)+(56))|0);
 $9=(((sp)+(64))|0);
 $10=(((sp)+(72))|0);
 $11=(((sp)+(80))|0);
 $12=(($this+108)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 if (((($13|0))|0)==((1)|0)) {
  $15=$this;
  $16=$pA;
  $ld$0$0=(($15)|0);
  $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($15+4)|0);
  $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($16)|0);
  HEAP32[(($st$2$0)>>2)]=$17$0;
  $st$3$1=(($16+4)|0);
  HEAP32[(($st$3$1)>>2)]=$17$1;
  $18=(($this+8)|0);
  $19=$18;
  $20=$pB;
  $ld$4$0=(($19)|0);
  $21$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($19+4)|0);
  $21$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($20)|0);
  HEAP32[(($st$6$0)>>2)]=$21$0;
  $st$7$1=(($20+4)|0);
  HEAP32[(($st$7$1)>>2)]=$21$1;
  STACKTOP=sp;return;
 } else if (((($13|0))|0)==((2)|0)) {
  $tmpcast8=$4;
  $tmpcast=$1;
  $23=(($this+24)|0);
  $24=(+(HEAPF32[(($23)>>2)]));
  $25=(($this)|0);
  __ZmlfRK6b2Vec2($2,$24,$25);
  $26=(($this+60)|0);
  $27=(+(HEAPF32[(($26)>>2)]));
  $28=(($this+36)|0);
  __ZmlfRK6b2Vec2($3,$27,$28);
  __ZplRK6b2Vec2S1_($tmpcast,$2,$3);
  $29=$pA;
  $ld$8$0=(($1)|0);
  $30$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($1+4)|0);
  $30$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($29)|0);
  HEAP32[(($st$10$0)>>2)]=$30$0;
  $st$11$1=(($29+4)|0);
  HEAP32[(($st$11$1)>>2)]=$30$1;
  $31=(+(HEAPF32[(($23)>>2)]));
  $32=(($this+8)|0);
  __ZmlfRK6b2Vec2($5,$31,$32);
  $33=(+(HEAPF32[(($26)>>2)]));
  $34=(($this+44)|0);
  __ZmlfRK6b2Vec2($6,$33,$34);
  __ZplRK6b2Vec2S1_($tmpcast8,$5,$6);
  $35=$pB;
  $ld$12$0=(($4)|0);
  $36$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($4+4)|0);
  $36$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($35)|0);
  HEAP32[(($st$14$0)>>2)]=$36$0;
  $st$15$1=(($35+4)|0);
  HEAP32[(($st$15$1)>>2)]=$36$1;
  STACKTOP=sp;return;
 } else if (((($13|0))|0)==((3)|0)) {
  $tmpcast9=$7;
  $38=(($this+24)|0);
  $39=(+(HEAPF32[(($38)>>2)]));
  $40=(($this)|0);
  __ZmlfRK6b2Vec2($9,$39,$40);
  $41=(($this+60)|0);
  $42=(+(HEAPF32[(($41)>>2)]));
  $43=(($this+36)|0);
  __ZmlfRK6b2Vec2($10,$42,$43);
  __ZplRK6b2Vec2S1_($8,$9,$10);
  $44=(($this+96)|0);
  $45=(+(HEAPF32[(($44)>>2)]));
  $46=(($this+72)|0);
  __ZmlfRK6b2Vec2($11,$45,$46);
  __ZplRK6b2Vec2S1_($tmpcast9,$8,$11);
  $47=$pA;
  $ld$16$0=(($7)|0);
  $48$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($7+4)|0);
  $48$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($47)|0);
  HEAP32[(($st$18$0)>>2)]=$48$0;
  $st$19$1=(($47+4)|0);
  HEAP32[(($st$19$1)>>2)]=$48$1;
  $49=$pB;
  $st$20$0=(($49)|0);
  HEAP32[(($st$20$0)>>2)]=$48$0;
  $st$21$1=(($49+4)|0);
  HEAP32[(($st$21$1)>>2)]=$48$1;
  STACKTOP=sp;return;
 } else {
  STACKTOP=sp;return;
 }
}


function __ZNK9b2Simplex10WriteCacheEP14b2SimplexCache($this,$cache){
 $this=($this)|0;
 $cache=($cache)|0;
 var $1=.0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$i_011=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $20=0,label=0;

 $1=(+(__ZNK9b2Simplex9GetMetricEv($this)));
 $2=(($cache)|0);
 HEAPF32[(($2)>>2)]=$1;
 $3=(($this+108)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4)&65535);
 $6=(($cache+4)|0);
 HEAP16[(($6)>>1)]=$5;
 $7=(($this)|0);
 $8=((HEAP32[(($3)>>2)])|0);
 $9=($8|0)>0;
 if ($9) {
  $i_011=0;
 } else {
  return;
 }
 while(1) {

  $10=(($7+((($i_011)*(36))&-1)+28)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=(($11)&255);
  $13=(($cache+6+$i_011)|0);
  HEAP8[($13)]=$12;
  $14=(($7+((($i_011)*(36))&-1)+32)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=(($15)&255);
  $17=(($cache+9+$i_011)|0);
  HEAP8[($17)]=$16;
  $18=((($i_011)+(1))|0);
  $19=((HEAP32[(($3)>>2)])|0);
  $20=($18|0)<($19|0);
  if ($20) {
   $i_011=$18;
  } else {
   break;
  }
 }
 return;
}


function __ZNK9b2Simplex9GetMetricEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=.0,$10=0,$11=0,$12=0,$13=.0,$_0=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(($this+108)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 if (((($4|0))|0)==((2)|0)) {
  $6=(($this+16)|0);
  $7=(($this+52)|0);
  $8=(+(__Z10b2DistanceRK6b2Vec2S1_($6,$7)));
  $_0=$8;

  STACKTOP=sp;return (+($_0));
 } else if (((($4|0))|0)==((3)|0)) {
  $10=(($this+52)|0);
  $11=(($this+16)|0);
  __ZmiRK6b2Vec2S1_($1,$10,$11);
  $12=(($this+88)|0);
  __ZmiRK6b2Vec2S1_($2,$12,$11);
  $13=(+(__Z7b2CrossRK6b2Vec2S1_($1,$2)));
  $_0=$13;

  STACKTOP=sp;return (+($_0));
 } else {
  $_0=0.0;

  STACKTOP=sp;return (+($_0));
 }
  return .0;
}


function __Z7b2CrossfRK6b2Vec2($agg_result,$s,$a){
 $agg_result=($agg_result)|0;
 $s=+($s);
 $a=($a)|0;
 var $1=.0,$2=0,$3=.0,$4=.0,$5=0,$6=.0,$7=.0,label=0;

 $1=((-.0))-($s);
 $2=(($a+4)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4=($3)*($1);
 $5=(($a)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=($6)*($s);
 __ZN6b2Vec2C1Eff($agg_result,$4,$7);
 return;
}


function __ZN11b2EdgeShape3SetERK6b2Vec2S2_($this,$v1,$v2){
 $this=($this)|0;
 $v1=($v1)|0;
 $v2=($v2)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,$5=0,$6=0,$7=0,$ld$4$0=0,$8$0=0,$ld$5$1=0,$8$1=0,$st$6$0=0,$st$7$1=0,$9=0,$10=0;
 var label=0;

 $1=(($this+12)|0);
 $2=$v1;
 $3=$1;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 $5=(($this+20)|0);
 $6=$v2;
 $7=$5;
 $ld$4$0=(($6)|0);
 $8$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($6+4)|0);
 $8$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($7)|0);
 HEAP32[(($st$6$0)>>2)]=$8$0;
 $st$7$1=(($7+4)|0);
 HEAP32[(($st$7$1)>>2)]=$8$1;
 $9=(($this+44)|0);
 HEAP8[($9)]=0;
 $10=(($this+45)|0);
 HEAP8[($10)]=0;
 return;
}


function __ZNK11b2EdgeShape5CloneEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,48))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;
 } else {
  $4=$1;
  __ZN11b2EdgeShapeC1Ev($4);
  $6=$4;
 }

 $7=((__ZN11b2EdgeShapeaSERKS_($6,$this))|0);
 $8=(($6)|0);
 return (($8)|0);
}


function __ZN11b2EdgeShapeaSERKS_($this,$0){
 $this=($this)|0;
 $0=($0)|0;
 var $2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0,$13=0,$ld$4$0=0,$14$0=0,$ld$5$1=0;
 var $14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=0,$18=0,$ld$8$0=0,$19$0=0,$ld$9$1=0,$19$1=0,$st$10$0=0,$st$11$1=0,$20=0,$21=0,$22=0,$23=0,$ld$12$0=0,$24$0=0,$ld$13$1=0;
 var $24$1=0,$st$14$0=0,$st$15$1=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,label=0;

 $2=(($this)|0);
 $3=(($0)|0);
 $4=((__ZN7b2ShapeaSERKS_($2,$3))|0);
 $5=(($this+12)|0);
 $6=(($0+12)|0);
 $7=$6;
 $8=$5;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($this+20)|0);
 $11=(($0+20)|0);
 $12=$11;
 $13=$10;
 $ld$4$0=(($12)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 $15=(($this+28)|0);
 $16=(($0+28)|0);
 $17=$16;
 $18=$15;
 $ld$8$0=(($17)|0);
 $19$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($17+4)|0);
 $19$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($18)|0);
 HEAP32[(($st$10$0)>>2)]=$19$0;
 $st$11$1=(($18+4)|0);
 HEAP32[(($st$11$1)>>2)]=$19$1;
 $20=(($this+36)|0);
 $21=(($0+36)|0);
 $22=$21;
 $23=$20;
 $ld$12$0=(($22)|0);
 $24$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($22+4)|0);
 $24$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($23)|0);
 HEAP32[(($st$14$0)>>2)]=$24$0;
 $st$15$1=(($23+4)|0);
 HEAP32[(($st$15$1)>>2)]=$24$1;
 $25=(($0+44)|0);
 $26=((HEAP8[($25)])|0);
 $27=(($this+44)|0);
 HEAP8[($27)]=$26;
 $28=(($0+45)|0);
 $29=((HEAP8[($28)])|0);
 $30=(($this+45)|0);
 HEAP8[($30)]=$29;
 return (($this)|0);
}


function __ZNK11b2EdgeShape13GetChildCountEv($this){
 $this=($this)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK11b2EdgeShape9TestPointERK11b2TransformRK6b2Vec2($this,$xf,$p){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 var label=0;

 return ((0)|0);
}


function __ZNK11b2EdgeShape15ComputeDistanceERK11b2TransformRK6b2Vec2PfPS3_i($this,$xf,$p,$distance,$normal,$childIndex){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 $distance=($distance)|0;
 $normal=($normal)|0;
 $childIndex=($childIndex)|0;
 var $v1=0,$v2=0,$d=0,$tmpcast12=0,$s=0,$1=0,$2=0,$tmpcast=0,$3=0,$4=0,$5=.0,$6=0,$8=.0,$9=0,$d14=0,$12=.0,$14=.0,$15=0,$17=.0,$$etemp$0=0;
 var $ld$1$0=0,$19$0=0,$ld$2$1=0,$19$1=0,$st$3$0=0,$st$4$1=0,$21=0,$ld$5$0=0,$22$0=0,$ld$6$1=0,$22$1=0,$st$7$0=0,$st$8$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $v1=((sp)|0);
 $v2=(((sp)+(8))|0);
 $d=(((sp)+(16))|0);
 $tmpcast12=$d;
 $s=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$2;
 $3=(($this+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v1,$xf,$3);
 $4=(($this+20)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v2,$xf,$4);
 __ZmiRK6b2Vec2S1_($tmpcast12,$p,$v1);
 __ZmiRK6b2Vec2S1_($s,$v2,$v1);
 $5=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast12,$s)));
 $6=$5>(0.0);
 do {
  if ($6) {
   $8=(+(__Z5b2DotRK6b2Vec2S1_($s,$s)));
   $9=$5>$8;
   if ($9) {
    $d14=$d;
    __ZmiRK6b2Vec2S1_($d14,$p,$v2);
    break;
   } else {
    $12=($5)/($8);
    __ZmlfRK6b2Vec2($1,$12,$s);
    __ZN6b2Vec2mIERKS_($tmpcast12,$1);
    break;
   }
  }
 } while(0);
 $14=(+(__ZNK6b2Vec26LengthEv($tmpcast12)));
 HEAPF32[(($distance)>>2)]=$14;
 $15=$14>(0.0);
 if ($15) {
  $17=((1.0))/($14);
  __ZmlfRK6b2Vec2($tmpcast,$17,$tmpcast12);
  $21=$normal;
  $ld$5$0=(($2)|0);
  $22$0=((HEAP32[(($ld$5$0)>>2)])|0);
  $ld$6$1=(($2+4)|0);
  $22$1=((HEAP32[(($ld$6$1)>>2)])|0);
  $st$7$0=(($21)|0);
  HEAP32[(($st$7$0)>>2)]=$22$0;
  $st$8$1=(($21+4)|0);
  HEAP32[(($st$8$1)>>2)]=$22$1;
  STACKTOP=sp;return;
 } else {
  $$etemp$0=8264;
  $ld$1$0=(($$etemp$0)|0);
  $19$0=((HEAP32[(($ld$1$0)>>2)])|0);
  $ld$2$1=(($$etemp$0+4)|0);
  $19$1=((HEAP32[(($ld$2$1)>>2)])|0);
  $st$3$0=(($2)|0);
  HEAP32[(($st$3$0)>>2)]=$19$0;
  $st$4$1=(($2+4)|0);
  HEAP32[(($st$4$1)>>2)]=$19$1;
  $21=$normal;
  $ld$5$0=(($2)|0);
  $22$0=((HEAP32[(($ld$5$0)>>2)])|0);
  $ld$6$1=(($2+4)|0);
  $22$1=((HEAP32[(($ld$6$1)>>2)])|0);
  $st$7$0=(($21)|0);
  HEAP32[(($st$7$0)>>2)]=$22$0;
  $st$8$1=(($21+4)|0);
  HEAP32[(($st$8$1)>>2)]=$22$1;
  STACKTOP=sp;return;
 }
}


function __ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this,$output,$input,$xf,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $p1=0,$1=0,$p2=0,$2=0,$d=0,$v1=0,$tmpcast=0,$v2=0,$tmpcast20=0,$e=0,$normal=0,$3=0,$q=0,$4=0,$r=0,$5=0,$6=0,$tmpcast22=0,$7=0,$8=0;
 var $tmpcast21=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$ld$0$0=0,$15$0=0,$ld$1$1=0,$15$1=0,$st$2$0=0,$st$3$1=0,$16=0,$17=0,$ld$4$0=0,$18$0=0,$ld$5$1=0,$18$1=0,$st$6$0=0;
 var $st$7$1=0,$19=0,$20=.0,$21=0,$22=.0,$23=.0,$24=.0,$25=.0,$26=.0,$27=0,$29=.0,$30=0,$32=0,$33=.0,$34=0,$36=.0,$37=0,$39=.0,$40=.0,$41=0;
 var $42=0,$or_cond=0,$44=0,$45=0,$47=0,$ld$8$0=0,$48$0=0,$ld$9$1=0,$48$1=0,$st$10$0=0,$st$11$1=0,$50=0,$ld$12$0=0,$51$0=0,$ld$13$1=0,$51$1=0,$st$14$0=0,$st$15$1=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $p1=((sp)|0);
 $1=(((sp)+(8))|0);
 $p2=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $d=(((sp)+(32))|0);
 $v1=(((sp)+(40))|0);
 $tmpcast=$v1;
 $v2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast20=$v2;
 $e=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $q=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast22=$6;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast21=$8;
 $9=(($xf+8)|0);
 $10=(($input)|0);
 $11=(($xf)|0);
 __ZmiRK6b2Vec2S1_($1,$10,$11);
 __Z6b2MulTRK5b2RotRK6b2Vec2($p1,$9,$1);
 $12=(($input+8)|0);
 __ZmiRK6b2Vec2S1_($2,$12,$11);
 __Z6b2MulTRK5b2RotRK6b2Vec2($p2,$9,$2);
 __ZmiRK6b2Vec2S1_($d,$p2,$p1);
 $13=(($this+12)|0);
 $14=$13;
 $ld$0$0=(($14)|0);
 $15$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($14+4)|0);
 $15$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($v1)|0);
 HEAP32[(($st$2$0)>>2)]=$15$0;
 $st$3$1=(($v1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$15$1;
 $16=(($this+20)|0);
 $17=$16;
 $ld$4$0=(($17)|0);
 $18$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($17+4)|0);
 $18$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($v2)|0);
 HEAP32[(($st$6$0)>>2)]=$18$0;
 $st$7$1=(($v2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$18$1;
 __ZmiRK6b2Vec2S1_($e,$tmpcast20,$tmpcast);
 $19=(($e+4)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=(($e)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=((-.0))-($22);
 __ZN6b2Vec2C1Eff($normal,$20,$23);
 $24=(+(__ZN6b2Vec29NormalizeEv($normal)));
 __ZmiRK6b2Vec2S1_($3,$tmpcast,$p1);
 $25=(+(__Z5b2DotRK6b2Vec2S1_($normal,$3)));
 $26=(+(__Z5b2DotRK6b2Vec2S1_($normal,$d)));
 $27=$26==(0.0);
 if ($27) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $29=($25)/($26);
 $30=$29<(0.0);
 if ($30) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $32=(($input+16)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 $34=$33<$29;
 if ($34) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 __ZmlfRK6b2Vec2($4,$29,$d);
 __ZplRK6b2Vec2S1_($q,$p1,$4);
 __ZmiRK6b2Vec2S1_($r,$tmpcast20,$tmpcast);
 $36=(+(__Z5b2DotRK6b2Vec2S1_($r,$r)));
 $37=$36==(0.0);
 if ($37) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 __ZmiRK6b2Vec2S1_($5,$q,$tmpcast);
 $39=(+(__Z5b2DotRK6b2Vec2S1_($5,$r)));
 $40=($39)/($36);
 $41=$40<(0.0);
 $42=$40>(1.0);
 $or_cond=$41|$42;
 if ($or_cond) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $44=(($output+8)|0);
 HEAPF32[(($44)>>2)]=$29;
 $45=$25>(0.0);
 if ($45) {
  __Z5b2MulRK5b2RotRK6b2Vec2($7,$9,$normal);
  __ZNK6b2Vec2ngEv($tmpcast22,$7);
  $47=$output;
  $ld$8$0=(($6)|0);
  $48$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($6+4)|0);
  $48$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($47)|0);
  HEAP32[(($st$10$0)>>2)]=$48$0;
  $st$11$1=(($47+4)|0);
  HEAP32[(($st$11$1)>>2)]=$48$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 } else {
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast21,$9,$normal);
  $50=$output;
  $ld$12$0=(($8)|0);
  $51$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($8+4)|0);
  $51$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($50)|0);
  HEAP32[(($st$14$0)>>2)]=$51$0;
  $st$15$1=(($50+4)|0);
  HEAP32[(($st$15$1)>>2)]=$51$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
  return 0;
}


function __ZNK11b2EdgeShape11ComputeAABBEP6b2AABBRK11b2Transformi($this,$aabb,$xf,$childIndex){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $v1=0,$v2=0,$lower=0,$upper=0,$r=0,$1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0;
 var $9=0,$10=0,$ld$4$0=0,$11$0=0,$ld$5$1=0,$11$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $v1=((sp)|0);
 $v2=(((sp)+(8))|0);
 $lower=(((sp)+(16))|0);
 $upper=(((sp)+(24))|0);
 $r=(((sp)+(32))|0);
 $1=(((sp)+(40))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($this+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v1,$xf,$3);
 $4=(($this+20)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v2,$xf,$4);
 __Z5b2MinRK6b2Vec2S1_($lower,$v1,$v2);
 __Z5b2MaxRK6b2Vec2S1_($upper,$v1,$v2);
 $5=(($this+8)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 __ZN6b2Vec2C1Eff($r,$6,$6);
 __ZmiRK6b2Vec2S1_($tmpcast,$lower,$r);
 $7=$aabb;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($aabb+8)|0);
 __ZplRK6b2Vec2S1_($tmpcast5,$upper,$r);
 $10=$9;
 $ld$4$0=(($2)|0);
 $11$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $11$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($10)|0);
 HEAP32[(($st$6$0)>>2)]=$11$0;
 $st$7$1=(($10+4)|0);
 HEAP32[(($st$7$1)>>2)]=$11$1;
 STACKTOP=sp;return;
}


function __Z5b2MinRK6b2Vec2S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(+(__Z5b2MinIfET_S0_S0_($2,$4)));
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=(+(__Z5b2MinIfET_S0_S0_($7,$9)));
 __ZN6b2Vec2C1Eff($agg_result,$5,$10);
 return;
}


function __Z5b2MaxRK6b2Vec2S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(+(__Z5b2MaxIfET_S0_S0_($2,$4)));
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=(+(__Z5b2MaxIfET_S0_S0_($7,$9)));
 __ZN6b2Vec2C1Eff($agg_result,$5,$10);
 return;
}


function __ZNK11b2EdgeShape11ComputeMassEP10b2MassDataf($this,$massData,$density){
 $this=($this)|0;
 $massData=($massData)|0;
 $density=+($density);
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($massData)|0);
 HEAPF32[(($3)>>2)]=0.0;
 $4=(($massData+4)|0);
 $5=(($this+12)|0);
 $6=(($this+20)|0);
 __ZplRK6b2Vec2S1_($2,$5,$6);
 __ZmlfRK6b2Vec2($tmpcast,0.5,$2);
 $7=$4;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($massData+12)|0);
 HEAPF32[(($9)>>2)]=0.0;
 STACKTOP=sp;return;
}


function __Z5b2MinIfET_S0_S0_($a,$b){
 $a=+($a);
 $b=+($b);
 var $1=0,$2=.0,label=0;

 $1=$a<$b;
 $2=($1?$a:$b);
 return (+($2));
}


function __ZN7b2ShapeaSERKS_($this,$0){
 $this=($this)|0;
 $0=($0)|0;
 var $2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,label=0;

 $2=(($0+4)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($this+4)|0);
 HEAP32[(($4)>>2)]=$3;
 $5=(($0+8)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+8)|0);
 HEAPF32[(($7)>>2)]=$6;
 return (($this)|0);
}


function __ZNK14b2PolygonShape5CloneEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,152))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;
 } else {
  $4=$1;
  __ZN14b2PolygonShapeC1Ev($4);
  $6=$4;
 }

 $7=((__ZN14b2PolygonShapeaSERKS_($6,$this))|0);
 $8=(($6)|0);
 return (($8)|0);
}


function __ZN14b2PolygonShapeaSERKS_($this,$0){
 $this=($this)|0;
 $0=($0)|0;
 var $2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0;
 var $17=0,$18=0,$19=0,$20=0,label=0;

 $2=(($this)|0);
 $3=(($0)|0);
 $4=((__ZN7b2ShapeaSERKS_($2,$3))|0);
 $5=(($this+12)|0);
 $6=(($0+12)|0);
 $7=$6;
 $8=$5;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($this+20)|0);
 $11=$10;
 $12=(($0+20)|0);
 $13=$12;
 (_memcpy((($11)|0), (($13)|0), 64)|0);
 $14=(($this+84)|0);
 $15=$14;
 $16=(($0+84)|0);
 $17=$16;
 (_memcpy((($15)|0), (($17)|0), 64)|0);
 $18=(($0+148)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($this+148)|0);
 HEAP32[(($20)>>2)]=$19;
 return (($this)|0);
}


function __ZN14b2PolygonShape8SetAsBoxEff($this,$hx,$hy){
 $this=($this)|0;
 $hx=+($hx);
 $hy=+($hy);
 var $1=0,$2=0,$3=.0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+148)|0);
 HEAP32[(($1)>>2)]=4;
 $2=(($this+20)|0);
 $3=((-.0))-($hx);
 $4=((-.0))-($hy);
 __ZN6b2Vec23SetEff($2,$3,$4);
 $5=(($this+28)|0);
 __ZN6b2Vec23SetEff($5,$hx,$4);
 $6=(($this+36)|0);
 __ZN6b2Vec23SetEff($6,$hx,$hy);
 $7=(($this+44)|0);
 __ZN6b2Vec23SetEff($7,$3,$hy);
 $8=(($this+84)|0);
 __ZN6b2Vec23SetEff($8,0.0,-1.0);
 $9=(($this+92)|0);
 __ZN6b2Vec23SetEff($9,1.0,0.0);
 $10=(($this+100)|0);
 __ZN6b2Vec23SetEff($10,0.0,1.0);
 $11=(($this+108)|0);
 __ZN6b2Vec23SetEff($11,-1.0,0.0);
 $12=(($this+12)|0);
 __ZN6b2Vec27SetZeroEv($12);
 return;
}


function __ZNK14b2PolygonShape13GetChildCountEv($this){
 $this=($this)|0;
 var label=0;

 return ((1)|0);
}


function __ZN14b2PolygonShape3SetEPK6b2Vec2i($this,$vertices,$count){
 $this=($this)|0;
 $vertices=($vertices)|0;
 $count=($count)|0;
 var $ps=0,$v=0,$tmpcast50=0,$hull=0,$r=0,$v3=0,$edge=0,$1=0,$tmpcast49=0,$2=0,$tmpcast=0,$3=0,$5=0,$6=0,$tempCount_069=0,$i_068=0,$7=0,$8=0,$ld$0$0=0,$9$0=0;
 var $ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$j_0=0,$11=0,$13=0,$14=.0,$15=0,$16=0,$17=0,$18=0,$19=0,$ld$4$0=0,$20$0=0,$ld$5$1=0,$20$1=0,$st$6$0=0,$st$7$1=0,$tempCount_1=0;
 var $21=0,$22=0,$23=0,$24=0,$25=.0,$26=0,$i1_063=0,$x0_062=.0,$i0_061=0,$28=0,$29=.0,$30=0,$32=0,$34=0,$35=.0,$36=0,$37=.0,$38=0,$i0_1=0,$x0_1=.0;
 var $41=0,$42=0,$m_0=0,$ih_0=0,$44=0,$j2_056=0,$ie_055=0,$45=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=.0,$54=0,$ie_1=0,$55=0,$57=.0,$58=.0;
 var $59=0,$ie_2=0,$62=0,$63=0,$ie_0_lcssa=0,$64=0,$65=0,$67=0,$68=0,$69=0,$i4_052=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$ld$8$0=0,$76$0=0,$ld$9$1=0;
 var $76$1=0,$st$10$0=0,$st$11$1=0,$77=0,$78=0,$i5_051=0,$79=0,$80=0,$_=0,$81=0,$82=0,$83=0,$84=0,$ld$12$0=0,$85$0=0,$ld$13$1=0,$85$1=0,$st$14$0=0,$st$15$1=0,$86=.0;
 var $87=0,$88=0,$89=0,$90=0,$ld$16$0=0,$91$0=0,$ld$17$1=0,$91$1=0,$st$18$0=0,$st$19$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $ps=((sp)|0);
 $v=(((sp)+(64))|0);
 $tmpcast50=$v;
 $hull=STACKTOP;STACKTOP = (STACKTOP + 32)|0;
 $r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $v3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $edge=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast49=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$2;
 $3=($count|0)<3;
 if ($3) {
  __ZN14b2PolygonShape8SetAsBoxEff($this,1.0,1.0);
  STACKTOP=sp;return;
 }
 $5=((__Z5b2MinIiET_S0_S0_($count,8))|0);
 $6=($5|0)>0;
 do {
  if ($6) {
   $i_068=0;$tempCount_069=0;
   while(1) {


    $7=(($vertices+($i_068<<3))|0);
    $8=$7;
    $ld$0$0=(($8)|0);
    $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
    $ld$1$1=(($8+4)|0);
    $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
    $st$2$0=(($v)|0);
    HEAP32[(($st$2$0)>>2)]=$9$0;
    $st$3$1=(($v+4)|0);
    HEAP32[(($st$3$1)>>2)]=$9$1;
    $j_0=0;
    while(1) {

     $11=($j_0|0)<($tempCount_069|0);
     if (!($11)) {
      label = 7;
      break;
     }
     $13=(($ps+($j_0<<3))|0);
     $14=(+(__Z17b2DistanceSquaredRK6b2Vec2S1_($tmpcast50,$13)));
     $15=$14<(0.0024999999441206455);
     $16=((($j_0)+(1))|0);
     if ($15) {
      $tempCount_1=$tempCount_069;
      break;
     } else {
      $j_0=$16;
     }
    }
    if ((label|0) == 7) {
     label = 0;
     $17=((($tempCount_069)+(1))|0);
     $18=(($ps+($tempCount_069<<3))|0);
     $19=$18;
     $ld$4$0=(($v)|0);
     $20$0=((HEAP32[(($ld$4$0)>>2)])|0);
     $ld$5$1=(($v+4)|0);
     $20$1=((HEAP32[(($ld$5$1)>>2)])|0);
     $st$6$0=(($19)|0);
     HEAP32[(($st$6$0)>>2)]=$20$0;
     $st$7$1=(($19+4)|0);
     HEAP32[(($st$7$1)>>2)]=$20$1;
     $tempCount_1=$17;
    }

    $21=((($i_068)+(1))|0);
    $22=($21|0)<($5|0);
    if ($22) {
     $i_068=$21;$tempCount_069=$tempCount_1;
    } else {
     break;
    }
   }
   $23=($tempCount_1|0)<3;
   if ($23) {
    break;
   }
   $24=(($ps)|0);
   $25=(+(HEAPF32[(($24)>>2)]));
   $i0_061=0;$x0_062=$25;$i1_063=1;
   while(1) {



    $28=(($ps+($i1_063<<3))|0);
    $29=(+(HEAPF32[(($28)>>2)]));
    $30=$29>$x0_062;
    do {
     if ($30) {
      label = 16;
     } else {
      $32=$29==$x0_062;
      if (!($32)) {
       $x0_1=$x0_062;$i0_1=$i0_061;
       break;
      }
      $34=(($ps+($i1_063<<3)+4)|0);
      $35=(+(HEAPF32[(($34)>>2)]));
      $36=(($ps+($i0_061<<3)+4)|0);
      $37=(+(HEAPF32[(($36)>>2)]));
      $38=$35<$37;
      if ($38) {
       label = 16;
      } else {
       $x0_1=$x0_062;$i0_1=$i0_061;
      }
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     $x0_1=$29;$i0_1=$i1_063;
    }


    $41=((($i1_063)+(1))|0);
    $42=($41|0)<($tempCount_1|0);
    if ($42) {
     $i0_061=$i0_1;$x0_062=$x0_1;$i1_063=$41;
    } else {
     break;
    }
   }
   $26=($tempCount_1|0)>1;
   $ih_0=$i0_1;$m_0=0;
   while(1) {


    $44=(($hull+($m_0<<2))|0);
    HEAP32[(($44)>>2)]=$ih_0;
    if ($26) {
     $ie_055=0;$j2_056=1;
     while(1) {


      $45=($ie_055|0)==($ih_0|0);
      do {
       if ($45) {
        $ie_2=$j2_056;
       } else {
        $47=(($ps+($ie_055<<3))|0);
        $48=((HEAP32[(($44)>>2)])|0);
        $49=(($ps+($48<<3))|0);
        __ZmiRK6b2Vec2S1_($r,$47,$49);
        $50=(($ps+($j2_056<<3))|0);
        $51=((HEAP32[(($44)>>2)])|0);
        $52=(($ps+($51<<3))|0);
        __ZmiRK6b2Vec2S1_($v3,$50,$52);
        $53=(+(__Z7b2CrossRK6b2Vec2S1_($r,$v3)));
        $54=$53<(0.0);
        $ie_1=($54?$j2_056:$ie_055);
        $55=$53==(0.0);
        if (!($55)) {
         $ie_2=$ie_1;
         break;
        }
        $57=(+(__ZNK6b2Vec213LengthSquaredEv($v3)));
        $58=(+(__ZNK6b2Vec213LengthSquaredEv($r)));
        $59=$57>$58;
        if (!($59)) {
         $ie_2=$ie_1;
         break;
        }
        $ie_2=$j2_056;
       }
      } while(0);

      $62=((($j2_056)+(1))|0);
      $63=($62|0)<($tempCount_1|0);
      if ($63) {
       $ie_055=$ie_2;$j2_056=$62;
      } else {
       $ie_0_lcssa=$ie_2;
       break;
      }
     }
    } else {
     $ie_0_lcssa=0;
    }

    $64=((($m_0)+(1))|0);
    $65=($ie_0_lcssa|0)==($i0_1|0);
    if ($65) {
     break;
    } else {
     $ih_0=$ie_0_lcssa;$m_0=$64;
    }
   }
   $67=(($this+148)|0);
   HEAP32[(($67)>>2)]=$64;
   $68=($64|0)>0;
   do {
    if ($68) {
     $i4_052=0;
     while(1) {

      $70=(($this+20+($i4_052<<3))|0);
      $71=(($hull+($i4_052<<2))|0);
      $72=((HEAP32[(($71)>>2)])|0);
      $73=(($ps+($72<<3))|0);
      $74=$73;
      $75=$70;
      $ld$8$0=(($74)|0);
      $76$0=((HEAP32[(($ld$8$0)>>2)])|0);
      $ld$9$1=(($74+4)|0);
      $76$1=((HEAP32[(($ld$9$1)>>2)])|0);
      $st$10$0=(($75)|0);
      HEAP32[(($st$10$0)>>2)]=$76$0;
      $st$11$1=(($75+4)|0);
      HEAP32[(($st$11$1)>>2)]=$76$1;
      $77=((($i4_052)+(1))|0);
      $78=($77|0)<($64|0);
      if ($78) {
       $i4_052=$77;
      } else {
       break;
      }
     }
     $69=($64|0)>0;
     if ($69) {
      $i5_051=0;
     } else {
      break;
     }
     while(1) {

      $79=((($i5_051)+(1))|0);
      $80=($79|0)<($64|0);
      $_=($80?$79:0);
      $81=(($this+20+($_<<3))|0);
      $82=(($this+20+($i5_051<<3))|0);
      __ZmiRK6b2Vec2S1_($edge,$81,$82);
      $83=(($this+84+($i5_051<<3))|0);
      __Z7b2CrossRK6b2Vec2f($tmpcast49,$edge,1.0);
      $84=$83;
      $ld$12$0=(($1)|0);
      $85$0=((HEAP32[(($ld$12$0)>>2)])|0);
      $ld$13$1=(($1+4)|0);
      $85$1=((HEAP32[(($ld$13$1)>>2)])|0);
      $st$14$0=(($84)|0);
      HEAP32[(($st$14$0)>>2)]=$85$0;
      $st$15$1=(($84+4)|0);
      HEAP32[(($st$15$1)>>2)]=$85$1;
      $86=(+(__ZN6b2Vec29NormalizeEv($83)));
      $87=($79|0)<($64|0);
      if ($87) {
       $i5_051=$79;
      } else {
       break;
      }
     }
    }
   } while(0);
   $88=(($this+12)|0);
   $89=(($this+20)|0);
   __ZL15ComputeCentroidPK6b2Vec2i($tmpcast,$89,$64);
   $90=$88;
   $ld$16$0=(($2)|0);
   $91$0=((HEAP32[(($ld$16$0)>>2)])|0);
   $ld$17$1=(($2+4)|0);
   $91$1=((HEAP32[(($ld$17$1)>>2)])|0);
   $st$18$0=(($90)|0);
   HEAP32[(($st$18$0)>>2)]=$91$0;
   $st$19$1=(($90+4)|0);
   HEAP32[(($st$19$1)>>2)]=$91$1;
   STACKTOP=sp;return;
  }
 } while(0);
 __ZN14b2PolygonShape8SetAsBoxEff($this,1.0,1.0);
 STACKTOP=sp;return;
}


function __Z5b2MinIiET_S0_S0_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,label=0;

 $1=($a|0)<($b|0);
 $2=($1?$a:$b);
 return (($2)|0);
}


function __Z17b2DistanceSquaredRK6b2Vec2S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $c=0,$1=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $c=((sp)|0);
 __ZmiRK6b2Vec2S1_($c,$a,$b);
 $1=(+(__Z5b2DotRK6b2Vec2S1_($c,$c)));
 STACKTOP=sp;return (+($1));
}


function __ZL15ComputeCentroidPK6b2Vec2i($agg_result,$vs,$count){
 $agg_result=($agg_result)|0;
 $vs=($vs)|0;
 $count=($count)|0;
 var $pRef=0,$tmpcast11=0,$p1=0,$tmpcast=0,$p2=0,$tmpcast12=0,$p3=0,$tmpcast13=0,$e1=0,$e2=0,$1=0,$2=0,$3=0,$4=0,$ld$0$0=0,$5$0=0,$ld$1$1=0,$5$1=0,$area_015=.0,$i_014=0;
 var $st$2$0=0,$st$3$1=0,$7=0,$8=0,$ld$4$0=0,$9$0=0,$ld$5$1=0,$9$1=0,$st$6$0=0,$st$7$1=0,$10=0,$11=0,$13=0,$15=0,$16=0,$ld$8$0=0,$17$0=0,$ld$9$1=0,$17$1=0,$st$10$0=0;
 var $st$11$1=0,$18=.0,$19=.0,$20=.0,$21=.0,$22=0,$area_0_lcssa=.0,$23=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $pRef=((sp)|0);
 $tmpcast11=$pRef;
 $p1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$p1;
 $p2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast12=$p2;
 $p3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast13=$p3;
 $e1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $e2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 __ZN6b2Vec23SetEff($agg_result,0.0,0.0);
 __ZN6b2Vec2C1Eff($tmpcast11,0.0,0.0);
 $4=($count|0)>0;
 if (!($4)) {
  $area_0_lcssa=0.0;

  $23=((1.0))/($area_0_lcssa);
  __ZN6b2Vec2mLEf($agg_result,$23);
  STACKTOP=sp;return;
 }
 $ld$0$0=(($pRef)|0);
 $5$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($pRef+4)|0);
 $5$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $i_014=0;$area_015=0.0;
 while(1) {


  $st$2$0=(($p1)|0);
  HEAP32[(($st$2$0)>>2)]=$5$0;
  $st$3$1=(($p1+4)|0);
  HEAP32[(($st$3$1)>>2)]=$5$1;
  $7=(($vs+($i_014<<3))|0);
  $8=$7;
  $ld$4$0=(($8)|0);
  $9$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($8+4)|0);
  $9$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($p2)|0);
  HEAP32[(($st$6$0)>>2)]=$9$0;
  $st$7$1=(($p2+4)|0);
  HEAP32[(($st$7$1)>>2)]=$9$1;
  $10=((($i_014)+(1))|0);
  $11=($10|0)<($count|0);
  if ($11) {
   $13=(($vs+($10<<3))|0);
   $15=$13;
  } else {
   $15=$vs;
  }

  $16=$15;
  $ld$8$0=(($16)|0);
  $17$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($16+4)|0);
  $17$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($p3)|0);
  HEAP32[(($st$10$0)>>2)]=$17$0;
  $st$11$1=(($p3+4)|0);
  HEAP32[(($st$11$1)>>2)]=$17$1;
  __ZmiRK6b2Vec2S1_($e1,$tmpcast12,$tmpcast);
  __ZmiRK6b2Vec2S1_($e2,$tmpcast13,$tmpcast);
  $18=(+(__Z7b2CrossRK6b2Vec2S1_($e1,$e2)));
  $19=($18)*((0.5));
  $20=($area_015)+($19);
  $21=($19)*((0.3333333432674408));
  __ZplRK6b2Vec2S1_($3,$tmpcast,$tmpcast12);
  __ZplRK6b2Vec2S1_($2,$3,$tmpcast13);
  __ZmlfRK6b2Vec2($1,$21,$2);
  __ZN6b2Vec2pLERKS_($agg_result,$1);
  $22=($10|0)<($count|0);
  if ($22) {
   $i_014=$10;$area_015=$20;
  } else {
   $area_0_lcssa=$20;
   break;
  }
 }

 $23=((1.0))/($area_0_lcssa);
 __ZN6b2Vec2mLEf($agg_result,$23);
 STACKTOP=sp;return;
}


function __ZNK14b2PolygonShape9TestPointERK11b2TransformRK6b2Vec2($this,$xf,$p){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 var $pLocal=0,$1=0,$2=0,$3=0,$4=0,$5=0,$i_0=0,$7=0,$8=0,$10=0,$11=0,$12=.0,$13=0,$14=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $pLocal=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(((sp)+(16))|0);
 $3=(($xf+8)|0);
 $4=(($xf)|0);
 __ZmiRK6b2Vec2S1_($1,$p,$4);
 __Z6b2MulTRK5b2RotRK6b2Vec2($pLocal,$3,$1);
 $5=(($this+148)|0);
 $i_0=0;
 while(1) {

  $7=((HEAP32[(($5)>>2)])|0);
  $8=($i_0|0)<($7|0);
  if (!($8)) {
   $_0=1;
   label = 4;
   break;
  }
  $10=(($this+84+($i_0<<3))|0);
  $11=(($this+20+($i_0<<3))|0);
  __ZmiRK6b2Vec2S1_($2,$pLocal,$11);
  $12=(+(__Z5b2DotRK6b2Vec2S1_($10,$2)));
  $13=$12>(0.0);
  $14=((($i_0)+(1))|0);
  if ($13) {
   $_0=0;
   label = 4;
   break;
  } else {
   $i_0=$14;
  }
 }
 if ((label|0) == 4) {

  STACKTOP=sp;return (($_0)|0);
 }
  return 0;
}


function __ZNK14b2PolygonShape15ComputeDistanceERK11b2TransformRK6b2Vec2PfPS3_i($this,$xf,$p,$distance,$normal,$childIndex){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 $distance=($distance)|0;
 $normal=($normal)|0;
 $childIndex=($childIndex)|0;
 var $pLocal=0,$tmpcast24=0,$1=0,$normalForMaxDistance=0,$tmpcast=0,$2=0,$minDistance=0,$tmpcast26=0,$distance2=0,$tmpcast28=0,$3=0,$tmpcast27=0,$4=0,$tmpcast25=0,$5=0,$6=0,$ld$0$0=0,$7$0=0,$ld$1$1=0,$7$1=0;
 var $st$2$0=0,$st$3$1=0,$8=0,$9=0,$10=0,$maxDistance_032=.0,$i_031=0,$11=0,$12=0,$13=.0,$14=0,$16=0,$ld$4$0=0,$17$0=0,$ld$5$1=0,$17$1=0,$st$6$0=0,$st$7$1=0,$maxDistance_1=.0,$19=0;
 var $20=0,$21=0,$22=0,$ld$8$0=0,$24$0=0,$ld$9$1=0,$24$1=0,$st$10$0=0,$st$11$1=0,$25=.0,$26=0,$27=0,$i1_030=0,$minDistance2_029=.0,$28=0,$29=.0,$30=0,$ld$12$0=0,$32$0=0,$ld$13$1=0;
 var $32$1=0,$st$14$0=0,$st$15$1=0,$minDistance2_1=.0,$34=0,$35=0,$36=0,$minDistance2_0_lcssa=.0,$37=.0,$38=0,$ld$16$0=0,$39$0=0,$ld$17$1=0,$39$1=0,$st$18$0=0,$st$19$1=0,$40=.0,$maxDistance_0_lcssa38=.0,$41=0,$ld$20$0=0;
 var $42$0=0,$ld$21$1=0,$42$1=0,$st$22$0=0,$st$23$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $pLocal=((sp)|0);
 $tmpcast24=$pLocal;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normalForMaxDistance=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$normalForMaxDistance;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $minDistance=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast26=$minDistance;
 $distance2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast28=$distance2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast27=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast25=$4;
 $5=(($xf+8)|0);
 $6=(($xf)|0);
 __ZmiRK6b2Vec2S1_($1,$p,$6);
 __Z6b2MulTRK5b2RotRK6b2Vec2($tmpcast24,$5,$1);
 $ld$0$0=(($pLocal)|0);
 $7$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($pLocal+4)|0);
 $7$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($normalForMaxDistance)|0);
 HEAP32[(($st$2$0)>>2)]=$7$0;
 $st$3$1=(($normalForMaxDistance+4)|0);
 HEAP32[(($st$3$1)>>2)]=$7$1;
 $8=(($this+148)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=($9|0)>0;
 do {
  if ($10) {
   $i_031=0;$maxDistance_032=-3.4028234663852886e+38;
   while(1) {


    $11=(($this+84+($i_031<<3))|0);
    $12=(($this+20+($i_031<<3))|0);
    __ZmiRK6b2Vec2S1_($2,$tmpcast24,$12);
    $13=(+(__Z5b2DotRK6b2Vec2S1_($11,$2)));
    $14=$13>$maxDistance_032;
    if ($14) {
     $16=$11;
     $ld$4$0=(($16)|0);
     $17$0=((HEAP32[(($ld$4$0)>>2)])|0);
     $ld$5$1=(($16+4)|0);
     $17$1=((HEAP32[(($ld$5$1)>>2)])|0);
     $st$6$0=(($normalForMaxDistance)|0);
     HEAP32[(($st$6$0)>>2)]=$17$0;
     $st$7$1=(($normalForMaxDistance+4)|0);
     HEAP32[(($st$7$1)>>2)]=$17$1;
     $maxDistance_1=$13;
    } else {
     $maxDistance_1=$maxDistance_032;
    }

    $19=((($i_031)+(1))|0);
    $20=((HEAP32[(($8)>>2)])|0);
    $21=($19|0)<($20|0);
    if ($21) {
     $i_031=$19;$maxDistance_032=$maxDistance_1;
    } else {
     break;
    }
   }
   $22=$maxDistance_1>(0.0);
   if (!($22)) {
    $maxDistance_0_lcssa38=$maxDistance_1;
    break;
   }
   $ld$8$0=(($normalForMaxDistance)|0);
   $24$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($normalForMaxDistance+4)|0);
   $24$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($minDistance)|0);
   HEAP32[(($st$10$0)>>2)]=$24$0;
   $st$11$1=(($minDistance+4)|0);
   HEAP32[(($st$11$1)>>2)]=$24$1;
   $25=($maxDistance_1)*($maxDistance_1);
   $26=((HEAP32[(($8)>>2)])|0);
   $27=($26|0)>0;
   if ($27) {
    $minDistance2_029=$25;$i1_030=0;
    while(1) {


     $28=(($this+20+($i1_030<<3))|0);
     __ZmiRK6b2Vec2S1_($tmpcast28,$tmpcast24,$28);
     $29=(+(__ZNK6b2Vec213LengthSquaredEv($tmpcast28)));
     $30=$minDistance2_029>$29;
     if ($30) {
      $ld$12$0=(($distance2)|0);
      $32$0=((HEAP32[(($ld$12$0)>>2)])|0);
      $ld$13$1=(($distance2+4)|0);
      $32$1=((HEAP32[(($ld$13$1)>>2)])|0);
      $st$14$0=(($minDistance)|0);
      HEAP32[(($st$14$0)>>2)]=$32$0;
      $st$15$1=(($minDistance+4)|0);
      HEAP32[(($st$15$1)>>2)]=$32$1;
      $minDistance2_1=$29;
     } else {
      $minDistance2_1=$minDistance2_029;
     }

     $34=((($i1_030)+(1))|0);
     $35=((HEAP32[(($8)>>2)])|0);
     $36=($34|0)<($35|0);
     if ($36) {
      $minDistance2_029=$minDistance2_1;$i1_030=$34;
     } else {
      $minDistance2_0_lcssa=$minDistance2_1;
      break;
     }
    }
   } else {
    $minDistance2_0_lcssa=$25;
   }

   $37=(+(Math_sqrt($minDistance2_0_lcssa)));
   HEAPF32[(($distance)>>2)]=$37;
   __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast27,$5,$tmpcast26);
   $38=$normal;
   $ld$16$0=(($3)|0);
   $39$0=((HEAP32[(($ld$16$0)>>2)])|0);
   $ld$17$1=(($3+4)|0);
   $39$1=((HEAP32[(($ld$17$1)>>2)])|0);
   $st$18$0=(($38)|0);
   HEAP32[(($st$18$0)>>2)]=$39$0;
   $st$19$1=(($38+4)|0);
   HEAP32[(($st$19$1)>>2)]=$39$1;
   $40=(+(__ZN6b2Vec29NormalizeEv($normal)));
   STACKTOP=sp;return;
  } else {
   $maxDistance_0_lcssa38=-3.4028234663852886e+38;
  }
 } while(0);

 HEAPF32[(($distance)>>2)]=$maxDistance_0_lcssa38;
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast25,$5,$tmpcast);
 $41=$normal;
 $ld$20$0=(($4)|0);
 $42$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($4+4)|0);
 $42$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($41)|0);
 HEAP32[(($st$22$0)>>2)]=$42$0;
 $st$23$1=(($41+4)|0);
 HEAP32[(($st$23$1)>>2)]=$42$1;
 STACKTOP=sp;return;
}


function __ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this,$output,$input,$xf,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $p1=0,$1=0,$p2=0,$2=0,$d=0,$3=0,$4=0,$tmpcast=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=.0,$11=0,$upper_0=.0,$index_0=0,$i_0=0,$lower_0=.0,$13=0;
 var $14=0,$16=0,$17=0,$18=.0,$19=.0,$20=0,$22=0,$24=0,$26=.0,$27=0,$29=.0,$31=0,$33=.0,$34=0,$36=.0,$upper_1=.0,$index_1=0,$lower_1=.0,$38=0,$39=0;
 var $41=0,$43=0,$44=0,$45=0,$ld$0$0=0,$46$0=0,$ld$1$1=0,$46$1=0,$st$2$0=0,$st$3$1=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $p1=((sp)|0);
 $1=(((sp)+(8))|0);
 $p2=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $d=(((sp)+(32))|0);
 $3=(((sp)+(40))|0);
 $4=(((sp)+(48))|0);
 $tmpcast=$4;
 $5=(($xf+8)|0);
 $6=(($input)|0);
 $7=(($xf)|0);
 __ZmiRK6b2Vec2S1_($1,$6,$7);
 __Z6b2MulTRK5b2RotRK6b2Vec2($p1,$5,$1);
 $8=(($input+8)|0);
 __ZmiRK6b2Vec2S1_($2,$8,$7);
 __Z6b2MulTRK5b2RotRK6b2Vec2($p2,$5,$2);
 __ZmiRK6b2Vec2S1_($d,$p2,$p1);
 $9=(($input+16)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=(($this+148)|0);
 $lower_0=0.0;$i_0=0;$index_0=-1;$upper_0=$10;
 L1: while(1) {




  $13=((HEAP32[(($11)>>2)])|0);
  $14=($i_0|0)<($13|0);
  if (!($14)) {
   label = 12;
   break;
  }
  $16=(($this+84+($i_0<<3))|0);
  $17=(($this+20+($i_0<<3))|0);
  __ZmiRK6b2Vec2S1_($3,$17,$p1);
  $18=(+(__Z5b2DotRK6b2Vec2S1_($16,$3)));
  $19=(+(__Z5b2DotRK6b2Vec2S1_($16,$d)));
  $20=$19==(0.0);
  L4: do {
   if ($20) {
    $22=$18<(0.0);
    if ($22) {
     $_0=0;
     label = 14;
     break L1;
    } else {
     $lower_1=$lower_0;$index_1=$index_0;$upper_1=$upper_0;
    }
   } else {
    $24=$19<(0.0);
    do {
     if ($24) {
      $26=($lower_0)*($19);
      $27=$18<$26;
      if (!($27)) {
       break;
      }
      $29=($18)/($19);
      $lower_1=$29;$index_1=$i_0;$upper_1=$upper_0;
      break L4;
     }
    } while(0);
    $31=$19>(0.0);
    if (!($31)) {
     $lower_1=$lower_0;$index_1=$index_0;$upper_1=$upper_0;
     break;
    }
    $33=($upper_0)*($19);
    $34=$18<$33;
    if (!($34)) {
     $lower_1=$lower_0;$index_1=$index_0;$upper_1=$upper_0;
     break;
    }
    $36=($18)/($19);
    $lower_1=$lower_0;$index_1=$index_0;$upper_1=$36;
   }
  } while(0);



  $38=$upper_1<$lower_1;
  $39=((($i_0)+(1))|0);
  if ($38) {
   $_0=0;
   label = 14;
   break;
  } else {
   $lower_0=$lower_1;$i_0=$39;$index_0=$index_1;$upper_0=$upper_1;
  }
 }
 if ((label|0) == 12) {
  $41=($index_0|0)>-1;
  if (!($41)) {
   $_0=0;

   STACKTOP=sp;return (($_0)|0);
  }
  $43=(($output+8)|0);
  HEAPF32[(($43)>>2)]=$lower_0;
  $44=(($this+84+($index_0<<3))|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast,$5,$44);
  $45=$output;
  $ld$0$0=(($4)|0);
  $46$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($4+4)|0);
  $46$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($45)|0);
  HEAP32[(($st$2$0)>>2)]=$46$0;
  $st$3$1=(($45+4)|0);
  HEAP32[(($st$3$1)>>2)]=$46$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 else if ((label|0) == 14) {

  STACKTOP=sp;return (($_0)|0);
 }
  return 0;
}


function __ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi($this,$aabb,$xf,$childIndex){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $lower=0,$tmpcast7=0,$upper=0,$tmpcast=0,$v=0,$1=0,$tmpcast10=0,$2=0,$tmpcast11=0,$r=0,$3=0,$tmpcast8=0,$4=0,$tmpcast9=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0;
 var $st$3$1=0,$7=0,$8=0,$9=0,$i_012=0,$10=0,$ld$4$0=0,$11$0=0,$ld$5$1=0,$11$1=0,$st$6$0=0,$st$7$1=0,$ld$8$0=0,$12$0=0,$ld$9$1=0,$12$1=0,$st$10$0=0,$st$11$1=0,$13=0,$14=0;
 var $15=0,$16=0,$17=.0,$18=0,$ld$12$0=0,$19$0=0,$ld$13$1=0,$19$1=0,$st$14$0=0,$st$15$1=0,$20=0,$21=0,$ld$16$0=0,$22$0=0,$ld$17$1=0,$22$1=0,$st$18$0=0,$st$19$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $lower=((sp)|0);
 $tmpcast7=$lower;
 $upper=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$upper;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast10=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast11=$2;
 $r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast8=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast9=$4;
 $5=(($this+20)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast7,$xf,$5);
 $ld$0$0=(($lower)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($lower+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($upper)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($upper+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 $7=(($this+148)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($8|0)>1;
 if ($9) {
  $i_012=1;
  while(1) {

   $10=(($this+20+($i_012<<3))|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($v,$xf,$10);
   __Z5b2MinRK6b2Vec2S1_($tmpcast10,$tmpcast7,$v);
   $ld$4$0=(($1)|0);
   $11$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($1+4)|0);
   $11$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($lower)|0);
   HEAP32[(($st$6$0)>>2)]=$11$0;
   $st$7$1=(($lower+4)|0);
   HEAP32[(($st$7$1)>>2)]=$11$1;
   __Z5b2MaxRK6b2Vec2S1_($tmpcast11,$tmpcast,$v);
   $ld$8$0=(($2)|0);
   $12$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($2+4)|0);
   $12$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($upper)|0);
   HEAP32[(($st$10$0)>>2)]=$12$0;
   $st$11$1=(($upper+4)|0);
   HEAP32[(($st$11$1)>>2)]=$12$1;
   $13=((($i_012)+(1))|0);
   $14=((HEAP32[(($7)>>2)])|0);
   $15=($13|0)<($14|0);
   if ($15) {
    $i_012=$13;
   } else {
    break;
   }
  }
 }
 $16=(($this+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 __ZN6b2Vec2C1Eff($r,$17,$17);
 __ZmiRK6b2Vec2S1_($tmpcast8,$tmpcast7,$r);
 $18=$aabb;
 $ld$12$0=(($3)|0);
 $19$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($3+4)|0);
 $19$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($18)|0);
 HEAP32[(($st$14$0)>>2)]=$19$0;
 $st$15$1=(($18+4)|0);
 HEAP32[(($st$15$1)>>2)]=$19$1;
 $20=(($aabb+8)|0);
 __ZplRK6b2Vec2S1_($tmpcast9,$tmpcast,$r);
 $21=$20;
 $ld$16$0=(($4)|0);
 $22$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($4+4)|0);
 $22$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($21)|0);
 HEAP32[(($st$18$0)>>2)]=$22$0;
 $st$19$1=(($21+4)|0);
 HEAP32[(($st$19$1)>>2)]=$22$1;
 STACKTOP=sp;return;
}


function __ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf($this,$massData,$density){
 $this=($this)|0;
 $massData=($massData)|0;
 $density=+($density);
 var $center=0,$s=0,$e1=0,$e2=0,$1=0,$2=0,$3=0,$tmpcast=0,$4=0,$5=0,$6=0,$i_034=0,$7=0,$8=0,$9=0,$10=0,$_lcssa33=0,$11=.0,$12=.0,$13=0;
 var $14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$area_031=.0,$I_030=.0,$i1_029=0,$21=0,$22=0,$23=0,$24=0,$26=0,$29=.0,$30=.0,$31=.0,$32=.0,$33=.0,$34=.0;
 var $35=.0,$36=.0,$37=.0,$38=.0,$39=.0,$40=.0,$41=.0,$42=.0,$43=.0,$44=.0,$45=.0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=0,$area_0_lcssa=.0,$I_0_lcssa=.0;
 var $53=.0,$54=0,$55=.0,$56=0,$57=0,$ld$0$0=0,$58$0=0,$ld$1$1=0,$58$1=0,$st$2$0=0,$st$3$1=0,$59=.0,$60=0,$61=.0,$62=.0,$63=.0,$64=.0,$65=.0,$66=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $center=((sp)|0);
 $s=(((sp)+(8))|0);
 $e1=(((sp)+(16))|0);
 $e2=(((sp)+(24))|0);
 $1=(((sp)+(32))|0);
 $2=(((sp)+(40))|0);
 $3=(((sp)+(48))|0);
 $tmpcast=$3;
 __ZN6b2Vec23SetEff($center,0.0,0.0);
 __ZN6b2Vec2C1Eff($s,0.0,0.0);
 $4=(($this+148)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($5|0)>0;
 if ($6) {
  $i_034=0;
  while(1) {

   $7=(($this+20+($i_034<<3))|0);
   __ZN6b2Vec2pLERKS_($s,$7);
   $8=((($i_034)+(1))|0);
   $9=((HEAP32[(($4)>>2)])|0);
   $10=($8|0)<($9|0);
   if ($10) {
    $i_034=$8;
   } else {
    $_lcssa33=$9;
    break;
   }
  }
 } else {
  $_lcssa33=$5;
 }

 $11=(+((($_lcssa33|0))|0));
 $12=((1.0))/($11);
 __ZN6b2Vec2mLEf($s,$12);
 $13=((HEAP32[(($4)>>2)])|0);
 $14=($13|0)>0;
 if ($14) {
  $15=(($e1)|0);
  $16=(($e1+4)|0);
  $17=(($e2)|0);
  $18=(($e2+4)|0);
  $19=(($this+20)|0);
  $i1_029=0;$I_030=0.0;$area_031=0.0;
  while(1) {



   $21=(($this+20+($i1_029<<3))|0);
   __ZmiRK6b2Vec2S1_($e1,$21,$s);
   $22=((($i1_029)+(1))|0);
   $23=((HEAP32[(($4)>>2)])|0);
   $24=($22|0)<($23|0);
   if ($24) {
    $26=(($this+20+($22<<3))|0);
    __ZmiRK6b2Vec2S1_($e2,$26,$s);
   } else {
    __ZmiRK6b2Vec2S1_($e2,$19,$s);
   }
   $29=(+(__Z7b2CrossRK6b2Vec2S1_($e1,$e2)));
   $30=($29)*((0.5));
   $31=($area_031)+($30);
   $32=($30)*((0.3333333432674408));
   __ZplRK6b2Vec2S1_($2,$e1,$e2);
   __ZmlfRK6b2Vec2($1,$32,$2);
   __ZN6b2Vec2pLERKS_($center,$1);
   $33=(+(HEAPF32[(($15)>>2)]));
   $34=(+(HEAPF32[(($16)>>2)]));
   $35=(+(HEAPF32[(($17)>>2)]));
   $36=(+(HEAPF32[(($18)>>2)]));
   $37=($33)*($33);
   $38=($33)*($35);
   $39=($37)+($38);
   $40=($35)*($35);
   $41=($40)+($39);
   $42=($34)*($34);
   $43=($34)*($36);
   $44=($42)+($43);
   $45=($36)*($36);
   $46=($45)+($44);
   $47=($29)*((0.0833333358168602));
   $48=($41)+($46);
   $49=($47)*($48);
   $50=($I_030)+($49);
   $51=((HEAP32[(($4)>>2)])|0);
   $52=($22|0)<($51|0);
   if ($52) {
    $i1_029=$22;$I_030=$50;$area_031=$31;
   } else {
    $I_0_lcssa=$50;$area_0_lcssa=$31;
    break;
   }
  }
 } else {
  $I_0_lcssa=0.0;$area_0_lcssa=0.0;
 }


 $53=($area_0_lcssa)*($density);
 $54=(($massData)|0);
 HEAPF32[(($54)>>2)]=$53;
 $55=((1.0))/($area_0_lcssa);
 __ZN6b2Vec2mLEf($center,$55);
 $56=(($massData+4)|0);
 __ZplRK6b2Vec2S1_($tmpcast,$center,$s);
 $57=$56;
 $ld$0$0=(($3)|0);
 $58$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($3+4)|0);
 $58$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($57)|0);
 HEAP32[(($st$2$0)>>2)]=$58$0;
 $st$3$1=(($57+4)|0);
 HEAP32[(($st$3$1)>>2)]=$58$1;
 $59=($I_0_lcssa)*($density);
 $60=(($massData+12)|0);
 HEAPF32[(($60)>>2)]=$59;
 $61=(+(HEAPF32[(($54)>>2)]));
 $62=(+(__Z5b2DotRK6b2Vec2S1_($56,$56)));
 $63=(+(__Z5b2DotRK6b2Vec2S1_($center,$center)));
 $64=($62)-($63);
 $65=($61)*($64);
 $66=($59)+($65);
 HEAPF32[(($60)>>2)]=$66;
 STACKTOP=sp;return;
}


function __ZNK13b2CircleShape5CloneEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,20))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;
 } else {
  $4=$1;
  __ZN13b2CircleShapeC1Ev($4);
  $6=$4;
 }

 $7=((__ZN13b2CircleShapeaSERKS_($6,$this))|0);
 $8=(($6)|0);
 return (($8)|0);
}


function __ZN13b2CircleShapeaSERKS_($this,$0){
 $this=($this)|0;
 $0=($0)|0;
 var $2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $2=(($this)|0);
 $3=(($0)|0);
 $4=((__ZN7b2ShapeaSERKS_($2,$3))|0);
 $5=(($this+12)|0);
 $6=(($0+12)|0);
 $7=$6;
 $8=$5;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 return (($this)|0);
}


function __ZNK13b2CircleShape13GetChildCountEv($this){
 $this=($this)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK13b2CircleShape9TestPointERK11b2TransformRK6b2Vec2($this,$transform,$p){
 $this=($this)|0;
 $transform=($transform)|0;
 $p=($p)|0;
 var $center=0,$1=0,$d=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=.0,$8=.0,$9=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $center=((sp)|0);
 $1=(((sp)+(8))|0);
 $d=(((sp)+(16))|0);
 $2=(($transform)|0);
 $3=(($transform+8)|0);
 $4=(($this+12)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$3,$4);
 __ZplRK6b2Vec2S1_($center,$2,$1);
 __ZmiRK6b2Vec2S1_($d,$p,$center);
 $5=(+(__Z5b2DotRK6b2Vec2S1_($d,$d)));
 $6=(($this+8)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=($7)*($7);
 $9=$5<=$8;
 STACKTOP=sp;return (($9)|0);
}


function __ZNK13b2CircleShape15ComputeDistanceERK11b2TransformRK6b2Vec2PfPS3_i($this,$transform,$p,$distance,$normal,$childIndex){
 $this=($this)|0;
 $transform=($transform)|0;
 $p=($p)|0;
 $distance=($distance)|0;
 $normal=($normal)|0;
 $childIndex=($childIndex)|0;
 var $center=0,$1=0,$d=0,$2=0,$tmpcast=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$st$2$0=0,$st$3$1=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $center=((sp)|0);
 $1=(((sp)+(8))|0);
 $d=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $tmpcast=$2;
 $3=(($transform)|0);
 $4=(($transform+8)|0);
 $5=(($this+12)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$4,$5);
 __ZplRK6b2Vec2S1_($center,$3,$1);
 __ZmiRK6b2Vec2S1_($d,$p,$center);
 $6=(+(__ZNK6b2Vec26LengthEv($d)));
 $7=(($this+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($6)-($8);
 HEAPF32[(($distance)>>2)]=$9;
 $10=((1.0))/($6);
 __ZmlfRK6b2Vec2($tmpcast,$10,$d);
 $11=$normal;
 $ld$0$0=(($2)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($11)|0);
 HEAP32[(($st$2$0)>>2)]=$12$0;
 $st$3$1=(($11+4)|0);
 HEAP32[(($st$3$1)>>2)]=$12$1;
 STACKTOP=sp;return;
}


function __ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this,$output,$input,$transform,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $transform=($transform)|0;
 $childIndex=($childIndex)|0;
 var $position=0,$1=0,$s=0,$r=0,$2=0,$tmpcast=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=.0,$12=.0,$13=0,$14=.0,$15=.0,$16=.0;
 var $17=.0,$18=.0,$19=0,$20=0,$or_cond=0,$22=.0,$23=.0,$24=.0,$25=0,$27=0,$28=.0,$29=.0,$30=0,$32=.0,$33=0,$34=0,$35=0,$ld$0$0=0,$36$0=0,$ld$1$1=0;
 var $36$1=0,$st$2$0=0,$st$3$1=0,$37=.0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $position=((sp)|0);
 $1=(((sp)+(8))|0);
 $s=(((sp)+(16))|0);
 $r=(((sp)+(24))|0);
 $2=(((sp)+(32))|0);
 $tmpcast=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($transform)|0);
 $5=(($transform+8)|0);
 $6=(($this+12)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$5,$6);
 __ZplRK6b2Vec2S1_($position,$4,$1);
 $7=(($input)|0);
 __ZmiRK6b2Vec2S1_($s,$7,$position);
 $8=(+(__Z5b2DotRK6b2Vec2S1_($s,$s)));
 $9=(($this+8)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=($10)*($10);
 $12=($8)-($11);
 $13=(($input+8)|0);
 __ZmiRK6b2Vec2S1_($r,$13,$7);
 $14=(+(__Z5b2DotRK6b2Vec2S1_($s,$r)));
 $15=(+(__Z5b2DotRK6b2Vec2S1_($r,$r)));
 $16=($14)*($14);
 $17=($12)*($15);
 $18=($16)-($17);
 $19=$18<(0.0);
 $20=$15<(1.1920928955078125e-7);
 $or_cond=$19|$20;
 if ($or_cond) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $22=(+(Math_sqrt($18)));
 $23=($14)+($22);
 $24=((-.0))-($23);
 $25=$23>(-.0);
 if ($25) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $27=(($input+16)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=($15)*($28);
 $30=$29<$24;
 if ($30) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $32=($24)/($15);
 $33=(($output+8)|0);
 HEAPF32[(($33)>>2)]=$32;
 $34=(($output)|0);
 __ZmlfRK6b2Vec2($3,$32,$r);
 __ZplRK6b2Vec2S1_($tmpcast,$s,$3);
 $35=$output;
 $ld$0$0=(($2)|0);
 $36$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $36$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($35)|0);
 HEAP32[(($st$2$0)>>2)]=$36$0;
 $st$3$1=(($35+4)|0);
 HEAP32[(($st$3$1)>>2)]=$36$1;
 $37=(+(__ZN6b2Vec29NormalizeEv($34)));
 $_0=1;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK13b2CircleShape11ComputeAABBEP6b2AABBRK11b2Transformi($this,$aabb,$transform,$childIndex){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $transform=($transform)|0;
 $childIndex=($childIndex)|0;
 var $p=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=.0,$14=0,$15=.0,$16=.0,$17=.0,$18=.0,$19=.0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $p=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(($transform)|0);
 $3=(($transform+8)|0);
 $4=(($this+12)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$3,$4);
 __ZplRK6b2Vec2S1_($p,$2,$1);
 $5=(($aabb)|0);
 $6=(($p)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+8)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 $11=(($p+4)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=($12)-($9);
 __ZN6b2Vec23SetEff($5,$10,$13);
 $14=(($aabb+8)|0);
 $15=(+(HEAPF32[(($6)>>2)]));
 $16=(+(HEAPF32[(($8)>>2)]));
 $17=($15)+($16);
 $18=(+(HEAPF32[(($11)>>2)]));
 $19=($16)+($18);
 __ZN6b2Vec23SetEff($14,$17,$19);
 STACKTOP=sp;return;
}


function __ZNK13b2CircleShape11ComputeMassEP10b2MassDataf($this,$massData,$density){
 $this=($this)|0;
 $massData=($massData)|0;
 $density=+($density);
 var $1=.0,$2=0,$3=.0,$4=.0,$5=.0,$6=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=.0,$13=.0,$14=.0,$15=.0;
 var $16=.0,$17=.0,$18=.0,$19=0,label=0;

 $1=($density)*((3.1415927410125732));
 $2=(($this+8)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4=($1)*($3);
 $5=($3)*($4);
 $6=(($massData)|0);
 HEAPF32[(($6)>>2)]=$5;
 $7=(($massData+4)|0);
 $8=(($this+12)|0);
 $9=$8;
 $10=$7;
 $ld$0$0=(($9)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($9+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($10)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($10+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=(+(HEAPF32[(($6)>>2)]));
 $13=(+(HEAPF32[(($2)>>2)]));
 $14=($13)*((0.5));
 $15=($13)*($14);
 $16=(+(__Z5b2DotRK6b2Vec2S1_($8,$8)));
 $17=($16)+($15);
 $18=($12)*($17);
 $19=(($massData+12)|0);
 HEAPF32[(($19)>>2)]=$18;
 return;
}


function __ZN12b2ChainShapeD0Ev($this){
 $this=($this)|0;
 var $2=0,$5=0,$4$0=0,$4$1=0,label=0;

 __ZN12b2ChainShapeD2Ev($this);
 $2=$this;
 __ZdlPv($2);
 return;
}


function __ZN12b2ChainShapeD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=5744;
 $2=(($this+12)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=$3;
 __Z6b2FreePv($4);
 HEAP32[(($2)>>2)]=0;
 $5=(($this+16)|0);
 HEAP32[(($5)>>2)]=0;
 return;
}


function __ZN12b2ChainShape11CreateChainEPK6b2Vec2i($this,$vertices,$count){
 $this=($this)|0;
 $vertices=($vertices)|0;
 $count=($count)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+16)|0);
 HEAP32[(($1)>>2)]=$count;
 $2=$count<<3;
 $3=((__Z7b2Alloci($2))|0);
 $4=$3;
 $5=(($this+12)|0);
 HEAP32[(($5)>>2)]=$4;
 $6=$vertices;
 $7=((HEAP32[(($1)>>2)])|0);
 $8=$7<<3;
 (_memcpy((($3)|0), (($6)|0), $8)|0);
 $9=(($this+36)|0);
 HEAP8[($9)]=0;
 $10=(($this+37)|0);
 HEAP8[($10)]=0;
 $11=(($this+20)|0);
 __ZN6b2Vec27SetZeroEv($11);
 $12=(($this+28)|0);
 __ZN6b2Vec27SetZeroEv($12);
 return;
}


function __ZNK12b2ChainShape5CloneEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$ld$0$0=0,$15$0=0,$ld$1$1=0,$15$1=0,$st$2$0=0,$st$3$1=0,$16=0,$17=0;
 var $18=0,$19=0,$ld$4$0=0,$20$0=0,$ld$5$1=0,$20$1=0,$st$6$0=0,$st$7$1=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,40))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;
 } else {
  $4=$1;
  __ZN12b2ChainShapeC1Ev($4);
  $6=$4;
 }

 $7=(($this+12)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($this+16)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 __ZN12b2ChainShape11CreateChainEPK6b2Vec2i($6,$8,$10);
 $11=(($6+20)|0);
 $12=(($this+20)|0);
 $13=$12;
 $14=$11;
 $ld$0$0=(($13)|0);
 $15$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $15$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($14)|0);
 HEAP32[(($st$2$0)>>2)]=$15$0;
 $st$3$1=(($14+4)|0);
 HEAP32[(($st$3$1)>>2)]=$15$1;
 $16=(($6+28)|0);
 $17=(($this+28)|0);
 $18=$17;
 $19=$16;
 $ld$4$0=(($18)|0);
 $20$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($18+4)|0);
 $20$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($19)|0);
 HEAP32[(($st$6$0)>>2)]=$20$0;
 $st$7$1=(($19+4)|0);
 HEAP32[(($st$7$1)>>2)]=$20$1;
 $21=(($this+36)|0);
 $22=((HEAP8[($21)])|0);
 $23=(($6+36)|0);
 HEAP8[($23)]=$22;
 $24=(($this+37)|0);
 $25=((HEAP8[($24)])|0);
 $26=(($6+37)|0);
 HEAP8[($26)]=$25;
 $27=(($6)|0);
 return (($27)|0);
}


function __ZNK12b2ChainShape13GetChildCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)-(1))|0);
 return (($3)|0);
}


function __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($this,$edge,$index){
 $this=($this)|0;
 $edge=($edge)|0;
 $index=($index)|0;
 var $1=0,$2=0,$3=.0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=0,$13=0,$14=0,$15=0;
 var $16=0,$17=0,$ld$4$0=0,$18$0=0,$ld$5$1=0,$18$1=0,$st$6$0=0,$st$7$1=0,$19=0,$20=0,$22=0,$23=0,$24=0,$25=0,$26=0,$ld$8$0=0,$27$0=0,$ld$9$1=0,$27$1=0,$st$10$0=0;
 var $st$11$1=0,$28=0,$30=0,$31=0,$32=0,$ld$12$0=0,$33$0=0,$ld$13$1=0,$33$1=0,$st$14$0=0,$st$15$1=0,$34=0,$35=0,$36=0,$38=0,$39=0,$40=0,$41=0,$42=0,$44=0;
 var $45=0,$46=0,$47=0,$48=0,$ld$16$0=0,$49$0=0,$ld$17$1=0,$49$1=0,$st$18$0=0,$st$19$1=0,$50=0,$52=0,$53=0,$54=0,$ld$20$0=0,$55$0=0,$ld$21$1=0,$55$1=0,$st$22$0=0,$st$23$1=0;
 var $56=0,$57=0,$58=0,label=0;

 $1=(($edge+4)|0);
 HEAP32[(($1)>>2)]=1;
 $2=(($this+8)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4=(($edge+8)|0);
 HEAPF32[(($4)>>2)]=$3;
 $5=(($edge+12)|0);
 $6=(($this+12)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+($index<<3))|0);
 $9=$8;
 $10=$5;
 $ld$0$0=(($9)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($9+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($10)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($10+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=(($edge+20)|0);
 $13=((($index)+(1))|0);
 $14=((HEAP32[(($6)>>2)])|0);
 $15=(($14+($13<<3))|0);
 $16=$15;
 $17=$12;
 $ld$4$0=(($16)|0);
 $18$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($16+4)|0);
 $18$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($17)|0);
 HEAP32[(($st$6$0)>>2)]=$18$0;
 $st$7$1=(($17+4)|0);
 HEAP32[(($st$7$1)>>2)]=$18$1;
 $19=($index|0)>0;
 $20=(($edge+28)|0);
 if ($19) {
  $22=((($index)-(1))|0);
  $23=((HEAP32[(($6)>>2)])|0);
  $24=(($23+($22<<3))|0);
  $25=$24;
  $26=$20;
  $ld$8$0=(($25)|0);
  $27$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($25+4)|0);
  $27$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($26)|0);
  HEAP32[(($st$10$0)>>2)]=$27$0;
  $st$11$1=(($26+4)|0);
  HEAP32[(($st$11$1)>>2)]=$27$1;
  $28=(($edge+44)|0);
  HEAP8[($28)]=1;
 } else {
  $30=(($this+20)|0);
  $31=$30;
  $32=$20;
  $ld$12$0=(($31)|0);
  $33$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($31+4)|0);
  $33$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($32)|0);
  HEAP32[(($st$14$0)>>2)]=$33$0;
  $st$15$1=(($32+4)|0);
  HEAP32[(($st$15$1)>>2)]=$33$1;
  $34=(($this+36)|0);
  $35=((HEAP8[($34)])|0);
  $36=(($edge+44)|0);
  HEAP8[($36)]=$35;
 }
 $38=(($this+16)|0);
 $39=((HEAP32[(($38)>>2)])|0);
 $40=((($39)-(2))|0);
 $41=($40|0)>($index|0);
 $42=(($edge+36)|0);
 if ($41) {
  $44=((($index)+(2))|0);
  $45=((HEAP32[(($6)>>2)])|0);
  $46=(($45+($44<<3))|0);
  $47=$46;
  $48=$42;
  $ld$16$0=(($47)|0);
  $49$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($47+4)|0);
  $49$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($48)|0);
  HEAP32[(($st$18$0)>>2)]=$49$0;
  $st$19$1=(($48+4)|0);
  HEAP32[(($st$19$1)>>2)]=$49$1;
  $50=(($edge+45)|0);
  HEAP8[($50)]=1;
  return;
 } else {
  $52=(($this+28)|0);
  $53=$52;
  $54=$42;
  $ld$20$0=(($53)|0);
  $55$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($53+4)|0);
  $55$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($54)|0);
  HEAP32[(($st$22$0)>>2)]=$55$0;
  $st$23$1=(($54+4)|0);
  HEAP32[(($st$23$1)>>2)]=$55$1;
  $56=(($this+37)|0);
  $57=((HEAP8[($56)])|0);
  $58=(($edge+45)|0);
  HEAP8[($58)]=$57;
  return;
 }
}


function __ZNK12b2ChainShape15ComputeDistanceERK11b2TransformRK6b2Vec2PfPS3_i($this,$xf,$p,$distance,$normal,$childIndex){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 $distance=($distance)|0;
 $normal=($normal)|0;
 $childIndex=($childIndex)|0;
 var $edge=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $edge=((sp)|0);
 __ZN11b2EdgeShapeC1Ev($edge);
 __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($this,$edge,$childIndex);
 __ZNK11b2EdgeShape15ComputeDistanceERK11b2TransformRK6b2Vec2PfPS3_i($edge,$xf,$p,$distance,$normal,0);
 STACKTOP=sp;return;
}


function __ZNK12b2ChainShape9TestPointERK11b2TransformRK6b2Vec2($this,$xf,$p){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 var label=0;

 return ((0)|0);
}


function __ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($this,$output,$input,$xf,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $edgeShape=0,$1=0,$2=0,$3=0,$4=0,$_=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=0,$13=0;
 var $14=0,$15=0,$16=0,$ld$4$0=0,$17$0=0,$ld$5$1=0,$17$1=0,$st$6$0=0,$st$7$1=0,$18=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $edgeShape=((sp)|0);
 __ZN11b2EdgeShapeC1Ev($edgeShape);
 $1=((($childIndex)+(1))|0);
 $2=(($this+16)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($1|0)==($3|0);
 $_=($4?0:$1);
 $5=(($edgeShape+12)|0);
 $6=(($this+12)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+($childIndex<<3))|0);
 $9=$8;
 $10=$5;
 $ld$0$0=(($9)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($9+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($10)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($10+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=(($edgeShape+20)|0);
 $13=((HEAP32[(($6)>>2)])|0);
 $14=(($13+($_<<3))|0);
 $15=$14;
 $16=$12;
 $ld$4$0=(($15)|0);
 $17$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($15+4)|0);
 $17$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($16)|0);
 HEAP32[(($st$6$0)>>2)]=$17$0;
 $st$7$1=(($16+4)|0);
 HEAP32[(($st$7$1)>>2)]=$17$1;
 $18=((__ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi($edgeShape,$output,$input,$xf,0))|0);
 STACKTOP=sp;return (($18)|0);
}


function __ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi($this,$aabb,$xf,$childIndex){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $v1=0,$v2=0,$1=0,$tmpcast=0,$2=0,$tmpcast8=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0;
 var $13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$ld$4$0=0,$16$0=0,$ld$5$1=0,$16$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $v1=((sp)|0);
 $v2=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast8=$2;
 $3=((($childIndex)+(1))|0);
 $4=(($this+16)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)==($5|0);
 $_=($6?0:$3);
 $7=(($this+12)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+($childIndex<<3))|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v1,$xf,$9);
 $10=((HEAP32[(($7)>>2)])|0);
 $11=(($10+($_<<3))|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($v2,$xf,$11);
 __Z5b2MinRK6b2Vec2S1_($tmpcast,$v1,$v2);
 $12=$aabb;
 $ld$0$0=(($1)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($12)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($12+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=(($aabb+8)|0);
 __Z5b2MaxRK6b2Vec2S1_($tmpcast8,$v1,$v2);
 $15=$14;
 $ld$4$0=(($2)|0);
 $16$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $16$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($15)|0);
 HEAP32[(($st$6$0)>>2)]=$16$0;
 $st$7$1=(($15+4)|0);
 HEAP32[(($st$7$1)>>2)]=$16$1;
 STACKTOP=sp;return;
}


function __ZNK12b2ChainShape11ComputeMassEP10b2MassDataf($this,$massData,$density){
 $this=($this)|0;
 $massData=($massData)|0;
 $density=+($density);
 var $1=0,$2=0,$3=0,label=0;

 $1=(($massData)|0);
 HEAPF32[(($1)>>2)]=0.0;
 $2=(($massData+4)|0);
 __ZN6b2Vec27SetZeroEv($2);
 $3=(($massData+12)|0);
 HEAPF32[(($3)>>2)]=0.0;
 return;
}


function __ZN12b2BroadPhaseC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$20$0=0,$20$1=0,$23$0=0,$23$1=0;
 var label=0;

 $1=(($this)|0);
 __ZN13b2DynamicTreeC2Ev($1);
 $2=(($this+28)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+48)|0);
 HEAP32[(($3)>>2)]=16;
 $4=(($this+52)|0);
 HEAP32[(($4)>>2)]=0;
 $5=((HEAP32[(($3)>>2)])|0);
 $6=$5<<3;
 $7=((__Z7b2Alloci($6))|0);
 $9=$7;
 $10=(($this+44)|0);
 HEAP32[(($10)>>2)]=$9;
 $11=(($this+36)|0);
 HEAP32[(($11)>>2)]=16;
 $12=(($this+40)|0);
 HEAP32[(($12)>>2)]=0;
 $13=((HEAP32[(($11)>>2)])|0);
 $14=$13<<2;
 $15=((__Z7b2Alloci($14))|0);
 $17=$15;
 $18=(($this+32)|0);
 HEAP32[(($18)>>2)]=$17;
 return;
}


function __ZN12b2BroadPhaseD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$12=0,$11$0=0,$11$1=0,$15$0=0,$15$1=0,label=0;

 $1=(($this+32)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 __Z6b2FreePv($3);
 $5=(($this+44)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=$6;
 __Z6b2FreePv($7);
 $9=(($this)|0);
 __ZN13b2DynamicTreeD2Ev($9);
 return;
}


function __ZN12b2BroadPhase11CreateProxyERK6b2AABBPv($this,$aabb,$userData){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $userData=($userData)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 $2=((__ZN13b2DynamicTree11CreateProxyERK6b2AABBPv($1,$aabb,$userData))|0);
 $3=(($this+28)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((($4)+(1))|0);
 HEAP32[(($3)>>2)]=$5;
 __ZN12b2BroadPhase10BufferMoveEi($this,$2);
 return (($2)|0);
}


function __ZN12b2BroadPhase10BufferMoveEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var label=0;

 $1=(($this+40)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+36)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 if ($5) {
  $7=(($this+32)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=$4<<1;
  HEAP32[(($3)>>2)]=$9;
  $10=$4<<3;
  $11=((__Z7b2Alloci($10))|0);
  $12=$11;
  HEAP32[(($7)>>2)]=$12;
  $13=$8;
  $14=((HEAP32[(($1)>>2)])|0);
  $15=$14<<2;
  (_memcpy((($11)|0), (($13)|0), $15)|0);
  __Z6b2FreePv($13);
 }
 $17=((HEAP32[(($1)>>2)])|0);
 $18=(($this+32)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($19+($17<<2))|0);
 HEAP32[(($20)>>2)]=$proxyId;
 $21=((HEAP32[(($1)>>2)])|0);
 $22=((($21)+(1))|0);
 HEAP32[(($1)>>2)]=$22;
 return;
}


function __ZN12b2BroadPhase12DestroyProxyEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 __ZN12b2BroadPhase12UnBufferMoveEi($this,$proxyId);
 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)-(1))|0);
 HEAP32[(($1)>>2)]=$3;
 $4=(($this)|0);
 __ZN13b2DynamicTree12DestroyProxyEi($4,$proxyId);
 return;
}


function __ZN12b2BroadPhase12UnBufferMoveEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$i_05=0,$7=0,$8=0,$9=0,$12=0,$13=0,$14=0,label=0;

 $1=(($this+40)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if (!($3)) {
  return;
 }
 $4=(($this+32)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $i_05=0;
 while(1) {

  $7=(($5+($i_05<<2))|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=($8|0)==($proxyId|0);
  if ($9) {
   HEAP32[(($7)>>2)]=-1;
  }
  $12=((($i_05)+(1))|0);
  $13=((HEAP32[(($1)>>2)])|0);
  $14=($12|0)<($13|0);
  if ($14) {
   $i_05=$12;
  } else {
   break;
  }
 }
 return;
}


function __ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2($this,$proxyId,$aabb,$displacement){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 $aabb=($aabb)|0;
 $displacement=($displacement)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((__ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2($1,$proxyId,$aabb,$displacement))|0);
 if (!($2)) {
  return;
 }
 __ZN12b2BroadPhase10BufferMoveEi($this,$proxyId);
 return;
}


function __ZN12b2BroadPhase10TouchProxyEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var label=0;

 __ZN12b2BroadPhase10BufferMoveEi($this,$proxyId);
 return;
}


function __ZN12b2BroadPhase13QueryCallbackEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,label=0;

 $1=(($this+56)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($proxyId|0);
 if ($3) {
  return ((1)|0);
 }
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this+48)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($6|0)==($8|0);
 if ($9) {
  $11=(($this+44)|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=$8<<1;
  HEAP32[(($7)>>2)]=$13;
  $14=$8<<4;
  $15=((__Z7b2Alloci($14))|0);
  $16=$15;
  HEAP32[(($11)>>2)]=$16;
  $17=$12;
  $18=((HEAP32[(($5)>>2)])|0);
  $19=$18<<3;
  (_memcpy((($15)|0), (($17)|0), $19)|0);
  __Z6b2FreePv($17);
 }
 $21=((HEAP32[(($1)>>2)])|0);
 $22=((__Z5b2MinIiET_S0_S0_($proxyId,$21))|0);
 $23=((HEAP32[(($5)>>2)])|0);
 $24=(($this+44)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=(($25+($23<<3))|0);
 HEAP32[(($26)>>2)]=$22;
 $27=((HEAP32[(($1)>>2)])|0);
 $28=((__Z5b2MaxIiET_S0_S0_($proxyId,$27))|0);
 $29=((HEAP32[(($5)>>2)])|0);
 $30=((HEAP32[(($24)>>2)])|0);
 $31=(($30+($29<<3)+4)|0);
 HEAP32[(($31)>>2)]=$28;
 $32=((HEAP32[(($5)>>2)])|0);
 $33=((($32)+(1))|0);
 HEAP32[(($5)>>2)]=$33;
 return ((1)|0);
}


function __Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_($manifold,$circleA,$xfA,$circleB,$xfB){
 $manifold=($manifold)|0;
 $circleA=($circleA)|0;
 $xfA=($xfA)|0;
 $circleB=($circleB)|0;
 $xfB=($xfB)|0;
 var $pA=0,$pB=0,$d=0,$1=0,$2=0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=0,$13=0,$14=0,$15=0,$16=0,$ld$0$0=0,$17$0=0;
 var $ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$18=0,$19=0,$20=0,$ld$4$0=0,$21$0=0,$ld$5$1=0,$21$1=0,$st$6$0=0,$st$7$1=0,$22=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $pA=((sp)|0);
 $pB=(((sp)+(8))|0);
 $d=(((sp)+(16))|0);
 $1=(($manifold+60)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($circleA+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($pA,$xfA,$2);
 $3=(($circleB+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($pB,$xfB,$3);
 __ZmiRK6b2Vec2S1_($d,$pB,$pA);
 $4=(+(__Z5b2DotRK6b2Vec2S1_($d,$d)));
 $5=(($circleA+8)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($circleB+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($6)+($8);
 $10=($9)*($9);
 $11=$4>$10;
 if ($11) {
  STACKTOP=sp;return;
 }
 $13=(($manifold+56)|0);
 HEAP32[(($13)>>2)]=0;
 $14=(($manifold+48)|0);
 $15=$2;
 $16=$14;
 $ld$0$0=(($15)|0);
 $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($15+4)|0);
 $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($16)|0);
 HEAP32[(($st$2$0)>>2)]=$17$0;
 $st$3$1=(($16+4)|0);
 HEAP32[(($st$3$1)>>2)]=$17$1;
 $18=(($manifold+40)|0);
 __ZN6b2Vec27SetZeroEv($18);
 HEAP32[(($1)>>2)]=1;
 $19=$3;
 $20=$manifold;
 $ld$4$0=(($19)|0);
 $21$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($19+4)|0);
 $21$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($20)|0);
 HEAP32[(($st$6$0)>>2)]=$21$0;
 $st$7$1=(($20+4)|0);
 HEAP32[(($st$7$1)>>2)]=$21$1;
 $22=(($manifold+16)|0);
 HEAP32[(($22)>>2)]=0;
 STACKTOP=sp;return;
}


function __Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$polygonA,$xfA,$circleB,$xfB){
 $manifold=($manifold)|0;
 $polygonA=($polygonA)|0;
 $xfA=($xfA)|0;
 $circleB=($circleB)|0;
 $xfB=($xfB)|0;
 var $c=0,$cLocal=0,$1=0,$v1=0,$tmpcast=0,$v2=0,$tmpcast62=0,$2=0,$tmpcast66=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$tmpcast65=0,$9=0,$tmpcast64=0,$faceCenter=0,$tmpcast63=0;
 var $10=0,$11=0,$12=0,$13=0,$14=0,$15=.0,$16=0,$17=.0,$18=.0,$19=0,$20=0,$21=0,$normalIndex_071=0,$separation_070=.0,$i_069=0,$22=0,$23=0,$24=.0,$25=0,$27=0;
 var $separation_1=.0,$normalIndex_1=0,$28=0,$29=0,$phitmp=0,$normalIndex_0_lcssa=0,$separation_0_lcssa=0,$31=0,$32=0,$_=0,$33=0,$34=0,$ld$0$0=0,$35$0=0,$ld$1$1=0,$35$1=0,$st$2$0=0,$st$3$1=0,$36=0,$37=0;
 var $ld$4$0=0,$38$0=0,$ld$5$1=0,$38$1=0,$st$6$0=0,$st$7$1=0,$40=0,$41=0,$42=0,$43=0,$44=0,$ld$8$0=0,$45$0=0,$ld$9$1=0,$45$1=0,$st$10$0=0,$st$11$1=0,$46=0,$47=0,$ld$12$0=0;
 var $48$0=0,$ld$13$1=0,$48$1=0,$st$14$0=0,$st$15$1=0,$49=0,$50=0,$ld$16$0=0,$51$0=0,$ld$17$1=0,$51$1=0,$st$18$0=0,$st$19$1=0,$52=0,$54=.0,$55=0,$57=.0,$58=.0,$59=0,$61=0;
 var $62=0,$63=0,$ld$20$0=0,$64$0=0,$ld$21$1=0,$64$1=0,$st$22$0=0,$st$23$1=0,$65=.0,$66=0,$67=0,$ld$24$0=0,$68$0=0,$ld$25$1=0,$68$1=0,$st$26$0=0,$st$27$1=0,$69=0,$70=0,$ld$28$0=0;
 var $71$0=0,$ld$29$1=0,$71$1=0,$st$30$0=0,$st$31$1=0,$72=0,$74=.0,$75=0,$77=.0,$78=.0,$79=0,$81=0,$82=0,$83=0,$ld$32$0=0,$84$0=0,$ld$33$1=0,$84$1=0,$st$34$0=0,$st$35$1=0;
 var $85=.0,$86=0,$87=0,$ld$36$0=0,$88$0=0,$ld$37$1=0,$88$1=0,$st$38$0=0,$st$39$1=0,$89=0,$90=0,$ld$40$0=0,$91$0=0,$ld$41$1=0,$91$1=0,$st$42$0=0,$st$43$1=0,$92=0,$94=0,$95=.0;
 var $96=0,$98=0,$99=0,$100=0,$101=0,$ld$44$0=0,$102$0=0,$ld$45$1=0,$102$1=0,$st$46$0=0,$st$47$1=0,$103=0,$104=0,$ld$48$0=0,$105$0=0,$ld$49$1=0,$105$1=0,$st$50$0=0,$st$51$1=0,$106=0;
 var $107=0,$ld$52$0=0,$108$0=0,$ld$53$1=0,$108$1=0,$st$54$0=0,$st$55$1=0,$109=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $c=((sp)|0);
 $cLocal=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $v1=(((sp)+(24))|0);
 $tmpcast=$v1;
 $v2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast62=$v2;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast66=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast65=$8;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast64=$9;
 $faceCenter=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast63=$faceCenter;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=(($manifold+60)|0);
 HEAP32[(($12)>>2)]=0;
 $13=(($circleB+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($c,$xfB,$13);
 __Z6b2MulTRK11b2TransformRK6b2Vec2($cLocal,$xfA,$c);
 $14=(($polygonA+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($circleB+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=($15)+($17);
 $19=(($polygonA+148)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=($20|0)>0;
 do {
  if ($21) {
   $i_069=0;$separation_070=-3.4028234663852886e+38;$normalIndex_071=0;
   while(1) {



    $22=(($polygonA+84+($i_069<<3))|0);
    $23=(($polygonA+20+($i_069<<3))|0);
    __ZmiRK6b2Vec2S1_($1,$cLocal,$23);
    $24=(+(__Z5b2DotRK6b2Vec2S1_($22,$1)));
    $25=$24>$18;
    if ($25) {
     label = 15;
     break;
    }
    $27=$24>$separation_070;
    $separation_1=($27?$24:$separation_070);
    $normalIndex_1=($27?$i_069:$normalIndex_071);
    $28=((($i_069)+(1))|0);
    $29=($28|0)<($20|0);
    if ($29) {
     $i_069=$28;$separation_070=$separation_1;$normalIndex_071=$normalIndex_1;
    } else {
     label = 4;
     break;
    }
   }
   if ((label|0) == 4) {
    $phitmp=$separation_1<(1.1920928955078125e-7);
    $separation_0_lcssa=$phitmp;$normalIndex_0_lcssa=$normalIndex_1;
    break;
   }
   else if ((label|0) == 15) {
    STACKTOP=sp;return;
   }
  } else {
   $separation_0_lcssa=1;$normalIndex_0_lcssa=0;
  }
 } while(0);


 $31=((($normalIndex_0_lcssa)+(1))|0);
 $32=($31|0)<($20|0);
 $_=($32?$31:0);
 $33=(($polygonA+20+($normalIndex_0_lcssa<<3))|0);
 $34=$33;
 $ld$0$0=(($34)|0);
 $35$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($34+4)|0);
 $35$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($v1)|0);
 HEAP32[(($st$2$0)>>2)]=$35$0;
 $st$3$1=(($v1+4)|0);
 HEAP32[(($st$3$1)>>2)]=$35$1;
 $36=(($polygonA+20+($_<<3))|0);
 $37=$36;
 $ld$4$0=(($37)|0);
 $38$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($37+4)|0);
 $38$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($v2)|0);
 HEAP32[(($st$6$0)>>2)]=$38$0;
 $st$7$1=(($v2+4)|0);
 HEAP32[(($st$7$1)>>2)]=$38$1;
 if ($separation_0_lcssa) {
  HEAP32[(($12)>>2)]=1;
  $40=(($manifold+56)|0);
  HEAP32[(($40)>>2)]=1;
  $41=(($manifold+40)|0);
  $42=(($polygonA+84+($normalIndex_0_lcssa<<3))|0);
  $43=$42;
  $44=$41;
  $ld$8$0=(($43)|0);
  $45$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($43+4)|0);
  $45$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($44)|0);
  HEAP32[(($st$10$0)>>2)]=$45$0;
  $st$11$1=(($44+4)|0);
  HEAP32[(($st$11$1)>>2)]=$45$1;
  $46=(($manifold+48)|0);
  __ZplRK6b2Vec2S1_($3,$tmpcast,$tmpcast62);
  __ZmlfRK6b2Vec2($tmpcast66,0.5,$3);
  $47=$46;
  $ld$12$0=(($2)|0);
  $48$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($2+4)|0);
  $48$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($47)|0);
  HEAP32[(($st$14$0)>>2)]=$48$0;
  $st$15$1=(($47+4)|0);
  HEAP32[(($st$15$1)>>2)]=$48$1;
  $49=$13;
  $50=$manifold;
  $ld$16$0=(($49)|0);
  $51$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($49+4)|0);
  $51$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($50)|0);
  HEAP32[(($st$18$0)>>2)]=$51$0;
  $st$19$1=(($50+4)|0);
  HEAP32[(($st$19$1)>>2)]=$51$1;
  $52=(($manifold+16)|0);
  HEAP32[(($52)>>2)]=0;
  STACKTOP=sp;return;
 }
 __ZmiRK6b2Vec2S1_($4,$cLocal,$tmpcast);
 __ZmiRK6b2Vec2S1_($5,$tmpcast62,$tmpcast);
 $54=(+(__Z5b2DotRK6b2Vec2S1_($4,$5)));
 __ZmiRK6b2Vec2S1_($6,$cLocal,$tmpcast62);
 __ZmiRK6b2Vec2S1_($7,$tmpcast,$tmpcast62);
 $55=$54>(0.0);
 if (!($55)) {
  $57=(+(__Z17b2DistanceSquaredRK6b2Vec2S1_($cLocal,$tmpcast)));
  $58=($18)*($18);
  $59=$57>$58;
  if ($59) {
   STACKTOP=sp;return;
  }
  HEAP32[(($12)>>2)]=1;
  $61=(($manifold+56)|0);
  HEAP32[(($61)>>2)]=1;
  $62=(($manifold+40)|0);
  __ZmiRK6b2Vec2S1_($tmpcast65,$cLocal,$tmpcast);
  $63=$62;
  $ld$20$0=(($8)|0);
  $64$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($8+4)|0);
  $64$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($63)|0);
  HEAP32[(($st$22$0)>>2)]=$64$0;
  $st$23$1=(($63+4)|0);
  HEAP32[(($st$23$1)>>2)]=$64$1;
  $65=(+(__ZN6b2Vec29NormalizeEv($62)));
  $66=(($manifold+48)|0);
  $67=$66;
  $ld$24$0=(($v1)|0);
  $68$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($v1+4)|0);
  $68$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($67)|0);
  HEAP32[(($st$26$0)>>2)]=$68$0;
  $st$27$1=(($67+4)|0);
  HEAP32[(($st$27$1)>>2)]=$68$1;
  $69=$13;
  $70=$manifold;
  $ld$28$0=(($69)|0);
  $71$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($69+4)|0);
  $71$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($70)|0);
  HEAP32[(($st$30$0)>>2)]=$71$0;
  $st$31$1=(($70+4)|0);
  HEAP32[(($st$31$1)>>2)]=$71$1;
  $72=(($manifold+16)|0);
  HEAP32[(($72)>>2)]=0;
  STACKTOP=sp;return;
 }
 $74=(+(__Z5b2DotRK6b2Vec2S1_($6,$7)));
 $75=$74>(0.0);
 if ($75) {
  __ZplRK6b2Vec2S1_($10,$tmpcast,$tmpcast62);
  __ZmlfRK6b2Vec2($tmpcast63,0.5,$10);
  __ZmiRK6b2Vec2S1_($11,$cLocal,$tmpcast63);
  $94=(($polygonA+84+($normalIndex_0_lcssa<<3))|0);
  $95=(+(__Z5b2DotRK6b2Vec2S1_($11,$94)));
  $96=$95>$18;
  if ($96) {
   STACKTOP=sp;return;
  }
  HEAP32[(($12)>>2)]=1;
  $98=(($manifold+56)|0);
  HEAP32[(($98)>>2)]=1;
  $99=(($manifold+40)|0);
  $100=$94;
  $101=$99;
  $ld$44$0=(($100)|0);
  $102$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($100+4)|0);
  $102$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($101)|0);
  HEAP32[(($st$46$0)>>2)]=$102$0;
  $st$47$1=(($101+4)|0);
  HEAP32[(($st$47$1)>>2)]=$102$1;
  $103=(($manifold+48)|0);
  $104=$103;
  $ld$48$0=(($faceCenter)|0);
  $105$0=((HEAP32[(($ld$48$0)>>2)])|0);
  $ld$49$1=(($faceCenter+4)|0);
  $105$1=((HEAP32[(($ld$49$1)>>2)])|0);
  $st$50$0=(($104)|0);
  HEAP32[(($st$50$0)>>2)]=$105$0;
  $st$51$1=(($104+4)|0);
  HEAP32[(($st$51$1)>>2)]=$105$1;
  $106=$13;
  $107=$manifold;
  $ld$52$0=(($106)|0);
  $108$0=((HEAP32[(($ld$52$0)>>2)])|0);
  $ld$53$1=(($106+4)|0);
  $108$1=((HEAP32[(($ld$53$1)>>2)])|0);
  $st$54$0=(($107)|0);
  HEAP32[(($st$54$0)>>2)]=$108$0;
  $st$55$1=(($107+4)|0);
  HEAP32[(($st$55$1)>>2)]=$108$1;
  $109=(($manifold+16)|0);
  HEAP32[(($109)>>2)]=0;
  STACKTOP=sp;return;
 } else {
  $77=(+(__Z17b2DistanceSquaredRK6b2Vec2S1_($cLocal,$tmpcast62)));
  $78=($18)*($18);
  $79=$77>$78;
  if ($79) {
   STACKTOP=sp;return;
  }
  HEAP32[(($12)>>2)]=1;
  $81=(($manifold+56)|0);
  HEAP32[(($81)>>2)]=1;
  $82=(($manifold+40)|0);
  __ZmiRK6b2Vec2S1_($tmpcast64,$cLocal,$tmpcast62);
  $83=$82;
  $ld$32$0=(($9)|0);
  $84$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($9+4)|0);
  $84$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($83)|0);
  HEAP32[(($st$34$0)>>2)]=$84$0;
  $st$35$1=(($83+4)|0);
  HEAP32[(($st$35$1)>>2)]=$84$1;
  $85=(+(__ZN6b2Vec29NormalizeEv($82)));
  $86=(($manifold+48)|0);
  $87=$86;
  $ld$36$0=(($v2)|0);
  $88$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($v2+4)|0);
  $88$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($87)|0);
  HEAP32[(($st$38$0)>>2)]=$88$0;
  $st$39$1=(($87+4)|0);
  HEAP32[(($st$39$1)>>2)]=$88$1;
  $89=$13;
  $90=$manifold;
  $ld$40$0=(($89)|0);
  $91$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($89+4)|0);
  $91$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($90)|0);
  HEAP32[(($st$42$0)>>2)]=$91$0;
  $st$43$1=(($90+4)|0);
  HEAP32[(($st$43$1)>>2)]=$91$1;
  $92=(($manifold+16)|0);
  HEAP32[(($92)>>2)]=0;
  STACKTOP=sp;return;
 }
}


function __Z6b2MulTRK11b2TransformRK6b2Vec2($agg_result,$T,$v){
 $agg_result=($agg_result)|0;
 $T=($T)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=.0,$14=0,$15=.0,$16=.0,$17=.0,$18=.0,$19=.0,$20=.0;
 var $21=.0,label=0;

 $1=(($v)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($T)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)-($4);
 $6=(($v+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($T+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 $11=(($T+12)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=($5)*($12);
 $14=(($T+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=($10)*($15);
 $17=($13)+($16);
 $18=((-.0))-($15);
 $19=($5)*($18);
 $20=($12)*($10);
 $21=($20)+($19);
 __ZN6b2Vec2C1Eff($agg_result,$17,$21);
 return;
}


function __ZN13b2DynamicTreeC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$i_05=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$_lcssa=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=-1;
 $2=(($this+12)|0);
 HEAP32[(($2)>>2)]=16;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=0;
 $4=((HEAP32[(($2)>>2)])|0);
 $5=((($4)*(36))&-1);
 $6=((__Z7b2Alloci($5))|0);
 $7=$6;
 $8=(($this+4)|0);
 HEAP32[(($8)>>2)]=$7;
 $9=((HEAP32[(($2)>>2)])|0);
 $10=((($9)*(36))&-1);
 _memset((((($6)|0))|0), ((((0)|0))|0), (((($10)|0))|0))|0;
 $11=((HEAP32[(($2)>>2)])|0);
 $12=((($11)-(1))|0);
 $13=($12|0)>0;
 if ($13) {
  $14=((HEAP32[(($8)>>2)])|0);
  $i_05=0;
  while(1) {

   $16=((($i_05)+(1))|0);
   $17=(($14+((($i_05)*(36))&-1)+20)|0);
   HEAP32[(($17)>>2)]=$16;
   $18=(($14+((($i_05)*(36))&-1)+32)|0);
   HEAP32[(($18)>>2)]=-1;
   $19=((HEAP32[(($2)>>2)])|0);
   $20=((($19)-(1))|0);
   $21=($16|0)<($20|0);
   if ($21) {
    $i_05=$16;
   } else {
    $_lcssa=$20;
    break;
   }
  }
 } else {
  $_lcssa=$12;
 }

 $22=((HEAP32[(($8)>>2)])|0);
 $23=(($22+((($_lcssa)*(36))&-1)+20)|0);
 HEAP32[(($23)>>2)]=-1;
 $24=((HEAP32[(($2)>>2)])|0);
 $25=((($24)-(1))|0);
 $26=((HEAP32[(($8)>>2)])|0);
 $27=(($26+((($25)*(36))&-1)+32)|0);
 HEAP32[(($27)>>2)]=-1;
 $28=(($this+16)|0);
 HEAP32[(($28)>>2)]=0;
 $29=(($this+20)|0);
 HEAP32[(($29)>>2)]=0;
 $30=(($this+24)|0);
 HEAP32[(($30)>>2)]=0;
 return;
}


function __ZN13b2DynamicTreeD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 __Z6b2FreePv($3);
 return;
}


function __ZN13b2DynamicTree12AllocateNodeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0;
 var $i_012=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$_lcssa=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$37=0,$38=0,$39=0,$40=0,$41=0;
 var $42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==-1;
 if ($3) {
  $5=(($this+4)|0);
  $6=((HEAP32[(($5)>>2)])|0);
  $7=(($this+12)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=$8<<1;
  HEAP32[(($7)>>2)]=$9;
  $10=((($8)*(72))&-1);
  $11=((__Z7b2Alloci($10))|0);
  $12=$11;
  HEAP32[(($5)>>2)]=$12;
  $13=$6;
  $14=(($this+8)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=((($15)*(36))&-1);
  (_memcpy((($11)|0), (($13)|0), $16)|0);
  __Z6b2FreePv($13);
  $17=((HEAP32[(($14)>>2)])|0);
  $18=((HEAP32[(($7)>>2)])|0);
  $19=((($18)-(1))|0);
  $20=($17|0)<($19|0);
  if ($20) {
   $21=((HEAP32[(($5)>>2)])|0);
   $i_012=$17;
   while(1) {

    $23=((($i_012)+(1))|0);
    $24=(($21+((($i_012)*(36))&-1)+20)|0);
    HEAP32[(($24)>>2)]=$23;
    $25=(($21+((($i_012)*(36))&-1)+32)|0);
    HEAP32[(($25)>>2)]=-1;
    $26=((HEAP32[(($7)>>2)])|0);
    $27=((($26)-(1))|0);
    $28=($23|0)<($27|0);
    if ($28) {
     $i_012=$23;
    } else {
     $_lcssa=$27;
     break;
    }
   }
  } else {
   $_lcssa=$19;
  }

  $29=((HEAP32[(($5)>>2)])|0);
  $30=(($29+((($_lcssa)*(36))&-1)+20)|0);
  HEAP32[(($30)>>2)]=-1;
  $31=((HEAP32[(($7)>>2)])|0);
  $32=((($31)-(1))|0);
  $33=((HEAP32[(($5)>>2)])|0);
  $34=(($33+((($32)*(36))&-1)+32)|0);
  HEAP32[(($34)>>2)]=-1;
  $35=((HEAP32[(($14)>>2)])|0);
  HEAP32[(($1)>>2)]=$35;
 }
 $37=((HEAP32[(($1)>>2)])|0);
 $38=(($this+4)|0);
 $39=((HEAP32[(($38)>>2)])|0);
 $40=(($39+((($37)*(36))&-1)+20)|0);
 $41=((HEAP32[(($40)>>2)])|0);
 HEAP32[(($1)>>2)]=$41;
 $42=((HEAP32[(($38)>>2)])|0);
 $43=(($42+((($37)*(36))&-1)+20)|0);
 HEAP32[(($43)>>2)]=-1;
 $44=((HEAP32[(($38)>>2)])|0);
 $45=(($44+((($37)*(36))&-1)+24)|0);
 HEAP32[(($45)>>2)]=-1;
 $46=((HEAP32[(($38)>>2)])|0);
 $47=(($46+((($37)*(36))&-1)+28)|0);
 HEAP32[(($47)>>2)]=-1;
 $48=((HEAP32[(($38)>>2)])|0);
 $49=(($48+((($37)*(36))&-1)+32)|0);
 HEAP32[(($49)>>2)]=0;
 $50=((HEAP32[(($38)>>2)])|0);
 $51=(($50+((($37)*(36))&-1)+16)|0);
 HEAP32[(($51)>>2)]=0;
 $52=(($this+8)|0);
 $53=((HEAP32[(($52)>>2)])|0);
 $54=((($53)+(1))|0);
 HEAP32[(($52)>>2)]=$54;
 return (($37)|0);
}


function __ZN13b2DynamicTree8FreeNodeEi($this,$nodeId){
 $this=($this)|0;
 $nodeId=($nodeId)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+((($nodeId)*(36))&-1)+20)|0);
 HEAP32[(($5)>>2)]=$2;
 $6=((HEAP32[(($3)>>2)])|0);
 $7=(($6+((($nodeId)*(36))&-1)+32)|0);
 HEAP32[(($7)>>2)]=-1;
 HEAP32[(($1)>>2)]=$nodeId;
 $8=(($this+8)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=((($9)-(1))|0);
 HEAP32[(($8)>>2)]=$10;
 return;
}


function __ZN13b2DynamicTree11CreateProxyERK6b2AABBPv($this,$aabb,$userData){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $userData=($userData)|0;
 var $r=0,$1=0,$tmpcast=0,$2=0,$tmpcast9=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0;
 var $13=0,$ld$4$0=0,$14$0=0,$ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=0,$18=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $r=((sp)|0);
 $1=(((sp)+(8))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast9=$2;
 $3=((__ZN13b2DynamicTree12AllocateNodeEv($this))|0);
 __ZN6b2Vec2C1Eff($r,0.10000000149011612,0.10000000149011612);
 $4=(($this+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5+((($3)*(36))&-1))|0);
 $7=(($aabb)|0);
 __ZmiRK6b2Vec2S1_($tmpcast,$7,$r);
 $8=$6;
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=((HEAP32[(($4)>>2)])|0);
 $11=(($10+((($3)*(36))&-1)+8)|0);
 $12=(($aabb+8)|0);
 __ZplRK6b2Vec2S1_($tmpcast9,$12,$r);
 $13=$11;
 $ld$4$0=(($2)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 $15=((HEAP32[(($4)>>2)])|0);
 $16=(($15+((($3)*(36))&-1)+16)|0);
 HEAP32[(($16)>>2)]=$userData;
 $17=((HEAP32[(($4)>>2)])|0);
 $18=(($17+((($3)*(36))&-1)+32)|0);
 HEAP32[(($18)>>2)]=0;
 __ZN13b2DynamicTree10InsertLeafEi($this,$3);
 STACKTOP=sp;return (($3)|0);
}


function __ZN13b2DynamicTree10InsertLeafEi($this,$leaf){
 $this=($this)|0;
 $leaf=($leaf)|0;
 var $leafAABB=0,$combinedAABB=0,$aabb=0,$aabb1=0,$aabb2=0,$aabb3=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0;
 var $17=0,$18=0,$19=0,$20=0,$21=0,$index_062=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=.0,$28=.0,$29=.0,$30=.0,$31=.0,$32=0,$33=0,$34=0,$35=0;
 var $37=.0,$39=0,$40=0,$41=.0,$42=.0,$43=.0,$_pn=.0,$cost1_0=.0,$45=0,$46=0,$47=0,$48=0,$50=.0,$52=0,$53=0,$54=.0,$55=.0,$56=.0,$_pn59=.0,$cost2_0=.0;
 var $58=0,$59=0,$or_cond=0,$61=0,$_=0,$62=0,$63=0,$64=0,$index_0_lcssa=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0;
 var $76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$84=0,$85=0,$86=0,$89=0,$91=0,$92=0,$93=0,$94=0,$95=0,$96=0,$97=0,$98=0,$100=0;
 var $101=0,$102=0,$103=0,$104=0,$105=0,$106=0,$108=0,$109=0,$index_160=0,$110=0,$index_161=0,$111=0,$112=0,$113=0,$114=0,$115=0,$116=0,$117=0,$118=0,$119=0;
 var $120=0,$121=0,$122=0,$123=0,$124=0,$125=0,$126=0,$127=0,$128=0,$129=0,$index_1=0,$130=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+96)|0;
 $leafAABB=((sp)|0);
 $combinedAABB=(((sp)+(16))|0);
 $aabb=(((sp)+(32))|0);
 $aabb1=(((sp)+(48))|0);
 $aabb2=(((sp)+(64))|0);
 $aabb3=(((sp)+(80))|0);
 $1=(($this+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)+(1))|0);
 HEAP32[(($1)>>2)]=$3;
 $4=(($this)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($5|0)==-1;
 if ($6) {
  HEAP32[(($4)>>2)]=$leaf;
  $8=(($this+4)|0);
  $9=((HEAP32[(($8)>>2)])|0);
  $10=(($9+((($leaf)*(36))&-1)+20)|0);
  HEAP32[(($10)>>2)]=-1;
  STACKTOP=sp;return;
 }
 $12=(($this+4)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($13+((($leaf)*(36))&-1))|0);
 $15=$leafAABB;
 $16=$14;
 HEAP32[(($15)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($15)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($15)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($15)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);
 $17=((HEAP32[(($4)>>2)])|0);
 $18=((HEAP32[(($12)>>2)])|0);
 $19=(($18+((($17)*(36))&-1))|0);
 $20=((__ZNK10b2TreeNode6IsLeafEv($19))|0);
 L5: do {
  if ($20) {
   $index_0_lcssa=$17;
  } else {
   $index_062=$17;$21=$18;
   while(1) {


    $22=(($21+((($index_062)*(36))&-1)+24)|0);
    $23=((HEAP32[(($22)>>2)])|0);
    $24=(($21+((($index_062)*(36))&-1)+28)|0);
    $25=((HEAP32[(($24)>>2)])|0);
    $26=(($21+((($index_062)*(36))&-1))|0);
    $27=(+(__ZNK6b2AABB12GetPerimeterEv($26)));
    __ZN6b2AABB7CombineERKS_S1_($combinedAABB,$26,$leafAABB);
    $28=(+(__ZNK6b2AABB12GetPerimeterEv($combinedAABB)));
    $29=($28)*((2.0));
    $30=($28)-($27);
    $31=($30)*((2.0));
    $32=((HEAP32[(($12)>>2)])|0);
    $33=(($32+((($23)*(36))&-1))|0);
    $34=((__ZNK10b2TreeNode6IsLeafEv($33))|0);
    $35=(($32+((($23)*(36))&-1))|0);
    if ($34) {
     __ZN6b2AABB7CombineERKS_S1_($aabb,$leafAABB,$35);
     $37=(+(__ZNK6b2AABB12GetPerimeterEv($aabb)));
     $_pn=$37;
    } else {
     __ZN6b2AABB7CombineERKS_S1_($aabb1,$leafAABB,$35);
     $39=((HEAP32[(($12)>>2)])|0);
     $40=(($39+((($23)*(36))&-1))|0);
     $41=(+(__ZNK6b2AABB12GetPerimeterEv($40)));
     $42=(+(__ZNK6b2AABB12GetPerimeterEv($aabb1)));
     $43=($42)-($41);
     $_pn=$43;
    }

    $cost1_0=($31)+($_pn);
    $45=((HEAP32[(($12)>>2)])|0);
    $46=(($45+((($25)*(36))&-1))|0);
    $47=((__ZNK10b2TreeNode6IsLeafEv($46))|0);
    $48=(($45+((($25)*(36))&-1))|0);
    if ($47) {
     __ZN6b2AABB7CombineERKS_S1_($aabb2,$leafAABB,$48);
     $50=(+(__ZNK6b2AABB12GetPerimeterEv($aabb2)));
     $_pn59=$50;
    } else {
     __ZN6b2AABB7CombineERKS_S1_($aabb3,$leafAABB,$48);
     $52=((HEAP32[(($12)>>2)])|0);
     $53=(($52+((($25)*(36))&-1))|0);
     $54=(+(__ZNK6b2AABB12GetPerimeterEv($53)));
     $55=(+(__ZNK6b2AABB12GetPerimeterEv($aabb3)));
     $56=($55)-($54);
     $_pn59=$56;
    }

    $cost2_0=($31)+($_pn59);
    $58=$29<$cost1_0;
    $59=$29<$cost2_0;
    $or_cond=$58&$59;
    if ($or_cond) {
     $index_0_lcssa=$index_062;
     break L5;
    }
    $61=$cost1_0<$cost2_0;
    $_=($61?$23:$25);
    $62=((HEAP32[(($12)>>2)])|0);
    $63=(($62+((($_)*(36))&-1))|0);
    $64=((__ZNK10b2TreeNode6IsLeafEv($63))|0);
    if ($64) {
     $index_0_lcssa=$_;
     break;
    } else {
     $index_062=$_;$21=$62;
    }
   }
  }
 } while(0);

 $65=((HEAP32[(($12)>>2)])|0);
 $66=(($65+((($index_0_lcssa)*(36))&-1)+20)|0);
 $67=((HEAP32[(($66)>>2)])|0);
 $68=((__ZN13b2DynamicTree12AllocateNodeEv($this))|0);
 $69=((HEAP32[(($12)>>2)])|0);
 $70=(($69+((($68)*(36))&-1)+20)|0);
 HEAP32[(($70)>>2)]=$67;
 $71=((HEAP32[(($12)>>2)])|0);
 $72=(($71+((($68)*(36))&-1)+16)|0);
 HEAP32[(($72)>>2)]=0;
 $73=((HEAP32[(($12)>>2)])|0);
 $74=(($73+((($68)*(36))&-1))|0);
 $75=(($73+((($index_0_lcssa)*(36))&-1))|0);
 __ZN6b2AABB7CombineERKS_S1_($74,$leafAABB,$75);
 $76=((HEAP32[(($12)>>2)])|0);
 $77=(($76+((($index_0_lcssa)*(36))&-1)+32)|0);
 $78=((HEAP32[(($77)>>2)])|0);
 $79=((($78)+(1))|0);
 $80=(($76+((($68)*(36))&-1)+32)|0);
 HEAP32[(($80)>>2)]=$79;
 $81=($67|0)==-1;
 $82=((HEAP32[(($12)>>2)])|0);
 if ($81) {
  $100=(($82+((($68)*(36))&-1)+24)|0);
  HEAP32[(($100)>>2)]=$index_0_lcssa;
  $101=((HEAP32[(($12)>>2)])|0);
  $102=(($101+((($68)*(36))&-1)+28)|0);
  HEAP32[(($102)>>2)]=$leaf;
  $103=((HEAP32[(($12)>>2)])|0);
  $104=(($103+((($index_0_lcssa)*(36))&-1)+20)|0);
  HEAP32[(($104)>>2)]=$68;
  $105=((HEAP32[(($12)>>2)])|0);
  $106=(($105+((($leaf)*(36))&-1)+20)|0);
  HEAP32[(($106)>>2)]=$68;
  HEAP32[(($4)>>2)]=$68;
 } else {
  $84=(($82+((($67)*(36))&-1)+24)|0);
  $85=((HEAP32[(($84)>>2)])|0);
  $86=($85|0)==($index_0_lcssa|0);
  if ($86) {
   HEAP32[(($84)>>2)]=$68;
  } else {
   $89=(($82+((($67)*(36))&-1)+28)|0);
   HEAP32[(($89)>>2)]=$68;
  }
  $91=((HEAP32[(($12)>>2)])|0);
  $92=(($91+((($68)*(36))&-1)+24)|0);
  HEAP32[(($92)>>2)]=$index_0_lcssa;
  $93=((HEAP32[(($12)>>2)])|0);
  $94=(($93+((($68)*(36))&-1)+28)|0);
  HEAP32[(($94)>>2)]=$leaf;
  $95=((HEAP32[(($12)>>2)])|0);
  $96=(($95+((($index_0_lcssa)*(36))&-1)+20)|0);
  HEAP32[(($96)>>2)]=$68;
  $97=((HEAP32[(($12)>>2)])|0);
  $98=(($97+((($leaf)*(36))&-1)+20)|0);
  HEAP32[(($98)>>2)]=$68;
 }
 $108=((HEAP32[(($12)>>2)])|0);
 $109=(($108+((($leaf)*(36))&-1)+20)|0);
 $index_160=((HEAP32[(($109)>>2)])|0);
 $110=($index_160|0)==-1;
 if ($110) {
  STACKTOP=sp;return;
 } else {
  $index_161=$index_160;
 }
 while(1) {

  $111=((__ZN13b2DynamicTree7BalanceEi($this,$index_161))|0);
  $112=((HEAP32[(($12)>>2)])|0);
  $113=(($112+((($111)*(36))&-1)+24)|0);
  $114=((HEAP32[(($113)>>2)])|0);
  $115=(($112+((($111)*(36))&-1)+28)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=(($112+((($114)*(36))&-1)+32)|0);
  $118=((HEAP32[(($117)>>2)])|0);
  $119=(($112+((($116)*(36))&-1)+32)|0);
  $120=((HEAP32[(($119)>>2)])|0);
  $121=((__Z5b2MaxIiET_S0_S0_($118,$120))|0);
  $122=((($121)+(1))|0);
  $123=(($112+((($111)*(36))&-1)+32)|0);
  HEAP32[(($123)>>2)]=$122;
  $124=((HEAP32[(($12)>>2)])|0);
  $125=(($124+((($111)*(36))&-1))|0);
  $126=(($124+((($114)*(36))&-1))|0);
  $127=(($124+((($116)*(36))&-1))|0);
  __ZN6b2AABB7CombineERKS_S1_($125,$126,$127);
  $128=((HEAP32[(($12)>>2)])|0);
  $129=(($128+((($111)*(36))&-1)+20)|0);
  $index_1=((HEAP32[(($129)>>2)])|0);
  $130=($index_1|0)==-1;
  if ($130) {
   break;
  } else {
   $index_161=$index_1;
  }
 }
 STACKTOP=sp;return;
}


function __ZN13b2DynamicTree12DestroyProxyEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var label=0;

 __ZN13b2DynamicTree10RemoveLeafEi($this,$proxyId);
 __ZN13b2DynamicTree8FreeNodeEi($this,$proxyId);
 return;
}


function __ZN13b2DynamicTree10RemoveLeafEi($this,$leaf){
 $this=($this)|0;
 $leaf=($leaf)|0;
 var $1=0,$2=0,$3=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$16=0,$17=0,$sibling_0=0,$19=0,$21=0,$22=0,$23=0,$24=0;
 var $27=0,$29=0,$30=0,$31=0,$index_024=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0;
 var $47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$54=0,$55=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($leaf|0);
 if ($3) {
  HEAP32[(($1)>>2)]=-1;
  return;
 }
 $6=(($this+4)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+((($leaf)*(36))&-1)+20)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($7+((($9)*(36))&-1)+20)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($7+((($9)*(36))&-1)+24)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=($13|0)==($leaf|0);
 if ($14) {
  $16=(($7+((($9)*(36))&-1)+28)|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $sibling_0=$17;
 } else {
  $sibling_0=$13;
 }

 $19=($11|0)==-1;
 if ($19) {
  HEAP32[(($1)>>2)]=$sibling_0;
  $54=((HEAP32[(($6)>>2)])|0);
  $55=(($54+((($sibling_0)*(36))&-1)+20)|0);
  HEAP32[(($55)>>2)]=-1;
  __ZN13b2DynamicTree8FreeNodeEi($this,$9);
  return;
 }
 $21=((HEAP32[(($6)>>2)])|0);
 $22=(($21+((($11)*(36))&-1)+24)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=($23|0)==($9|0);
 if ($24) {
  HEAP32[(($22)>>2)]=$sibling_0;
 } else {
  $27=(($21+((($11)*(36))&-1)+28)|0);
  HEAP32[(($27)>>2)]=$sibling_0;
 }
 $29=((HEAP32[(($6)>>2)])|0);
 $30=(($29+((($sibling_0)*(36))&-1)+20)|0);
 HEAP32[(($30)>>2)]=$11;
 __ZN13b2DynamicTree8FreeNodeEi($this,$9);
 $31=($11|0)==-1;
 if ($31) {
  return;
 } else {
  $index_024=$11;
 }
 while(1) {

  $32=((__ZN13b2DynamicTree7BalanceEi($this,$index_024))|0);
  $33=((HEAP32[(($6)>>2)])|0);
  $34=(($33+((($32)*(36))&-1)+24)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  $36=(($33+((($32)*(36))&-1)+28)|0);
  $37=((HEAP32[(($36)>>2)])|0);
  $38=(($33+((($32)*(36))&-1))|0);
  $39=(($33+((($35)*(36))&-1))|0);
  $40=(($33+((($37)*(36))&-1))|0);
  __ZN6b2AABB7CombineERKS_S1_($38,$39,$40);
  $41=((HEAP32[(($6)>>2)])|0);
  $42=(($41+((($35)*(36))&-1)+32)|0);
  $43=((HEAP32[(($42)>>2)])|0);
  $44=(($41+((($37)*(36))&-1)+32)|0);
  $45=((HEAP32[(($44)>>2)])|0);
  $46=((__Z5b2MaxIiET_S0_S0_($43,$45))|0);
  $47=((($46)+(1))|0);
  $48=(($41+((($32)*(36))&-1)+32)|0);
  HEAP32[(($48)>>2)]=$47;
  $49=((HEAP32[(($6)>>2)])|0);
  $50=(($49+((($32)*(36))&-1)+20)|0);
  $51=((HEAP32[(($50)>>2)])|0);
  $52=($51|0)==-1;
  if ($52) {
   break;
  } else {
   $index_024=$51;
  }
 }
 return;
}


function __ZN13b2DynamicTree9MoveProxyEiRK6b2AABBRK6b2Vec2($this,$proxyId,$aabb,$displacement){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 $aabb=($aabb)|0;
 $displacement=($displacement)|0;
 var $b9=0,$r=0,$1=0,$2=0,$d=0,$3=0,$4=0,$5=0,$6=0,$tmpcast=0,$tmpcast10=0,$b9_sub=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$st$2$0=0;
 var $st$3$1=0,$12=0,$13=0,$ld$4$0=0,$14$0=0,$ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=.0,$17=0,$19=0,$20=.0,$21=.0,$23=0,$24=.0,$25=.0,$27=0,$28=.0;
 var $29=0,$31=0,$32=.0,$33=.0,$35=0,$36=.0,$37=.0,$39=0,$40=0,$41=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $b9=((sp)|0);
 $r=(((sp)+(16))|0);
 $1=(((sp)+(24))|0);
 $2=(((sp)+(32))|0);
 $d=(((sp)+(40))|0);
 $3=(($this+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+((($proxyId)*(36))&-1))|0);
 $6=((__ZNK6b2AABB8ContainsERKS_($5,$aabb))|0);
 if ($6) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $tmpcast=$2;
 $tmpcast10=$1;
 $b9_sub=(($b9)|0);
 __ZN13b2DynamicTree10RemoveLeafEi($this,$proxyId);
 $8=$b9;
 $9=$aabb;
 HEAP32[(($8)>>2)]=((HEAP32[(($9)>>2)])|0);HEAP32[((($8)+(4))>>2)]=((HEAP32[((($9)+(4))>>2)])|0);HEAP32[((($8)+(8))>>2)]=((HEAP32[((($9)+(8))>>2)])|0);HEAP32[((($8)+(12))>>2)]=((HEAP32[((($9)+(12))>>2)])|0);
 __ZN6b2Vec2C1Eff($r,0.10000000149011612,0.10000000149011612);
 $10=$b9;
 __ZmiRK6b2Vec2S1_($tmpcast10,$10,$r);
 $ld$0$0=(($1)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($b9_sub)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($b9_sub+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=(($b9+8)|0);
 $13=$12;
 __ZplRK6b2Vec2S1_($tmpcast,$13,$r);
 $ld$4$0=(($2)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($12)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 __ZmlfRK6b2Vec2($d,2.0,$displacement);
 $15=(($d)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16<(0.0);
 if ($17) {
  $19=$b9;
  $20=(+(HEAPF32[(($19)>>2)]));
  $21=($16)+($20);
  HEAPF32[(($19)>>2)]=$21;
 } else {
  $23=$12;
  $24=(+(HEAPF32[(($23)>>2)]));
  $25=($16)+($24);
  HEAPF32[(($23)>>2)]=$25;
 }
 $27=(($d+4)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28<(0.0);
 if ($29) {
  $31=(($10+4)|0);
  $32=(+(HEAPF32[(($31)>>2)]));
  $33=($28)+($32);
  HEAPF32[(($31)>>2)]=$33;
 } else {
  $35=(($13+4)|0);
  $36=(+(HEAPF32[(($35)>>2)]));
  $37=($28)+($36);
  HEAPF32[(($35)>>2)]=$37;
 }
 $39=((HEAP32[(($3)>>2)])|0);
 $40=(($39+((($proxyId)*(36))&-1))|0);
 $41=$40;
 HEAP32[(($41)>>2)]=((HEAP32[(($8)>>2)])|0);HEAP32[((($41)+(4))>>2)]=((HEAP32[((($8)+(4))>>2)])|0);HEAP32[((($41)+(8))>>2)]=((HEAP32[((($8)+(8))>>2)])|0);HEAP32[((($41)+(12))>>2)]=((HEAP32[((($8)+(12))>>2)])|0);
 __ZN13b2DynamicTree10InsertLeafEi($this,$proxyId);
 $_0=1;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK6b2AABB8ContainsERKS_($this,$aabb){
 $this=($this)|0;
 $aabb=($aabb)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$7=0,$8=.0,$9=0,$10=.0,$11=0,$12=0,$13=.0,$14=0,$15=.0,$16=0,$18=0,$19=.0,$20=0,$21=.0,$22=0;
 var $23=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($aabb)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=$2>$4;
 if ($5) {
  $23=0;

  return (($23)|0);
 }
 $7=(($this+4)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($aabb+4)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=$8>$10;
 if ($11) {
  $23=0;

  return (($23)|0);
 }
 $12=(($aabb+8)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=(($this+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=$13>$15;
 if ($16) {
  $23=0;

  return (($23)|0);
 }
 $18=(($aabb+12)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=(($this+12)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=$19<=$21;
 $23=$22;

 return (($23)|0);
}


function __ZNK10b2TreeNode6IsLeafEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==-1;
 return (($3)|0);
}


function __ZNK6b2AABB12GetPerimeterEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=.0,label=0;

 $1=(($this+8)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)-($4);
 $6=(($this+12)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 $11=($5)+($10);
 $12=($11)*((2.0));
 return (+($12));
}


function __ZN6b2AABB7CombineERKS_S1_($this,$aabb1,$aabb2){
 $this=($this)|0;
 $aabb1=($aabb1)|0;
 $aabb2=($aabb2)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,$7=0,$8=0,$9=0,$10=0,$ld$4$0=0,$11$0=0,$ld$5$1=0;
 var $11$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($aabb1)|0);
 $4=(($aabb2)|0);
 __Z5b2MinRK6b2Vec2S1_($tmpcast,$3,$4);
 $5=$this;
 $ld$0$0=(($1)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($5)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($5+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 $7=(($this+8)|0);
 $8=(($aabb1+8)|0);
 $9=(($aabb2+8)|0);
 __Z5b2MaxRK6b2Vec2S1_($tmpcast5,$8,$9);
 $10=$7;
 $ld$4$0=(($2)|0);
 $11$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $11$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($10)|0);
 HEAP32[(($st$6$0)>>2)]=$11$0;
 $st$7$1=(($10+4)|0);
 HEAP32[(($st$7$1)>>2)]=$11$1;
 STACKTOP=sp;return;
}


function __ZN13b2DynamicTree7BalanceEi($this,$iA){
 $this=($this)|0;
 $iA=($iA)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$23=0;
 var $24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$35=0,$36=0,$37=0,$38=0,$41=0,$43=0,$45=0,$46=0,$47=0,$48=0;
 var $49=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0;
 var $71=0,$72=0,$73=0,$74=0,$75=0,$storemerge111_in=0,$storemerge111=0,$78=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=0,$92=0;
 var $93=0,$94=0,$95=0,$98=0,$100=0,$102=0,$103=0,$104=0,$105=0,$106=0,$108=0,$109=0,$110=0,$111=0,$112=0,$113=0,$114=0,$115=0,$116=0,$117=0;
 var $118=0,$119=0,$121=0,$122=0,$123=0,$124=0,$125=0,$126=0,$127=0,$128=0,$129=0,$130=0,$131=0,$132=0,$storemerge_in=0,$storemerge=0,$_0=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+((($iA)*(36))&-1))|0);
 $4=((__ZNK10b2TreeNode6IsLeafEv($3))|0);
 if ($4) {
  $_0=$iA;

  return (($_0)|0);
 }
 $6=(($2+((($iA)*(36))&-1)+32)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)<2;
 if ($8) {
  $_0=$iA;

  return (($_0)|0);
 }
 $10=(($2+((($iA)*(36))&-1)+24)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($2+((($iA)*(36))&-1)+28)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($2+((($11)*(36))&-1))|0);
 $15=(($2+((($13)*(36))&-1))|0);
 $16=(($2+((($13)*(36))&-1)+32)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=(($2+((($11)*(36))&-1)+32)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($17)-($19))|0);
 $21=($20|0)>1;
 if ($21) {
  $23=(($2+((($13)*(36))&-1)+24)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=(($2+((($13)*(36))&-1)+28)|0);
  $26=((HEAP32[(($25)>>2)])|0);
  $27=(($2+((($24)*(36))&-1))|0);
  $28=(($2+((($26)*(36))&-1))|0);
  HEAP32[(($23)>>2)]=$iA;
  $29=(($2+((($iA)*(36))&-1)+20)|0);
  $30=((HEAP32[(($29)>>2)])|0);
  $31=(($2+((($13)*(36))&-1)+20)|0);
  HEAP32[(($31)>>2)]=$30;
  HEAP32[(($29)>>2)]=$13;
  $32=((HEAP32[(($31)>>2)])|0);
  $33=($32|0)==-1;
  do {
   if ($33) {
    $43=(($this)|0);
    HEAP32[(($43)>>2)]=$13;
   } else {
    $35=((HEAP32[(($1)>>2)])|0);
    $36=(($35+((($32)*(36))&-1)+24)|0);
    $37=((HEAP32[(($36)>>2)])|0);
    $38=($37|0)==($iA|0);
    if ($38) {
     HEAP32[(($36)>>2)]=$13;
     break;
    } else {
     $41=(($35+((($32)*(36))&-1)+28)|0);
     HEAP32[(($41)>>2)]=$13;
     break;
    }
   }
  } while(0);
  $45=(($2+((($24)*(36))&-1)+32)|0);
  $46=((HEAP32[(($45)>>2)])|0);
  $47=(($2+((($26)*(36))&-1)+32)|0);
  $48=((HEAP32[(($47)>>2)])|0);
  $49=($46|0)>($48|0);
  if ($49) {
   HEAP32[(($25)>>2)]=$24;
   HEAP32[(($12)>>2)]=$26;
   $51=(($2+((($26)*(36))&-1)+20)|0);
   HEAP32[(($51)>>2)]=$iA;
   $52=(($3)|0);
   $53=(($14)|0);
   $54=(($28)|0);
   __ZN6b2AABB7CombineERKS_S1_($52,$53,$54);
   $55=(($15)|0);
   $56=(($27)|0);
   __ZN6b2AABB7CombineERKS_S1_($55,$52,$56);
   $57=((HEAP32[(($18)>>2)])|0);
   $58=((HEAP32[(($47)>>2)])|0);
   $59=((__Z5b2MaxIiET_S0_S0_($57,$58))|0);
   $60=((($59)+(1))|0);
   HEAP32[(($6)>>2)]=$60;
   $61=((HEAP32[(($45)>>2)])|0);
   $62=((__Z5b2MaxIiET_S0_S0_($60,$61))|0);
   $storemerge111_in=$62;
  } else {
   HEAP32[(($25)>>2)]=$26;
   HEAP32[(($12)>>2)]=$24;
   $64=(($2+((($24)*(36))&-1)+20)|0);
   HEAP32[(($64)>>2)]=$iA;
   $65=(($3)|0);
   $66=(($14)|0);
   $67=(($27)|0);
   __ZN6b2AABB7CombineERKS_S1_($65,$66,$67);
   $68=(($15)|0);
   $69=(($28)|0);
   __ZN6b2AABB7CombineERKS_S1_($68,$65,$69);
   $70=((HEAP32[(($18)>>2)])|0);
   $71=((HEAP32[(($45)>>2)])|0);
   $72=((__Z5b2MaxIiET_S0_S0_($70,$71))|0);
   $73=((($72)+(1))|0);
   HEAP32[(($6)>>2)]=$73;
   $74=((HEAP32[(($47)>>2)])|0);
   $75=((__Z5b2MaxIiET_S0_S0_($73,$74))|0);
   $storemerge111_in=$75;
  }

  $storemerge111=((($storemerge111_in)+(1))|0);
  HEAP32[(($16)>>2)]=$storemerge111;
  $_0=$13;

  return (($_0)|0);
 }
 $78=($20|0)<-1;
 if (!($78)) {
  $_0=$iA;

  return (($_0)|0);
 }
 $80=(($2+((($11)*(36))&-1)+24)|0);
 $81=((HEAP32[(($80)>>2)])|0);
 $82=(($2+((($11)*(36))&-1)+28)|0);
 $83=((HEAP32[(($82)>>2)])|0);
 $84=(($2+((($81)*(36))&-1))|0);
 $85=(($2+((($83)*(36))&-1))|0);
 HEAP32[(($80)>>2)]=$iA;
 $86=(($2+((($iA)*(36))&-1)+20)|0);
 $87=((HEAP32[(($86)>>2)])|0);
 $88=(($2+((($11)*(36))&-1)+20)|0);
 HEAP32[(($88)>>2)]=$87;
 HEAP32[(($86)>>2)]=$11;
 $89=((HEAP32[(($88)>>2)])|0);
 $90=($89|0)==-1;
 do {
  if ($90) {
   $100=(($this)|0);
   HEAP32[(($100)>>2)]=$11;
  } else {
   $92=((HEAP32[(($1)>>2)])|0);
   $93=(($92+((($89)*(36))&-1)+24)|0);
   $94=((HEAP32[(($93)>>2)])|0);
   $95=($94|0)==($iA|0);
   if ($95) {
    HEAP32[(($93)>>2)]=$11;
    break;
   } else {
    $98=(($92+((($89)*(36))&-1)+28)|0);
    HEAP32[(($98)>>2)]=$11;
    break;
   }
  }
 } while(0);
 $102=(($2+((($81)*(36))&-1)+32)|0);
 $103=((HEAP32[(($102)>>2)])|0);
 $104=(($2+((($83)*(36))&-1)+32)|0);
 $105=((HEAP32[(($104)>>2)])|0);
 $106=($103|0)>($105|0);
 if ($106) {
  HEAP32[(($82)>>2)]=$81;
  HEAP32[(($10)>>2)]=$83;
  $108=(($2+((($83)*(36))&-1)+20)|0);
  HEAP32[(($108)>>2)]=$iA;
  $109=(($3)|0);
  $110=(($15)|0);
  $111=(($85)|0);
  __ZN6b2AABB7CombineERKS_S1_($109,$110,$111);
  $112=(($14)|0);
  $113=(($84)|0);
  __ZN6b2AABB7CombineERKS_S1_($112,$109,$113);
  $114=((HEAP32[(($16)>>2)])|0);
  $115=((HEAP32[(($104)>>2)])|0);
  $116=((__Z5b2MaxIiET_S0_S0_($114,$115))|0);
  $117=((($116)+(1))|0);
  HEAP32[(($6)>>2)]=$117;
  $118=((HEAP32[(($102)>>2)])|0);
  $119=((__Z5b2MaxIiET_S0_S0_($117,$118))|0);
  $storemerge_in=$119;
 } else {
  HEAP32[(($82)>>2)]=$83;
  HEAP32[(($10)>>2)]=$81;
  $121=(($2+((($81)*(36))&-1)+20)|0);
  HEAP32[(($121)>>2)]=$iA;
  $122=(($3)|0);
  $123=(($15)|0);
  $124=(($84)|0);
  __ZN6b2AABB7CombineERKS_S1_($122,$123,$124);
  $125=(($14)|0);
  $126=(($85)|0);
  __ZN6b2AABB7CombineERKS_S1_($125,$122,$126);
  $127=((HEAP32[(($16)>>2)])|0);
  $128=((HEAP32[(($102)>>2)])|0);
  $129=((__Z5b2MaxIiET_S0_S0_($127,$128))|0);
  $130=((($129)+(1))|0);
  HEAP32[(($6)>>2)]=$130;
  $131=((HEAP32[(($104)>>2)])|0);
  $132=((__Z5b2MaxIiET_S0_S0_($130,$131))|0);
  $storemerge_in=$132;
 }

 $storemerge=((($storemerge_in)+(1))|0);
 HEAP32[(($18)>>2)]=$storemerge;
 $_0=$11;

 return (($_0)|0);
}


function __Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$edgeA,$xfA,$circleB,$xfB){
 $manifold=($manifold)|0;
 $edgeA=($edgeA)|0;
 $xfA=($xfA)|0;
 $circleB=($circleB)|0;
 $xfB=($xfB)|0;
 var $Q=0,$1=0,$A=0,$tmpcast=0,$B=0,$tmpcast59=0,$e=0,$2=0,$3=0,$P=0,$d=0,$A1=0,$tmpcast65=0,$B1=0,$tmpcast66=0,$e1=0,$4=0,$P1=0,$tmpcast61=0,$d2=0;
 var $B2=0,$tmpcast62=0,$A2=0,$tmpcast63=0,$e2=0,$5=0,$P4=0,$6=0,$7=0,$8=0,$d5=0,$n=0,$tmpcast60=0,$9=0,$10=0,$11=0,$12=0,$13=0,$ld$0$0=0,$14$0=0;
 var $ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0,$15=0,$16=0,$ld$4$0=0,$17$0=0,$ld$5$1=0,$17$1=0,$st$6$0=0,$st$7$1=0,$18=.0,$19=.0,$20=0,$21=.0,$22=0,$23=.0,$24=.0,$25=0;
 var $tmpcast64=0,$ld$8$0=0,$27$0=0,$ld$9$1=0,$27$1=0,$st$10$0=0,$st$11$1=0,$28=.0,$29=.0,$30=0,$32=0,$33=0,$34=0,$36=0,$37=0,$ld$12$0=0,$38$0=0,$ld$13$1=0,$38$1=0,$st$14$0=0;
 var $st$15$1=0,$ld$16$0=0,$39$0=0,$ld$17$1=0,$39$1=0,$st$18$0=0,$st$19$1=0,$40=.0,$41=0,$43=0,$44=0,$45=0,$46=0,$ld$20$0=0,$47$0=0,$ld$21$1=0,$47$1=0,$st$22$0=0,$st$23$1=0,$48=0;
 var $49=0,$50=0,$cf_sroa_0_0__idx3=0,$cf_sroa_1_1__idx7=0,$cf_sroa_2_2__idx11=0,$cf_sroa_3_3__idx15=0,$51=0,$52=0,$ld$24$0=0,$53$0=0,$ld$25$1=0,$53$1=0,$st$26$0=0,$st$27$1=0,$55=0,$ld$28$0=0,$57$0=0,$ld$29$1=0,$57$1=0,$st$30$0=0;
 var $st$31$1=0,$58=.0,$59=.0,$60=0,$62=0,$63=0,$64=0,$66=0,$67=0,$ld$32$0=0,$68$0=0,$ld$33$1=0,$68$1=0,$st$34$0=0,$st$35$1=0,$ld$36$0=0,$69$0=0,$ld$37$1=0,$69$1=0,$st$38$0=0;
 var $st$39$1=0,$70=.0,$71=0,$73=0,$74=0,$75=0,$76=0,$ld$40$0=0,$77$0=0,$ld$41$1=0,$77$1=0,$st$42$0=0,$st$43$1=0,$78=0,$79=0,$80=0,$cf_sroa_0_0__idx1=0,$cf_sroa_1_1__idx5=0,$cf_sroa_2_2__idx9=0,$cf_sroa_3_3__idx13=0;
 var $81=0,$82=0,$ld$44$0=0,$83$0=0,$ld$45$1=0,$83$1=0,$st$46$0=0,$st$47$1=0,$85=.0,$86=.0,$87=.0,$88=.0,$89=0,$91=0,$92=.0,$93=.0,$94=0,$95=.0,$96=.0,$97=0;
 var $99=0,$100=.0,$101=.0,$102=0,$103=.0,$104=.0,$106=.0,$107=0,$108=0,$109=0,$ld$48$0=0,$110$0=0,$ld$49$1=0,$110$1=0,$st$50$0=0,$st$51$1=0,$111=0,$112=0,$ld$52$0=0,$113$0=0;
 var $ld$53$1=0,$113$1=0,$st$54$0=0,$st$55$1=0,$114=0,$115=0,$116=0,$cf_sroa_0_0__idx=0,$cf_sroa_1_1__idx=0,$cf_sroa_2_2__idx=0,$cf_sroa_3_3__idx=0,$117=0,$118=0,$ld$56$0=0,$119$0=0,$ld$57$1=0,$119$1=0,$st$58$0=0,$st$59$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $Q=((sp)|0);
 $1=(((sp)+(8))|0);
 $A=(((sp)+(16))|0);
 $tmpcast=$A;
 $B=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast59=$B;
 $e=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $A1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast65=$A1;
 $B1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast66=$B1;
 $e1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast61=$P1;
 $d2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $B2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast62=$B2;
 $A2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast63=$A2;
 $e2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $n=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast60=$n;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($manifold+60)|0);
 HEAP32[(($10)>>2)]=0;
 $11=(($circleB+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($1,$xfB,$11);
 __Z6b2MulTRK11b2TransformRK6b2Vec2($Q,$xfA,$1);
 $12=(($edgeA+12)|0);
 $13=$12;
 $ld$0$0=(($13)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($A)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($A+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=(($edgeA+20)|0);
 $16=$15;
 $ld$4$0=(($16)|0);
 $17$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($16+4)|0);
 $17$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($B)|0);
 HEAP32[(($st$6$0)>>2)]=$17$0;
 $st$7$1=(($B+4)|0);
 HEAP32[(($st$7$1)>>2)]=$17$1;
 __ZmiRK6b2Vec2S1_($e,$tmpcast59,$tmpcast);
 __ZmiRK6b2Vec2S1_($2,$tmpcast59,$Q);
 $18=(+(__Z5b2DotRK6b2Vec2S1_($e,$2)));
 __ZmiRK6b2Vec2S1_($3,$Q,$tmpcast);
 $19=(+(__Z5b2DotRK6b2Vec2S1_($e,$3)));
 $20=(($edgeA+8)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=(($circleB+8)|0);
 $23=(+(HEAPF32[(($22)>>2)]));
 $24=($21)+($23);
 $25=$19>(0.0);
 if (!($25)) {
  $tmpcast64=$P;
  $ld$8$0=(($A)|0);
  $27$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($A+4)|0);
  $27$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($P)|0);
  HEAP32[(($st$10$0)>>2)]=$27$0;
  $st$11$1=(($P+4)|0);
  HEAP32[(($st$11$1)>>2)]=$27$1;
  __ZmiRK6b2Vec2S1_($d,$Q,$tmpcast64);
  $28=(+(__Z5b2DotRK6b2Vec2S1_($d,$d)));
  $29=($24)*($24);
  $30=$28>$29;
  if ($30) {
   STACKTOP=sp;return;
  }
  $32=(($edgeA+44)|0);
  $33=((HEAP8[($32)])|0);
  $34=(($33<<24)>>24)==0;
  do {
   if (!($34)) {
    $36=(($edgeA+28)|0);
    $37=$36;
    $ld$12$0=(($37)|0);
    $38$0=((HEAP32[(($ld$12$0)>>2)])|0);
    $ld$13$1=(($37+4)|0);
    $38$1=((HEAP32[(($ld$13$1)>>2)])|0);
    $st$14$0=(($A1)|0);
    HEAP32[(($st$14$0)>>2)]=$38$0;
    $st$15$1=(($A1+4)|0);
    HEAP32[(($st$15$1)>>2)]=$38$1;
    $ld$16$0=(($A)|0);
    $39$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($A+4)|0);
    $39$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($B1)|0);
    HEAP32[(($st$18$0)>>2)]=$39$0;
    $st$19$1=(($B1+4)|0);
    HEAP32[(($st$19$1)>>2)]=$39$1;
    __ZmiRK6b2Vec2S1_($e1,$tmpcast66,$tmpcast65);
    __ZmiRK6b2Vec2S1_($4,$tmpcast66,$Q);
    $40=(+(__Z5b2DotRK6b2Vec2S1_($e1,$4)));
    $41=$40>(0.0);
    if (!($41)) {
     break;
    }
    STACKTOP=sp;return;
   }
  } while(0);
  HEAP32[(($10)>>2)]=1;
  $43=(($manifold+56)|0);
  HEAP32[(($43)>>2)]=0;
  $44=(($manifold+40)|0);
  __ZN6b2Vec27SetZeroEv($44);
  $45=(($manifold+48)|0);
  $46=$45;
  $ld$20$0=(($P)|0);
  $47$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($P+4)|0);
  $47$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($46)|0);
  HEAP32[(($st$22$0)>>2)]=$47$0;
  $st$23$1=(($46+4)|0);
  HEAP32[(($st$23$1)>>2)]=$47$1;
  $48=(($manifold+16)|0);
  $49=(($48)|0);
  HEAP32[(($49)>>2)]=0;
  $50=$48;
  $cf_sroa_0_0__idx3=$48;
  HEAP8[($cf_sroa_0_0__idx3)]=0;
  $cf_sroa_1_1__idx7=(($50+1)|0);
  HEAP8[($cf_sroa_1_1__idx7)]=0;
  $cf_sroa_2_2__idx11=(($50+2)|0);
  HEAP8[($cf_sroa_2_2__idx11)]=0;
  $cf_sroa_3_3__idx15=(($50+3)|0);
  HEAP8[($cf_sroa_3_3__idx15)]=0;
  $51=$11;
  $52=$manifold;
  $ld$24$0=(($51)|0);
  $53$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($51+4)|0);
  $53$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($52)|0);
  HEAP32[(($st$26$0)>>2)]=$53$0;
  $st$27$1=(($52+4)|0);
  HEAP32[(($st$27$1)>>2)]=$53$1;
  STACKTOP=sp;return;
 }
 $55=$18>(0.0);
 if ($55) {
  $85=(+(__Z5b2DotRK6b2Vec2S1_($e,$e)));
  $86=((1.0))/($85);
  __ZmlfRK6b2Vec2($7,$18,$tmpcast);
  __ZmlfRK6b2Vec2($8,$19,$tmpcast59);
  __ZplRK6b2Vec2S1_($6,$7,$8);
  __ZmlfRK6b2Vec2($P4,$86,$6);
  __ZmiRK6b2Vec2S1_($d5,$Q,$P4);
  $87=(+(__Z5b2DotRK6b2Vec2S1_($d5,$d5)));
  $88=($24)*($24);
  $89=$87>$88;
  if ($89) {
   STACKTOP=sp;return;
  }
  $91=(($e+4)|0);
  $92=(+(HEAPF32[(($91)>>2)]));
  $93=((-.0))-($92);
  $94=(($e)|0);
  $95=(+(HEAPF32[(($94)>>2)]));
  __ZN6b2Vec2C1Eff($tmpcast60,$93,$95);
  __ZmiRK6b2Vec2S1_($9,$Q,$tmpcast);
  $96=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast60,$9)));
  $97=$96<(0.0);
  if ($97) {
   $99=$n;
   $100=(+(HEAPF32[(($99)>>2)]));
   $101=((-.0))-($100);
   $102=(($tmpcast60+4)|0);
   $103=(+(HEAPF32[(($102)>>2)]));
   $104=((-.0))-($103);
   __ZN6b2Vec23SetEff($tmpcast60,$101,$104);
  }
  $106=(+(__ZN6b2Vec29NormalizeEv($tmpcast60)));
  HEAP32[(($10)>>2)]=1;
  $107=(($manifold+56)|0);
  HEAP32[(($107)>>2)]=1;
  $108=(($manifold+40)|0);
  $109=$108;
  $ld$48$0=(($n)|0);
  $110$0=((HEAP32[(($ld$48$0)>>2)])|0);
  $ld$49$1=(($n+4)|0);
  $110$1=((HEAP32[(($ld$49$1)>>2)])|0);
  $st$50$0=(($109)|0);
  HEAP32[(($st$50$0)>>2)]=$110$0;
  $st$51$1=(($109+4)|0);
  HEAP32[(($st$51$1)>>2)]=$110$1;
  $111=(($manifold+48)|0);
  $112=$111;
  $ld$52$0=(($A)|0);
  $113$0=((HEAP32[(($ld$52$0)>>2)])|0);
  $ld$53$1=(($A+4)|0);
  $113$1=((HEAP32[(($ld$53$1)>>2)])|0);
  $st$54$0=(($112)|0);
  HEAP32[(($st$54$0)>>2)]=$113$0;
  $st$55$1=(($112+4)|0);
  HEAP32[(($st$55$1)>>2)]=$113$1;
  $114=(($manifold+16)|0);
  $115=(($114)|0);
  HEAP32[(($115)>>2)]=0;
  $116=$114;
  $cf_sroa_0_0__idx=$114;
  HEAP8[($cf_sroa_0_0__idx)]=0;
  $cf_sroa_1_1__idx=(($116+1)|0);
  HEAP8[($cf_sroa_1_1__idx)]=0;
  $cf_sroa_2_2__idx=(($116+2)|0);
  HEAP8[($cf_sroa_2_2__idx)]=1;
  $cf_sroa_3_3__idx=(($116+3)|0);
  HEAP8[($cf_sroa_3_3__idx)]=0;
  $117=$11;
  $118=$manifold;
  $ld$56$0=(($117)|0);
  $119$0=((HEAP32[(($ld$56$0)>>2)])|0);
  $ld$57$1=(($117+4)|0);
  $119$1=((HEAP32[(($ld$57$1)>>2)])|0);
  $st$58$0=(($118)|0);
  HEAP32[(($st$58$0)>>2)]=$119$0;
  $st$59$1=(($118+4)|0);
  HEAP32[(($st$59$1)>>2)]=$119$1;
  STACKTOP=sp;return;
 }
 $ld$28$0=(($B)|0);
 $57$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($B+4)|0);
 $57$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($P1)|0);
 HEAP32[(($st$30$0)>>2)]=$57$0;
 $st$31$1=(($P1+4)|0);
 HEAP32[(($st$31$1)>>2)]=$57$1;
 __ZmiRK6b2Vec2S1_($d2,$Q,$tmpcast61);
 $58=(+(__Z5b2DotRK6b2Vec2S1_($d2,$d2)));
 $59=($24)*($24);
 $60=$58>$59;
 if ($60) {
  STACKTOP=sp;return;
 }
 $62=(($edgeA+45)|0);
 $63=((HEAP8[($62)])|0);
 $64=(($63<<24)>>24)==0;
 do {
  if (!($64)) {
   $66=(($edgeA+36)|0);
   $67=$66;
   $ld$32$0=(($67)|0);
   $68$0=((HEAP32[(($ld$32$0)>>2)])|0);
   $ld$33$1=(($67+4)|0);
   $68$1=((HEAP32[(($ld$33$1)>>2)])|0);
   $st$34$0=(($B2)|0);
   HEAP32[(($st$34$0)>>2)]=$68$0;
   $st$35$1=(($B2+4)|0);
   HEAP32[(($st$35$1)>>2)]=$68$1;
   $ld$36$0=(($B)|0);
   $69$0=((HEAP32[(($ld$36$0)>>2)])|0);
   $ld$37$1=(($B+4)|0);
   $69$1=((HEAP32[(($ld$37$1)>>2)])|0);
   $st$38$0=(($A2)|0);
   HEAP32[(($st$38$0)>>2)]=$69$0;
   $st$39$1=(($A2+4)|0);
   HEAP32[(($st$39$1)>>2)]=$69$1;
   __ZmiRK6b2Vec2S1_($e2,$tmpcast62,$tmpcast63);
   __ZmiRK6b2Vec2S1_($5,$Q,$tmpcast63);
   $70=(+(__Z5b2DotRK6b2Vec2S1_($e2,$5)));
   $71=$70>(0.0);
   if (!($71)) {
    break;
   }
   STACKTOP=sp;return;
  }
 } while(0);
 HEAP32[(($10)>>2)]=1;
 $73=(($manifold+56)|0);
 HEAP32[(($73)>>2)]=0;
 $74=(($manifold+40)|0);
 __ZN6b2Vec27SetZeroEv($74);
 $75=(($manifold+48)|0);
 $76=$75;
 $ld$40$0=(($P1)|0);
 $77$0=((HEAP32[(($ld$40$0)>>2)])|0);
 $ld$41$1=(($P1+4)|0);
 $77$1=((HEAP32[(($ld$41$1)>>2)])|0);
 $st$42$0=(($76)|0);
 HEAP32[(($st$42$0)>>2)]=$77$0;
 $st$43$1=(($76+4)|0);
 HEAP32[(($st$43$1)>>2)]=$77$1;
 $78=(($manifold+16)|0);
 $79=(($78)|0);
 HEAP32[(($79)>>2)]=0;
 $80=$78;
 $cf_sroa_0_0__idx1=$78;
 HEAP8[($cf_sroa_0_0__idx1)]=1;
 $cf_sroa_1_1__idx5=(($80+1)|0);
 HEAP8[($cf_sroa_1_1__idx5)]=0;
 $cf_sroa_2_2__idx9=(($80+2)|0);
 HEAP8[($cf_sroa_2_2__idx9)]=0;
 $cf_sroa_3_3__idx13=(($80+3)|0);
 HEAP8[($cf_sroa_3_3__idx13)]=0;
 $81=$11;
 $82=$manifold;
 $ld$44$0=(($81)|0);
 $83$0=((HEAP32[(($ld$44$0)>>2)])|0);
 $ld$45$1=(($81+4)|0);
 $83$1=((HEAP32[(($ld$45$1)>>2)])|0);
 $st$46$0=(($82)|0);
 HEAP32[(($st$46$0)>>2)]=$83$0;
 $st$47$1=(($82+4)|0);
 HEAP32[(($st$47$1)>>2)]=$83$1;
 STACKTOP=sp;return;
}


function __ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_($this,$manifold,$edgeA,$xfA,$polygonB,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $edgeA=($edgeA)|0;
 $xfA=($xfA)|0;
 $polygonB=($polygonB)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$tmpcast=0,$edge1=0,$3=0,$edge0=0,$4=0,$edge2=0,$5=0,$6=0,$tmpcast133=0,$7=0,$tmpcast134=0,$8=0,$tmpcast135=0,$9=0,$tmpcast129=0,$10=0,$tmpcast130=0,$11=0;
 var $tmpcast131=0,$12=0,$tmpcast125=0,$13=0,$tmpcast126=0,$14=0,$tmpcast127=0,$15=0,$tmpcast121=0,$16=0,$tmpcast122=0,$17=0,$tmpcast123=0,$18=0,$tmpcast119=0,$19=0,$tmpcast117=0,$20=0,$tmpcast118=0,$21=0;
 var $tmpcast115=0,$22=0,$tmpcast113=0,$23=0,$tmpcast114=0,$24=0,$tmpcast111=0,$25=0,$tmpcast109=0,$26=0,$tmpcast110=0,$27=0,$tmpcast107=0,$28=0,$tmpcast105=0,$29=0,$tmpcast106=0,$30=0,$tmpcast103=0,$31=0;
 var $tmpcast104=0,$32=0,$tmpcast95=0,$33=0,$tmpcast101=0,$34=0,$tmpcast102=0,$edgeAxis=0,$polygonAxis=0,$ie97=0,$ie97_sub=0,$tmpcast96=0,$rf=0,$35=0,$tmpcast100=0,$36=0,$tmpcast98=0,$clipPoints1=0,$clipPoints2167=0,$clipPoints2167_sub=0;
 var $tmpcast166=0,$37=0,$38=0,$tmpcast99=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$ld$0$0=0,$45$0=0,$ld$1$1=0,$45$1=0,$st$2$0=0,$st$3$1=0,$46=0,$47=0,$48=0,$49=0;
 var $ld$4$0=0,$50$0=0,$ld$5$1=0,$50$1=0,$st$6$0=0,$st$7$1=0,$51=0,$52=0,$53=0,$54=0,$ld$8$0=0,$55$0=0,$ld$9$1=0,$55$1=0,$st$10$0=0,$st$11$1=0,$56=0,$57=0,$58=0,$59=0;
 var $ld$12$0=0,$60$0=0,$ld$13$1=0,$60$1=0,$st$14$0=0,$st$15$1=0,$61=0,$62=0,$63=0,$64=0,$ld$16$0=0,$65$0=0,$ld$17$1=0,$65$1=0,$st$18$0=0,$st$19$1=0,$66=0,$67=0,$68=0,$69=0;
 var $70=0,$71=0,$72=.0,$73=0,$74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=.0,$82=0,$83=0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=0,$90=.0;
 var $convex1_0_off0=0,$offset0_0=.0,$93=.0,$94=0,$95=0,$96=.0,$97=0,$98=.0,$99=.0,$100=.0,$101=0,$102=.0,$brmerge_demorgan=0,$brmerge137_demorgan=0,$105=0,$106=0,$or_cond=0,$107=0,$108=0,$110=0;
 var $phitmp132=0,$111=0,$112=0,$114=0,$115=0,$116=0,$ld$20$0=0,$117$0=0,$ld$21$1=0,$117$1=0,$st$22$0=0,$st$23$1=0,$118=0,$119=0,$120=0,$121=0,$ld$24$0=0,$122$0=0,$ld$25$1=0,$122$1=0;
 var $st$26$0=0,$st$27$1=0,$123=0,$124=0,$125=0,$126=0,$ld$28$0=0,$127$0=0,$ld$29$1=0,$127$1=0,$st$30$0=0,$st$31$1=0,$129=0,$ld$32$0=0,$130$0=0,$ld$33$1=0,$130$1=0,$st$34$0=0,$st$35$1=0,$131=0;
 var $132=0,$ld$36$0=0,$133$0=0,$ld$37$1=0,$133$1=0,$st$38$0=0,$st$39$1=0,$134=0,$135=0,$ld$40$0=0,$136$0=0,$ld$41$1=0,$136$1=0,$st$42$0=0,$st$43$1=0,$139=0,$140=0,$141=0,$143=0,$144=0;
 var $145=0,$147=0,$phitmp128=0,$148=0,$149=0,$151=0,$152=0,$153=0,$ld$44$0=0,$154$0=0,$ld$45$1=0,$154$1=0,$st$46$0=0,$st$47$1=0,$155=0,$156=0,$157=0,$158=0,$ld$48$0=0,$159$0=0;
 var $ld$49$1=0,$159$1=0,$st$50$0=0,$st$51$1=0,$160=0,$161=0,$ld$52$0=0,$162$0=0,$ld$53$1=0,$162$1=0,$st$54$0=0,$st$55$1=0,$164=0,$165=0,$ld$56$0=0,$166$0=0,$ld$57$1=0,$166$1=0,$st$58$0=0,$st$59$1=0;
 var $167=0,$168=0,$169=0,$ld$60$0=0,$170$0=0,$ld$61$1=0,$170$1=0,$st$62$0=0,$st$63$1=0,$171=0,$172=0,$ld$64$0=0,$173$0=0,$ld$65$1=0,$173$1=0,$st$66$0=0,$st$67$1=0,$176=0,$177=0,$178=0;
 var $180=0,$181=0,$182=0,$184=0,$phitmp124=0,$185=0,$186=0,$188=0,$189=0,$190=0,$ld$68$0=0,$191$0=0,$ld$69$1=0,$191$1=0,$st$70$0=0,$st$71$1=0,$192=0,$193=0,$ld$72$0=0,$194$0=0;
 var $ld$73$1=0,$194$1=0,$st$74$0=0,$st$75$1=0,$195=0,$196=0,$197=0,$198=0,$ld$76$0=0,$199$0=0,$ld$77$1=0,$199$1=0,$st$78$0=0,$st$79$1=0,$201=0,$202=0,$ld$80$0=0,$203$0=0,$ld$81$1=0,$203$1=0;
 var $st$82$0=0,$st$83$1=0,$204=0,$205=0,$ld$84$0=0,$206$0=0,$ld$85$1=0,$206$1=0,$st$86$0=0,$st$87$1=0,$207=0,$208=0,$209=0,$ld$88$0=0,$210$0=0,$ld$89$1=0,$210$1=0,$st$90$0=0,$st$91$1=0,$212=0;
 var $213=0,$or_cond138=0,$214=0,$215=0,$217=0,$phitmp120=0,$218=0,$219=0,$221=0,$222=0,$ld$92$0=0,$223$0=0,$ld$93$1=0,$223$1=0,$st$94$0=0,$st$95$1=0,$224=0,$225=0,$ld$96$0=0,$226$0=0;
 var $ld$97$1=0,$226$1=0,$st$98$0=0,$st$99$1=0,$227=0,$228=0,$ld$100$0=0,$229$0=0,$ld$101$1=0,$229$1=0,$st$102$0=0,$st$103$1=0,$231=0,$232=0,$ld$104$0=0,$233$0=0,$ld$105$1=0,$233$1=0,$st$106$0=0,$st$107$1=0;
 var $234=0,$235=0,$236=0,$ld$108$0=0,$237$0=0,$ld$109$1=0,$237$1=0,$st$110$0=0,$st$111$1=0,$238=0,$239=0,$240=0,$ld$112$0=0,$241$0=0,$ld$113$1=0,$241$1=0,$st$114$0=0,$st$115$1=0,$offset2_0144=.0,$convex2_0_off0143=0;
 var $243=0,$245=0,$246=0,$248=0,$phitmp116=0,$249=0,$250=0,$252=0,$253=0,$254=0,$ld$116$0=0,$255$0=0,$ld$117$1=0,$255$1=0,$st$118$0=0,$st$119$1=0,$256=0,$257=0,$258=0,$259=0;
 var $ld$120$0=0,$260$0=0,$ld$121$1=0,$260$1=0,$st$122$0=0,$st$123$1=0,$261=0,$262=0,$ld$124$0=0,$263$0=0,$ld$125$1=0,$263$1=0,$st$126$0=0,$st$127$1=0,$265=0,$ld$128$0=0,$266$0=0,$ld$129$1=0,$266$1=0,$st$130$0=0;
 var $st$131$1=0,$267=0,$268=0,$269=0,$ld$132$0=0,$270$0=0,$ld$133$1=0,$270$1=0,$st$134$0=0,$st$135$1=0,$271=0,$272=0,$ld$136$0=0,$273$0=0,$ld$137$1=0,$273$1=0,$st$138$0=0,$st$139$1=0,$275=0,$276=0;
 var $278=0,$phitmp112=0,$279=0,$280=0,$282=0,$283=0,$ld$140$0=0,$284$0=0,$ld$141$1=0,$284$1=0,$st$142$0=0,$st$143$1=0,$285=0,$286=0,$ld$144$0=0,$287$0=0,$ld$145$1=0,$287$1=0,$st$146$0=0,$st$147$1=0;
 var $288=0,$289=0,$ld$148$0=0,$290$0=0,$ld$149$1=0,$290$1=0,$st$150$0=0,$st$151$1=0,$292=0,$293=0,$ld$152$0=0,$294$0=0,$ld$153$1=0,$294$1=0,$st$154$0=0,$st$155$1=0,$295=0,$296=0,$297=0,$ld$156$0=0;
 var $298$0=0,$ld$157$1=0,$298$1=0,$st$158$0=0,$st$159$1=0,$299=0,$300=0,$301=0,$ld$160$0=0,$302$0=0,$ld$161$1=0,$302$1=0,$st$162$0=0,$st$163$1=0,$304=0,$307=0,$308=0,$310=0,$phitmp108=0,$311=0;
 var $312=0,$314=0,$315=0,$316=0,$ld$164$0=0,$317$0=0,$ld$165$1=0,$317$1=0,$st$166$0=0,$st$167$1=0,$318=0,$319=0,$ld$168$0=0,$320$0=0,$ld$169$1=0,$320$1=0,$st$170$0=0,$st$171$1=0,$321=0,$322=0;
 var $323=0,$324=0,$ld$172$0=0,$325$0=0,$ld$173$1=0,$325$1=0,$st$174$0=0,$st$175$1=0,$327=0,$ld$176$0=0,$328$0=0,$ld$177$1=0,$328$1=0,$st$178$0=0,$st$179$1=0,$329=0,$330=0,$ld$180$0=0,$331$0=0,$ld$181$1=0;
 var $331$1=0,$st$182$0=0,$st$183$1=0,$332=0,$333=0,$334=0,$ld$184$0=0,$335$0=0,$ld$185$1=0,$335$1=0,$st$186$0=0,$st$187$1=0,$337=0,$338=0,$340=0,$phitmp=0,$341=0,$342=0,$344=0,$345=0;
 var $ld$188$0=0,$346$0=0,$ld$189$1=0,$346$1=0,$st$190$0=0,$st$191$1=0,$347=0,$348=0,$ld$192$0=0,$349$0=0,$ld$193$1=0,$349$1=0,$st$194$0=0,$st$195$1=0,$350=0,$351=0,$ld$196$0=0,$352$0=0,$ld$197$1=0,$352$1=0;
 var $st$198$0=0,$st$199$1=0,$354=0,$355=0,$ld$200$0=0,$356$0=0,$ld$201$1=0,$356$1=0,$st$202$0=0,$st$203$1=0,$357=0,$358=0,$359=0,$ld$204$0=0,$360$0=0,$ld$205$1=0,$360$1=0,$st$206$0=0,$st$207$1=0,$361=0;
 var $362=0,$363=0,$ld$208$0=0,$364$0=0,$ld$209$1=0,$364$1=0,$st$210$0=0,$st$211$1=0,$366=0,$367=0,$368=0,$370=0,$371=0,$ld$212$0=0,$372$0=0,$ld$213$1=0,$372$1=0,$st$214$0=0,$st$215$1=0,$373=0;
 var $374=0,$ld$216$0=0,$375$0=0,$ld$217$1=0,$375$1=0,$st$218$0=0,$st$219$1=0,$376=0,$377=0,$ld$220$0=0,$378$0=0,$ld$221$1=0,$378$1=0,$st$222$0=0,$st$223$1=0,$380=0,$ld$224$0=0,$381$0=0,$ld$225$1=0,$381$1=0;
 var $st$226$0=0,$st$227$1=0,$382=0,$383=0,$384=0,$ld$228$0=0,$385$0=0,$ld$229$1=0,$385$1=0,$st$230$0=0,$st$231$1=0,$386=0,$387=0,$ld$232$0=0,$388$0=0,$ld$233$1=0,$388$1=0,$st$234$0=0,$st$235$1=0,$390=0;
 var $391=0,$392=0,$393=0,$394=0,$395=0,$i_0162=0,$397=0,$398=0,$399=0,$ld$236$0=0,$400$0=0,$ld$237$1=0,$400$1=0,$st$238$0=0,$st$239$1=0,$401=0,$402=0,$403=0,$ld$240$0=0,$404$0=0;
 var $ld$241$1=0,$404$1=0,$st$242$0=0,$st$243$1=0,$405=0,$406=0,$407=0,$408=0,$409=0,$410=0,$411=0,$412=0,$414=0,$415=.0,$416=.0,$417=0,$419=0,$420=0,$421=0,$423=0;
 var $424=.0,$425=.0,$426=0,$_pr=0,$428=0,$primaryAxis_sroa_0_0_copyload31=0,$primaryAxis_sroa_1_4__idx37=0,$primaryAxis_sroa_1_4_copyload38=0,$430=0,$431=.0,$432=.0,$433=.0,$434=.0,$435=0,$primaryAxis_sroa_1_4__idx35=0,$primaryAxis_sroa_1_4_copyload36=0,$primaryAxis_sroa_0_0_copyload=0,$primaryAxis_sroa_1_4__idx34=0,$primaryAxis_sroa_1_4_copyload=0,$primaryAxis_sroa_1_0=0;
 var $primaryAxis_sroa_0_0=0,$439=0,$440=0,$441=0,$443=0,$444=0,$445=0,$446=0,$447=.0,$448=0,$i1_0160=0,$bestValue_0159=.0,$bestIndex_0158=0,$450=0,$451=.0,$452=0,$bestIndex_1=0,$bestValue_1=.0,$453=0,$454=0;
 var $_lcssa=0,$bestIndex_0_lcssa=0,$455=0,$456=0,$_=0,$457=0,$458=0,$ld$244$0=0,$459$0=0,$ld$245$1=0,$459$1=0,$st$246$0=0,$st$247$1=0,$460=0,$461=0,$462=0,$463=0,$464=0,$465=0,$466=0;
 var $467=0,$468=0,$469=0,$470=0,$ld$248$0=0,$471$0=0,$ld$249$1=0,$471$1=0,$st$250$0=0,$st$251$1=0,$472=0,$473=0,$474=0,$475=0,$476=0,$477=0,$478=0,$479=0,$480=0,$481=0;
 var $482=0,$484=0,$485=0,$486=0,$ld$252$0=0,$487$0=0,$ld$253$1=0,$487$1=0,$st$254$0=0,$st$255$1=0,$488=0,$489=0,$ld$256$0=0,$490$0=0,$ld$257$1=0,$490$1=0,$st$258$0=0,$st$259$1=0,$491=0,$492=0;
 var $493=0,$ld$260$0=0,$494$0=0,$ld$261$1=0,$494$1=0,$st$262$0=0,$st$263$1=0,$496=0,$497=0,$498=0,$ld$264$0=0,$499$0=0,$ld$265$1=0,$499$1=0,$st$266$0=0,$st$267$1=0,$500=0,$501=0,$ld$268$0=0,$502$0=0;
 var $ld$269$1=0,$502$1=0,$st$270$0=0,$st$271$1=0,$503=0,$504=0,$ld$272$0=0,$505$0=0,$ld$273$1=0,$505$1=0,$st$274$0=0,$st$275$1=0,$ld$276$0=0,$507$0=0,$ld$277$1=0,$507$1=0,$st$278$0=0,$st$279$1=0,$508=0,$509=0;
 var $510=0,$511=0,$512=0,$513=0,$514=0,$515=0,$516=0,$ld$280$0=0,$517$0=0,$ld$281$1=0,$517$1=0,$st$282$0=0,$st$283$1=0,$518=0,$519=0,$520=0,$521=0,$522=0,$523=0,$524=0;
 var $525=0,$526=0,$527=0,$_139=0,$528=0,$529=0,$530=0,$531=0,$532=0,$533=0,$ld$284$0=0,$534$0=0,$ld$285$1=0,$534$1=0,$st$286$0=0,$st$287$1=0,$535=0,$536=0,$537=0,$538=0;
 var $539=0,$ld$288$0=0,$540$0=0,$ld$289$1=0,$540$1=0,$st$290$0=0,$st$291$1=0,$541=0,$542=0,$543=0,$544=0,$545=0,$ld$292$0=0,$546$0=0,$ld$293$1=0,$546$1=0,$st$294$0=0,$st$295$1=0,$548=0,$549=0;
 var $550=0,$551=.0,$552=0,$553=.0,$554=.0,$555=0,$556=0,$ld$296$0=0,$557$0=0,$ld$297$1=0,$557$1=0,$st$298$0=0,$st$299$1=0,$558=0,$559=.0,$560=0,$561=0,$562=.0,$563=0,$564=0;
 var $565=.0,$566=0,$567=0,$568=0,$569=0,$571=0,$572=.0,$573=0,$574=0,$575=0,$576=0,$578=0,$580=0,$581=0,$ld$300$0=0,$582$0=0,$ld$301$1=0,$582$1=0,$st$302$0=0,$st$303$1=0;
 var $583=0,$584=0,$585=0,$ld$304$0=0,$586$0=0,$ld$305$1=0,$586$1=0,$st$306$0=0,$st$307$1=0,$588=0,$589=0,$590=0,$591=0,$ld$308$0=0,$592$0=0,$ld$309$1=0,$592$1=0,$st$310$0=0,$st$311$1=0,$593=0;
 var $594=0,$595=0,$596=0,$597=0,$ld$312$0=0,$598$0=0,$ld$313$1=0,$598$1=0,$st$314$0=0,$st$315$1=0,$599=0,$600=.0,$601=.0,$602=0,$605=0,$ld$316$0=0,$606$0=0,$ld$317$1=0,$606$1=0,$st$318$0=0;
 var $st$319$1=0,$607=0,$608=0,$609=0,$610=0,$612=0,$ld$320$0=0,$613$0=0,$ld$321$1=0,$613$1=0,$st$322$0=0,$st$323$1=0,$614=0,$615=0,$616=0,$617=0,$618=0,$619=0,$620=0,$621=0;
 var $622=0,$623=0,$624=0,$625=0,$626=0,$627=0,$628=0,$629=0,$pointCount_1=0,$631=0,$632=0,$633=.0,$634=.0,$635=0,$638=0,$640=0,$641=0,$ld$324$0=0,$642$0=0,$ld$325$1=0;
 var $642$1=0,$st$326$0=0,$st$327$1=0,$643=0,$644=0,$645=0,$646=0,$647=0,$648=0,$649=0,$650=0,$651=0,$652=0,$653=0,$654=0,$655=0,$656=0,$657=0,$658=0,$660=0;
 var $ld$328$0=0,$661$0=0,$ld$329$1=0,$661$1=0,$st$330$0=0,$st$331$1=0,$662=0,$663=0,$664=0,$666=0,$pointCount_1_1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $2=(((sp)+(16))|0);
 $tmpcast=$2;
 $edge1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $edge0=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $edge2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast133=$6;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast134=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast135=$8;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast129=$9;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast130=$10;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast131=$11;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast125=$12;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast126=$13;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast127=$14;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast121=$15;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast122=$16;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast123=$17;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast119=$18;
 $19=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast117=$19;
 $20=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast118=$20;
 $21=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast115=$21;
 $22=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast113=$22;
 $23=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast114=$23;
 $24=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast111=$24;
 $25=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast109=$25;
 $26=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast110=$26;
 $27=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast107=$27;
 $28=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast105=$28;
 $29=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast106=$29;
 $30=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast103=$30;
 $31=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast104=$31;
 $32=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast95=$32;
 $33=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast101=$33;
 $34=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast102=$34;
 $edgeAxis=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $polygonAxis=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $ie97=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $ie97_sub=(($ie97)|0);
 $tmpcast96=$ie97;
 $rf=STACKTOP;STACKTOP = (STACKTOP + 56)|0;
 $35=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast100=$35;
 $36=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast98=$36;
 $clipPoints1=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $clipPoints2167=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $clipPoints2167_sub=(($clipPoints2167)|0);
 $tmpcast166=$clipPoints2167;
 $37=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $38=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast99=$38;
 $39=(($this+132)|0);
 __Z6b2MulTRK11b2TransformS1_($1,$xfA,$xfB);
 $40=$39;
 $41=$1;
 HEAP32[(($40)>>2)]=((HEAP32[(($41)>>2)])|0);HEAP32[((($40)+(4))>>2)]=((HEAP32[((($41)+(4))>>2)])|0);HEAP32[((($40)+(8))>>2)]=((HEAP32[((($41)+(8))>>2)])|0);HEAP32[((($40)+(12))>>2)]=((HEAP32[((($41)+(12))>>2)])|0);
 $42=(($this+148)|0);
 $43=(($polygonB+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast,$39,$43);
 $44=$42;
 $ld$0$0=(($2)|0);
 $45$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $45$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($44)|0);
 HEAP32[(($st$2$0)>>2)]=$45$0;
 $st$3$1=(($44+4)|0);
 HEAP32[(($st$3$1)>>2)]=$45$1;
 $46=(($this+156)|0);
 $47=(($edgeA+28)|0);
 $48=$47;
 $49=$46;
 $ld$4$0=(($48)|0);
 $50$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($48+4)|0);
 $50$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($49)|0);
 HEAP32[(($st$6$0)>>2)]=$50$0;
 $st$7$1=(($49+4)|0);
 HEAP32[(($st$7$1)>>2)]=$50$1;
 $51=(($this+164)|0);
 $52=(($edgeA+12)|0);
 $53=$52;
 $54=$51;
 $ld$8$0=(($53)|0);
 $55$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($53+4)|0);
 $55$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($54)|0);
 HEAP32[(($st$10$0)>>2)]=$55$0;
 $st$11$1=(($54+4)|0);
 HEAP32[(($st$11$1)>>2)]=$55$1;
 $56=(($this+172)|0);
 $57=(($edgeA+20)|0);
 $58=$57;
 $59=$56;
 $ld$12$0=(($58)|0);
 $60$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($58+4)|0);
 $60$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($59)|0);
 HEAP32[(($st$14$0)>>2)]=$60$0;
 $st$15$1=(($59+4)|0);
 HEAP32[(($st$15$1)>>2)]=$60$1;
 $61=(($this+180)|0);
 $62=(($edgeA+36)|0);
 $63=$62;
 $64=$61;
 $ld$16$0=(($63)|0);
 $65$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($63+4)|0);
 $65$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($64)|0);
 HEAP32[(($st$18$0)>>2)]=$65$0;
 $st$19$1=(($64+4)|0);
 HEAP32[(($st$19$1)>>2)]=$65$1;
 $66=(($edgeA+44)|0);
 $67=((HEAP8[($66)])|0);
 $68=(($67<<24)>>24)!=0;
 $69=(($edgeA+45)|0);
 $70=((HEAP8[($69)])|0);
 $71=(($70<<24)>>24)!=0;
 __ZmiRK6b2Vec2S1_($edge1,$56,$51);
 $72=(+(__ZN6b2Vec29NormalizeEv($edge1)));
 $73=(($this+196)|0);
 $74=(($edge1+4)|0);
 $75=(+(HEAPF32[(($74)>>2)]));
 $76=(($edge1)|0);
 $77=(+(HEAPF32[(($76)>>2)]));
 $78=((-.0))-($77);
 __ZN6b2Vec23SetEff($73,$75,$78);
 __ZmiRK6b2Vec2S1_($3,$42,$51);
 $79=(+(__Z5b2DotRK6b2Vec2S1_($73,$3)));
 if ($68) {
  __ZmiRK6b2Vec2S1_($edge0,$51,$46);
  $81=(+(__ZN6b2Vec29NormalizeEv($edge0)));
  $82=(($this+188)|0);
  $83=(($edge0+4)|0);
  $84=(+(HEAPF32[(($83)>>2)]));
  $85=(($edge0)|0);
  $86=(+(HEAPF32[(($85)>>2)]));
  $87=((-.0))-($86);
  __ZN6b2Vec23SetEff($82,$84,$87);
  $88=(+(__Z7b2CrossRK6b2Vec2S1_($edge0,$edge1)));
  $89=$88>=(0.0);
  __ZmiRK6b2Vec2S1_($4,$42,$46);
  $90=(+(__Z5b2DotRK6b2Vec2S1_($82,$4)));
  $offset0_0=$90;$convex1_0_off0=$89;
 } else {
  $offset0_0=0.0;$convex1_0_off0=0;
 }


 L4: do {
  if ($71) {
   __ZmiRK6b2Vec2S1_($edge2,$61,$56);
   $93=(+(__ZN6b2Vec29NormalizeEv($edge2)));
   $94=(($this+204)|0);
   $95=(($edge2+4)|0);
   $96=(+(HEAPF32[(($95)>>2)]));
   $97=(($edge2)|0);
   $98=(+(HEAPF32[(($97)>>2)]));
   $99=((-.0))-($98);
   __ZN6b2Vec23SetEff($94,$96,$99);
   $100=(+(__Z7b2CrossRK6b2Vec2S1_($edge1,$edge2)));
   $101=$100>(0.0);
   __ZmiRK6b2Vec2S1_($5,$42,$56);
   $102=(+(__Z5b2DotRK6b2Vec2S1_($94,$5)));
   $brmerge_demorgan=$68&$71;
   if (!($brmerge_demorgan)) {
    $convex2_0_off0143=$101;$offset2_0144=$102;
    label = 32;
    break;
   }
   $brmerge137_demorgan=$convex1_0_off0&$101;
   if ($brmerge137_demorgan) {
    $105=$offset0_0<(0.0);
    $106=$79<(0.0);
    $or_cond=$105&$106;
    do {
     if ($or_cond) {
      $110=$102>=(0.0);
      $phitmp132=($110&1);
      $111=(($this+248)|0);
      HEAP8[($111)]=$phitmp132;
      $112=(($this+212)|0);
      if ($110) {
       $114=$112;
       break;
      }
      __ZNK6b2Vec2ngEv($tmpcast133,$73);
      $129=$112;
      $ld$32$0=(($6)|0);
      $130$0=((HEAP32[(($ld$32$0)>>2)])|0);
      $ld$33$1=(($6+4)|0);
      $130$1=((HEAP32[(($ld$33$1)>>2)])|0);
      $st$34$0=(($129)|0);
      HEAP32[(($st$34$0)>>2)]=$130$0;
      $st$35$1=(($129+4)|0);
      HEAP32[(($st$35$1)>>2)]=$130$1;
      $131=(($this+228)|0);
      __ZNK6b2Vec2ngEv($tmpcast134,$73);
      $132=$131;
      $ld$36$0=(($7)|0);
      $133$0=((HEAP32[(($ld$36$0)>>2)])|0);
      $ld$37$1=(($7+4)|0);
      $133$1=((HEAP32[(($ld$37$1)>>2)])|0);
      $st$38$0=(($132)|0);
      HEAP32[(($st$38$0)>>2)]=$133$0;
      $st$39$1=(($132+4)|0);
      HEAP32[(($st$39$1)>>2)]=$133$1;
      $134=(($this+236)|0);
      __ZNK6b2Vec2ngEv($tmpcast135,$73);
      $135=$134;
      $ld$40$0=(($8)|0);
      $136$0=((HEAP32[(($ld$40$0)>>2)])|0);
      $ld$41$1=(($8+4)|0);
      $136$1=((HEAP32[(($ld$41$1)>>2)])|0);
      $st$42$0=(($135)|0);
      HEAP32[(($st$42$0)>>2)]=$136$0;
      $st$43$1=(($135+4)|0);
      HEAP32[(($st$43$1)>>2)]=$136$1;
      break L4;
     } else {
      $107=(($this+248)|0);
      HEAP8[($107)]=1;
      $108=(($this+212)|0);
      $114=$108;
     }
    } while(0);

    $115=$73;
    $116=$114;
    $ld$20$0=(($115)|0);
    $117$0=((HEAP32[(($ld$20$0)>>2)])|0);
    $ld$21$1=(($115+4)|0);
    $117$1=((HEAP32[(($ld$21$1)>>2)])|0);
    $st$22$0=(($116)|0);
    HEAP32[(($st$22$0)>>2)]=$117$0;
    $st$23$1=(($116+4)|0);
    HEAP32[(($st$23$1)>>2)]=$117$1;
    $118=(($this+228)|0);
    $119=(($this+188)|0);
    $120=$119;
    $121=$118;
    $ld$24$0=(($120)|0);
    $122$0=((HEAP32[(($ld$24$0)>>2)])|0);
    $ld$25$1=(($120+4)|0);
    $122$1=((HEAP32[(($ld$25$1)>>2)])|0);
    $st$26$0=(($121)|0);
    HEAP32[(($st$26$0)>>2)]=$122$0;
    $st$27$1=(($121+4)|0);
    HEAP32[(($st$27$1)>>2)]=$122$1;
    $123=(($this+236)|0);
    $124=(($this+204)|0);
    $125=$124;
    $126=$123;
    $ld$28$0=(($125)|0);
    $127$0=((HEAP32[(($ld$28$0)>>2)])|0);
    $ld$29$1=(($125+4)|0);
    $127$1=((HEAP32[(($ld$29$1)>>2)])|0);
    $st$30$0=(($126)|0);
    HEAP32[(($st$30$0)>>2)]=$127$0;
    $st$31$1=(($126+4)|0);
    HEAP32[(($st$31$1)>>2)]=$127$1;
    break;
   }
   if ($convex1_0_off0) {
    $139=$offset0_0<(0.0);
    do {
     if ($139) {
      $143=$79<(0.0);
      if ($143) {
       $144=(($this+248)|0);
       HEAP8[($144)]=0;
       $145=(($this+212)|0);
       $164=$145;
      } else {
       $147=$102>=(0.0);
       $phitmp128=($147&1);
       $148=(($this+248)|0);
       HEAP8[($148)]=$phitmp128;
       $149=(($this+212)|0);
       if ($147) {
        $151=$149;
        break;
       } else {
        $164=$149;
       }
      }

      __ZNK6b2Vec2ngEv($tmpcast129,$73);
      $165=$164;
      $ld$56$0=(($9)|0);
      $166$0=((HEAP32[(($ld$56$0)>>2)])|0);
      $ld$57$1=(($9+4)|0);
      $166$1=((HEAP32[(($ld$57$1)>>2)])|0);
      $st$58$0=(($165)|0);
      HEAP32[(($st$58$0)>>2)]=$166$0;
      $st$59$1=(($165+4)|0);
      HEAP32[(($st$59$1)>>2)]=$166$1;
      $167=(($this+228)|0);
      $168=(($this+204)|0);
      __ZNK6b2Vec2ngEv($tmpcast130,$168);
      $169=$167;
      $ld$60$0=(($10)|0);
      $170$0=((HEAP32[(($ld$60$0)>>2)])|0);
      $ld$61$1=(($10+4)|0);
      $170$1=((HEAP32[(($ld$61$1)>>2)])|0);
      $st$62$0=(($169)|0);
      HEAP32[(($st$62$0)>>2)]=$170$0;
      $st$63$1=(($169+4)|0);
      HEAP32[(($st$63$1)>>2)]=$170$1;
      $171=(($this+236)|0);
      __ZNK6b2Vec2ngEv($tmpcast131,$73);
      $172=$171;
      $ld$64$0=(($11)|0);
      $173$0=((HEAP32[(($ld$64$0)>>2)])|0);
      $ld$65$1=(($11+4)|0);
      $173$1=((HEAP32[(($ld$65$1)>>2)])|0);
      $st$66$0=(($172)|0);
      HEAP32[(($st$66$0)>>2)]=$173$0;
      $st$67$1=(($172+4)|0);
      HEAP32[(($st$67$1)>>2)]=$173$1;
      break L4;
     } else {
      $140=(($this+248)|0);
      HEAP8[($140)]=1;
      $141=(($this+212)|0);
      $151=$141;
     }
    } while(0);

    $152=$73;
    $153=$151;
    $ld$44$0=(($152)|0);
    $154$0=((HEAP32[(($ld$44$0)>>2)])|0);
    $ld$45$1=(($152+4)|0);
    $154$1=((HEAP32[(($ld$45$1)>>2)])|0);
    $st$46$0=(($153)|0);
    HEAP32[(($st$46$0)>>2)]=$154$0;
    $st$47$1=(($153+4)|0);
    HEAP32[(($st$47$1)>>2)]=$154$1;
    $155=(($this+228)|0);
    $156=(($this+188)|0);
    $157=$156;
    $158=$155;
    $ld$48$0=(($157)|0);
    $159$0=((HEAP32[(($ld$48$0)>>2)])|0);
    $ld$49$1=(($157+4)|0);
    $159$1=((HEAP32[(($ld$49$1)>>2)])|0);
    $st$50$0=(($158)|0);
    HEAP32[(($st$50$0)>>2)]=$159$0;
    $st$51$1=(($158+4)|0);
    HEAP32[(($st$51$1)>>2)]=$159$1;
    $160=(($this+236)|0);
    $161=$160;
    $ld$52$0=(($152)|0);
    $162$0=((HEAP32[(($ld$52$0)>>2)])|0);
    $ld$53$1=(($152+4)|0);
    $162$1=((HEAP32[(($ld$53$1)>>2)])|0);
    $st$54$0=(($161)|0);
    HEAP32[(($st$54$0)>>2)]=$162$0;
    $st$55$1=(($161+4)|0);
    HEAP32[(($st$55$1)>>2)]=$162$1;
    break;
   }
   if (!($101)) {
    $212=$offset0_0<(0.0);
    $213=$79<(0.0);
    $or_cond138=$212|$213;
    do {
     if ($or_cond138) {
      $214=(($this+248)|0);
      HEAP8[($214)]=0;
      $215=(($this+212)|0);
      $231=$215;
     } else {
      $217=$102>=(0.0);
      $phitmp120=($217&1);
      $218=(($this+248)|0);
      HEAP8[($218)]=$phitmp120;
      $219=(($this+212)|0);
      if (!($217)) {
       $231=$219;
       break;
      }
      $221=$73;
      $222=$219;
      $ld$92$0=(($221)|0);
      $223$0=((HEAP32[(($ld$92$0)>>2)])|0);
      $ld$93$1=(($221+4)|0);
      $223$1=((HEAP32[(($ld$93$1)>>2)])|0);
      $st$94$0=(($222)|0);
      HEAP32[(($st$94$0)>>2)]=$223$0;
      $st$95$1=(($222+4)|0);
      HEAP32[(($st$95$1)>>2)]=$223$1;
      $224=(($this+228)|0);
      $225=$224;
      $ld$96$0=(($221)|0);
      $226$0=((HEAP32[(($ld$96$0)>>2)])|0);
      $ld$97$1=(($221+4)|0);
      $226$1=((HEAP32[(($ld$97$1)>>2)])|0);
      $st$98$0=(($225)|0);
      HEAP32[(($st$98$0)>>2)]=$226$0;
      $st$99$1=(($225+4)|0);
      HEAP32[(($st$99$1)>>2)]=$226$1;
      $227=(($this+236)|0);
      $228=$227;
      $ld$100$0=(($221)|0);
      $229$0=((HEAP32[(($ld$100$0)>>2)])|0);
      $ld$101$1=(($221+4)|0);
      $229$1=((HEAP32[(($ld$101$1)>>2)])|0);
      $st$102$0=(($228)|0);
      HEAP32[(($st$102$0)>>2)]=$229$0;
      $st$103$1=(($228+4)|0);
      HEAP32[(($st$103$1)>>2)]=$229$1;
      break L4;
     }
    } while(0);

    __ZNK6b2Vec2ngEv($tmpcast121,$73);
    $232=$231;
    $ld$104$0=(($15)|0);
    $233$0=((HEAP32[(($ld$104$0)>>2)])|0);
    $ld$105$1=(($15+4)|0);
    $233$1=((HEAP32[(($ld$105$1)>>2)])|0);
    $st$106$0=(($232)|0);
    HEAP32[(($st$106$0)>>2)]=$233$0;
    $st$107$1=(($232+4)|0);
    HEAP32[(($st$107$1)>>2)]=$233$1;
    $234=(($this+228)|0);
    $235=(($this+204)|0);
    __ZNK6b2Vec2ngEv($tmpcast122,$235);
    $236=$234;
    $ld$108$0=(($16)|0);
    $237$0=((HEAP32[(($ld$108$0)>>2)])|0);
    $ld$109$1=(($16+4)|0);
    $237$1=((HEAP32[(($ld$109$1)>>2)])|0);
    $st$110$0=(($236)|0);
    HEAP32[(($st$110$0)>>2)]=$237$0;
    $st$111$1=(($236+4)|0);
    HEAP32[(($st$111$1)>>2)]=$237$1;
    $238=(($this+236)|0);
    $239=(($this+188)|0);
    __ZNK6b2Vec2ngEv($tmpcast123,$239);
    $240=$238;
    $ld$112$0=(($17)|0);
    $241$0=((HEAP32[(($ld$112$0)>>2)])|0);
    $ld$113$1=(($17+4)|0);
    $241$1=((HEAP32[(($ld$113$1)>>2)])|0);
    $st$114$0=(($240)|0);
    HEAP32[(($st$114$0)>>2)]=$241$0;
    $st$115$1=(($240+4)|0);
    HEAP32[(($st$115$1)>>2)]=$241$1;
    break;
   }
   $176=$102<(0.0);
   do {
    if ($176) {
     $180=$offset0_0<(0.0);
     if ($180) {
      $181=(($this+248)|0);
      HEAP8[($181)]=0;
      $182=(($this+212)|0);
      $201=$182;
     } else {
      $184=$79>=(0.0);
      $phitmp124=($184&1);
      $185=(($this+248)|0);
      HEAP8[($185)]=$phitmp124;
      $186=(($this+212)|0);
      if ($184) {
       $188=$186;
       break;
      } else {
       $201=$186;
      }
     }

     __ZNK6b2Vec2ngEv($tmpcast125,$73);
     $202=$201;
     $ld$80$0=(($12)|0);
     $203$0=((HEAP32[(($ld$80$0)>>2)])|0);
     $ld$81$1=(($12+4)|0);
     $203$1=((HEAP32[(($ld$81$1)>>2)])|0);
     $st$82$0=(($202)|0);
     HEAP32[(($st$82$0)>>2)]=$203$0;
     $st$83$1=(($202+4)|0);
     HEAP32[(($st$83$1)>>2)]=$203$1;
     $204=(($this+228)|0);
     __ZNK6b2Vec2ngEv($tmpcast126,$73);
     $205=$204;
     $ld$84$0=(($13)|0);
     $206$0=((HEAP32[(($ld$84$0)>>2)])|0);
     $ld$85$1=(($13+4)|0);
     $206$1=((HEAP32[(($ld$85$1)>>2)])|0);
     $st$86$0=(($205)|0);
     HEAP32[(($st$86$0)>>2)]=$206$0;
     $st$87$1=(($205+4)|0);
     HEAP32[(($st$87$1)>>2)]=$206$1;
     $207=(($this+236)|0);
     $208=(($this+188)|0);
     __ZNK6b2Vec2ngEv($tmpcast127,$208);
     $209=$207;
     $ld$88$0=(($14)|0);
     $210$0=((HEAP32[(($ld$88$0)>>2)])|0);
     $ld$89$1=(($14+4)|0);
     $210$1=((HEAP32[(($ld$89$1)>>2)])|0);
     $st$90$0=(($209)|0);
     HEAP32[(($st$90$0)>>2)]=$210$0;
     $st$91$1=(($209+4)|0);
     HEAP32[(($st$91$1)>>2)]=$210$1;
     break L4;
    } else {
     $177=(($this+248)|0);
     HEAP8[($177)]=1;
     $178=(($this+212)|0);
     $188=$178;
    }
   } while(0);

   $189=$73;
   $190=$188;
   $ld$68$0=(($189)|0);
   $191$0=((HEAP32[(($ld$68$0)>>2)])|0);
   $ld$69$1=(($189+4)|0);
   $191$1=((HEAP32[(($ld$69$1)>>2)])|0);
   $st$70$0=(($190)|0);
   HEAP32[(($st$70$0)>>2)]=$191$0;
   $st$71$1=(($190+4)|0);
   HEAP32[(($st$71$1)>>2)]=$191$1;
   $192=(($this+228)|0);
   $193=$192;
   $ld$72$0=(($189)|0);
   $194$0=((HEAP32[(($ld$72$0)>>2)])|0);
   $ld$73$1=(($189+4)|0);
   $194$1=((HEAP32[(($ld$73$1)>>2)])|0);
   $st$74$0=(($193)|0);
   HEAP32[(($st$74$0)>>2)]=$194$0;
   $st$75$1=(($193+4)|0);
   HEAP32[(($st$75$1)>>2)]=$194$1;
   $195=(($this+236)|0);
   $196=(($this+204)|0);
   $197=$196;
   $198=$195;
   $ld$76$0=(($197)|0);
   $199$0=((HEAP32[(($ld$76$0)>>2)])|0);
   $ld$77$1=(($197+4)|0);
   $199$1=((HEAP32[(($ld$77$1)>>2)])|0);
   $st$78$0=(($198)|0);
   HEAP32[(($st$78$0)>>2)]=$199$0;
   $st$79$1=(($198+4)|0);
   HEAP32[(($st$79$1)>>2)]=$199$1;
  } else {
   $convex2_0_off0143=0;$offset2_0144=0.0;
   label = 32;
  }
 } while(0);
 L42: do {
  if ((label|0) == 32) {


   if ($68) {
    $243=$offset0_0>=(0.0);
    if ($convex1_0_off0) {
     do {
      if ($243) {
       $245=(($this+248)|0);
       HEAP8[($245)]=1;
       $246=(($this+212)|0);
       $252=$246;
      } else {
       $248=$79>=(0.0);
       $phitmp116=($248&1);
       $249=(($this+248)|0);
       HEAP8[($249)]=$phitmp116;
       $250=(($this+212)|0);
       if ($248) {
        $252=$250;
        break;
       }
       __ZNK6b2Vec2ngEv($tmpcast117,$73);
       $265=$250;
       $ld$128$0=(($19)|0);
       $266$0=((HEAP32[(($ld$128$0)>>2)])|0);
       $ld$129$1=(($19+4)|0);
       $266$1=((HEAP32[(($ld$129$1)>>2)])|0);
       $st$130$0=(($265)|0);
       HEAP32[(($st$130$0)>>2)]=$266$0;
       $st$131$1=(($265+4)|0);
       HEAP32[(($st$131$1)>>2)]=$266$1;
       $267=(($this+228)|0);
       $268=$73;
       $269=$267;
       $ld$132$0=(($268)|0);
       $270$0=((HEAP32[(($ld$132$0)>>2)])|0);
       $ld$133$1=(($268+4)|0);
       $270$1=((HEAP32[(($ld$133$1)>>2)])|0);
       $st$134$0=(($269)|0);
       HEAP32[(($st$134$0)>>2)]=$270$0;
       $st$135$1=(($269+4)|0);
       HEAP32[(($st$135$1)>>2)]=$270$1;
       $271=(($this+236)|0);
       __ZNK6b2Vec2ngEv($tmpcast118,$73);
       $272=$271;
       $ld$136$0=(($20)|0);
       $273$0=((HEAP32[(($ld$136$0)>>2)])|0);
       $ld$137$1=(($20+4)|0);
       $273$1=((HEAP32[(($ld$137$1)>>2)])|0);
       $st$138$0=(($272)|0);
       HEAP32[(($st$138$0)>>2)]=$273$0;
       $st$139$1=(($272+4)|0);
       HEAP32[(($st$139$1)>>2)]=$273$1;
       break L42;
      }
     } while(0);

     $253=$73;
     $254=$252;
     $ld$116$0=(($253)|0);
     $255$0=((HEAP32[(($ld$116$0)>>2)])|0);
     $ld$117$1=(($253+4)|0);
     $255$1=((HEAP32[(($ld$117$1)>>2)])|0);
     $st$118$0=(($254)|0);
     HEAP32[(($st$118$0)>>2)]=$255$0;
     $st$119$1=(($254+4)|0);
     HEAP32[(($st$119$1)>>2)]=$255$1;
     $256=(($this+228)|0);
     $257=(($this+188)|0);
     $258=$257;
     $259=$256;
     $ld$120$0=(($258)|0);
     $260$0=((HEAP32[(($ld$120$0)>>2)])|0);
     $ld$121$1=(($258+4)|0);
     $260$1=((HEAP32[(($ld$121$1)>>2)])|0);
     $st$122$0=(($259)|0);
     HEAP32[(($st$122$0)>>2)]=$260$0;
     $st$123$1=(($259+4)|0);
     HEAP32[(($st$123$1)>>2)]=$260$1;
     $261=(($this+236)|0);
     __ZNK6b2Vec2ngEv($tmpcast119,$73);
     $262=$261;
     $ld$124$0=(($18)|0);
     $263$0=((HEAP32[(($ld$124$0)>>2)])|0);
     $ld$125$1=(($18+4)|0);
     $263$1=((HEAP32[(($ld$125$1)>>2)])|0);
     $st$126$0=(($262)|0);
     HEAP32[(($st$126$0)>>2)]=$263$0;
     $st$127$1=(($262+4)|0);
     HEAP32[(($st$127$1)>>2)]=$263$1;
     break;
    } else {
     do {
      if ($243) {
       $278=$79>=(0.0);
       $phitmp112=($278&1);
       $279=(($this+248)|0);
       HEAP8[($279)]=$phitmp112;
       $280=(($this+212)|0);
       if (!($278)) {
        $292=$280;
        break;
       }
       $282=$73;
       $283=$280;
       $ld$140$0=(($282)|0);
       $284$0=((HEAP32[(($ld$140$0)>>2)])|0);
       $ld$141$1=(($282+4)|0);
       $284$1=((HEAP32[(($ld$141$1)>>2)])|0);
       $st$142$0=(($283)|0);
       HEAP32[(($st$142$0)>>2)]=$284$0;
       $st$143$1=(($283+4)|0);
       HEAP32[(($st$143$1)>>2)]=$284$1;
       $285=(($this+228)|0);
       $286=$285;
       $ld$144$0=(($282)|0);
       $287$0=((HEAP32[(($ld$144$0)>>2)])|0);
       $ld$145$1=(($282+4)|0);
       $287$1=((HEAP32[(($ld$145$1)>>2)])|0);
       $st$146$0=(($286)|0);
       HEAP32[(($st$146$0)>>2)]=$287$0;
       $st$147$1=(($286+4)|0);
       HEAP32[(($st$147$1)>>2)]=$287$1;
       $288=(($this+236)|0);
       __ZNK6b2Vec2ngEv($tmpcast115,$73);
       $289=$288;
       $ld$148$0=(($21)|0);
       $290$0=((HEAP32[(($ld$148$0)>>2)])|0);
       $ld$149$1=(($21+4)|0);
       $290$1=((HEAP32[(($ld$149$1)>>2)])|0);
       $st$150$0=(($289)|0);
       HEAP32[(($st$150$0)>>2)]=$290$0;
       $st$151$1=(($289+4)|0);
       HEAP32[(($st$151$1)>>2)]=$290$1;
       break L42;
      } else {
       $275=(($this+248)|0);
       HEAP8[($275)]=0;
       $276=(($this+212)|0);
       $292=$276;
      }
     } while(0);

     __ZNK6b2Vec2ngEv($tmpcast113,$73);
     $293=$292;
     $ld$152$0=(($22)|0);
     $294$0=((HEAP32[(($ld$152$0)>>2)])|0);
     $ld$153$1=(($22+4)|0);
     $294$1=((HEAP32[(($ld$153$1)>>2)])|0);
     $st$154$0=(($293)|0);
     HEAP32[(($st$154$0)>>2)]=$294$0;
     $st$155$1=(($293+4)|0);
     HEAP32[(($st$155$1)>>2)]=$294$1;
     $295=(($this+228)|0);
     $296=$73;
     $297=$295;
     $ld$156$0=(($296)|0);
     $298$0=((HEAP32[(($ld$156$0)>>2)])|0);
     $ld$157$1=(($296+4)|0);
     $298$1=((HEAP32[(($ld$157$1)>>2)])|0);
     $st$158$0=(($297)|0);
     HEAP32[(($st$158$0)>>2)]=$298$0;
     $st$159$1=(($297+4)|0);
     HEAP32[(($st$159$1)>>2)]=$298$1;
     $299=(($this+236)|0);
     $300=(($this+188)|0);
     __ZNK6b2Vec2ngEv($tmpcast114,$300);
     $301=$299;
     $ld$160$0=(($23)|0);
     $302$0=((HEAP32[(($ld$160$0)>>2)])|0);
     $ld$161$1=(($23+4)|0);
     $302$1=((HEAP32[(($ld$161$1)>>2)])|0);
     $st$162$0=(($301)|0);
     HEAP32[(($st$162$0)>>2)]=$302$0;
     $st$163$1=(($301+4)|0);
     HEAP32[(($st$163$1)>>2)]=$302$1;
     break;
    }
   }
   $304=$79>=(0.0);
   if (!($71)) {
    $366=(($this+248)|0);
    $367=($304&1);
    HEAP8[($366)]=$367;
    $368=(($this+212)|0);
    if ($304) {
     $370=$73;
     $371=$368;
     $ld$212$0=(($370)|0);
     $372$0=((HEAP32[(($ld$212$0)>>2)])|0);
     $ld$213$1=(($370+4)|0);
     $372$1=((HEAP32[(($ld$213$1)>>2)])|0);
     $st$214$0=(($371)|0);
     HEAP32[(($st$214$0)>>2)]=$372$0;
     $st$215$1=(($371+4)|0);
     HEAP32[(($st$215$1)>>2)]=$372$1;
     $373=(($this+228)|0);
     __ZNK6b2Vec2ngEv($tmpcast103,$73);
     $374=$373;
     $ld$216$0=(($30)|0);
     $375$0=((HEAP32[(($ld$216$0)>>2)])|0);
     $ld$217$1=(($30+4)|0);
     $375$1=((HEAP32[(($ld$217$1)>>2)])|0);
     $st$218$0=(($374)|0);
     HEAP32[(($st$218$0)>>2)]=$375$0;
     $st$219$1=(($374+4)|0);
     HEAP32[(($st$219$1)>>2)]=$375$1;
     $376=(($this+236)|0);
     __ZNK6b2Vec2ngEv($tmpcast104,$73);
     $377=$376;
     $ld$220$0=(($31)|0);
     $378$0=((HEAP32[(($ld$220$0)>>2)])|0);
     $ld$221$1=(($31+4)|0);
     $378$1=((HEAP32[(($ld$221$1)>>2)])|0);
     $st$222$0=(($377)|0);
     HEAP32[(($st$222$0)>>2)]=$378$0;
     $st$223$1=(($377+4)|0);
     HEAP32[(($st$223$1)>>2)]=$378$1;
     break;
    } else {
     __ZNK6b2Vec2ngEv($tmpcast95,$73);
     $380=$368;
     $ld$224$0=(($32)|0);
     $381$0=((HEAP32[(($ld$224$0)>>2)])|0);
     $ld$225$1=(($32+4)|0);
     $381$1=((HEAP32[(($ld$225$1)>>2)])|0);
     $st$226$0=(($380)|0);
     HEAP32[(($st$226$0)>>2)]=$381$0;
     $st$227$1=(($380+4)|0);
     HEAP32[(($st$227$1)>>2)]=$381$1;
     $382=(($this+228)|0);
     $383=$73;
     $384=$382;
     $ld$228$0=(($383)|0);
     $385$0=((HEAP32[(($ld$228$0)>>2)])|0);
     $ld$229$1=(($383+4)|0);
     $385$1=((HEAP32[(($ld$229$1)>>2)])|0);
     $st$230$0=(($384)|0);
     HEAP32[(($st$230$0)>>2)]=$385$0;
     $st$231$1=(($384+4)|0);
     HEAP32[(($st$231$1)>>2)]=$385$1;
     $386=(($this+236)|0);
     $387=$386;
     $ld$232$0=(($383)|0);
     $388$0=((HEAP32[(($ld$232$0)>>2)])|0);
     $ld$233$1=(($383+4)|0);
     $388$1=((HEAP32[(($ld$233$1)>>2)])|0);
     $st$234$0=(($387)|0);
     HEAP32[(($st$234$0)>>2)]=$388$0;
     $st$235$1=(($387+4)|0);
     HEAP32[(($st$235$1)>>2)]=$388$1;
     break;
    }
   }
   if ($convex2_0_off0143) {
    do {
     if ($304) {
      $307=(($this+248)|0);
      HEAP8[($307)]=1;
      $308=(($this+212)|0);
      $314=$308;
     } else {
      $310=$offset2_0144>=(0.0);
      $phitmp108=($310&1);
      $311=(($this+248)|0);
      HEAP8[($311)]=$phitmp108;
      $312=(($this+212)|0);
      if ($310) {
       $314=$312;
       break;
      }
      __ZNK6b2Vec2ngEv($tmpcast109,$73);
      $327=$312;
      $ld$176$0=(($25)|0);
      $328$0=((HEAP32[(($ld$176$0)>>2)])|0);
      $ld$177$1=(($25+4)|0);
      $328$1=((HEAP32[(($ld$177$1)>>2)])|0);
      $st$178$0=(($327)|0);
      HEAP32[(($st$178$0)>>2)]=$328$0;
      $st$179$1=(($327+4)|0);
      HEAP32[(($st$179$1)>>2)]=$328$1;
      $329=(($this+228)|0);
      __ZNK6b2Vec2ngEv($tmpcast110,$73);
      $330=$329;
      $ld$180$0=(($26)|0);
      $331$0=((HEAP32[(($ld$180$0)>>2)])|0);
      $ld$181$1=(($26+4)|0);
      $331$1=((HEAP32[(($ld$181$1)>>2)])|0);
      $st$182$0=(($330)|0);
      HEAP32[(($st$182$0)>>2)]=$331$0;
      $st$183$1=(($330+4)|0);
      HEAP32[(($st$183$1)>>2)]=$331$1;
      $332=(($this+236)|0);
      $333=$73;
      $334=$332;
      $ld$184$0=(($333)|0);
      $335$0=((HEAP32[(($ld$184$0)>>2)])|0);
      $ld$185$1=(($333+4)|0);
      $335$1=((HEAP32[(($ld$185$1)>>2)])|0);
      $st$186$0=(($334)|0);
      HEAP32[(($st$186$0)>>2)]=$335$0;
      $st$187$1=(($334+4)|0);
      HEAP32[(($st$187$1)>>2)]=$335$1;
      break L42;
     }
    } while(0);

    $315=$73;
    $316=$314;
    $ld$164$0=(($315)|0);
    $317$0=((HEAP32[(($ld$164$0)>>2)])|0);
    $ld$165$1=(($315+4)|0);
    $317$1=((HEAP32[(($ld$165$1)>>2)])|0);
    $st$166$0=(($316)|0);
    HEAP32[(($st$166$0)>>2)]=$317$0;
    $st$167$1=(($316+4)|0);
    HEAP32[(($st$167$1)>>2)]=$317$1;
    $318=(($this+228)|0);
    __ZNK6b2Vec2ngEv($tmpcast111,$73);
    $319=$318;
    $ld$168$0=(($24)|0);
    $320$0=((HEAP32[(($ld$168$0)>>2)])|0);
    $ld$169$1=(($24+4)|0);
    $320$1=((HEAP32[(($ld$169$1)>>2)])|0);
    $st$170$0=(($319)|0);
    HEAP32[(($st$170$0)>>2)]=$320$0;
    $st$171$1=(($319+4)|0);
    HEAP32[(($st$171$1)>>2)]=$320$1;
    $321=(($this+236)|0);
    $322=(($this+204)|0);
    $323=$322;
    $324=$321;
    $ld$172$0=(($323)|0);
    $325$0=((HEAP32[(($ld$172$0)>>2)])|0);
    $ld$173$1=(($323+4)|0);
    $325$1=((HEAP32[(($ld$173$1)>>2)])|0);
    $st$174$0=(($324)|0);
    HEAP32[(($st$174$0)>>2)]=$325$0;
    $st$175$1=(($324+4)|0);
    HEAP32[(($st$175$1)>>2)]=$325$1;
    break;
   } else {
    do {
     if ($304) {
      $340=$offset2_0144>=(0.0);
      $phitmp=($340&1);
      $341=(($this+248)|0);
      HEAP8[($341)]=$phitmp;
      $342=(($this+212)|0);
      if (!($340)) {
       $354=$342;
       break;
      }
      $344=$73;
      $345=$342;
      $ld$188$0=(($344)|0);
      $346$0=((HEAP32[(($ld$188$0)>>2)])|0);
      $ld$189$1=(($344+4)|0);
      $346$1=((HEAP32[(($ld$189$1)>>2)])|0);
      $st$190$0=(($345)|0);
      HEAP32[(($st$190$0)>>2)]=$346$0;
      $st$191$1=(($345+4)|0);
      HEAP32[(($st$191$1)>>2)]=$346$1;
      $347=(($this+228)|0);
      __ZNK6b2Vec2ngEv($tmpcast107,$73);
      $348=$347;
      $ld$192$0=(($27)|0);
      $349$0=((HEAP32[(($ld$192$0)>>2)])|0);
      $ld$193$1=(($27+4)|0);
      $349$1=((HEAP32[(($ld$193$1)>>2)])|0);
      $st$194$0=(($348)|0);
      HEAP32[(($st$194$0)>>2)]=$349$0;
      $st$195$1=(($348+4)|0);
      HEAP32[(($st$195$1)>>2)]=$349$1;
      $350=(($this+236)|0);
      $351=$350;
      $ld$196$0=(($344)|0);
      $352$0=((HEAP32[(($ld$196$0)>>2)])|0);
      $ld$197$1=(($344+4)|0);
      $352$1=((HEAP32[(($ld$197$1)>>2)])|0);
      $st$198$0=(($351)|0);
      HEAP32[(($st$198$0)>>2)]=$352$0;
      $st$199$1=(($351+4)|0);
      HEAP32[(($st$199$1)>>2)]=$352$1;
      break L42;
     } else {
      $337=(($this+248)|0);
      HEAP8[($337)]=0;
      $338=(($this+212)|0);
      $354=$338;
     }
    } while(0);

    __ZNK6b2Vec2ngEv($tmpcast105,$73);
    $355=$354;
    $ld$200$0=(($28)|0);
    $356$0=((HEAP32[(($ld$200$0)>>2)])|0);
    $ld$201$1=(($28+4)|0);
    $356$1=((HEAP32[(($ld$201$1)>>2)])|0);
    $st$202$0=(($355)|0);
    HEAP32[(($st$202$0)>>2)]=$356$0;
    $st$203$1=(($355+4)|0);
    HEAP32[(($st$203$1)>>2)]=$356$1;
    $357=(($this+228)|0);
    $358=(($this+204)|0);
    __ZNK6b2Vec2ngEv($tmpcast106,$358);
    $359=$357;
    $ld$204$0=(($29)|0);
    $360$0=((HEAP32[(($ld$204$0)>>2)])|0);
    $ld$205$1=(($29+4)|0);
    $360$1=((HEAP32[(($ld$205$1)>>2)])|0);
    $st$206$0=(($359)|0);
    HEAP32[(($st$206$0)>>2)]=$360$0;
    $st$207$1=(($359+4)|0);
    HEAP32[(($st$207$1)>>2)]=$360$1;
    $361=(($this+236)|0);
    $362=$73;
    $363=$361;
    $ld$208$0=(($362)|0);
    $364$0=((HEAP32[(($ld$208$0)>>2)])|0);
    $ld$209$1=(($362+4)|0);
    $364$1=((HEAP32[(($ld$209$1)>>2)])|0);
    $st$210$0=(($363)|0);
    HEAP32[(($st$210$0)>>2)]=$364$0;
    $st$211$1=(($363+4)|0);
    HEAP32[(($st$211$1)>>2)]=$364$1;
    break;
   }
  }
 } while(0);
 $390=(($polygonB+148)|0);
 $391=((HEAP32[(($390)>>2)])|0);
 $392=(($this+128)|0);
 HEAP32[(($392)>>2)]=$391;
 $393=((HEAP32[(($390)>>2)])|0);
 $394=($393|0)>0;
 if ($394) {
  $395=(($this+140)|0);
  $i_0162=0;
  while(1) {

   $397=(($this+($i_0162<<3))|0);
   $398=(($polygonB+20+($i_0162<<3))|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast101,$39,$398);
   $399=$397;
   $ld$236$0=(($33)|0);
   $400$0=((HEAP32[(($ld$236$0)>>2)])|0);
   $ld$237$1=(($33+4)|0);
   $400$1=((HEAP32[(($ld$237$1)>>2)])|0);
   $st$238$0=(($399)|0);
   HEAP32[(($st$238$0)>>2)]=$400$0;
   $st$239$1=(($399+4)|0);
   HEAP32[(($st$239$1)>>2)]=$400$1;
   $401=(($this+64+($i_0162<<3))|0);
   $402=(($polygonB+84+($i_0162<<3))|0);
   __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast102,$395,$402);
   $403=$401;
   $ld$240$0=(($34)|0);
   $404$0=((HEAP32[(($ld$240$0)>>2)])|0);
   $ld$241$1=(($34+4)|0);
   $404$1=((HEAP32[(($ld$241$1)>>2)])|0);
   $st$242$0=(($403)|0);
   HEAP32[(($st$242$0)>>2)]=$404$0;
   $st$243$1=(($403+4)|0);
   HEAP32[(($st$243$1)>>2)]=$404$1;
   $405=((($i_0162)+(1))|0);
   $406=((HEAP32[(($390)>>2)])|0);
   $407=($405|0)<($406|0);
   if ($407) {
    $i_0162=$405;
   } else {
    break;
   }
  }
 }
 $408=(($this+244)|0);
 HEAPF32[(($408)>>2)]=0.019999999552965164;
 $409=(($manifold+60)|0);
 HEAP32[(($409)>>2)]=0;
 __ZN12b2EPCollider21ComputeEdgeSeparationEv($edgeAxis,$this);
 $410=(($edgeAxis)|0);
 $411=((HEAP32[(($410)>>2)])|0);
 $412=($411|0)==0;
 if ($412) {
  STACKTOP=sp;return;
 }
 $414=(($edgeAxis+8)|0);
 $415=(+(HEAPF32[(($414)>>2)]));
 $416=(+(HEAPF32[(($408)>>2)]));
 $417=$415>$416;
 if ($417) {
  STACKTOP=sp;return;
 }
 __ZN12b2EPCollider24ComputePolygonSeparationEv($polygonAxis,$this);
 $419=(($polygonAxis)|0);
 $420=((HEAP32[(($419)>>2)])|0);
 $421=($420|0)==0;
 do {
  if ($421) {
   label = 67;
  } else {
   $423=(($polygonAxis+8)|0);
   $424=(+(HEAPF32[(($423)>>2)]));
   $425=(+(HEAPF32[(($408)>>2)]));
   $426=$424>$425;
   if ($426) {
    STACKTOP=sp;return;
   }
   $_pr=((HEAP32[(($419)>>2)])|0);
   $428=($_pr|0)==0;
   if ($428) {
    label = 67;
    break;
   }
   $430=(($polygonAxis+8)|0);
   $431=(+(HEAPF32[(($430)>>2)]));
   $432=(+(HEAPF32[(($414)>>2)]));
   $433=($432)*((0.9800000190734863));
   $434=($433)+((0.0010000000474974513));
   $435=$431>$434;
   if ($435) {
    $primaryAxis_sroa_1_4__idx35=(($polygonAxis+4)|0);
    $primaryAxis_sroa_1_4_copyload36=((HEAP32[(($primaryAxis_sroa_1_4__idx35)>>2)])|0);
    $primaryAxis_sroa_0_0=$_pr;$primaryAxis_sroa_1_0=$primaryAxis_sroa_1_4_copyload36;
    break;
   } else {
    $primaryAxis_sroa_0_0_copyload=((HEAP32[(($410)>>2)])|0);
    $primaryAxis_sroa_1_4__idx34=(($edgeAxis+4)|0);
    $primaryAxis_sroa_1_4_copyload=((HEAP32[(($primaryAxis_sroa_1_4__idx34)>>2)])|0);
    $primaryAxis_sroa_0_0=$primaryAxis_sroa_0_0_copyload;$primaryAxis_sroa_1_0=$primaryAxis_sroa_1_4_copyload;
    break;
   }
  }
 } while(0);
 if ((label|0) == 67) {
  $primaryAxis_sroa_0_0_copyload31=((HEAP32[(($410)>>2)])|0);
  $primaryAxis_sroa_1_4__idx37=(($edgeAxis+4)|0);
  $primaryAxis_sroa_1_4_copyload38=((HEAP32[(($primaryAxis_sroa_1_4__idx37)>>2)])|0);
  $primaryAxis_sroa_0_0=$primaryAxis_sroa_0_0_copyload31;$primaryAxis_sroa_1_0=$primaryAxis_sroa_1_4_copyload38;
 }


 $439=$ie97;
 $440=($primaryAxis_sroa_0_0|0)==1;
 $441=(($manifold+56)|0);
 do {
  if ($440) {
   HEAP32[(($441)>>2)]=1;
   $443=(($this+212)|0);
   $444=((HEAP32[(($392)>>2)])|0);
   $445=($444|0)>1;
   if ($445) {
    $446=(($this+64)|0);
    $447=(+(__Z5b2DotRK6b2Vec2S1_($443,$446)));
    $448=((HEAP32[(($392)>>2)])|0);
    $bestIndex_0158=0;$bestValue_0159=$447;$i1_0160=1;
    while(1) {



     $450=(($this+64+($i1_0160<<3))|0);
     $451=(+(__Z5b2DotRK6b2Vec2S1_($443,$450)));
     $452=$451<$bestValue_0159;
     $bestIndex_1=($452?$i1_0160:$bestIndex_0158);
     $bestValue_1=($452?$451:$bestValue_0159);
     $453=((($i1_0160)+(1))|0);
     $454=($453|0)<($448|0);
     if ($454) {
      $bestIndex_0158=$bestIndex_1;$bestValue_0159=$bestValue_1;$i1_0160=$453;
     } else {
      $bestIndex_0_lcssa=$bestIndex_1;$_lcssa=$448;
      break;
     }
    }
   } else {
    $bestIndex_0_lcssa=0;$_lcssa=$444;
   }


   $455=((($bestIndex_0_lcssa)+(1))|0);
   $456=($455|0)<($_lcssa|0);
   $_=($456?$455:0);
   $457=(($this+($bestIndex_0_lcssa<<3))|0);
   $458=$457;
   $ld$244$0=(($458)|0);
   $459$0=((HEAP32[(($ld$244$0)>>2)])|0);
   $ld$245$1=(($458+4)|0);
   $459$1=((HEAP32[(($ld$245$1)>>2)])|0);
   $st$246$0=(($ie97_sub)|0);
   HEAP32[(($st$246$0)>>2)]=$459$0;
   $st$247$1=(($ie97_sub+4)|0);
   HEAP32[(($st$247$1)>>2)]=$459$1;
   $460=(($ie97+8)|0);
   $461=$460;
   $462=$460;
   HEAP8[($462)]=0;
   $463=(($bestIndex_0_lcssa)&255);
   $464=(($461+1)|0);
   HEAP8[($464)]=$463;
   $465=(($461+2)|0);
   HEAP8[($465)]=1;
   $466=(($461+3)|0);
   HEAP8[($466)]=0;
   $467=(($tmpcast96+12)|0);
   $468=(($this+($_<<3))|0);
   $469=$468;
   $470=$467;
   $ld$248$0=(($469)|0);
   $471$0=((HEAP32[(($ld$248$0)>>2)])|0);
   $ld$249$1=(($469+4)|0);
   $471$1=((HEAP32[(($ld$249$1)>>2)])|0);
   $st$250$0=(($470)|0);
   HEAP32[(($st$250$0)>>2)]=$471$0;
   $st$251$1=(($470+4)|0);
   HEAP32[(($st$251$1)>>2)]=$471$1;
   $472=(($tmpcast96+20)|0);
   $473=$472;
   $474=$472;
   HEAP8[($474)]=0;
   $475=(($_)&255);
   $476=(($473+1)|0);
   HEAP8[($476)]=$475;
   $477=(($473+2)|0);
   HEAP8[($477)]=1;
   $478=(($473+3)|0);
   HEAP8[($478)]=0;
   $479=(($this+248)|0);
   $480=((HEAP8[($479)])|0);
   $481=(($480<<24)>>24)==0;
   $482=(($rf)|0);
   if ($481) {
    HEAP32[(($482)>>2)]=1;
    $496=(($rf+4)|0);
    HEAP32[(($496)>>2)]=0;
    $497=(($rf+8)|0);
    $498=$497;
    $ld$264$0=(($59)|0);
    $499$0=((HEAP32[(($ld$264$0)>>2)])|0);
    $ld$265$1=(($59+4)|0);
    $499$1=((HEAP32[(($ld$265$1)>>2)])|0);
    $st$266$0=(($498)|0);
    HEAP32[(($st$266$0)>>2)]=$499$0;
    $st$267$1=(($498+4)|0);
    HEAP32[(($st$267$1)>>2)]=$499$1;
    $500=(($rf+16)|0);
    $501=$500;
    $ld$268$0=(($54)|0);
    $502$0=((HEAP32[(($ld$268$0)>>2)])|0);
    $ld$269$1=(($54+4)|0);
    $502$1=((HEAP32[(($ld$269$1)>>2)])|0);
    $st$270$0=(($501)|0);
    HEAP32[(($st$270$0)>>2)]=$502$0;
    $st$271$1=(($501+4)|0);
    HEAP32[(($st$271$1)>>2)]=$502$1;
    $503=(($rf+24)|0);
    __ZNK6b2Vec2ngEv($tmpcast100,$73);
    $504=$503;
    $ld$272$0=(($35)|0);
    $505$0=((HEAP32[(($ld$272$0)>>2)])|0);
    $ld$273$1=(($35+4)|0);
    $505$1=((HEAP32[(($ld$273$1)>>2)])|0);
    $st$274$0=(($504)|0);
    HEAP32[(($st$274$0)>>2)]=$505$0;
    $st$275$1=(($504+4)|0);
    HEAP32[(($st$275$1)>>2)]=$505$1;
    break;
   } else {
    HEAP32[(($482)>>2)]=0;
    $484=(($rf+4)|0);
    HEAP32[(($484)>>2)]=1;
    $485=(($rf+8)|0);
    $486=$485;
    $ld$252$0=(($54)|0);
    $487$0=((HEAP32[(($ld$252$0)>>2)])|0);
    $ld$253$1=(($54+4)|0);
    $487$1=((HEAP32[(($ld$253$1)>>2)])|0);
    $st$254$0=(($486)|0);
    HEAP32[(($st$254$0)>>2)]=$487$0;
    $st$255$1=(($486+4)|0);
    HEAP32[(($st$255$1)>>2)]=$487$1;
    $488=(($rf+16)|0);
    $489=$488;
    $ld$256$0=(($59)|0);
    $490$0=((HEAP32[(($ld$256$0)>>2)])|0);
    $ld$257$1=(($59+4)|0);
    $490$1=((HEAP32[(($ld$257$1)>>2)])|0);
    $st$258$0=(($489)|0);
    HEAP32[(($st$258$0)>>2)]=$490$0;
    $st$259$1=(($489+4)|0);
    HEAP32[(($st$259$1)>>2)]=$490$1;
    $491=(($rf+24)|0);
    $492=$73;
    $493=$491;
    $ld$260$0=(($492)|0);
    $494$0=((HEAP32[(($ld$260$0)>>2)])|0);
    $ld$261$1=(($492+4)|0);
    $494$1=((HEAP32[(($ld$261$1)>>2)])|0);
    $st$262$0=(($493)|0);
    HEAP32[(($st$262$0)>>2)]=$494$0;
    $st$263$1=(($493+4)|0);
    HEAP32[(($st$263$1)>>2)]=$494$1;
    break;
   }
  } else {
   HEAP32[(($441)>>2)]=2;
   $ld$276$0=(($54)|0);
   $507$0=((HEAP32[(($ld$276$0)>>2)])|0);
   $ld$277$1=(($54+4)|0);
   $507$1=((HEAP32[(($ld$277$1)>>2)])|0);
   $st$278$0=(($ie97_sub)|0);
   HEAP32[(($st$278$0)>>2)]=$507$0;
   $st$279$1=(($ie97_sub+4)|0);
   HEAP32[(($st$279$1)>>2)]=$507$1;
   $508=(($ie97+8)|0);
   $509=$508;
   $510=$508;
   HEAP8[($510)]=0;
   $511=(($primaryAxis_sroa_1_0)&255);
   $512=(($509+1)|0);
   HEAP8[($512)]=$511;
   $513=(($509+2)|0);
   HEAP8[($513)]=0;
   $514=(($509+3)|0);
   HEAP8[($514)]=1;
   $515=(($tmpcast96+12)|0);
   $516=$515;
   $ld$280$0=(($59)|0);
   $517$0=((HEAP32[(($ld$280$0)>>2)])|0);
   $ld$281$1=(($59+4)|0);
   $517$1=((HEAP32[(($ld$281$1)>>2)])|0);
   $st$282$0=(($516)|0);
   HEAP32[(($st$282$0)>>2)]=$517$0;
   $st$283$1=(($516+4)|0);
   HEAP32[(($st$283$1)>>2)]=$517$1;
   $518=(($tmpcast96+20)|0);
   $519=$518;
   $520=$518;
   HEAP8[($520)]=0;
   $521=(($519+1)|0);
   HEAP8[($521)]=$511;
   $522=(($519+2)|0);
   HEAP8[($522)]=0;
   $523=(($519+3)|0);
   HEAP8[($523)]=1;
   $524=(($rf)|0);
   HEAP32[(($524)>>2)]=$primaryAxis_sroa_1_0;
   $525=((($primaryAxis_sroa_1_0)+(1))|0);
   $526=((HEAP32[(($392)>>2)])|0);
   $527=($525|0)<($526|0);
   $_139=($527?$525:0);
   $528=(($rf+4)|0);
   HEAP32[(($528)>>2)]=$_139;
   $529=(($rf+8)|0);
   $530=((HEAP32[(($524)>>2)])|0);
   $531=(($this+($530<<3))|0);
   $532=$531;
   $533=$529;
   $ld$284$0=(($532)|0);
   $534$0=((HEAP32[(($ld$284$0)>>2)])|0);
   $ld$285$1=(($532+4)|0);
   $534$1=((HEAP32[(($ld$285$1)>>2)])|0);
   $st$286$0=(($533)|0);
   HEAP32[(($st$286$0)>>2)]=$534$0;
   $st$287$1=(($533+4)|0);
   HEAP32[(($st$287$1)>>2)]=$534$1;
   $535=(($rf+16)|0);
   $536=((HEAP32[(($528)>>2)])|0);
   $537=(($this+($536<<3))|0);
   $538=$537;
   $539=$535;
   $ld$288$0=(($538)|0);
   $540$0=((HEAP32[(($ld$288$0)>>2)])|0);
   $ld$289$1=(($538+4)|0);
   $540$1=((HEAP32[(($ld$289$1)>>2)])|0);
   $st$290$0=(($539)|0);
   HEAP32[(($st$290$0)>>2)]=$540$0;
   $st$291$1=(($539+4)|0);
   HEAP32[(($st$291$1)>>2)]=$540$1;
   $541=(($rf+24)|0);
   $542=((HEAP32[(($524)>>2)])|0);
   $543=(($this+64+($542<<3))|0);
   $544=$543;
   $545=$541;
   $ld$292$0=(($544)|0);
   $546$0=((HEAP32[(($ld$292$0)>>2)])|0);
   $ld$293$1=(($544+4)|0);
   $546$1=((HEAP32[(($ld$293$1)>>2)])|0);
   $st$294$0=(($545)|0);
   HEAP32[(($st$294$0)>>2)]=$546$0;
   $st$295$1=(($545+4)|0);
   HEAP32[(($st$295$1)>>2)]=$546$1;
  }
 } while(0);
 $548=(($rf+32)|0);
 $549=(($rf+24)|0);
 $550=(($rf+28)|0);
 $551=(+(HEAPF32[(($550)>>2)]));
 $552=(($549)|0);
 $553=(+(HEAPF32[(($552)>>2)]));
 $554=((-.0))-($553);
 __ZN6b2Vec23SetEff($548,$551,$554);
 $555=(($rf+44)|0);
 __ZNK6b2Vec2ngEv($tmpcast98,$548);
 $556=$555;
 $ld$296$0=(($36)|0);
 $557$0=((HEAP32[(($ld$296$0)>>2)])|0);
 $ld$297$1=(($36+4)|0);
 $557$1=((HEAP32[(($ld$297$1)>>2)])|0);
 $st$298$0=(($556)|0);
 HEAP32[(($st$298$0)>>2)]=$557$0;
 $st$299$1=(($556+4)|0);
 HEAP32[(($st$299$1)>>2)]=$557$1;
 $558=(($rf+8)|0);
 $559=(+(__Z5b2DotRK6b2Vec2S1_($548,$558)));
 $560=(($rf+40)|0);
 HEAPF32[(($560)>>2)]=$559;
 $561=(($rf+16)|0);
 $562=(+(__Z5b2DotRK6b2Vec2S1_($555,$561)));
 $563=(($rf+52)|0);
 HEAPF32[(($563)>>2)]=$562;
 $564=(($clipPoints1)|0);
 $565=(+(HEAPF32[(($560)>>2)]));
 $566=(($rf)|0);
 $567=((HEAP32[(($566)>>2)])|0);
 $568=((__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($564,$439,$548,$565,$567))|0);
 $569=($568|0)<2;
 if ($569) {
  STACKTOP=sp;return;
 }
 $571=$clipPoints2167;
 $572=(+(HEAPF32[(($563)>>2)]));
 $573=(($rf+4)|0);
 $574=((HEAP32[(($573)>>2)])|0);
 $575=((__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($571,$564,$555,$572,$574))|0);
 $576=($575|0)<2;
 if ($576) {
  STACKTOP=sp;return;
 }
 $578=(($manifold+40)|0);
 if ($440) {
  $580=$549;
  $581=$578;
  $ld$300$0=(($580)|0);
  $582$0=((HEAP32[(($ld$300$0)>>2)])|0);
  $ld$301$1=(($580+4)|0);
  $582$1=((HEAP32[(($ld$301$1)>>2)])|0);
  $st$302$0=(($581)|0);
  HEAP32[(($st$302$0)>>2)]=$582$0;
  $st$303$1=(($581+4)|0);
  HEAP32[(($st$303$1)>>2)]=$582$1;
  $583=(($manifold+48)|0);
  $584=$558;
  $585=$583;
  $ld$304$0=(($584)|0);
  $586$0=((HEAP32[(($ld$304$0)>>2)])|0);
  $ld$305$1=(($584+4)|0);
  $586$1=((HEAP32[(($ld$305$1)>>2)])|0);
  $st$306$0=(($585)|0);
  HEAP32[(($st$306$0)>>2)]=$586$0;
  $st$307$1=(($585+4)|0);
  HEAP32[(($st$307$1)>>2)]=$586$1;
 } else {
  $588=((HEAP32[(($566)>>2)])|0);
  $589=(($polygonB+84+($588<<3))|0);
  $590=$589;
  $591=$578;
  $ld$308$0=(($590)|0);
  $592$0=((HEAP32[(($ld$308$0)>>2)])|0);
  $ld$309$1=(($590+4)|0);
  $592$1=((HEAP32[(($ld$309$1)>>2)])|0);
  $st$310$0=(($591)|0);
  HEAP32[(($st$310$0)>>2)]=$592$0;
  $st$311$1=(($591+4)|0);
  HEAP32[(($st$311$1)>>2)]=$592$1;
  $593=(($manifold+48)|0);
  $594=((HEAP32[(($566)>>2)])|0);
  $595=(($polygonB+20+($594<<3))|0);
  $596=$595;
  $597=$593;
  $ld$312$0=(($596)|0);
  $598$0=((HEAP32[(($ld$312$0)>>2)])|0);
  $ld$313$1=(($596+4)|0);
  $598$1=((HEAP32[(($ld$313$1)>>2)])|0);
  $st$314$0=(($597)|0);
  HEAP32[(($st$314$0)>>2)]=$598$0;
  $st$315$1=(($597+4)|0);
  HEAP32[(($st$315$1)>>2)]=$598$1;
 }
 $599=$clipPoints2167;
 __ZmiRK6b2Vec2S1_($37,$599,$558);
 $600=(+(__Z5b2DotRK6b2Vec2S1_($549,$37)));
 $601=(+(HEAPF32[(($408)>>2)]));
 $602=$600>$601;
 do {
  if ($602) {
   $pointCount_1=0;
  } else {
   if ($440) {
    __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast99,$39,$599);
    $605=$manifold;
    $ld$316$0=(($38)|0);
    $606$0=((HEAP32[(($ld$316$0)>>2)])|0);
    $ld$317$1=(($38+4)|0);
    $606$1=((HEAP32[(($ld$317$1)>>2)])|0);
    $st$318$0=(($605)|0);
    HEAP32[(($st$318$0)>>2)]=$606$0;
    $st$319$1=(($605+4)|0);
    HEAP32[(($st$319$1)>>2)]=$606$1;
    $607=(($clipPoints2167+8)|0);
    $608=$607;
    $609=((HEAP32[(($608)>>2)])|0);
    $610=(($manifold+16)|0);
    HEAP32[(($610)>>2)]=$609;
    $pointCount_1=1;
    break;
   } else {
    $612=$manifold;
    $ld$320$0=(($clipPoints2167_sub)|0);
    $613$0=((HEAP32[(($ld$320$0)>>2)])|0);
    $ld$321$1=(($clipPoints2167_sub+4)|0);
    $613$1=((HEAP32[(($ld$321$1)>>2)])|0);
    $st$322$0=(($612)|0);
    HEAP32[(($st$322$0)>>2)]=$613$0;
    $st$323$1=(($612+4)|0);
    HEAP32[(($st$323$1)>>2)]=$613$1;
    $614=(($clipPoints2167+8)|0);
    $615=$614;
    $616=(($615+3)|0);
    $617=((HEAP8[($616)])|0);
    $618=(($manifold+16)|0);
    $619=$618;
    $620=(($619+2)|0);
    HEAP8[($620)]=$617;
    $621=(($615+2)|0);
    $622=((HEAP8[($621)])|0);
    $623=(($619+3)|0);
    HEAP8[($623)]=$622;
    $624=(($615+1)|0);
    $625=((HEAP8[($624)])|0);
    $626=$618;
    HEAP8[($626)]=$625;
    $627=$614;
    $628=((HEAP8[($627)])|0);
    $629=(($619+1)|0);
    HEAP8[($629)]=$628;
    $pointCount_1=1;
    break;
   }
  }
 } while(0);

 $631=(($tmpcast166+12)|0);
 $632=(($631)|0);
 __ZmiRK6b2Vec2S1_($37,$632,$558);
 $633=(+(__Z5b2DotRK6b2Vec2S1_($549,$37)));
 $634=(+(HEAPF32[(($408)>>2)]));
 $635=$633>$634;
 if ($635) {
  $pointCount_1_1=$pointCount_1;
 } else {
  $638=(($manifold+((($pointCount_1)*(20))&-1))|0);
  if ($440) {
   __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast99,$39,$632);
   $660=$638;
   $ld$328$0=(($38)|0);
   $661$0=((HEAP32[(($ld$328$0)>>2)])|0);
   $ld$329$1=(($38+4)|0);
   $661$1=((HEAP32[(($ld$329$1)>>2)])|0);
   $st$330$0=(($660)|0);
   HEAP32[(($st$330$0)>>2)]=$661$0;
   $st$331$1=(($660+4)|0);
   HEAP32[(($st$331$1)>>2)]=$661$1;
   $662=(($tmpcast166+20)|0);
   $663=((HEAP32[(($662)>>2)])|0);
   $664=(($manifold+((($pointCount_1)*(20))&-1)+16)|0);
   HEAP32[(($664)>>2)]=$663;
  } else {
   $640=$631;
   $641=$638;
   $ld$324$0=(($640)|0);
   $642$0=((HEAP32[(($ld$324$0)>>2)])|0);
   $ld$325$1=(($640+4)|0);
   $642$1=((HEAP32[(($ld$325$1)>>2)])|0);
   $st$326$0=(($641)|0);
   HEAP32[(($st$326$0)>>2)]=$642$0;
   $st$327$1=(($641+4)|0);
   HEAP32[(($st$327$1)>>2)]=$642$1;
   $643=(($tmpcast166+20)|0);
   $644=$643;
   $645=(($644+3)|0);
   $646=((HEAP8[($645)])|0);
   $647=(($manifold+((($pointCount_1)*(20))&-1)+16)|0);
   $648=$647;
   $649=(($648+2)|0);
   HEAP8[($649)]=$646;
   $650=(($644+2)|0);
   $651=((HEAP8[($650)])|0);
   $652=(($648+3)|0);
   HEAP8[($652)]=$651;
   $653=(($644+1)|0);
   $654=((HEAP8[($653)])|0);
   $655=$647;
   HEAP8[($655)]=$654;
   $656=$643;
   $657=((HEAP8[($656)])|0);
   $658=(($648+1)|0);
   HEAP8[($658)]=$657;
  }
  $666=((($pointCount_1)+(1))|0);
  $pointCount_1_1=$666;
 }

 HEAP32[(($409)>>2)]=$pointCount_1_1;
 STACKTOP=sp;return;
}


function __Z6b2MulTRK11b2TransformS1_($agg_result,$A,$B){
 $agg_result=($agg_result)|0;
 $A=($A)|0;
 $B=($B)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0,$12$0=0;
 var $ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($agg_result+8)|0);
 $5=(($A+8)|0);
 $6=(($B+8)|0);
 __Z6b2MulTRK5b2RotS1_($tmpcast,$5,$6);
 $7=$4;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($B)|0);
 $10=(($A)|0);
 __ZmiRK6b2Vec2S1_($3,$9,$10);
 __Z6b2MulTRK5b2RotRK6b2Vec2($tmpcast5,$5,$3);
 $11=$agg_result;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 STACKTOP=sp;return;
}


function __ZN12b2EPCollider21ComputeEdgeSeparationEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$i_04=0,$15=0,$16=.0,$17=.0,$18=0,$21=0,$22=0;
 var $23=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($agg_result)|0);
 HEAP32[(($2)>>2)]=1;
 $3=(($this+248)|0);
 $4=((HEAP8[($3)])|0);
 $5=$4^1;
 $6=($5&255);
 $7=(($agg_result+4)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=(($agg_result+8)|0);
 HEAPF32[(($8)>>2)]=3.4028234663852886e+38;
 $9=(($this+128)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)>0;
 if (!($11)) {
  STACKTOP=sp;return;
 }
 $12=(($this+212)|0);
 $13=(($this+164)|0);
 $i_04=0;
 while(1) {

  $15=(($this+($i_04<<3))|0);
  __ZmiRK6b2Vec2S1_($1,$15,$13);
  $16=(+(__Z5b2DotRK6b2Vec2S1_($12,$1)));
  $17=(+(HEAPF32[(($8)>>2)]));
  $18=$16<$17;
  if ($18) {
   HEAPF32[(($8)>>2)]=$16;
  }
  $21=((($i_04)+(1))|0);
  $22=((HEAP32[(($9)>>2)])|0);
  $23=($21|0)<($22|0);
  if ($23) {
   $i_04=$21;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN12b2EPCollider24ComputePolygonSeparationEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $perp=0,$n=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=.0,$11=.0,$12=0,$13=.0,$14=0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$i_011=0,$23=0,$24=0,$25=.0,$26=.0,$27=.0,$28=.0,$29=0,$32=.0,$33=0,$35=.0,$36=0,$38=.0,$39=0,$41=.0,$42=0,$45=0;
 var $46=0,$47=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $perp=((sp)|0);
 $n=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $3=(((sp)+(32))|0);
 $4=(((sp)+(40))|0);
 $5=(($agg_result)|0);
 HEAP32[(($5)>>2)]=0;
 $6=(($agg_result+4)|0);
 HEAP32[(($6)>>2)]=-1;
 $7=(($agg_result+8)|0);
 HEAPF32[(($7)>>2)]=-3.4028234663852886e+38;
 $8=(($this+212)|0);
 $9=(($this+216)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=((-.0))-($10);
 $12=(($8)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 __ZN6b2Vec2C1Eff($perp,$11,$13);
 $14=(($this+128)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=($15|0)>0;
 if (!($16)) {
  STACKTOP=sp;return;
 }
 $17=(($this+164)|0);
 $18=(($this+172)|0);
 $19=(($this+244)|0);
 $20=(($this+228)|0);
 $21=(($this+236)|0);
 $i_011=0;
 while(1) {

  $23=(($this+64+($i_011<<3))|0);
  __ZNK6b2Vec2ngEv($n,$23);
  $24=(($this+($i_011<<3))|0);
  __ZmiRK6b2Vec2S1_($1,$24,$17);
  $25=(+(__Z5b2DotRK6b2Vec2S1_($n,$1)));
  __ZmiRK6b2Vec2S1_($2,$24,$18);
  $26=(+(__Z5b2DotRK6b2Vec2S1_($n,$2)));
  $27=(+(__Z5b2MinIfET_S0_S0_($25,$26)));
  $28=(+(HEAPF32[(($19)>>2)]));
  $29=$27>$28;
  if ($29) {
   break;
  }
  $32=(+(__Z5b2DotRK6b2Vec2S1_($n,$perp)));
  $33=$32<(0.0);
  if ($33) {
   __ZmiRK6b2Vec2S1_($4,$n,$20);
   $38=(+(__Z5b2DotRK6b2Vec2S1_($4,$8)));
   $39=$38<(-0.03490658849477768);
   if (!($39)) {
    label = 8;
   }
  } else {
   __ZmiRK6b2Vec2S1_($3,$n,$21);
   $35=(+(__Z5b2DotRK6b2Vec2S1_($3,$8)));
   $36=$35<(-0.03490658849477768);
   if (!($36)) {
    label = 8;
   }
  }
  do {
   if ((label|0) == 8) {
    label = 0;
    $41=(+(HEAPF32[(($7)>>2)]));
    $42=$27>$41;
    if (!($42)) {
     break;
    }
    HEAP32[(($5)>>2)]=2;
    HEAP32[(($6)>>2)]=$i_011;
    HEAPF32[(($7)>>2)]=$27;
   }
  } while(0);
  $45=((($i_011)+(1))|0);
  $46=((HEAP32[(($14)>>2)])|0);
  $47=($45|0)<($46|0);
  if ($47) {
   $i_011=$45;
  } else {
   label = 11;
   break;
  }
 }
 if ((label|0) == 11) {
  STACKTOP=sp;return;
 }
 HEAP32[(($5)>>2)]=2;
 HEAP32[(($6)>>2)]=$i_011;
 HEAPF32[(($7)>>2)]=$27;
 STACKTOP=sp;return;
}


function __Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_($manifold,$edgeA,$xfA,$polygonB,$xfB){
 $manifold=($manifold)|0;
 $edgeA=($edgeA)|0;
 $xfA=($xfA)|0;
 $polygonB=($polygonB)|0;
 $xfB=($xfB)|0;
 var $collider=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+256)|0;
 $collider=((sp)|0);
 __ZN12b2EPCollider7CollideEP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS7_($collider,$manifold,$edgeA,$xfA,$polygonB,$xfB);
 STACKTOP=sp;return;
}


function __Z6b2MulTRK5b2RotS1_($agg_result,$q,$r){
 $agg_result=($agg_result)|0;
 $q=($q)|0;
 $r=($r)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=.0,$16=.0,$17=.0,$18=.0,$19=.0,$20=0;
 var label=0;

 $1=(($q+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($r)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($q)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($r+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 $12=(($agg_result)|0);
 HEAPF32[(($12)>>2)]=$11;
 $13=(+(HEAPF32[(($1)>>2)]));
 $14=(+(HEAPF32[(($8)>>2)]));
 $15=($13)*($14);
 $16=(+(HEAPF32[(($6)>>2)]));
 $17=(+(HEAPF32[(($3)>>2)]));
 $18=($16)*($17);
 $19=($15)+($18);
 $20=(($agg_result+4)|0);
 HEAPF32[(($20)>>2)]=$19;
 return;
}


function __Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_($manifold,$polyA,$xfA,$polyB,$xfB){
 $manifold=($manifold)|0;
 $polyA=($polyA)|0;
 $xfA=($xfA)|0;
 $polyB=($polyB)|0;
 $xfB=($xfB)|0;
 var $edgeA=0,$edgeB=0,$xf1=0,$xf2=0,$incidentEdge=0,$v11=0,$tmpcast=0,$v12=0,$tmpcast52=0,$localTangent=0,$localNormal=0,$tmpcast55=0,$planePoint=0,$tmpcast56=0,$1=0,$tangent=0,$normal=0,$2=0,$tmpcast53=0,$3=0;
 var $tmpcast54=0,$clipPoints1=0,$clipPoints2=0,$4=0,$5=0,$tmpcast57=0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=.0,$12=.0,$13=0,$15=.0,$16=0,$18=.0,$19=0,$20=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$flip_0=0,$edge1_0=0,$poly2_0=0,$poly1_0=0,$34=0,$35=0,$36=0,$37=0,$38=0,$_=0,$39=0;
 var $40=0,$ld$0$0=0,$41$0=0,$ld$1$1=0,$41$1=0,$st$2$0=0,$st$3$1=0,$42=0,$43=0,$ld$4$0=0,$44$0=0,$ld$5$1=0,$44$1=0,$st$6$0=0,$st$7$1=0,$45=.0,$46=0,$ld$8$0=0,$47$0=0,$ld$9$1=0;
 var $47$1=0,$st$10$0=0,$st$11$1=0,$ld$12$0=0,$48$0=0,$ld$13$1=0,$48$1=0,$st$14$0=0,$st$15$1=0,$49=.0,$50=0,$51=.0,$52=.0,$53=.0,$54=0,$55=0,$57=0,$58=.0,$59=0,$60=0;
 var $62=0,$63=0,$ld$16$0=0,$64$0=0,$ld$17$1=0,$64$1=0,$st$18$0=0,$st$19$1=0,$65=0,$66=0,$ld$20$0=0,$67$0=0,$ld$21$1=0,$67$1=0,$st$22$0=0,$st$23$1=0,$68=0,$69=0,$70=.0,$71=.0;
 var $72=0,$74=0,$ld$24$0=0,$75$0=0,$ld$25$1=0,$75$1=0,$st$26$0=0,$st$27$1=0,$76=0,$77=0,$78=0,$79=0,$81=0,$cf_sroa_0_0__idx=0,$cf_sroa_0_0_copyload=0,$cf_sroa_1_1__idx=0,$cf_sroa_1_1_copyload=0,$cf_sroa_2_2__idx=0,$cf_sroa_2_2_copyload=0,$cf_sroa_3_3__idx=0;
 var $cf_sroa_3_3_copyload=0,$pointCount_1=0,$83=0,$84=.0,$85=.0,$86=0,$89=0,$90=0,$ld$28$0=0,$91$0=0,$ld$29$1=0,$91$1=0,$st$30$0=0,$st$31$1=0,$92=0,$93=0,$94=0,$95=0,$97=0,$cf_sroa_0_0__idx_1=0;
 var $cf_sroa_0_0_copyload_1=0,$cf_sroa_1_1__idx_1=0,$cf_sroa_1_1_copyload_1=0,$cf_sroa_2_2__idx_1=0,$cf_sroa_2_2_copyload_1=0,$cf_sroa_3_3__idx_1=0,$cf_sroa_3_3_copyload_1=0,$99=0,$pointCount_1_1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+80)|0;
 $edgeA=((sp)|0);
 $edgeB=(((sp)+(8))|0);
 $xf1=(((sp)+(16))|0);
 $xf2=(((sp)+(32))|0);
 $incidentEdge=(((sp)+(48))|0);
 $v11=(((sp)+(72))|0);
 $tmpcast=$v11;
 $v12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast52=$v12;
 $localTangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $localNormal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast55=$localNormal;
 $planePoint=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast56=$planePoint;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast53=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast54=$3;
 $clipPoints1=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $clipPoints2=STACKTOP;STACKTOP = (STACKTOP + 24)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast57=$5;
 $6=(($manifold+60)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($polyA+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($polyB+8)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=($8)+($10);
 HEAP32[(($edgeA)>>2)]=0;
 $12=(+(__ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_($edgeA,$polyA,$xfA,$polyB,$xfB)));
 $13=$12>$11;
 if ($13) {
  STACKTOP=sp;return;
 }
 HEAP32[(($edgeB)>>2)]=0;
 $15=(+(__ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_($edgeB,$polyB,$xfB,$polyA,$xfA)));
 $16=$15>$11;
 if ($16) {
  STACKTOP=sp;return;
 }
 $18=($12)+((0.0005000000237487257));
 $19=$15>$18;
 $20=$xf1;
 if ($19) {
  $22=$xfB;
  HEAP32[(($20)>>2)]=((HEAP32[(($22)>>2)])|0);HEAP32[((($20)+(4))>>2)]=((HEAP32[((($22)+(4))>>2)])|0);HEAP32[((($20)+(8))>>2)]=((HEAP32[((($22)+(8))>>2)])|0);HEAP32[((($20)+(12))>>2)]=((HEAP32[((($22)+(12))>>2)])|0);
  $23=$xf2;
  $24=$xfA;
  HEAP32[(($23)>>2)]=((HEAP32[(($24)>>2)])|0);HEAP32[((($23)+(4))>>2)]=((HEAP32[((($24)+(4))>>2)])|0);HEAP32[((($23)+(8))>>2)]=((HEAP32[((($24)+(8))>>2)])|0);HEAP32[((($23)+(12))>>2)]=((HEAP32[((($24)+(12))>>2)])|0);
  $25=((HEAP32[(($edgeB)>>2)])|0);
  $26=(($manifold+56)|0);
  HEAP32[(($26)>>2)]=2;
  $poly1_0=$polyB;$poly2_0=$polyA;$edge1_0=$25;$flip_0=1;
 } else {
  $28=$xfA;
  HEAP32[(($20)>>2)]=((HEAP32[(($28)>>2)])|0);HEAP32[((($20)+(4))>>2)]=((HEAP32[((($28)+(4))>>2)])|0);HEAP32[((($20)+(8))>>2)]=((HEAP32[((($28)+(8))>>2)])|0);HEAP32[((($20)+(12))>>2)]=((HEAP32[((($28)+(12))>>2)])|0);
  $29=$xf2;
  $30=$xfB;
  HEAP32[(($29)>>2)]=((HEAP32[(($30)>>2)])|0);HEAP32[((($29)+(4))>>2)]=((HEAP32[((($30)+(4))>>2)])|0);HEAP32[((($29)+(8))>>2)]=((HEAP32[((($30)+(8))>>2)])|0);HEAP32[((($29)+(12))>>2)]=((HEAP32[((($30)+(12))>>2)])|0);
  $31=((HEAP32[(($edgeA)>>2)])|0);
  $32=(($manifold+56)|0);
  HEAP32[(($32)>>2)]=1;
  $poly1_0=$polyA;$poly2_0=$polyB;$edge1_0=$31;$flip_0=0;
 }




 $34=(($incidentEdge)|0);
 __ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_($34,$poly1_0,$xf1,$edge1_0,$poly2_0,$xf2);
 $35=(($poly1_0+148)|0);
 $36=((HEAP32[(($35)>>2)])|0);
 $37=((($edge1_0)+(1))|0);
 $38=($37|0)<($36|0);
 $_=($38?$37:0);
 $39=(($poly1_0+20+($edge1_0<<3))|0);
 $40=$39;
 $ld$0$0=(($40)|0);
 $41$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($40+4)|0);
 $41$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($v11)|0);
 HEAP32[(($st$2$0)>>2)]=$41$0;
 $st$3$1=(($v11+4)|0);
 HEAP32[(($st$3$1)>>2)]=$41$1;
 $42=(($poly1_0+20+($_<<3))|0);
 $43=$42;
 $ld$4$0=(($43)|0);
 $44$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($43+4)|0);
 $44$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($v12)|0);
 HEAP32[(($st$6$0)>>2)]=$44$0;
 $st$7$1=(($v12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$44$1;
 __ZmiRK6b2Vec2S1_($localTangent,$tmpcast52,$tmpcast);
 $45=(+(__ZN6b2Vec29NormalizeEv($localTangent)));
 __Z7b2CrossRK6b2Vec2f($tmpcast55,$localTangent,1.0);
 __ZplRK6b2Vec2S1_($1,$tmpcast,$tmpcast52);
 __ZmlfRK6b2Vec2($tmpcast56,0.5,$1);
 $46=(($xf1+8)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($tangent,$46,$localTangent);
 __Z7b2CrossRK6b2Vec2f($normal,$tangent,1.0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast53,$xf1,$tmpcast);
 $ld$8$0=(($2)|0);
 $47$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($2+4)|0);
 $47$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($v11)|0);
 HEAP32[(($st$10$0)>>2)]=$47$0;
 $st$11$1=(($v11+4)|0);
 HEAP32[(($st$11$1)>>2)]=$47$1;
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast54,$xf1,$tmpcast52);
 $ld$12$0=(($3)|0);
 $48$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($3+4)|0);
 $48$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($v12)|0);
 HEAP32[(($st$14$0)>>2)]=$48$0;
 $st$15$1=(($v12+4)|0);
 HEAP32[(($st$15$1)>>2)]=$48$1;
 $49=(+(__Z5b2DotRK6b2Vec2S1_($normal,$tmpcast)));
 $50=(($clipPoints1)|0);
 $51=(+(__Z5b2DotRK6b2Vec2S1_($tangent,$tmpcast52)));
 $52=(+(__Z5b2DotRK6b2Vec2S1_($tangent,$tmpcast)));
 $53=($11)-($52);
 __ZNK6b2Vec2ngEv($4,$tangent);
 $54=((__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($50,$34,$4,$53,$edge1_0))|0);
 $55=($54|0)<2;
 if ($55) {
  STACKTOP=sp;return;
 }
 $57=(($clipPoints2)|0);
 $58=($11)+($51);
 $59=((__Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($57,$50,$tangent,$58,$_))|0);
 $60=($59|0)<2;
 if ($60) {
  STACKTOP=sp;return;
 }
 $62=(($manifold+40)|0);
 $63=$62;
 $ld$16$0=(($localNormal)|0);
 $64$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($localNormal+4)|0);
 $64$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($63)|0);
 HEAP32[(($st$18$0)>>2)]=$64$0;
 $st$19$1=(($63+4)|0);
 HEAP32[(($st$19$1)>>2)]=$64$1;
 $65=(($manifold+48)|0);
 $66=$65;
 $ld$20$0=(($planePoint)|0);
 $67$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($planePoint+4)|0);
 $67$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($66)|0);
 HEAP32[(($st$22$0)>>2)]=$67$0;
 $st$23$1=(($66+4)|0);
 HEAP32[(($st$23$1)>>2)]=$67$1;
 $68=(($flip_0<<24)>>24)==0;
 $69=(($clipPoints2)|0);
 $70=(+(__Z5b2DotRK6b2Vec2S1_($normal,$69)));
 $71=($70)-($49);
 $72=$71>$11;
 do {
  if ($72) {
   $pointCount_1=0;
  } else {
   __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast57,$xf2,$69);
   $74=$manifold;
   $ld$24$0=(($5)|0);
   $75$0=((HEAP32[(($ld$24$0)>>2)])|0);
   $ld$25$1=(($5+4)|0);
   $75$1=((HEAP32[(($ld$25$1)>>2)])|0);
   $st$26$0=(($74)|0);
   HEAP32[(($st$26$0)>>2)]=$75$0;
   $st$27$1=(($74+4)|0);
   HEAP32[(($st$27$1)>>2)]=$75$1;
   $76=(($manifold+16)|0);
   $77=(($clipPoints2+8)|0);
   $78=((HEAP32[(($77)>>2)])|0);
   $79=(($76)|0);
   HEAP32[(($79)>>2)]=$78;
   if ($68) {
    $pointCount_1=1;
    break;
   }
   $81=$76;
   $cf_sroa_0_0__idx=$76;
   $cf_sroa_0_0_copyload=((HEAP8[($cf_sroa_0_0__idx)])|0);
   $cf_sroa_1_1__idx=(($81+1)|0);
   $cf_sroa_1_1_copyload=((HEAP8[($cf_sroa_1_1__idx)])|0);
   $cf_sroa_2_2__idx=(($81+2)|0);
   $cf_sroa_2_2_copyload=((HEAP8[($cf_sroa_2_2__idx)])|0);
   $cf_sroa_3_3__idx=(($81+3)|0);
   $cf_sroa_3_3_copyload=((HEAP8[($cf_sroa_3_3__idx)])|0);
   HEAP8[($cf_sroa_0_0__idx)]=$cf_sroa_1_1_copyload;
   HEAP8[($cf_sroa_1_1__idx)]=$cf_sroa_0_0_copyload;
   HEAP8[($cf_sroa_2_2__idx)]=$cf_sroa_3_3_copyload;
   HEAP8[($cf_sroa_3_3__idx)]=$cf_sroa_2_2_copyload;
   $pointCount_1=1;
  }
 } while(0);

 $83=(($clipPoints2+12)|0);
 $84=(+(__Z5b2DotRK6b2Vec2S1_($normal,$83)));
 $85=($84)-($49);
 $86=$85>$11;
 if ($86) {
  $pointCount_1_1=$pointCount_1;
 } else {
  $89=(($manifold+((($pointCount_1)*(20))&-1))|0);
  __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast57,$xf2,$83);
  $90=$89;
  $ld$28$0=(($5)|0);
  $91$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($5+4)|0);
  $91$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($90)|0);
  HEAP32[(($st$30$0)>>2)]=$91$0;
  $st$31$1=(($90+4)|0);
  HEAP32[(($st$31$1)>>2)]=$91$1;
  $92=(($manifold+((($pointCount_1)*(20))&-1)+16)|0);
  $93=(($clipPoints2+20)|0);
  $94=((HEAP32[(($93)>>2)])|0);
  $95=(($92)|0);
  HEAP32[(($95)>>2)]=$94;
  if (!($68)) {
   $97=$92;
   $cf_sroa_0_0__idx_1=$92;
   $cf_sroa_0_0_copyload_1=((HEAP8[($cf_sroa_0_0__idx_1)])|0);
   $cf_sroa_1_1__idx_1=(($97+1)|0);
   $cf_sroa_1_1_copyload_1=((HEAP8[($cf_sroa_1_1__idx_1)])|0);
   $cf_sroa_2_2__idx_1=(($97+2)|0);
   $cf_sroa_2_2_copyload_1=((HEAP8[($cf_sroa_2_2__idx_1)])|0);
   $cf_sroa_3_3__idx_1=(($97+3)|0);
   $cf_sroa_3_3_copyload_1=((HEAP8[($cf_sroa_3_3__idx_1)])|0);
   HEAP8[($cf_sroa_0_0__idx_1)]=$cf_sroa_1_1_copyload_1;
   HEAP8[($cf_sroa_1_1__idx_1)]=$cf_sroa_0_0_copyload_1;
   HEAP8[($cf_sroa_2_2__idx_1)]=$cf_sroa_3_3_copyload_1;
   HEAP8[($cf_sroa_3_3__idx_1)]=$cf_sroa_2_2_copyload_1;
  }
  $99=((($pointCount_1)+(1))|0);
  $pointCount_1_1=$99;
 }

 HEAP32[(($6)>>2)]=$pointCount_1_1;
 STACKTOP=sp;return;
}


function __ZL19b2FindMaxSeparationPiPK14b2PolygonShapeRK11b2TransformS2_S5_($edgeIndex,$poly1,$xf1,$poly2,$xf2){
 $edgeIndex=($edgeIndex)|0;
 $poly1=($poly1)|0;
 $xf1=($xf1)|0;
 $poly2=($poly2)|0;
 $xf2=($xf2)|0;
 var $xf=0,$n=0,$v1=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$bestIndex_022=0,$i_021=0,$maxSeparation_020=.0,$10=0,$11=0,$j_019=0,$si_018=.0,$12=0,$13=.0;
 var $14=0,$si_1=.0,$15=0,$16=0,$si_0_lcssa=.0,$17=0,$maxSeparation_1=.0,$bestIndex_1=0,$18=0,$19=0,$bestIndex_0_lcssa=0,$maxSeparation_0_lcssa=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $xf=((sp)|0);
 $n=(((sp)+(16))|0);
 $v1=(((sp)+(24))|0);
 $1=(((sp)+(32))|0);
 $2=(($poly1+148)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($poly2+148)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 __Z6b2MulTRK11b2TransformS1_($xf,$xf2,$xf1);
 $6=($3|0)>0;
 if (!($6)) {
  $maxSeparation_0_lcssa=-3.4028234663852886e+38;$bestIndex_0_lcssa=0;


  HEAP32[(($edgeIndex)>>2)]=$bestIndex_0_lcssa;
  STACKTOP=sp;return (+($maxSeparation_0_lcssa));
 }
 $7=(($xf+8)|0);
 $8=($5|0)>0;
 $maxSeparation_020=-3.4028234663852886e+38;$i_021=0;$bestIndex_022=0;
 while(1) {



  $10=(($poly1+84+($i_021<<3))|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($n,$7,$10);
  $11=(($poly1+20+($i_021<<3))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($v1,$xf,$11);
  if ($8) {
   $si_018=3.4028234663852886e+38;$j_019=0;
   while(1) {


    $12=(($poly2+20+($j_019<<3))|0);
    __ZmiRK6b2Vec2S1_($1,$12,$v1);
    $13=(+(__Z5b2DotRK6b2Vec2S1_($n,$1)));
    $14=$13<$si_018;
    $si_1=($14?$13:$si_018);
    $15=((($j_019)+(1))|0);
    $16=($15|0)<($5|0);
    if ($16) {
     $si_018=$si_1;$j_019=$15;
    } else {
     $si_0_lcssa=$si_1;
     break;
    }
   }
  } else {
   $si_0_lcssa=3.4028234663852886e+38;
  }

  $17=$si_0_lcssa>$maxSeparation_020;
  $maxSeparation_1=($17?$si_0_lcssa:$maxSeparation_020);
  $bestIndex_1=($17?$i_021:$bestIndex_022);
  $18=((($i_021)+(1))|0);
  $19=($18|0)<($3|0);
  if ($19) {
   $maxSeparation_020=$maxSeparation_1;$i_021=$18;$bestIndex_022=$bestIndex_1;
  } else {
   $maxSeparation_0_lcssa=$maxSeparation_1;$bestIndex_0_lcssa=$bestIndex_1;
   break;
  }
 }


 HEAP32[(($edgeIndex)>>2)]=$bestIndex_0_lcssa;
 STACKTOP=sp;return (+($maxSeparation_0_lcssa));
}


function __ZL18b2FindIncidentEdgeP12b2ClipVertexPK14b2PolygonShapeRK11b2TransformiS3_S6_($c,$poly1,$xf1,$edge1,$poly2,$xf2){
 $c=($c)|0;
 $poly1=($poly1)|0;
 $xf1=($xf1)|0;
 $edge1=($edge1)|0;
 $poly2=($poly2)|0;
 $xf2=($xf2)|0;
 var $normal1=0,$1=0,$2=0,$tmpcast=0,$3=0,$tmpcast31=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$index_034=0,$minDot_033=.0,$i_032=0,$10=0,$11=.0,$12=0,$minDot_1=.0,$index_1=0;
 var $13=0,$14=0,$index_0_lcssa=0,$15=0,$16=0,$_=0,$17=0,$18=0,$ld$0$0=0,$19$0=0,$ld$1$1=0,$19$1=0,$st$2$0=0,$st$3$1=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0;
 var $26=0,$27=0,$28=0,$29=0,$30=0,$ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $normal1=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(((sp)+(16))|0);
 $tmpcast=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast31=$3;
 $4=(($poly2+148)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($xf2+8)|0);
 $7=(($xf1+8)|0);
 $8=(($poly1+84+($edge1<<3))|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$7,$8);
 __Z6b2MulTRK5b2RotRK6b2Vec2($normal1,$6,$1);
 $9=($5|0)>0;
 if ($9) {
  $i_032=0;$minDot_033=3.4028234663852886e+38;$index_034=0;
  while(1) {



   $10=(($poly2+84+($i_032<<3))|0);
   $11=(+(__Z5b2DotRK6b2Vec2S1_($normal1,$10)));
   $12=$11<$minDot_033;
   $minDot_1=($12?$11:$minDot_033);
   $index_1=($12?$i_032:$index_034);
   $13=((($i_032)+(1))|0);
   $14=($13|0)<($5|0);
   if ($14) {
    $i_032=$13;$minDot_033=$minDot_1;$index_034=$index_1;
   } else {
    $index_0_lcssa=$index_1;
    break;
   }
  }
 } else {
  $index_0_lcssa=0;
 }

 $15=((($index_0_lcssa)+(1))|0);
 $16=($15|0)<($5|0);
 $_=($16?$15:0);
 $17=(($poly2+20+($index_0_lcssa<<3))|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast,$xf2,$17);
 $18=$c;
 $ld$0$0=(($2)|0);
 $19$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $19$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($18)|0);
 HEAP32[(($st$2$0)>>2)]=$19$0;
 $st$3$1=(($18+4)|0);
 HEAP32[(($st$3$1)>>2)]=$19$1;
 $20=(($edge1)&255);
 $21=(($c+8)|0);
 $22=$21;
 $23=$21;
 HEAP8[($23)]=$20;
 $24=(($index_0_lcssa)&255);
 $25=(($22+1)|0);
 HEAP8[($25)]=$24;
 $26=(($22+2)|0);
 HEAP8[($26)]=1;
 $27=(($22+3)|0);
 HEAP8[($27)]=0;
 $28=(($c+12)|0);
 $29=(($poly2+20+($_<<3))|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast31,$xf2,$29);
 $30=$28;
 $ld$4$0=(($3)|0);
 $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($3+4)|0);
 $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($30)|0);
 HEAP32[(($st$6$0)>>2)]=$31$0;
 $st$7$1=(($30+4)|0);
 HEAP32[(($st$7$1)>>2)]=$31$1;
 $32=(($c+20)|0);
 $33=$32;
 $34=$32;
 HEAP8[($34)]=$20;
 $35=(($_)&255);
 $36=(($33+1)|0);
 HEAP8[($36)]=$35;
 $37=(($33+2)|0);
 HEAP8[($37)]=1;
 $38=(($33+3)|0);
 HEAP8[($38)]=0;
 STACKTOP=sp;return;
}


function __ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f($this,$manifold,$xfA,$radiusA,$xfB,$radiusB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $radiusA=+($radiusA);
 $xfB=($xfB)|0;
 $radiusB=+($radiusB);
 var $pointA=0,$pointB=0,$1=0,$tmpcast40=0,$cA=0,$2=0,$cB=0,$3=0,$4=0,$tmpcast39=0,$5=0,$6=0,$7=0,$tmpcast37=0,$planePoint=0,$clipPoint=0,$cA1=0,$8=0,$9=0,$cB2=0;
 var $10=0,$11=0,$tmpcast38=0,$12=0,$13=0,$14=0,$tmpcast=0,$planePoint3=0,$clipPoint5=0,$cB6=0,$15=0,$16=0,$cA7=0,$17=0,$18=0,$tmpcast36=0,$19=0,$20=0,$21=0,$tmpcast35=0;
 var $22=0,$23=0,$24=0,$26=0,$27=0,$29=0,$30=0,$31=0,$32=.0,$33=0,$35=0,$ld$0$0=0,$36$0=0,$ld$1$1=0,$36$1=0,$st$2$0=0,$st$3$1=0,$37=.0,$39=0,$40=0;
 var $ld$4$0=0,$41$0=0,$ld$5$1=0,$41$1=0,$st$6$0=0,$st$7$1=0,$42=.0,$43=0,$45=0,$46=0,$47=0,$48=0,$ld$8$0=0,$49$0=0,$ld$9$1=0,$49$1=0,$st$10$0=0,$st$11$1=0,$50=0,$51=0;
 var $52=0,$i_041=0,$53=0,$54=.0,$55=.0,$56=0,$57=0,$ld$12$0=0,$58$0=0,$ld$13$1=0,$58$1=0,$st$14$0=0,$st$15$1=0,$59=.0,$60=0,$61=0,$62=0,$63=0,$65=0,$66=0;
 var $67=0,$68=0,$ld$16$0=0,$69$0=0,$ld$17$1=0,$69$1=0,$st$18$0=0,$st$19$1=0,$70=0,$71=0,$72=0,$i4_042=0,$73=0,$74=.0,$75=.0,$76=0,$77=0,$ld$20$0=0,$78$0=0,$ld$21$1=0;
 var $78$1=0,$st$22$0=0,$st$23$1=0,$79=.0,$80=0,$81=0,$82=0,$83=0,$ld$24$0=0,$84$0=0,$ld$25$1=0,$84$1=0,$st$26$0=0,$st$27$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $pointA=((sp)|0);
 $pointB=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $tmpcast40=$1;
 $cA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast39=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$7;
 $planePoint=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $clipPoint=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cA1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cB2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast38=$11;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$14;
 $planePoint3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $clipPoint5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cB6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $cA7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$18;
 $19=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $20=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $21=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$21;
 $22=(($manifold+60)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=($23|0)==0;
 if ($24) {
  STACKTOP=sp;return;
 }
 $26=(($manifold+56)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 if (((($27|0))|0)==((0)|0)) {
  $29=(($this)|0);
  __ZN6b2Vec23SetEff($29,1.0,0.0);
  $30=(($manifold+48)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$30);
  $31=(($manifold)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$31);
  $32=(+(__Z17b2DistanceSquaredRK6b2Vec2S1_($pointA,$pointB)));
  $33=$32>(1.4210854715202004e-14);
  if ($33) {
   __ZmiRK6b2Vec2S1_($tmpcast40,$pointB,$pointA);
   $35=$this;
   $ld$0$0=(($1)|0);
   $36$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($1+4)|0);
   $36$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($35)|0);
   HEAP32[(($st$2$0)>>2)]=$36$0;
   $st$3$1=(($35+4)|0);
   HEAP32[(($st$3$1)>>2)]=$36$1;
   $37=(+(__ZN6b2Vec29NormalizeEv($29)));
  }
  __ZmlfRK6b2Vec2($2,$radiusA,$29);
  __ZplRK6b2Vec2S1_($cA,$pointA,$2);
  __ZmlfRK6b2Vec2($3,$radiusB,$29);
  __ZmiRK6b2Vec2S1_($cB,$pointB,$3);
  $39=(($this+8)|0);
  __ZplRK6b2Vec2S1_($5,$cA,$cB);
  __ZmlfRK6b2Vec2($tmpcast39,0.5,$5);
  $40=$39;
  $ld$4$0=(($4)|0);
  $41$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($4+4)|0);
  $41$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($40)|0);
  HEAP32[(($st$6$0)>>2)]=$41$0;
  $st$7$1=(($40+4)|0);
  HEAP32[(($st$7$1)>>2)]=$41$1;
  __ZmiRK6b2Vec2S1_($6,$cB,$cA);
  $42=(+(__Z5b2DotRK6b2Vec2S1_($6,$29)));
  $43=(($this+24)|0);
  HEAPF32[(($43)>>2)]=$42;
  STACKTOP=sp;return;
 } else if (((($27|0))|0)==((1)|0)) {
  $45=(($this)|0);
  $46=(($xfA+8)|0);
  $47=(($manifold+40)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast37,$46,$47);
  $48=$this;
  $ld$8$0=(($7)|0);
  $49$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($7+4)|0);
  $49$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($48)|0);
  HEAP32[(($st$10$0)>>2)]=$49$0;
  $st$11$1=(($48+4)|0);
  HEAP32[(($st$11$1)>>2)]=$49$1;
  $50=(($manifold+48)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint,$xfA,$50);
  $51=((HEAP32[(($22)>>2)])|0);
  $52=($51|0)>0;
  if ($52) {
   $i_041=0;
  } else {
   STACKTOP=sp;return;
  }
  while(1) {

   $53=(($manifold+((($i_041)*(20))&-1))|0);
   __Z5b2MulRK11b2TransformRK6b2Vec2($clipPoint,$xfB,$53);
   __ZmiRK6b2Vec2S1_($9,$clipPoint,$planePoint);
   $54=(+(__Z5b2DotRK6b2Vec2S1_($9,$45)));
   $55=($radiusA)-($54);
   __ZmlfRK6b2Vec2($8,$55,$45);
   __ZplRK6b2Vec2S1_($cA1,$clipPoint,$8);
   __ZmlfRK6b2Vec2($10,$radiusB,$45);
   __ZmiRK6b2Vec2S1_($cB2,$clipPoint,$10);
   $56=(($this+8+($i_041<<3))|0);
   __ZplRK6b2Vec2S1_($12,$cA1,$cB2);
   __ZmlfRK6b2Vec2($tmpcast38,0.5,$12);
   $57=$56;
   $ld$12$0=(($11)|0);
   $58$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($11+4)|0);
   $58$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($57)|0);
   HEAP32[(($st$14$0)>>2)]=$58$0;
   $st$15$1=(($57+4)|0);
   HEAP32[(($st$15$1)>>2)]=$58$1;
   __ZmiRK6b2Vec2S1_($13,$cB2,$cA1);
   $59=(+(__Z5b2DotRK6b2Vec2S1_($13,$45)));
   $60=(($this+24+($i_041<<2))|0);
   HEAPF32[(($60)>>2)]=$59;
   $61=((($i_041)+(1))|0);
   $62=((HEAP32[(($22)>>2)])|0);
   $63=($61|0)<($62|0);
   if ($63) {
    $i_041=$61;
   } else {
    break;
   }
  }
  STACKTOP=sp;return;
 } else if (((($27|0))|0)==((2)|0)) {
  $65=(($this)|0);
  $66=(($xfB+8)|0);
  $67=(($manifold+40)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast,$66,$67);
  $68=$this;
  $ld$16$0=(($14)|0);
  $69$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($14+4)|0);
  $69$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($68)|0);
  HEAP32[(($st$18$0)>>2)]=$69$0;
  $st$19$1=(($68+4)|0);
  HEAP32[(($st$19$1)>>2)]=$69$1;
  $70=(($manifold+48)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint3,$xfB,$70);
  $71=((HEAP32[(($22)>>2)])|0);
  $72=($71|0)>0;
  if ($72) {
   $i4_042=0;
   while(1) {

    $73=(($manifold+((($i4_042)*(20))&-1))|0);
    __Z5b2MulRK11b2TransformRK6b2Vec2($clipPoint5,$xfA,$73);
    __ZmiRK6b2Vec2S1_($16,$clipPoint5,$planePoint3);
    $74=(+(__Z5b2DotRK6b2Vec2S1_($16,$65)));
    $75=($radiusB)-($74);
    __ZmlfRK6b2Vec2($15,$75,$65);
    __ZplRK6b2Vec2S1_($cB6,$clipPoint5,$15);
    __ZmlfRK6b2Vec2($17,$radiusA,$65);
    __ZmiRK6b2Vec2S1_($cA7,$clipPoint5,$17);
    $76=(($this+8+($i4_042<<3))|0);
    __ZplRK6b2Vec2S1_($19,$cA7,$cB6);
    __ZmlfRK6b2Vec2($tmpcast36,0.5,$19);
    $77=$76;
    $ld$20$0=(($18)|0);
    $78$0=((HEAP32[(($ld$20$0)>>2)])|0);
    $ld$21$1=(($18+4)|0);
    $78$1=((HEAP32[(($ld$21$1)>>2)])|0);
    $st$22$0=(($77)|0);
    HEAP32[(($st$22$0)>>2)]=$78$0;
    $st$23$1=(($77+4)|0);
    HEAP32[(($st$23$1)>>2)]=$78$1;
    __ZmiRK6b2Vec2S1_($20,$cA7,$cB6);
    $79=(+(__Z5b2DotRK6b2Vec2S1_($20,$65)));
    $80=(($this+24+($i4_042<<2))|0);
    HEAPF32[(($80)>>2)]=$79;
    $81=((($i4_042)+(1))|0);
    $82=((HEAP32[(($22)>>2)])|0);
    $83=($81|0)<($82|0);
    if ($83) {
     $i4_042=$81;
    } else {
     break;
    }
   }
  }
  __ZNK6b2Vec2ngEv($tmpcast35,$65);
  $ld$24$0=(($21)|0);
  $84$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($21+4)|0);
  $84$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($68)|0);
  HEAP32[(($st$26$0)>>2)]=$84$0;
  $st$27$1=(($68+4)|0);
  HEAP32[(($st$27$1)>>2)]=$84$1;
  STACKTOP=sp;return;
 } else {
  STACKTOP=sp;return;
 }
}


function __Z6b2SwapIfEvRT_S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=.0,$2=.0,label=0;

 $1=(+(HEAPF32[(($a)>>2)]));
 $2=(+(HEAPF32[(($b)>>2)]));
 HEAPF32[(($a)>>2)]=$2;
 HEAPF32[(($b)>>2)]=$1;
 return;
}


function __Z19b2ClipSegmentToLineP12b2ClipVertexPKS_RK6b2Vec2fi($vOut,$vIn,$normal,$offset,$vertexIndexA){
 $vOut=($vOut)|0;
 $vIn=($vIn)|0;
 $normal=($normal)|0;
 $offset=+($offset);
 $vertexIndexA=($vertexIndexA)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=.0,$6=.0,$7=0,$8=0,$9=.0,$10=.0,$11=0,$13=0,$14=0,$numOut_0=0,$16=0,$18=0,$19=0,$20=0,$21=0;
 var $numOut_1=0,$23=.0,$24=0,$26=.0,$27=.0,$28=0,$29=0,$ld$0$0=0,$30$0=0,$ld$1$1=0,$30$1=0,$st$2$0=0,$st$3$1=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0;
 var $38=0,$39=0,$40=0,$41=0,$42=0,$numOut_2=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($vIn)|0);
 $5=(+(__Z5b2DotRK6b2Vec2S1_($normal,$4)));
 $6=($5)-($offset);
 $7=(($vIn+12)|0);
 $8=(($7)|0);
 $9=(+(__Z5b2DotRK6b2Vec2S1_($normal,$8)));
 $10=($9)-($offset);
 $11=$6>(0.0);
 if ($11) {
  $numOut_0=0;
 } else {
  $13=$vOut;
  $14=$vIn;
  HEAP32[(($13)>>2)]=((HEAP32[(($14)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($14)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($14)+(8))>>2)])|0);
  $numOut_0=1;
 }

 $16=$10>(0.0);
 if ($16) {
  $numOut_1=$numOut_0;
 } else {
  $18=((($numOut_0)+(1))|0);
  $19=(($vOut+((($numOut_0)*(12))&-1))|0);
  $20=$19;
  $21=$7;
  HEAP32[(($20)>>2)]=((HEAP32[(($21)>>2)])|0);HEAP32[((($20)+(4))>>2)]=((HEAP32[((($21)+(4))>>2)])|0);HEAP32[((($20)+(8))>>2)]=((HEAP32[((($21)+(8))>>2)])|0);
  $numOut_1=$18;
 }

 $23=($6)*($10);
 $24=$23<(0.0);
 if (!($24)) {
  $numOut_2=$numOut_1;

  STACKTOP=sp;return (($numOut_2)|0);
 }
 $26=($6)-($10);
 $27=($6)/($26);
 $28=(($vOut+((($numOut_1)*(12))&-1))|0);
 __ZmiRK6b2Vec2S1_($3,$8,$4);
 __ZmlfRK6b2Vec2($2,$27,$3);
 __ZplRK6b2Vec2S1_($tmpcast,$4,$2);
 $29=$28;
 $ld$0$0=(($1)|0);
 $30$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $30$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($29)|0);
 HEAP32[(($st$2$0)>>2)]=$30$0;
 $st$3$1=(($29+4)|0);
 HEAP32[(($st$3$1)>>2)]=$30$1;
 $31=(($vertexIndexA)&255);
 $32=(($vOut+((($numOut_1)*(12))&-1)+8)|0);
 $33=$32;
 $34=$32;
 HEAP8[($34)]=$31;
 $35=(($vIn+8)|0);
 $36=$35;
 $37=(($36+1)|0);
 $38=((HEAP8[($37)])|0);
 $39=(($33+1)|0);
 HEAP8[($39)]=$38;
 $40=(($33+2)|0);
 HEAP8[($40)]=0;
 $41=(($33+3)|0);
 HEAP8[($41)]=1;
 $42=((($numOut_1)+(1))|0);
 $numOut_2=$42;

 STACKTOP=sp;return (($numOut_2)|0);
}


function __Z13b2TestOverlapPK7b2ShapeiS1_iRK11b2TransformS4_($shapeA,$indexA,$shapeB,$indexB,$xfA,$xfB){
 $shapeA=($shapeA)|0;
 $indexA=($indexA)|0;
 $shapeB=($shapeB)|0;
 $indexB=($indexB)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $input=0,$cache=0,$output=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=.0,$13=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+136)|0;
 $input=((sp)|0);
 $cache=(((sp)+(96))|0);
 $output=(((sp)+(112))|0);
 __ZN15b2DistanceInputC1Ev($input);
 $1=(($input)|0);
 __ZN15b2DistanceProxy3SetEPK7b2Shapei($1,$shapeA,$indexA);
 $2=(($input+28)|0);
 __ZN15b2DistanceProxy3SetEPK7b2Shapei($2,$shapeB,$indexB);
 $3=(($input+56)|0);
 $4=$3;
 $5=$xfA;
 HEAP32[(($4)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($4)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($4)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);HEAP32[((($4)+(12))>>2)]=((HEAP32[((($5)+(12))>>2)])|0);
 $6=(($input+72)|0);
 $7=$6;
 $8=$xfB;
 HEAP32[(($7)>>2)]=((HEAP32[(($8)>>2)])|0);HEAP32[((($7)+(4))>>2)]=((HEAP32[((($8)+(4))>>2)])|0);HEAP32[((($7)+(8))>>2)]=((HEAP32[((($8)+(8))>>2)])|0);HEAP32[((($7)+(12))>>2)]=((HEAP32[((($8)+(12))>>2)])|0);
 $9=(($input+88)|0);
 HEAP8[($9)]=1;
 $10=(($cache+4)|0);
 HEAP16[(($10)>>1)]=0;
 __Z10b2DistanceP16b2DistanceOutputP14b2SimplexCachePK15b2DistanceInput($output,$cache,$input);
 $11=(($output+16)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=$12<(0.0000011920928955078125);
 STACKTOP=sp;return (($13)|0);
}


function __ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener($this,$bodyCapacity,$contactCapacity,$jointCapacity,$allocator,$listener){
 $this=($this)|0;
 $bodyCapacity=($bodyCapacity)|0;
 $contactCapacity=($contactCapacity)|0;
 $jointCapacity=($jointCapacity)|0;
 $allocator=($allocator)|0;
 $listener=($listener)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,label=0;

 $1=(($this+40)|0);
 HEAP32[(($1)>>2)]=$bodyCapacity;
 $2=(($this+44)|0);
 HEAP32[(($2)>>2)]=$contactCapacity;
 $3=(($this+48)|0);
 HEAP32[(($3)>>2)]=$jointCapacity;
 $4=(($this+28)|0);
 HEAP32[(($4)>>2)]=0;
 $5=(($this+36)|0);
 HEAP32[(($5)>>2)]=0;
 $6=(($this+32)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($this)|0);
 HEAP32[(($7)>>2)]=$allocator;
 $8=(($this+4)|0);
 HEAP32[(($8)>>2)]=$listener;
 $9=((HEAP32[(($7)>>2)])|0);
 $10=$bodyCapacity<<2;
 $11=((__ZN16b2StackAllocator8AllocateEi($9,$10))|0);
 $12=$11;
 $13=(($this+8)|0);
 HEAP32[(($13)>>2)]=$12;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=$contactCapacity<<2;
 $16=((__ZN16b2StackAllocator8AllocateEi($14,$15))|0);
 $17=$16;
 $18=(($this+12)|0);
 HEAP32[(($18)>>2)]=$17;
 $19=((HEAP32[(($7)>>2)])|0);
 $20=$jointCapacity<<2;
 $21=((__ZN16b2StackAllocator8AllocateEi($19,$20))|0);
 $22=$21;
 $23=(($this+16)|0);
 HEAP32[(($23)>>2)]=$22;
 $24=((HEAP32[(($7)>>2)])|0);
 $25=((HEAP32[(($1)>>2)])|0);
 $26=((($25)*(12))&-1);
 $27=((__ZN16b2StackAllocator8AllocateEi($24,$26))|0);
 $28=$27;
 $29=(($this+24)|0);
 HEAP32[(($29)>>2)]=$28;
 $30=((HEAP32[(($7)>>2)])|0);
 $31=((HEAP32[(($1)>>2)])|0);
 $32=((($31)*(12))&-1);
 $33=((__ZN16b2StackAllocator8AllocateEi($30,$32))|0);
 $34=$33;
 $35=(($this+20)|0);
 HEAP32[(($35)>>2)]=$34;
 return;
}


function __ZN8b2IslandD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+20)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$4;
 __ZN16b2StackAllocator4FreeEPv($2,$5);
 $6=((HEAP32[(($1)>>2)])|0);
 $7=(($this+24)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=$8;
 __ZN16b2StackAllocator4FreeEPv($6,$9);
 $10=((HEAP32[(($1)>>2)])|0);
 $11=(($this+16)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=$12;
 __ZN16b2StackAllocator4FreeEPv($10,$13);
 $14=((HEAP32[(($1)>>2)])|0);
 $15=(($this+12)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=$16;
 __ZN16b2StackAllocator4FreeEPv($14,$17);
 $18=((HEAP32[(($1)>>2)])|0);
 $19=(($this+8)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=$20;
 __ZN16b2StackAllocator4FreeEPv($18,$21);
 return;
}


function __ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b($this,$profile,$step,$gravity,$allowSleep){
 $this=($this)|0;
 $profile=($profile)|0;
 $step=($step)|0;
 $gravity=($gravity)|0;
 $allowSleep=($allowSleep)|0;
 var $timer=0,$v=0,$tmpcast94=0,$1=0,$2=0,$3=0,$4=0,$solverData=0,$contactSolverDef=0,$contactSolver=0,$c4=0,$tmpcast=0,$v6=0,$tmpcast92=0,$translation=0,$5=0,$6=0,$7=.0,$8=0,$9=0;
 var $10=0,$11=0,$12=0,$13=0,$i_0142=0,$15=0,$16=0,$17=0,$18=0,$19=0,$ld$0$0=0,$20$0=0,$ld$1$1=0,$20$1=0,$21=0,$22=.0,$23=0,$24=0,$ld$2$0=0,$25$0=0;
 var $ld$3$1=0,$25$1=0,$st$4$0=0,$st$5$1=0,$26=0,$27=.0,$28=0,$29=0,$ld$6$0=0,$30$0=0,$ld$7$1=0,$30$1=0,$st$8$0=0,$st$9$1=0,$31=.0,$32=0,$33=0,$34=0,$35=0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=0,$42=0,$43=.0,$44=.0,$45=0,$46=.0,$47=.0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=.0,$54=0,$55=.0,$56=.0,$57=.0;
 var $58=.0,$59=.0,$w_0=.0,$61=0,$62=0,$63=0,$st$10$0=0,$st$11$1=0,$64=0,$65=0,$66=0,$67=0,$68=0,$ld$12$0=0,$69$0=0,$ld$13$1=0,$69$1=0,$st$14$0=0,$st$15$1=0,$70=0;
 var $71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=0;
 var $91=0,$92=0,$93=0,$94=0,$95=0,$96=0,$98=0,$99=0,$100=0,$102=0,$103=0,$104=0,$105=0,$lpad_phi$0=0,$lpad_phi$1=0,$i1_0137=0,$107=0,$108=0,$109=0,$110=0;
 var $111=0,$112=0,$113=0,$115=0,$116=0,$117=0,$118=.0,$120=0,$121=0,$122=0,$123=0,$124=0,$i2_0131=0,$125=0,$126=0,$j_0124=0,$127=0,$128=0,$129=0,$130=0;
 var $131=0,$132=0,$133=0,$135=0,$136=0,$137=0,$139=0,$140=0,$141=0,$143=.0,$145=0,$146=0,$147=0,$i3_0117=0,$148=0,$149=0,$150=0,$ld$16$0=0,$151$0=0,$ld$17$1=0;
 var $151$1=0,$st$18$0=0,$st$19$1=0,$152=0,$153=0,$154=.0,$155=0,$156=0,$157=0,$ld$20$0=0,$158$0=0,$ld$21$1=0,$158$1=0,$st$22$0=0,$st$23$1=0,$159=0,$160=0,$161=.0,$162=.0,$163=0;
 var $165=.0,$166=.0,$168=.0,$169=.0,$170=0,$172=.0,$173=.0,$174=.0,$w7_0=.0,$176=.0,$177=.0,$178=0,$179=0,$180=0,$ld$24$0=0,$181$0=0,$ld$25$1=0,$181$1=0,$st$26$0=0,$st$27$1=0;
 var $182=0,$183=0,$184=0,$185=0,$186=0,$ld$28$0=0,$187$0=0,$ld$29$1=0,$187$1=0,$st$30$0=0,$st$31$1=0,$188=0,$189=0,$190=0,$191=0,$192=0,$193=0,$194=0,$i9_0=0,$196=0;
 var $197=0,$199=0,$200=0,$201=0,$i10_0109=0,$jointsOkay_0_off0108=0,$202=0,$203=0,$204=0,$205=0,$206=0,$207=0,$208=0,$209=0,$_=0,$211=0,$212=0,$213=0,$jointsOkay_0_off0_lcssa=0,$brmerge_demorgan=0;
 var $214=0,$positionSolved_0_off0=0,$216=0,$217=0,$218=0,$i11_0101=0,$220=0,$221=0,$222=0,$223=0,$224=0,$225=0,$226=0,$227=0,$ld$32$0=0,$228$0=0,$ld$33$1=0,$228$1=0,$st$34$0=0,$st$35$1=0;
 var $229=0,$230=0,$231=.0,$232=0,$233=0,$234=0,$235=0,$236=0,$237=0,$ld$36$0=0,$238$0=0,$ld$37$1=0,$238$1=0,$st$38$0=0,$st$39$1=0,$239=0,$240=0,$241=.0,$242=0,$243=0;
 var $244=0,$245=0,$246=.0,$248=0,$249=0,$250=0,$252=0,$253=0,$254=0,$i12_099=0,$minSleepTime_098=.0,$256=0,$257=0,$258=0,$259=0,$260=0,$262=0,$263=0,$264=0,$265=0;
 var $267=0,$268=.0,$269=.0,$270=0,$272=0,$273=.0,$274=0,$276=0,$278=0,$279=.0,$280=.0,$281=.0,$minSleepTime_1=.0,$283=0,$284=0,$285=0,$minSleepTime_0_lcssa=.0,$286=0,$brmerge95=0,$287=0;
 var $288=0,$289=0,$i14_096=0,$291=0,$292=0,$293=0,$294=0,$295=0,$296=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_loopexit114$0=0,$lpad_loopexit114$1=0,$lpad_loopexit122$0=0,$lpad_loopexit122$1=0,$lpad_loopexit128$0=0,$lpad_loopexit128$1=0,$lpad_loopexit134$0=0,$lpad_loopexit134$1=0,$lpad_nonloopexit$0=0;
 var $lpad_nonloopexit$1=0,$299$0=0,$299$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $timer=((sp)|0);
 $v=(((sp)+(8))|0);
 $tmpcast94=$v;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $solverData=STACKTOP;STACKTOP = (STACKTOP + 36)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $contactSolverDef=STACKTOP;STACKTOP = (STACKTOP + 48)|0;
 $contactSolver=STACKTOP;STACKTOP = (STACKTOP + 56)|0;
 $c4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$c4;
 $v6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast92=$v6;
 $translation=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 __ZN7b2TimerC2Ev($timer);
 $6=(($step)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+28)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=($9|0)>0;
 if ($10) {
  $11=(($this+8)|0);
  $12=(($this+20)|0);
  $13=(($this+24)|0);
  $i_0142=0;
  while(1) {

   $15=((HEAP32[(($11)>>2)])|0);
   $16=(($15+($i_0142<<2))|0);
   $17=((HEAP32[(($16)>>2)])|0);
   $18=(($17+60)|0);
   $19=$18;
   $ld$0$0=(($19)|0);
   $20$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($19+4)|0);
   $20$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $21=(($17+72)|0);
   $22=(+(HEAPF32[(($21)>>2)]));
   $23=(($17+80)|0);
   $24=$23;
   $ld$2$0=(($24)|0);
   $25$0=((HEAP32[(($ld$2$0)>>2)])|0);
   $ld$3$1=(($24+4)|0);
   $25$1=((HEAP32[(($ld$3$1)>>2)])|0);
   $st$4$0=(($v)|0);
   HEAP32[(($st$4$0)>>2)]=$25$0;
   $st$5$1=(($v+4)|0);
   HEAP32[(($st$5$1)>>2)]=$25$1;
   $26=(($17+88)|0);
   $27=(+(HEAPF32[(($26)>>2)]));
   $28=(($17+52)|0);
   $29=$28;
   $ld$6$0=(($19)|0);
   $30$0=((HEAP32[(($ld$6$0)>>2)])|0);
   $ld$7$1=(($19+4)|0);
   $30$1=((HEAP32[(($ld$7$1)>>2)])|0);
   $st$8$0=(($29)|0);
   HEAP32[(($st$8$0)>>2)]=$30$0;
   $st$9$1=(($29+4)|0);
   HEAP32[(($st$9$1)>>2)]=$30$1;
   $31=(+(HEAPF32[(($21)>>2)]));
   $32=(($17+68)|0);
   HEAPF32[(($32)>>2)]=$31;
   $33=(($17)|0);
   $34=((HEAP32[(($33)>>2)])|0);
   $35=($34|0)==2;
   if ($35) {
    $37=(($17+156)|0);
    $38=(+(HEAPF32[(($37)>>2)]));
    __ZmlfRK6b2Vec2($3,$38,$gravity);
    $39=(($17+136)|0);
    $40=(+(HEAPF32[(($39)>>2)]));
    $41=(($17+92)|0);
    __ZmlfRK6b2Vec2($4,$40,$41);
    __ZplRK6b2Vec2S1_($2,$3,$4);
    __ZmlfRK6b2Vec2($1,$7,$2);
    __ZN6b2Vec2pLERKS_($tmpcast94,$1);
    $42=(($17+144)|0);
    $43=(+(HEAPF32[(($42)>>2)]));
    $44=($7)*($43);
    $45=(($17+100)|0);
    $46=(+(HEAPF32[(($45)>>2)]));
    $47=($44)*($46);
    $48=($27)+($47);
    $49=(($17+148)|0);
    $50=(+(HEAPF32[(($49)>>2)]));
    $51=($7)*($50);
    $52=($51)+((1.0));
    $53=((1.0))/($52);
    __ZN6b2Vec2mLEf($tmpcast94,$53);
    $54=(($17+152)|0);
    $55=(+(HEAPF32[(($54)>>2)]));
    $56=($7)*($55);
    $57=($56)+((1.0));
    $58=((1.0))/($57);
    $59=($48)*($58);
    $w_0=$59;
   } else {
    $w_0=$27;
   }

   $61=((HEAP32[(($12)>>2)])|0);
   $62=(($61+((($i_0142)*(12))&-1))|0);
   $63=$62;
   $st$10$0=(($63)|0);
   HEAP32[(($st$10$0)>>2)]=$20$0;
   $st$11$1=(($63+4)|0);
   HEAP32[(($st$11$1)>>2)]=$20$1;
   $64=((HEAP32[(($12)>>2)])|0);
   $65=(($64+((($i_0142)*(12))&-1)+8)|0);
   HEAPF32[(($65)>>2)]=$22;
   $66=((HEAP32[(($13)>>2)])|0);
   $67=(($66+((($i_0142)*(12))&-1))|0);
   $68=$67;
   $ld$12$0=(($v)|0);
   $69$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($v+4)|0);
   $69$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($68)|0);
   HEAP32[(($st$14$0)>>2)]=$69$0;
   $st$15$1=(($68+4)|0);
   HEAP32[(($st$15$1)>>2)]=$69$1;
   $70=((HEAP32[(($13)>>2)])|0);
   $71=(($70+((($i_0142)*(12))&-1)+8)|0);
   HEAPF32[(($71)>>2)]=$w_0;
   $72=((($i_0142)+(1))|0);
   $73=((HEAP32[(($8)>>2)])|0);
   $74=($72|0)<($73|0);
   if ($74) {
    $i_0142=$72;
   } else {
    break;
   }
  }
 }
 __ZN7b2Timer5ResetEv($timer);
 $75=$solverData;
 $76=$step;
 HEAP32[(($75)>>2)]=((HEAP32[(($76)>>2)])|0);HEAP32[((($75)+(4))>>2)]=((HEAP32[((($76)+(4))>>2)])|0);HEAP32[((($75)+(8))>>2)]=((HEAP32[((($76)+(8))>>2)])|0);HEAP32[((($75)+(12))>>2)]=((HEAP32[((($76)+(12))>>2)])|0);HEAP32[((($75)+(16))>>2)]=((HEAP32[((($76)+(16))>>2)])|0);HEAP32[((($75)+(20))>>2)]=((HEAP32[((($76)+(20))>>2)])|0);HEAP32[((($75)+(24))>>2)]=((HEAP32[((($76)+(24))>>2)])|0);
 $77=(($this+20)|0);
 $78=((HEAP32[(($77)>>2)])|0);
 $79=(($solverData+28)|0);
 HEAP32[(($79)>>2)]=$78;
 $80=(($this+24)|0);
 $81=((HEAP32[(($80)>>2)])|0);
 $82=(($solverData+32)|0);
 HEAP32[(($82)>>2)]=$81;
 $83=$contactSolverDef;
 HEAP32[(($83)>>2)]=((HEAP32[(($76)>>2)])|0);HEAP32[((($83)+(4))>>2)]=((HEAP32[((($76)+(4))>>2)])|0);HEAP32[((($83)+(8))>>2)]=((HEAP32[((($76)+(8))>>2)])|0);HEAP32[((($83)+(12))>>2)]=((HEAP32[((($76)+(12))>>2)])|0);HEAP32[((($83)+(16))>>2)]=((HEAP32[((($76)+(16))>>2)])|0);HEAP32[((($83)+(20))>>2)]=((HEAP32[((($76)+(20))>>2)])|0);HEAP32[((($83)+(24))>>2)]=((HEAP32[((($76)+(24))>>2)])|0);
 $84=(($this+12)|0);
 $85=((HEAP32[(($84)>>2)])|0);
 $86=(($contactSolverDef+28)|0);
 HEAP32[(($86)>>2)]=$85;
 $87=(($this+36)|0);
 $88=((HEAP32[(($87)>>2)])|0);
 $89=(($contactSolverDef+32)|0);
 HEAP32[(($89)>>2)]=$88;
 $90=((HEAP32[(($77)>>2)])|0);
 $91=(($contactSolverDef+36)|0);
 HEAP32[(($91)>>2)]=$90;
 $92=((HEAP32[(($80)>>2)])|0);
 $93=(($contactSolverDef+40)|0);
 HEAP32[(($93)>>2)]=$92;
 $94=(($this)|0);
 $95=((HEAP32[(($94)>>2)])|0);
 $96=(($contactSolverDef+44)|0);
 HEAP32[(($96)>>2)]=$95;
 __ZN15b2ContactSolverC2EP18b2ContactSolverDef($contactSolver,$contactSolverDef);
 __ZN15b2ContactSolver29InitializeVelocityConstraintsEv($contactSolver);
 $98=(($step+24)|0);
 $99=((HEAP8[($98)])|0);
 $100=(($99<<24)>>24)==0;
 if (!($100)) {
  __ZN15b2ContactSolver9WarmStartEv($contactSolver);
 }
 $102=(($this+32)|0);
 $103=((HEAP32[(($102)>>2)])|0);
 $104=($103|0)>0;
 if ($104) {
  $105=(($this+16)|0);
  $i1_0137=0;
  while(1) {

   $107=((HEAP32[(($105)>>2)])|0);
   $108=(($107+($i1_0137<<2))|0);
   $109=((HEAP32[(($108)>>2)])|0);
   $110=$109;
   $111=((HEAP32[(($110)>>2)])|0);
   $112=(($111+32)|0);
   $113=((HEAP32[(($112)>>2)])|0);
   FUNCTION_TABLE_vii[($113)&255]($109,$solverData);
   $115=((($i1_0137)+(1))|0);
   $116=((HEAP32[(($102)>>2)])|0);
   $117=($115|0)<($116|0);
   if ($117) {
    $i1_0137=$115;
   } else {
    break;
   }
  }
 }
 $118=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $120=(($profile+12)|0);
 HEAPF32[(($120)>>2)]=$118;
 __ZN7b2Timer5ResetEv($timer);
 $121=(($step+12)|0);
 $122=((HEAP32[(($121)>>2)])|0);
 $123=($122|0)>0;
 if ($123) {
  $124=(($this+16)|0);
  $i2_0131=0;
  while(1) {

   $125=((HEAP32[(($102)>>2)])|0);
   $126=($125|0)>0;
   if ($126) {
    $j_0124=0;
    while(1) {

     $127=((HEAP32[(($124)>>2)])|0);
     $128=(($127+($j_0124<<2))|0);
     $129=((HEAP32[(($128)>>2)])|0);
     $130=$129;
     $131=((HEAP32[(($130)>>2)])|0);
     $132=(($131+36)|0);
     $133=((HEAP32[(($132)>>2)])|0);
     FUNCTION_TABLE_vii[($133)&255]($129,$solverData);
     $135=((($j_0124)+(1))|0);
     $136=((HEAP32[(($102)>>2)])|0);
     $137=($135|0)<($136|0);
     if ($137) {
      $j_0124=$135;
     } else {
      break;
     }
    }
   }
   __ZN15b2ContactSolver24SolveVelocityConstraintsEv($contactSolver);
   $139=((($i2_0131)+(1))|0);
   $140=((HEAP32[(($121)>>2)])|0);
   $141=($139|0)<($140|0);
   if ($141) {
    $i2_0131=$139;
   } else {
    break;
   }
  }
 }
 __ZN15b2ContactSolver13StoreImpulsesEv($contactSolver);
 $143=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $145=(($profile+16)|0);
 HEAPF32[(($145)>>2)]=$143;
 $146=((HEAP32[(($8)>>2)])|0);
 $147=($146|0)>0;
 if ($147) {
  $i3_0117=0;
  while(1) {

   $148=((HEAP32[(($77)>>2)])|0);
   $149=(($148+((($i3_0117)*(12))&-1))|0);
   $150=$149;
   $ld$16$0=(($150)|0);
   $151$0=((HEAP32[(($ld$16$0)>>2)])|0);
   $ld$17$1=(($150+4)|0);
   $151$1=((HEAP32[(($ld$17$1)>>2)])|0);
   $st$18$0=(($c4)|0);
   HEAP32[(($st$18$0)>>2)]=$151$0;
   $st$19$1=(($c4+4)|0);
   HEAP32[(($st$19$1)>>2)]=$151$1;
   $152=((HEAP32[(($77)>>2)])|0);
   $153=(($152+((($i3_0117)*(12))&-1)+8)|0);
   $154=(+(HEAPF32[(($153)>>2)]));
   $155=((HEAP32[(($80)>>2)])|0);
   $156=(($155+((($i3_0117)*(12))&-1))|0);
   $157=$156;
   $ld$20$0=(($157)|0);
   $158$0=((HEAP32[(($ld$20$0)>>2)])|0);
   $ld$21$1=(($157+4)|0);
   $158$1=((HEAP32[(($ld$21$1)>>2)])|0);
   $st$22$0=(($v6)|0);
   HEAP32[(($st$22$0)>>2)]=$158$0;
   $st$23$1=(($v6+4)|0);
   HEAP32[(($st$23$1)>>2)]=$158$1;
   $159=((HEAP32[(($80)>>2)])|0);
   $160=(($159+((($i3_0117)*(12))&-1)+8)|0);
   $161=(+(HEAPF32[(($160)>>2)]));
   __ZmlfRK6b2Vec2($translation,$7,$tmpcast92);
   $162=(+(__Z5b2DotRK6b2Vec2S1_($translation,$translation)));
   $163=$162>(4.0);
   if ($163) {
    $165=(+(__ZNK6b2Vec26LengthEv($translation)));
    $166=((2.0))/($165);
    __ZN6b2Vec2mLEf($tmpcast92,$166);
   }
   $168=($7)*($161);
   $169=($168)*($168);
   $170=$169>(2.4674012660980225);
   if ($170) {
    $172=(+(__Z5b2AbsIfET_S0_($168)));
    $173=((1.5707963705062866))/($172);
    $174=($161)*($173);
    $w7_0=$174;
   } else {
    $w7_0=$161;
   }

   __ZmlfRK6b2Vec2($5,$7,$tmpcast92);
   __ZN6b2Vec2pLERKS_($tmpcast,$5);
   $176=($7)*($w7_0);
   $177=($154)+($176);
   $178=((HEAP32[(($77)>>2)])|0);
   $179=(($178+((($i3_0117)*(12))&-1))|0);
   $180=$179;
   $ld$24$0=(($c4)|0);
   $181$0=((HEAP32[(($ld$24$0)>>2)])|0);
   $ld$25$1=(($c4+4)|0);
   $181$1=((HEAP32[(($ld$25$1)>>2)])|0);
   $st$26$0=(($180)|0);
   HEAP32[(($st$26$0)>>2)]=$181$0;
   $st$27$1=(($180+4)|0);
   HEAP32[(($st$27$1)>>2)]=$181$1;
   $182=((HEAP32[(($77)>>2)])|0);
   $183=(($182+((($i3_0117)*(12))&-1)+8)|0);
   HEAPF32[(($183)>>2)]=$177;
   $184=((HEAP32[(($80)>>2)])|0);
   $185=(($184+((($i3_0117)*(12))&-1))|0);
   $186=$185;
   $ld$28$0=(($v6)|0);
   $187$0=((HEAP32[(($ld$28$0)>>2)])|0);
   $ld$29$1=(($v6+4)|0);
   $187$1=((HEAP32[(($ld$29$1)>>2)])|0);
   $st$30$0=(($186)|0);
   HEAP32[(($st$30$0)>>2)]=$187$0;
   $st$31$1=(($186+4)|0);
   HEAP32[(($st$31$1)>>2)]=$187$1;
   $188=((HEAP32[(($80)>>2)])|0);
   $189=(($188+((($i3_0117)*(12))&-1)+8)|0);
   HEAPF32[(($189)>>2)]=$w7_0;
   $190=((($i3_0117)+(1))|0);
   $191=((HEAP32[(($8)>>2)])|0);
   $192=($190|0)<($191|0);
   if ($192) {
    $i3_0117=$190;
   } else {
    break;
   }
  }
 }
 __ZN7b2Timer5ResetEv($timer);
 $193=(($step+16)|0);
 $194=(($this+16)|0);
 $i9_0=0;
 while(1) {

  $196=((HEAP32[(($193)>>2)])|0);
  $197=($i9_0|0)<($196|0);
  if (!($197)) {
   $positionSolved_0_off0=1;
   break;
  }
  $199=((__ZN15b2ContactSolver24SolvePositionConstraintsEv($contactSolver))|0);
  $200=((HEAP32[(($102)>>2)])|0);
  $201=($200|0)>0;
  if ($201) {
   $jointsOkay_0_off0108=1;$i10_0109=0;
   while(1) {


    $202=((HEAP32[(($194)>>2)])|0);
    $203=(($202+($i10_0109<<2))|0);
    $204=((HEAP32[(($203)>>2)])|0);
    $205=$204;
    $206=((HEAP32[(($205)>>2)])|0);
    $207=(($206+40)|0);
    $208=((HEAP32[(($207)>>2)])|0);
    $209=((FUNCTION_TABLE_iii[($208)&63]($204,$solverData))|0);
    $_=$jointsOkay_0_off0108&$209;
    $211=((($i10_0109)+(1))|0);
    $212=((HEAP32[(($102)>>2)])|0);
    $213=($211|0)<($212|0);
    if ($213) {
     $jointsOkay_0_off0108=$_;$i10_0109=$211;
    } else {
     $jointsOkay_0_off0_lcssa=$_;
     break;
    }
   }
  } else {
   $jointsOkay_0_off0_lcssa=1;
  }

  $brmerge_demorgan=$199&$jointsOkay_0_off0_lcssa;
  $214=((($i9_0)+(1))|0);
  if ($brmerge_demorgan) {
   $positionSolved_0_off0=0;
   break;
  } else {
   $i9_0=$214;
  }
 }

 $216=((HEAP32[(($8)>>2)])|0);
 $217=($216|0)>0;
 if ($217) {
  $218=(($this+8)|0);
  $i11_0101=0;
  while(1) {

   $220=((HEAP32[(($218)>>2)])|0);
   $221=(($220+($i11_0101<<2))|0);
   $222=((HEAP32[(($221)>>2)])|0);
   $223=(($222+60)|0);
   $224=((HEAP32[(($77)>>2)])|0);
   $225=(($224+((($i11_0101)*(12))&-1))|0);
   $226=$225;
   $227=$223;
   $ld$32$0=(($226)|0);
   $228$0=((HEAP32[(($ld$32$0)>>2)])|0);
   $ld$33$1=(($226+4)|0);
   $228$1=((HEAP32[(($ld$33$1)>>2)])|0);
   $st$34$0=(($227)|0);
   HEAP32[(($st$34$0)>>2)]=$228$0;
   $st$35$1=(($227+4)|0);
   HEAP32[(($st$35$1)>>2)]=$228$1;
   $229=((HEAP32[(($77)>>2)])|0);
   $230=(($229+((($i11_0101)*(12))&-1)+8)|0);
   $231=(+(HEAPF32[(($230)>>2)]));
   $232=(($222+72)|0);
   HEAPF32[(($232)>>2)]=$231;
   $233=(($222+80)|0);
   $234=((HEAP32[(($80)>>2)])|0);
   $235=(($234+((($i11_0101)*(12))&-1))|0);
   $236=$235;
   $237=$233;
   $ld$36$0=(($236)|0);
   $238$0=((HEAP32[(($ld$36$0)>>2)])|0);
   $ld$37$1=(($236+4)|0);
   $238$1=((HEAP32[(($ld$37$1)>>2)])|0);
   $st$38$0=(($237)|0);
   HEAP32[(($st$38$0)>>2)]=$238$0;
   $st$39$1=(($237+4)|0);
   HEAP32[(($st$39$1)>>2)]=$238$1;
   $239=((HEAP32[(($80)>>2)])|0);
   $240=(($239+((($i11_0101)*(12))&-1)+8)|0);
   $241=(+(HEAPF32[(($240)>>2)]));
   $242=(($222+88)|0);
   HEAPF32[(($242)>>2)]=$241;
   __ZN6b2Body20SynchronizeTransformEv($222);
   $243=((($i11_0101)+(1))|0);
   $244=((HEAP32[(($8)>>2)])|0);
   $245=($243|0)<($244|0);
   if ($245) {
    $i11_0101=$243;
   } else {
    break;
   }
  }
 }
 $246=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $248=(($profile+20)|0);
 HEAPF32[(($248)>>2)]=$246;
 $249=(($contactSolver+44)|0);
 $250=((HEAP32[(($249)>>2)])|0);
 __ZN8b2Island6ReportEPK27b2ContactVelocityConstraint($this,$250);
 if (!($allowSleep)) {
  __ZN15b2ContactSolverD2Ev($contactSolver);
  STACKTOP=sp;return;
 }
 $252=((HEAP32[(($8)>>2)])|0);
 $253=($252|0)>0;
 if ($253) {
  $254=(($this+8)|0);
  $minSleepTime_098=3.4028234663852886e+38;$i12_099=0;
  while(1) {


   $256=((HEAP32[(($254)>>2)])|0);
   $257=(($256+($i12_099<<2))|0);
   $258=((HEAP32[(($257)>>2)])|0);
   $259=((__ZNK6b2Body7GetTypeEv($258))|0);
   $260=($259|0)==0;
   L69: do {
    if ($260) {
     $minSleepTime_1=$minSleepTime_098;
    } else {
     $262=(($258+4)|0);
     $263=((HEAP16[(($262)>>1)])|0);
     $264=$263&4;
     $265=(($264<<16)>>16)==0;
     do {
      if (!($265)) {
       $267=(($258+88)|0);
       $268=(+(HEAPF32[(($267)>>2)]));
       $269=($268)*($268);
       $270=$269>(0.001218469929881394);
       if ($270) {
        break;
       }
       $272=(($258+80)|0);
       $273=(+(__Z5b2DotRK6b2Vec2S1_($272,$272)));
       $274=$273>(0.00009999999747378752);
       if ($274) {
        break;
       }
       $278=(($258+160)|0);
       $279=(+(HEAPF32[(($278)>>2)]));
       $280=($7)+($279);
       HEAPF32[(($278)>>2)]=$280;
       $281=(+(__Z5b2MinIfET_S0_S0_($minSleepTime_098,$280)));
       $minSleepTime_1=$281;
       break L69;
      }
     } while(0);
     $276=(($258+160)|0);
     HEAPF32[(($276)>>2)]=0.0;
     $minSleepTime_1=0.0;
    }
   } while(0);

   $283=((($i12_099)+(1))|0);
   $284=((HEAP32[(($8)>>2)])|0);
   $285=($283|0)<($284|0);
   if ($285) {
    $minSleepTime_098=$minSleepTime_1;$i12_099=$283;
   } else {
    $minSleepTime_0_lcssa=$minSleepTime_1;
    break;
   }
  }
 } else {
  $minSleepTime_0_lcssa=3.4028234663852886e+38;
 }

 $286=$minSleepTime_0_lcssa<(0.5);
 $brmerge95=$286|$positionSolved_0_off0;
 if ($brmerge95) {
  __ZN15b2ContactSolverD2Ev($contactSolver);
  STACKTOP=sp;return;
 }
 $287=((HEAP32[(($8)>>2)])|0);
 $288=($287|0)>0;
 if (!($288)) {
  __ZN15b2ContactSolverD2Ev($contactSolver);
  STACKTOP=sp;return;
 }
 $289=(($this+8)|0);
 $i14_096=0;
 while(1) {

  $291=((HEAP32[(($289)>>2)])|0);
  $292=(($291+($i14_096<<2))|0);
  $293=((HEAP32[(($292)>>2)])|0);
  __ZN6b2Body8SetAwakeEb($293,0);
  $294=((($i14_096)+(1))|0);
  $295=((HEAP32[(($8)>>2)])|0);
  $296=($294|0)<($295|0);
  if ($296) {
   $i14_096=$294;
  } else {
   break;
  }
 }
 __ZN15b2ContactSolverD2Ev($contactSolver);
 STACKTOP=sp;return;
}


function __ZN6b2Body20SynchronizeTransformEv($this){
 $this=($this)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($this+20)|0);
 $4=(($this+72)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 __ZN5b2Rot3SetEf($3,$5);
 $6=(($this+12)|0);
 $7=(($this+60)|0);
 $8=(($this+44)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($2,$3,$8);
 __ZmiRK6b2Vec2S1_($tmpcast,$7,$2);
 $9=$6;
 $ld$0$0=(($1)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 STACKTOP=sp;return;
}


function __ZN8b2Island6ReportEPK27b2ContactVelocityConstraint($this,$constraints){
 $this=($this)|0;
 $constraints=($constraints)|0;
 var $impulse=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$i_014=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$j_013=0,$19=0;
 var $20=.0,$21=0,$22=0,$23=.0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $impulse=((sp)|0);
 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  STACKTOP=sp;return;
 }
 $4=(($this+36)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($5|0)>0;
 if (!($6)) {
  STACKTOP=sp;return;
 }
 $7=(($this+12)|0);
 $8=(($impulse+16)|0);
 $i_014=0;
 while(1) {

  $10=((HEAP32[(($7)>>2)])|0);
  $11=(($10+($i_014<<2))|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=(($constraints+((($i_014)*(156))&-1)+148)|0);
  $14=((HEAP32[(($13)>>2)])|0);
  HEAP32[(($8)>>2)]=$14;
  $15=((HEAP32[(($13)>>2)])|0);
  $16=($15|0)>0;
  if ($16) {
   $17=((HEAP32[(($13)>>2)])|0);
   $j_013=0;
   while(1) {

    $19=(($constraints+((($i_014)*(156))&-1)+((($j_013)*(36))&-1)+16)|0);
    $20=(+(HEAPF32[(($19)>>2)]));
    $21=(($impulse+($j_013<<2))|0);
    HEAPF32[(($21)>>2)]=$20;
    $22=(($constraints+((($i_014)*(156))&-1)+((($j_013)*(36))&-1)+20)|0);
    $23=(+(HEAPF32[(($22)>>2)]));
    $24=(($impulse+8+($j_013<<2))|0);
    HEAPF32[(($24)>>2)]=$23;
    $25=((($j_013)+(1))|0);
    $26=($25|0)<($17|0);
    if ($26) {
     $j_013=$25;
    } else {
     break;
    }
   }
  }
  $27=((HEAP32[(($1)>>2)])|0);
  $28=$27;
  $29=((HEAP32[(($28)>>2)])|0);
  $30=(($29+36)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  FUNCTION_TABLE_viii[($31)&31]($27,$12,$impulse);
  $32=((($i_014)+(1))|0);
  $33=((HEAP32[(($4)>>2)])|0);
  $34=($32|0)<($33|0);
  if ($34) {
   $i_014=$32;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN8b2Island8SolveTOIERK10b2TimeStepii($this,$subStep,$toiIndexA,$toiIndexB){
 $this=($this)|0;
 $subStep=($subStep)|0;
 $toiIndexA=($toiIndexA)|0;
 $toiIndexB=($toiIndexB)|0;
 var $contactSolverDef=0,$contactSolver=0,$c=0,$tmpcast=0,$v=0,$tmpcast53=0,$translation=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i_061=0,$9=0,$10=0,$11=0,$12=0,$13=0;
 var $14=0,$15=0,$16=0,$ld$0$0=0,$17$0=0,$ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$18=0,$19=.0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$ld$4$0=0,$27$0=0;
 var $ld$5$1=0,$27$1=0,$st$6$0=0,$st$7$1=0,$28=0,$29=.0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0;
 var $44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$i1_0=0,$54=0,$55=0,$57=0,$59=0,$lpad_phi$0=0,$lpad_phi$1=0,$61=0,$62=0,$63=0,$64=0;
 var $65=0,$66=0,$67=0,$68=0,$69=0,$ld$8$0=0,$70$0=0,$ld$9$1=0,$70$1=0,$st$10$0=0,$st$11$1=0,$71=0,$72=0,$73=.0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0;
 var $80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$ld$12$0=0,$86$0=0,$ld$13$1=0,$86$1=0,$st$14$0=0,$st$15$1=0,$87=0,$88=0,$89=.0,$90=0,$91=0,$92=0,$93=0,$94=0;
 var $95=0,$96=0,$i2_055=0,$98=0,$99=0,$100=0,$101=0,$102=.0,$103=0,$104=0,$i3_054=0,$105=0,$106=0,$107=0,$ld$16$0=0,$108$0=0,$ld$17$1=0,$108$1=0,$st$18$0=0,$st$19$1=0;
 var $109=0,$110=0,$111=.0,$112=0,$113=0,$114=0,$ld$20$0=0,$115$0=0,$ld$21$1=0,$115$1=0,$st$22$0=0,$st$23$1=0,$116=0,$117=0,$118=.0,$119=.0,$120=0,$122=.0,$123=.0,$125=.0;
 var $126=.0,$127=0,$129=.0,$130=.0,$131=.0,$w_0=.0,$133=.0,$134=.0,$135=0,$136=0,$137=0,$ld$24$0=0,$138$0=0,$ld$25$1=0,$138$1=0,$st$26$0=0,$st$27$1=0,$139=0,$140=0,$141=0;
 var $142=0,$143=0,$ld$28$0=0,$144$0=0,$ld$29$1=0,$144$1=0,$st$30$0=0,$st$31$1=0,$145=0,$146=0,$147=0,$148=0,$149=0,$150=0,$151=0,$ld$32$0=0,$152$0=0,$ld$33$1=0,$152$1=0,$st$34$0=0;
 var $st$35$1=0,$153=0,$154=0,$155=0,$ld$36$0=0,$156$0=0,$ld$37$1=0,$156$1=0,$st$38$0=0,$st$39$1=0,$157=0,$158=0,$159=0,$160=0,$161=0,$162=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_loopexit58$0=0,$lpad_loopexit58$1=0;
 var $lpad_nonloopexit59$0=0,$lpad_nonloopexit59$1=0,$166$0=0,$166$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+112)|0;
 $contactSolverDef=((sp)|0);
 $contactSolver=(((sp)+(48))|0);
 $c=(((sp)+(104))|0);
 $tmpcast=$c;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast53=$v;
 $translation=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=(($this+28)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($3|0)>0;
 if ($4) {
  $5=(($this+8)|0);
  $6=(($this+20)|0);
  $7=(($this+24)|0);
  $i_061=0;
  while(1) {

   $9=((HEAP32[(($5)>>2)])|0);
   $10=(($9+($i_061<<2))|0);
   $11=((HEAP32[(($10)>>2)])|0);
   $12=((HEAP32[(($6)>>2)])|0);
   $13=(($12+((($i_061)*(12))&-1))|0);
   $14=(($11+60)|0);
   $15=$14;
   $16=$13;
   $ld$0$0=(($15)|0);
   $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($15+4)|0);
   $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($16)|0);
   HEAP32[(($st$2$0)>>2)]=$17$0;
   $st$3$1=(($16+4)|0);
   HEAP32[(($st$3$1)>>2)]=$17$1;
   $18=(($11+72)|0);
   $19=(+(HEAPF32[(($18)>>2)]));
   $20=((HEAP32[(($6)>>2)])|0);
   $21=(($20+((($i_061)*(12))&-1)+8)|0);
   HEAPF32[(($21)>>2)]=$19;
   $22=((HEAP32[(($7)>>2)])|0);
   $23=(($22+((($i_061)*(12))&-1))|0);
   $24=(($11+80)|0);
   $25=$24;
   $26=$23;
   $ld$4$0=(($25)|0);
   $27$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($25+4)|0);
   $27$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($26)|0);
   HEAP32[(($st$6$0)>>2)]=$27$0;
   $st$7$1=(($26+4)|0);
   HEAP32[(($st$7$1)>>2)]=$27$1;
   $28=(($11+88)|0);
   $29=(+(HEAPF32[(($28)>>2)]));
   $30=((HEAP32[(($7)>>2)])|0);
   $31=(($30+((($i_061)*(12))&-1)+8)|0);
   HEAPF32[(($31)>>2)]=$29;
   $32=((($i_061)+(1))|0);
   $33=((HEAP32[(($2)>>2)])|0);
   $34=($32|0)<($33|0);
   if ($34) {
    $i_061=$32;
   } else {
    break;
   }
  }
 }
 $35=(($this+12)|0);
 $36=((HEAP32[(($35)>>2)])|0);
 $37=(($contactSolverDef+28)|0);
 HEAP32[(($37)>>2)]=$36;
 $38=(($this+36)|0);
 $39=((HEAP32[(($38)>>2)])|0);
 $40=(($contactSolverDef+32)|0);
 HEAP32[(($40)>>2)]=$39;
 $41=(($this)|0);
 $42=((HEAP32[(($41)>>2)])|0);
 $43=(($contactSolverDef+44)|0);
 HEAP32[(($43)>>2)]=$42;
 $44=$contactSolverDef;
 $45=$subStep;
 HEAP32[(($44)>>2)]=((HEAP32[(($45)>>2)])|0);HEAP32[((($44)+(4))>>2)]=((HEAP32[((($45)+(4))>>2)])|0);HEAP32[((($44)+(8))>>2)]=((HEAP32[((($45)+(8))>>2)])|0);HEAP32[((($44)+(12))>>2)]=((HEAP32[((($45)+(12))>>2)])|0);HEAP32[((($44)+(16))>>2)]=((HEAP32[((($45)+(16))>>2)])|0);HEAP32[((($44)+(20))>>2)]=((HEAP32[((($45)+(20))>>2)])|0);HEAP32[((($44)+(24))>>2)]=((HEAP32[((($45)+(24))>>2)])|0);
 $46=(($this+20)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=(($contactSolverDef+36)|0);
 HEAP32[(($48)>>2)]=$47;
 $49=(($this+24)|0);
 $50=((HEAP32[(($49)>>2)])|0);
 $51=(($contactSolverDef+40)|0);
 HEAP32[(($51)>>2)]=$50;
 __ZN15b2ContactSolverC2EP18b2ContactSolverDef($contactSolver,$contactSolverDef);
 $52=(($subStep+16)|0);
 $i1_0=0;
 while(1) {

  $54=((HEAP32[(($52)>>2)])|0);
  $55=($i1_0|0)<($54|0);
  if (!($55)) {
   break;
  }
  $57=((__ZN15b2ContactSolver27SolveTOIPositionConstraintsEii($contactSolver,$toiIndexA,$toiIndexB))|0);
  $59=((($i1_0)+(1))|0);
  if ($57) {
   break;
  } else {
   $i1_0=$59;
  }
 }
 $61=(($this+8)|0);
 $62=((HEAP32[(($61)>>2)])|0);
 $63=(($62+($toiIndexA<<2))|0);
 $64=((HEAP32[(($63)>>2)])|0);
 $65=(($64+52)|0);
 $66=((HEAP32[(($46)>>2)])|0);
 $67=(($66+((($toiIndexA)*(12))&-1))|0);
 $68=$67;
 $69=$65;
 $ld$8$0=(($68)|0);
 $70$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($68+4)|0);
 $70$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($69)|0);
 HEAP32[(($st$10$0)>>2)]=$70$0;
 $st$11$1=(($69+4)|0);
 HEAP32[(($st$11$1)>>2)]=$70$1;
 $71=((HEAP32[(($46)>>2)])|0);
 $72=(($71+((($toiIndexA)*(12))&-1)+8)|0);
 $73=(+(HEAPF32[(($72)>>2)]));
 $74=((HEAP32[(($61)>>2)])|0);
 $75=(($74+($toiIndexA<<2))|0);
 $76=((HEAP32[(($75)>>2)])|0);
 $77=(($76+68)|0);
 HEAPF32[(($77)>>2)]=$73;
 $78=((HEAP32[(($61)>>2)])|0);
 $79=(($78+($toiIndexB<<2))|0);
 $80=((HEAP32[(($79)>>2)])|0);
 $81=(($80+52)|0);
 $82=((HEAP32[(($46)>>2)])|0);
 $83=(($82+((($toiIndexB)*(12))&-1))|0);
 $84=$83;
 $85=$81;
 $ld$12$0=(($84)|0);
 $86$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($84+4)|0);
 $86$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($85)|0);
 HEAP32[(($st$14$0)>>2)]=$86$0;
 $st$15$1=(($85+4)|0);
 HEAP32[(($st$15$1)>>2)]=$86$1;
 $87=((HEAP32[(($46)>>2)])|0);
 $88=(($87+((($toiIndexB)*(12))&-1)+8)|0);
 $89=(+(HEAPF32[(($88)>>2)]));
 $90=((HEAP32[(($61)>>2)])|0);
 $91=(($90+($toiIndexB<<2))|0);
 $92=((HEAP32[(($91)>>2)])|0);
 $93=(($92+68)|0);
 HEAPF32[(($93)>>2)]=$89;
 __ZN15b2ContactSolver29InitializeVelocityConstraintsEv($contactSolver);
 $94=(($subStep+12)|0);
 $95=((HEAP32[(($94)>>2)])|0);
 $96=($95|0)>0;
 if ($96) {
  $i2_055=0;
  while(1) {

   __ZN15b2ContactSolver24SolveVelocityConstraintsEv($contactSolver);
   $98=((($i2_055)+(1))|0);
   $99=((HEAP32[(($94)>>2)])|0);
   $100=($98|0)<($99|0);
   if ($100) {
    $i2_055=$98;
   } else {
    break;
   }
  }
 }
 $101=(($subStep)|0);
 $102=(+(HEAPF32[(($101)>>2)]));
 $103=((HEAP32[(($2)>>2)])|0);
 $104=($103|0)>0;
 if ($104) {
  $i3_054=0;
  while(1) {

   $105=((HEAP32[(($46)>>2)])|0);
   $106=(($105+((($i3_054)*(12))&-1))|0);
   $107=$106;
   $ld$16$0=(($107)|0);
   $108$0=((HEAP32[(($ld$16$0)>>2)])|0);
   $ld$17$1=(($107+4)|0);
   $108$1=((HEAP32[(($ld$17$1)>>2)])|0);
   $st$18$0=(($c)|0);
   HEAP32[(($st$18$0)>>2)]=$108$0;
   $st$19$1=(($c+4)|0);
   HEAP32[(($st$19$1)>>2)]=$108$1;
   $109=((HEAP32[(($46)>>2)])|0);
   $110=(($109+((($i3_054)*(12))&-1)+8)|0);
   $111=(+(HEAPF32[(($110)>>2)]));
   $112=((HEAP32[(($49)>>2)])|0);
   $113=(($112+((($i3_054)*(12))&-1))|0);
   $114=$113;
   $ld$20$0=(($114)|0);
   $115$0=((HEAP32[(($ld$20$0)>>2)])|0);
   $ld$21$1=(($114+4)|0);
   $115$1=((HEAP32[(($ld$21$1)>>2)])|0);
   $st$22$0=(($v)|0);
   HEAP32[(($st$22$0)>>2)]=$115$0;
   $st$23$1=(($v+4)|0);
   HEAP32[(($st$23$1)>>2)]=$115$1;
   $116=((HEAP32[(($49)>>2)])|0);
   $117=(($116+((($i3_054)*(12))&-1)+8)|0);
   $118=(+(HEAPF32[(($117)>>2)]));
   __ZmlfRK6b2Vec2($translation,$102,$tmpcast53);
   $119=(+(__Z5b2DotRK6b2Vec2S1_($translation,$translation)));
   $120=$119>(4.0);
   if ($120) {
    $122=(+(__ZNK6b2Vec26LengthEv($translation)));
    $123=((2.0))/($122);
    __ZN6b2Vec2mLEf($tmpcast53,$123);
   }
   $125=($102)*($118);
   $126=($125)*($125);
   $127=$126>(2.4674012660980225);
   if ($127) {
    $129=(+(__Z5b2AbsIfET_S0_($125)));
    $130=((1.5707963705062866))/($129);
    $131=($118)*($130);
    $w_0=$131;
   } else {
    $w_0=$118;
   }

   __ZmlfRK6b2Vec2($1,$102,$tmpcast53);
   __ZN6b2Vec2pLERKS_($tmpcast,$1);
   $133=($102)*($w_0);
   $134=($111)+($133);
   $135=((HEAP32[(($46)>>2)])|0);
   $136=(($135+((($i3_054)*(12))&-1))|0);
   $137=$136;
   $ld$24$0=(($c)|0);
   $138$0=((HEAP32[(($ld$24$0)>>2)])|0);
   $ld$25$1=(($c+4)|0);
   $138$1=((HEAP32[(($ld$25$1)>>2)])|0);
   $st$26$0=(($137)|0);
   HEAP32[(($st$26$0)>>2)]=$138$0;
   $st$27$1=(($137+4)|0);
   HEAP32[(($st$27$1)>>2)]=$138$1;
   $139=((HEAP32[(($46)>>2)])|0);
   $140=(($139+((($i3_054)*(12))&-1)+8)|0);
   HEAPF32[(($140)>>2)]=$134;
   $141=((HEAP32[(($49)>>2)])|0);
   $142=(($141+((($i3_054)*(12))&-1))|0);
   $143=$142;
   $ld$28$0=(($v)|0);
   $144$0=((HEAP32[(($ld$28$0)>>2)])|0);
   $ld$29$1=(($v+4)|0);
   $144$1=((HEAP32[(($ld$29$1)>>2)])|0);
   $st$30$0=(($143)|0);
   HEAP32[(($st$30$0)>>2)]=$144$0;
   $st$31$1=(($143+4)|0);
   HEAP32[(($st$31$1)>>2)]=$144$1;
   $145=((HEAP32[(($49)>>2)])|0);
   $146=(($145+((($i3_054)*(12))&-1)+8)|0);
   HEAPF32[(($146)>>2)]=$w_0;
   $147=((HEAP32[(($61)>>2)])|0);
   $148=(($147+($i3_054<<2))|0);
   $149=((HEAP32[(($148)>>2)])|0);
   $150=(($149+60)|0);
   $151=$150;
   $ld$32$0=(($c)|0);
   $152$0=((HEAP32[(($ld$32$0)>>2)])|0);
   $ld$33$1=(($c+4)|0);
   $152$1=((HEAP32[(($ld$33$1)>>2)])|0);
   $st$34$0=(($151)|0);
   HEAP32[(($st$34$0)>>2)]=$152$0;
   $st$35$1=(($151+4)|0);
   HEAP32[(($st$35$1)>>2)]=$152$1;
   $153=(($149+72)|0);
   HEAPF32[(($153)>>2)]=$134;
   $154=(($149+80)|0);
   $155=$154;
   $ld$36$0=(($v)|0);
   $156$0=((HEAP32[(($ld$36$0)>>2)])|0);
   $ld$37$1=(($v+4)|0);
   $156$1=((HEAP32[(($ld$37$1)>>2)])|0);
   $st$38$0=(($155)|0);
   HEAP32[(($st$38$0)>>2)]=$156$0;
   $st$39$1=(($155+4)|0);
   HEAP32[(($st$39$1)>>2)]=$156$1;
   $157=(($149+88)|0);
   HEAPF32[(($157)>>2)]=$w_0;
   __ZN6b2Body20SynchronizeTransformEv($149);
   $158=((($i3_054)+(1))|0);
   $159=((HEAP32[(($2)>>2)])|0);
   $160=($158|0)<($159|0);
   if ($160) {
    $i3_054=$158;
   } else {
    break;
   }
  }
 }
 $161=(($contactSolver+44)|0);
 $162=((HEAP32[(($161)>>2)])|0);
 __ZN8b2Island6ReportEPK27b2ContactVelocityConstraint($this,$162);
 __ZN15b2ContactSolverD2Ev($contactSolver);
 STACKTOP=sp;return;
}


function __ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$or_cond=0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$_0=0,label=0;

 $1=((__ZNK9b2Fixture13GetFilterDataEv($fixtureA))|0);
 $2=((__ZNK9b2Fixture13GetFilterDataEv($fixtureB))|0);
 $3=(($1+4)|0);
 $4=((HEAP16[(($3)>>1)])|0);
 $5=(($2+4)|0);
 $6=((HEAP16[(($5)>>1)])|0);
 $7=(($4<<16)>>16)!=(($6<<16)>>16);
 $8=(($4<<16)>>16)==0;
 $or_cond=$7|$8;
 if (!($or_cond)) {
  $10=(($4<<16)>>16)>0;
  $_0=$10;

  return (($_0)|0);
 }
 $12=(($1+2)|0);
 $13=((HEAP16[(($12)>>1)])|0);
 $14=(($2)|0);
 $15=((HEAP16[(($14)>>1)])|0);
 $16=$15&$13;
 $17=(($16<<16)>>16)==0;
 if ($17) {
  $_0=0;

  return (($_0)|0);
 }
 $19=(($1)|0);
 $20=((HEAP16[(($19)>>1)])|0);
 $21=(($2+2)|0);
 $22=((HEAP16[(($21)>>1)])|0);
 $23=$22&$20;
 $24=(($23<<16)>>16)!=0;
 $_0=$24;

 return (($_0)|0);
}


function __ZNK9b2Fixture13GetFilterDataEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+32)|0);
 return (($1)|0);
}


function __ZN15b2ContactFilterD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2ContactFilterD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN15b2ContactFilter13ShouldCollideEP9b2FixtureP16b2ParticleSystemi($this,$fixture,$particleSystem,$particleIndex){
 $this=($this)|0;
 $fixture=($fixture)|0;
 $particleSystem=($particleSystem)|0;
 $particleIndex=($particleIndex)|0;
 var label=0;

 return ((1)|0);
}


function __ZN15b2ContactFilter13ShouldCollideEP16b2ParticleSystemii($this,$particleSystem,$particleIndexA,$particleIndexB){
 $this=($this)|0;
 $particleSystem=($particleSystem)|0;
 $particleIndexA=($particleIndexA)|0;
 $particleIndexB=($particleIndexB)|0;
 var label=0;

 return ((1)|0);
}


function __ZN12b2MouseJointC2EPK15b2MouseJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=0,$13=0,$14=0;
 var $15=0,$ld$4$0=0,$16$0=0,$ld$5$1=0,$16$1=0,$st$6$0=0,$st$7$1=0,$17=0,$18=.0,$19=0,$20=0,$21=.0,$22=0,$23=0,$24=.0,$25=0,$26=0,$27=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=(($this)|0);
 $3=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($2,$3);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=5616;
 $5=(($this+68)|0);
 $6=(($this+76)|0);
 $7=(($this+96)|0);
 $8=(($def+20)|0);
 $9=$8;
 $10=$6;
 $ld$0$0=(($9)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($9+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($10)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($10+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=(($this+52)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=((__ZNK6b2Body12GetTransformEv($13))|0);
 __Z6b2MulTRK11b2TransformRK6b2Vec2($tmpcast,$14,$6);
 $15=$5;
 $ld$4$0=(($1)|0);
 $16$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($1+4)|0);
 $16$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($15)|0);
 HEAP32[(($st$6$0)>>2)]=$16$0;
 $st$7$1=(($15+4)|0);
 HEAP32[(($st$7$1)>>2)]=$16$1;
 $17=(($def+28)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+104)|0);
 HEAPF32[(($19)>>2)]=$18;
 __ZN6b2Vec27SetZeroEv($7);
 $20=(($def+32)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=(($this+84)|0);
 HEAPF32[(($22)>>2)]=$21;
 $23=(($def+36)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(($this+88)|0);
 HEAPF32[(($25)>>2)]=$24;
 $26=(($this+92)|0);
 HEAPF32[(($26)>>2)]=0.0;
 $27=(($this+108)|0);
 HEAPF32[(($27)>>2)]=0.0;
 STACKTOP=sp;return;
}


function __ZNK6b2Body7IsAwakeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&2;
 $4=(($3<<16)>>16)!=0;
 return (($4)|0);
}


function __ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cB=0,$tmpcast=0,$vB=0,$tmpcast18=0,$qB=0,$1=0,$tmpcast19=0,$2=0,$K=0,$3=0,$4=0,$tmpcast20=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0;
 var $13=0,$14=0,$15=0,$16=0,$ld$0$0=0,$17$0=0,$ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$18=0,$19=0,$20=.0,$21=0,$22=0,$23=0,$24=.0,$25=0,$26=0,$27=0;
 var $28=0,$29=0,$30=0,$ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=0,$ld$8$0=0,$40$0=0,$ld$9$1=0;
 var $40$1=0,$st$10$0=0,$st$11$1=0,$41=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0,$55=.0,$56=.0,$57=0;
 var $58=.0,$59=.0,$60=.0,$61=.0,$62=0,$63=0,$65=.0,$storemerge=.0,$67=.0,$68=0,$69=0,$70=0,$71=0,$ld$12$0=0,$72$0=0,$ld$13$1=0,$72$1=0,$st$14$0=0,$st$15$1=0,$73=.0;
 var $74=.0,$75=0,$76=.0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=0,$83=.0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=.0,$90=0,$91=0,$92=.0,$93=.0;
 var $94=.0,$95=.0,$96=.0,$97=.0,$98=.0,$99=.0,$100=0,$101=0,$102=0,$103=0,$104=0,$105=0,$106=0,$ld$16$0=0,$107$0=0,$ld$17$1=0,$107$1=0,$st$18$0=0,$st$19$1=0,$108=.0;
 var $109=.0,$110=0,$111=0,$112=0,$113=0,$115=0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$wB_0=.0,$124=0,$125=0,$126=0,$127=0,$ld$20$0=0,$128$0=0,$ld$21$1=0;
 var $128$1=0,$st$22$0=0,$st$23$1=0,$129=0,$130=0,$131=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cB=((sp)|0);
 $tmpcast=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast18=$vB;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast19=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast20=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+52)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+8)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($this+116)|0);
 HEAP32[(($11)>>2)]=$10;
 $12=(($this+128)|0);
 $13=((HEAP32[(($7)>>2)])|0);
 $14=(($13+44)|0);
 $15=$14;
 $16=$12;
 $ld$0$0=(($15)|0);
 $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($15+4)|0);
 $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($16)|0);
 HEAP32[(($st$2$0)>>2)]=$17$0;
 $st$3$1=(($16+4)|0);
 HEAP32[(($st$3$1)>>2)]=$17$1;
 $18=((HEAP32[(($7)>>2)])|0);
 $19=(($18+136)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=(($this+136)|0);
 HEAPF32[(($21)>>2)]=$20;
 $22=((HEAP32[(($7)>>2)])|0);
 $23=(($22+144)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(($this+140)|0);
 HEAPF32[(($25)>>2)]=$24;
 $26=((HEAP32[(($11)>>2)])|0);
 $27=(($data+28)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=(($28+((($26)*(12))&-1))|0);
 $30=$29;
 $ld$4$0=(($30)|0);
 $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($30+4)|0);
 $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$31$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$31$1;
 $32=((HEAP32[(($11)>>2)])|0);
 $33=((HEAP32[(($27)>>2)])|0);
 $34=(($33+((($32)*(12))&-1)+8)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($data+32)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=(($37+((($32)*(12))&-1))|0);
 $39=$38;
 $ld$8$0=(($39)|0);
 $40$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($39+4)|0);
 $40$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vB)|0);
 HEAP32[(($st$10$0)>>2)]=$40$0;
 $st$11$1=(($vB+4)|0);
 HEAP32[(($st$11$1)>>2)]=$40$1;
 $41=((HEAP32[(($11)>>2)])|0);
 $42=((HEAP32[(($36)>>2)])|0);
 $43=(($42+((($41)*(12))&-1)+8)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 __ZN5b2RotC1Ef($qB,$35);
 $45=((HEAP32[(($7)>>2)])|0);
 $46=(+(__ZNK6b2Body7GetMassEv($45)));
 $47=(($this+84)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 $49=($48)*((6.2831854820251465));
 $50=($46)*((2.0));
 $51=(($this+88)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 $53=($50)*($52);
 $54=($49)*($53);
 $55=($49)*($49);
 $56=($46)*($55);
 $57=(($data)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=($58)*($56);
 $60=($54)+($59);
 $61=($58)*($60);
 $62=(($this+108)|0);
 $63=$61!=(0.0);
 if ($63) {
  $65=((1.0))/($61);
  $storemerge=$65;
 } else {
  $storemerge=$61;
 }

 HEAPF32[(($62)>>2)]=$storemerge;
 $67=($59)*($storemerge);
 $68=(($this+92)|0);
 HEAPF32[(($68)>>2)]=$67;
 $69=(($this+120)|0);
 $70=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($2,$70,$12);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast19,$qB,$2);
 $71=$69;
 $ld$12$0=(($1)|0);
 $72$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($1+4)|0);
 $72$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($71)|0);
 HEAP32[(($st$14$0)>>2)]=$72$0;
 $st$15$1=(($71+4)|0);
 HEAP32[(($st$15$1)>>2)]=$72$1;
 $73=(+(HEAPF32[(($21)>>2)]));
 $74=(+(HEAPF32[(($25)>>2)]));
 $75=(($this+124)|0);
 $76=(+(HEAPF32[(($75)>>2)]));
 $77=($74)*($76);
 $78=($76)*($77);
 $79=($73)+($78);
 $80=(+(HEAPF32[(($62)>>2)]));
 $81=($80)+($79);
 $82=(($K)|0);
 HEAPF32[(($82)>>2)]=$81;
 $83=(+(HEAPF32[(($25)>>2)]));
 $84=((-.0))-($83);
 $85=(($69)|0);
 $86=(+(HEAPF32[(($85)>>2)]));
 $87=($86)*($84);
 $88=(+(HEAPF32[(($75)>>2)]));
 $89=($87)*($88);
 $90=(($K+4)|0);
 HEAPF32[(($90)>>2)]=$89;
 $91=(($K+8)|0);
 HEAPF32[(($91)>>2)]=$89;
 $92=(+(HEAPF32[(($21)>>2)]));
 $93=(+(HEAPF32[(($25)>>2)]));
 $94=(+(HEAPF32[(($85)>>2)]));
 $95=($93)*($94);
 $96=($94)*($95);
 $97=($92)+($96);
 $98=(+(HEAPF32[(($62)>>2)]));
 $99=($98)+($97);
 $100=(($K+12)|0);
 HEAPF32[(($100)>>2)]=$99;
 $101=(($this+144)|0);
 __ZNK7b2Mat2210GetInverseEv($3,$K);
 $102=$101;
 $103=$3;
 HEAP32[(($102)>>2)]=((HEAP32[(($103)>>2)])|0);HEAP32[((($102)+(4))>>2)]=((HEAP32[((($103)+(4))>>2)])|0);HEAP32[((($102)+(8))>>2)]=((HEAP32[((($103)+(8))>>2)])|0);HEAP32[((($102)+(12))>>2)]=((HEAP32[((($103)+(12))>>2)])|0);
 $104=(($this+160)|0);
 __ZplRK6b2Vec2S1_($5,$tmpcast,$69);
 $105=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($tmpcast20,$5,$105);
 $106=$104;
 $ld$16$0=(($4)|0);
 $107$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($4+4)|0);
 $107$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($106)|0);
 HEAP32[(($st$18$0)>>2)]=$107$0;
 $st$19$1=(($106+4)|0);
 HEAP32[(($st$19$1)>>2)]=$107$1;
 $108=(+(HEAPF32[(($68)>>2)]));
 __ZN6b2Vec2mLEf($104,$108);
 $109=($44)*((0.9800000190734863));
 $110=(($data+24)|0);
 $111=((HEAP8[($110)])|0);
 $112=(($111<<24)>>24)==0;
 $113=(($this+96)|0);
 if ($112) {
  __ZN6b2Vec27SetZeroEv($113);
  $wB_0=$109;

  $124=((HEAP32[(($11)>>2)])|0);
  $125=((HEAP32[(($36)>>2)])|0);
  $126=(($125+((($124)*(12))&-1))|0);
  $127=$126;
  $ld$20$0=(($vB)|0);
  $128$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($vB+4)|0);
  $128$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($127)|0);
  HEAP32[(($st$22$0)>>2)]=$128$0;
  $st$23$1=(($127+4)|0);
  HEAP32[(($st$23$1)>>2)]=$128$1;
  $129=((HEAP32[(($11)>>2)])|0);
  $130=((HEAP32[(($36)>>2)])|0);
  $131=(($130+((($129)*(12))&-1)+8)|0);
  HEAPF32[(($131)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $115=(($data+8)|0);
  $116=(+(HEAPF32[(($115)>>2)]));
  __ZN6b2Vec2mLEf($113,$116);
  $117=(+(HEAPF32[(($21)>>2)]));
  __ZmlfRK6b2Vec2($6,$117,$113);
  __ZN6b2Vec2pLERKS_($tmpcast18,$6);
  $118=(+(HEAPF32[(($25)>>2)]));
  $119=(+(__Z7b2CrossRK6b2Vec2S1_($69,$113)));
  $120=($118)*($119);
  $121=($109)+($120);
  $wB_0=$121;

  $124=((HEAP32[(($11)>>2)])|0);
  $125=((HEAP32[(($36)>>2)])|0);
  $126=(($125+((($124)*(12))&-1))|0);
  $127=$126;
  $ld$20$0=(($vB)|0);
  $128$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($vB+4)|0);
  $128$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($127)|0);
  HEAP32[(($st$22$0)>>2)]=$128$0;
  $st$23$1=(($127+4)|0);
  HEAP32[(($st$23$1)>>2)]=$128$1;
  $129=((HEAP32[(($11)>>2)])|0);
  $130=((HEAP32[(($36)>>2)])|0);
  $131=(($130+((($129)*(12))&-1)+8)|0);
  HEAPF32[(($131)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN5b2RotC1Ef($this,$angle){
 $this=($this)|0;
 $angle=+($angle);
 var label=0;

 __ZN5b2RotC2Ef($this,$angle);
 return;
}


function __ZNK7b2Mat2210GetInverseEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=.0,$12=0,$14=.0,$det_0=.0,$16=.0,$17=0,$18=.0,$19=.0,$20=0,$21=.0;
 var $22=0,$23=.0,$24=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+8)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+12)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($2)*($8);
 $10=($4)*($6);
 $11=($9)-($10);
 $12=$11!=(0.0);
 if ($12) {
  $14=((1.0))/($11);
  $det_0=$14;
 } else {
  $det_0=$11;
 }

 $16=($8)*($det_0);
 $17=(($agg_result)|0);
 HEAPF32[(($17)>>2)]=$16;
 $18=((-.0))-($det_0);
 $19=($4)*($18);
 $20=(($agg_result+8)|0);
 HEAPF32[(($20)>>2)]=$19;
 $21=($6)*($18);
 $22=(($agg_result+4)|0);
 HEAPF32[(($22)>>2)]=$21;
 $23=($2)*($det_0);
 $24=(($agg_result+12)|0);
 HEAPF32[(($24)>>2)]=$23;
 return;
}


function __ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vB=0,$tmpcast=0,$Cdot=0,$1=0,$impulse=0,$tmpcast11=0,$2=0,$3=0,$4=0,$5=0,$oldImpulse=0,$tmpcast10=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$ld$0$0=0;
 var $13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=0,$21=0,$22=.0,$23=0,$24=0,$ld$4$0=0,$25$0=0,$ld$5$1=0,$25$1=0;
 var $st$6$0=0,$st$7$1=0,$26=0,$27=.0,$28=0,$29=.0,$30=.0,$31=.0,$32=.0,$33=0,$35=.0,$36=.0,$impulse13=0,$38=0,$39=.0,$40=0,$41=.0,$42=.0,$43=.0,$44=.0;
 var $45=0,$46=0,$47=0,$48=0,$ld$8$0=0,$49$0=0,$ld$9$1=0,$49$1=0,$st$10$0=0,$st$11$1=0,$50=0,$51=0,$52=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vB=((sp)|0);
 $tmpcast=$vB;
 $Cdot=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $impulse=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast11=$impulse;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $oldImpulse=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast10=$oldImpulse;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+116)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($data+32)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+((($8)*(12))&-1))|0);
 $12=$11;
 $ld$0$0=(($12)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vB)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($vB+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=((HEAP32[(($9)>>2)])|0);
 $16=(($15+((($14)*(12))&-1)+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+120)|0);
 __Z7b2CrossfRK6b2Vec2($1,$17,$18);
 __ZplRK6b2Vec2S1_($Cdot,$tmpcast,$1);
 $19=(($this+144)|0);
 $20=(($this+160)|0);
 __ZplRK6b2Vec2S1_($3,$Cdot,$20);
 $21=(($this+108)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=(($this+96)|0);
 __ZmlfRK6b2Vec2($4,$22,$23);
 __ZplRK6b2Vec2S1_($5,$3,$4);
 __ZNK6b2Vec2ngEv($2,$5);
 __Z5b2MulRK7b2Mat22RK6b2Vec2($tmpcast11,$19,$2);
 $24=$23;
 $ld$4$0=(($24)|0);
 $25$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($24+4)|0);
 $25$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($oldImpulse)|0);
 HEAP32[(($st$6$0)>>2)]=$25$0;
 $st$7$1=(($oldImpulse+4)|0);
 HEAP32[(($st$7$1)>>2)]=$25$1;
 __ZN6b2Vec2pLERKS_($23,$tmpcast11);
 $26=(($data)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 $28=(($this+104)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=($27)*($29);
 $31=(+(__ZNK6b2Vec213LengthSquaredEv($23)));
 $32=($30)*($30);
 $33=$31>$32;
 if ($33) {
  $35=(+(__ZNK6b2Vec26LengthEv($23)));
  $36=($30)/($35);
  __ZN6b2Vec2mLEf($23,$36);
 }
 $impulse13=$impulse;
 __ZmiRK6b2Vec2S1_($impulse13,$23,$tmpcast10);
 $38=(($this+136)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 __ZmlfRK6b2Vec2($6,$39,$tmpcast11);
 __ZN6b2Vec2pLERKS_($tmpcast,$6);
 $40=(($this+140)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(+(__Z7b2CrossRK6b2Vec2S1_($18,$tmpcast11)));
 $43=($41)*($42);
 $44=($17)+($43);
 $45=((HEAP32[(($7)>>2)])|0);
 $46=((HEAP32[(($9)>>2)])|0);
 $47=(($46+((($45)*(12))&-1))|0);
 $48=$47;
 $ld$8$0=(($vB)|0);
 $49$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vB+4)|0);
 $49$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($48)|0);
 HEAP32[(($st$10$0)>>2)]=$49$0;
 $st$11$1=(($48+4)|0);
 HEAP32[(($st$11$1)>>2)]=$49$1;
 $50=((HEAP32[(($7)>>2)])|0);
 $51=((HEAP32[(($9)>>2)])|0);
 $52=(($51+((($50)*(12))&-1)+8)|0);
 HEAPF32[(($52)>>2)]=$44;
 STACKTOP=sp;return;
}


function __Z5b2MulRK7b2Mat22RK6b2Vec2($agg_result,$A,$v){
 $agg_result=($agg_result)|0;
 $A=($A)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=.0,label=0;

 $1=(($A)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($A+8)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 $12=(($A+4)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($4)*($13);
 $15=(($A+12)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=($9)*($16);
 $18=($14)+($17);
 __ZN6b2Vec2C1Eff($agg_result,$11,$18);
 return;
}


function __ZN12b2MouseJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK12b2MouseJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+76)|0);
 $2=$1;
 $3=$agg_result;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function __ZNK12b2MouseJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK12b2MouseJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,label=0;

 $1=(($this+96)|0);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$1);
 return;
}


function __ZNK12b2MouseJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=.0,label=0;

 $1=($inv_dt)*((0.0));
 return (+($1));
}


function __ZN12b2MouseJoint11ShiftOriginERK6b2Vec2($this,$newOrigin){
 $this=($this)|0;
 $newOrigin=($newOrigin)|0;
 var $1=0,label=0;

 $1=(($this+76)|0);
 __ZN6b2Vec2mIERKS_($1,$newOrigin);
 return;
}


function __ZN12b2MouseJoint4DumpEv($this){
 $this=($this)|0;
 var label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 __Z5b2LogPKcz(4152,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN12b2MouseJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN12b2MouseJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN5b2RotC2Ef($this,$angle){
 $this=($this)|0;
 $angle=+($angle);
 var $1=.0,$2=0,$3=.0,$4=0,label=0;

 $1=(+(Math_sin($angle)));
 $2=(($this)|0);
 HEAPF32[(($2)>>2)]=$1;
 $3=(+(Math_cos($angle)));
 $4=(($this+4)|0);
 HEAPF32[(($4)>>2)]=$3;
 return;
}


function __ZN15b2MotorJointDef10InitializeEP6b2BodyS1_($this,$bA,$bB){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 var $xB=0,$tmpcast=0,$1=0,$tmpcast3=0,$2=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,$7=0,$8=0,$9=0,$ld$4$0=0,$10$0=0,$ld$5$1=0;
 var $10$1=0,$st$6$0=0,$st$7$1=0,$11=0,$12=.0,$13=0,$14=.0,$15=.0,$16=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $xB=((sp)|0);
 $tmpcast=$xB;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast3=$1;
 $2=(($this+8)|0);
 HEAP32[(($2)>>2)]=$bA;
 $3=(($this+12)|0);
 HEAP32[(($3)>>2)]=$bB;
 $4=((__ZNK6b2Body11GetPositionEv($bB))|0);
 $5=$4;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($xB)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($xB+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 $7=(($this+20)|0);
 $8=((HEAP32[(($2)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast3,$8,$tmpcast);
 $9=$7;
 $ld$4$0=(($1)|0);
 $10$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($1+4)|0);
 $10$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($9)|0);
 HEAP32[(($st$6$0)>>2)]=$10$0;
 $st$7$1=(($9+4)|0);
 HEAP32[(($st$7$1)>>2)]=$10$1;
 $11=((HEAP32[(($2)>>2)])|0);
 $12=(+(__ZNK6b2Body8GetAngleEv($11)));
 $13=((HEAP32[(($3)>>2)])|0);
 $14=(+(__ZNK6b2Body8GetAngleEv($13)));
 $15=($14)-($12);
 $16=(($this+28)|0);
 HEAPF32[(($16)>>2)]=$15;
 STACKTOP=sp;return;
}


function __ZNK6b2Body13GetLocalPointERK6b2Vec2($agg_result,$this,$worldPoint){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $worldPoint=($worldPoint)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 __Z6b2MulTRK11b2TransformRK6b2Vec2($agg_result,$1,$worldPoint);
 return;
}


function __ZN12b2MotorJointC2EPK15b2MotorJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=.0,$12=0,$13=0,$14=0,$15=.0;
 var $16=0,$17=0,$18=.0,$19=0,$20=0,$21=.0,$22=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=5680;
 $4=(($this+68)|0);
 $5=(($this+80)|0);
 $6=(($def+20)|0);
 $7=$6;
 $8=$4;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($def+28)|0);
 $11=(+(HEAPF32[(($10)>>2)]));
 $12=(($this+76)|0);
 HEAPF32[(($12)>>2)]=$11;
 __ZN6b2Vec27SetZeroEv($5);
 $13=(($this+88)|0);
 HEAPF32[(($13)>>2)]=0.0;
 $14=(($def+32)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($this+92)|0);
 HEAPF32[(($16)>>2)]=$15;
 $17=(($def+36)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+96)|0);
 HEAPF32[(($19)>>2)]=$18;
 $20=(($def+40)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=(($this+100)|0);
 HEAPF32[(($22)>>2)]=$21;
 return;
}


function __ZN12b2MotorJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast32=0,$cB=0,$tmpcast33=0,$vB=0,$tmpcast34=0,$qA=0,$qB=0,$1=0,$tmpcast35=0,$2=0,$3=0,$tmpcast36=0,$4=0,$K=0,$5=0,$6=0,$tmpcast37=0;
 var $7=0,$8=0,$9=0,$10=0,$P=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0;
 var $26=0,$27=0,$ld$0$0=0,$28$0=0,$ld$1$1=0,$28$1=0,$st$2$0=0,$st$3$1=0,$29=0,$30=0,$31=0,$32=0,$33=0,$ld$4$0=0,$34$0=0,$ld$5$1=0,$34$1=0,$st$6$0=0,$st$7$1=0,$35=0;
 var $36=0,$37=.0,$38=0,$39=0,$40=0,$41=.0,$42=0,$43=0,$44=0,$45=.0,$46=0,$47=0,$48=0,$49=.0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0;
 var $ld$8$0=0,$56$0=0,$ld$9$1=0,$56$1=0,$st$10$0=0,$st$11$1=0,$57=0,$58=0,$59=0,$60=.0,$61=0,$62=0,$63=0,$64=0,$ld$12$0=0,$65$0=0,$ld$13$1=0,$65$1=0,$st$14$0=0,$st$15$1=0;
 var $66=0,$67=0,$68=0,$69=.0,$70=0,$71=0,$72=0,$73=0,$ld$16$0=0,$74$0=0,$ld$17$1=0,$74$1=0,$st$18$0=0,$st$19$1=0,$75=0,$76=0,$77=0,$78=.0,$79=0,$80=0;
 var $81=0,$ld$20$0=0,$82$0=0,$ld$21$1=0,$82$1=0,$st$22$0=0,$st$23$1=0,$83=0,$84=0,$85=0,$86=.0,$87=0,$88=0,$ld$24$0=0,$89$0=0,$ld$25$1=0,$89$1=0,$st$26$0=0,$st$27$1=0,$90=0;
 var $91=0,$ld$28$0=0,$92$0=0,$ld$29$1=0,$92$1=0,$st$30$0=0,$st$31$1=0,$93=.0,$94=.0,$95=.0,$96=.0,$97=.0,$98=0,$99=.0,$100=.0,$101=.0,$102=.0,$103=0,$104=.0,$105=.0;
 var $106=.0,$107=.0,$108=0,$109=.0,$110=0,$111=.0,$112=.0,$113=.0,$114=.0,$115=0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=0,$122=0,$123=.0,$124=.0,$125=.0;
 var $126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=0,$132=0,$133=0,$134=0,$135=.0,$136=0,$137=0,$139=.0,$storemerge=.0,$141=0,$142=0,$143=0,$ld$32$0=0,$144$0=0,$ld$33$1=0;
 var $144$1=0,$st$34$0=0,$st$35$1=0,$145=.0,$146=0,$147=.0,$148=.0,$149=0,$150=0,$151=0,$152=0,$153=0,$155=0,$156=.0,$157=.0,$158=0,$159=.0,$160=.0,$161=0,$162=.0;
 var $163=0,$164=.0,$165=.0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0,$171=.0,$172=.0,$173=.0,$174=.0,$176=0,$wB_0=.0,$wA_0=.0,$178=0,$179=0,$180=0,$181=0,$ld$36$0=0;
 var $182$0=0,$ld$37$1=0,$182$1=0,$st$38$0=0,$st$39$1=0,$183=0,$184=0,$185=0,$186=0,$187=0,$188=0,$189=0,$ld$40$0=0,$190$0=0,$ld$41$1=0,$190$1=0,$st$42$0=0,$st$43$1=0,$191=0,$192=0;
 var $193=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$6;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=(($this+48)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+8)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($this+104)|0);
 HEAP32[(($17)>>2)]=$16;
 $18=(($this+52)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($19+8)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($this+108)|0);
 HEAP32[(($22)>>2)]=$21;
 $23=(($this+128)|0);
 $24=((HEAP32[(($13)>>2)])|0);
 $25=(($24+44)|0);
 $26=$25;
 $27=$23;
 $ld$0$0=(($26)|0);
 $28$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($26+4)|0);
 $28$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($27)|0);
 HEAP32[(($st$2$0)>>2)]=$28$0;
 $st$3$1=(($27+4)|0);
 HEAP32[(($st$3$1)>>2)]=$28$1;
 $29=(($this+136)|0);
 $30=((HEAP32[(($18)>>2)])|0);
 $31=(($30+44)|0);
 $32=$31;
 $33=$29;
 $ld$4$0=(($32)|0);
 $34$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($32+4)|0);
 $34$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($33)|0);
 HEAP32[(($st$6$0)>>2)]=$34$0;
 $st$7$1=(($33+4)|0);
 HEAP32[(($st$7$1)>>2)]=$34$1;
 $35=((HEAP32[(($13)>>2)])|0);
 $36=(($35+136)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+156)|0);
 HEAPF32[(($38)>>2)]=$37;
 $39=((HEAP32[(($18)>>2)])|0);
 $40=(($39+136)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+160)|0);
 HEAPF32[(($42)>>2)]=$41;
 $43=((HEAP32[(($13)>>2)])|0);
 $44=(($43+144)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 $46=(($this+164)|0);
 HEAPF32[(($46)>>2)]=$45;
 $47=((HEAP32[(($18)>>2)])|0);
 $48=(($47+144)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($this+168)|0);
 HEAPF32[(($50)>>2)]=$49;
 $51=((HEAP32[(($17)>>2)])|0);
 $52=(($data+28)|0);
 $53=((HEAP32[(($52)>>2)])|0);
 $54=(($53+((($51)*(12))&-1))|0);
 $55=$54;
 $ld$8$0=(($55)|0);
 $56$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($55+4)|0);
 $56$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$56$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$56$1;
 $57=((HEAP32[(($17)>>2)])|0);
 $58=((HEAP32[(($52)>>2)])|0);
 $59=(($58+((($57)*(12))&-1)+8)|0);
 $60=(+(HEAPF32[(($59)>>2)]));
 $61=(($data+32)|0);
 $62=((HEAP32[(($61)>>2)])|0);
 $63=(($62+((($57)*(12))&-1))|0);
 $64=$63;
 $ld$12$0=(($64)|0);
 $65$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($64+4)|0);
 $65$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$65$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$65$1;
 $66=((HEAP32[(($17)>>2)])|0);
 $67=((HEAP32[(($61)>>2)])|0);
 $68=(($67+((($66)*(12))&-1)+8)|0);
 $69=(+(HEAPF32[(($68)>>2)]));
 $70=((HEAP32[(($22)>>2)])|0);
 $71=((HEAP32[(($52)>>2)])|0);
 $72=(($71+((($70)*(12))&-1))|0);
 $73=$72;
 $ld$16$0=(($73)|0);
 $74$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($73+4)|0);
 $74$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$74$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$74$1;
 $75=((HEAP32[(($22)>>2)])|0);
 $76=((HEAP32[(($52)>>2)])|0);
 $77=(($76+((($75)*(12))&-1)+8)|0);
 $78=(+(HEAPF32[(($77)>>2)]));
 $79=((HEAP32[(($61)>>2)])|0);
 $80=(($79+((($75)*(12))&-1))|0);
 $81=$80;
 $ld$20$0=(($81)|0);
 $82$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($81+4)|0);
 $82$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$82$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$82$1;
 $83=((HEAP32[(($22)>>2)])|0);
 $84=((HEAP32[(($61)>>2)])|0);
 $85=(($84+((($83)*(12))&-1)+8)|0);
 $86=(+(HEAPF32[(($85)>>2)]));
 __ZN5b2RotC1Ef($qA,$60);
 __ZN5b2RotC1Ef($qB,$78);
 $87=(($this+112)|0);
 __ZNK6b2Vec2ngEv($2,$23);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast35,$qA,$2);
 $88=$87;
 $ld$24$0=(($1)|0);
 $89$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($1+4)|0);
 $89$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($88)|0);
 HEAP32[(($st$26$0)>>2)]=$89$0;
 $st$27$1=(($88+4)|0);
 HEAP32[(($st$27$1)>>2)]=$89$1;
 $90=(($this+120)|0);
 __ZNK6b2Vec2ngEv($4,$29);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast36,$qB,$4);
 $91=$90;
 $ld$28$0=(($3)|0);
 $92$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($3+4)|0);
 $92$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($91)|0);
 HEAP32[(($st$30$0)>>2)]=$92$0;
 $st$31$1=(($91+4)|0);
 HEAP32[(($st$31$1)>>2)]=$92$1;
 $93=(+(HEAPF32[(($38)>>2)]));
 $94=(+(HEAPF32[(($42)>>2)]));
 $95=(+(HEAPF32[(($46)>>2)]));
 $96=(+(HEAPF32[(($50)>>2)]));
 $97=($93)+($94);
 $98=(($this+116)|0);
 $99=(+(HEAPF32[(($98)>>2)]));
 $100=($95)*($99);
 $101=($99)*($100);
 $102=($97)+($101);
 $103=(($this+124)|0);
 $104=(+(HEAPF32[(($103)>>2)]));
 $105=($96)*($104);
 $106=($104)*($105);
 $107=($102)+($106);
 $108=(($K)|0);
 HEAPF32[(($108)>>2)]=$107;
 $109=((-.0))-($95);
 $110=(($87)|0);
 $111=(+(HEAPF32[(($110)>>2)]));
 $112=($111)*($109);
 $113=(+(HEAPF32[(($98)>>2)]));
 $114=($112)*($113);
 $115=(($90)|0);
 $116=(+(HEAPF32[(($115)>>2)]));
 $117=($96)*($116);
 $118=(+(HEAPF32[(($103)>>2)]));
 $119=($117)*($118);
 $120=($114)-($119);
 $121=(($K+4)|0);
 HEAPF32[(($121)>>2)]=$120;
 $122=(($K+8)|0);
 HEAPF32[(($122)>>2)]=$120;
 $123=(+(HEAPF32[(($110)>>2)]));
 $124=($95)*($123);
 $125=($123)*($124);
 $126=($97)+($125);
 $127=(+(HEAPF32[(($115)>>2)]));
 $128=($96)*($127);
 $129=($127)*($128);
 $130=($126)+($129);
 $131=(($K+12)|0);
 HEAPF32[(($131)>>2)]=$130;
 $132=(($this+172)|0);
 __ZNK7b2Mat2210GetInverseEv($5,$K);
 $133=$132;
 $134=$5;
 HEAP32[(($133)>>2)]=((HEAP32[(($134)>>2)])|0);HEAP32[((($133)+(4))>>2)]=((HEAP32[((($134)+(4))>>2)])|0);HEAP32[((($133)+(8))>>2)]=((HEAP32[((($134)+(8))>>2)])|0);HEAP32[((($133)+(12))>>2)]=((HEAP32[((($134)+(12))>>2)])|0);
 $135=($95)+($96);
 $136=(($this+188)|0);
 $137=$135>(0.0);
 if ($137) {
  $139=((1.0))/($135);
  $storemerge=$139;
 } else {
  $storemerge=$135;
 }

 HEAPF32[(($136)>>2)]=$storemerge;
 $141=(($this+144)|0);
 __ZplRK6b2Vec2S1_($9,$tmpcast33,$90);
 __ZmiRK6b2Vec2S1_($8,$9,$tmpcast);
 __ZmiRK6b2Vec2S1_($7,$8,$87);
 $142=(($this+68)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($10,$qA,$142);
 __ZmiRK6b2Vec2S1_($tmpcast37,$7,$10);
 $143=$141;
 $ld$32$0=(($6)|0);
 $144$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($6+4)|0);
 $144$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($143)|0);
 HEAP32[(($st$34$0)>>2)]=$144$0;
 $st$35$1=(($143+4)|0);
 HEAP32[(($st$35$1)>>2)]=$144$1;
 $145=($78)-($60);
 $146=(($this+76)|0);
 $147=(+(HEAPF32[(($146)>>2)]));
 $148=($145)-($147);
 $149=(($this+152)|0);
 HEAPF32[(($149)>>2)]=$148;
 $150=(($data+24)|0);
 $151=((HEAP8[($150)])|0);
 $152=(($151<<24)>>24)==0;
 $153=(($this+80)|0);
 if ($152) {
  __ZN6b2Vec27SetZeroEv($153);
  $176=(($this+88)|0);
  HEAPF32[(($176)>>2)]=0.0;
  $wA_0=$69;$wB_0=$86;


  $178=((HEAP32[(($17)>>2)])|0);
  $179=((HEAP32[(($61)>>2)])|0);
  $180=(($179+((($178)*(12))&-1))|0);
  $181=$180;
  $ld$36$0=(($vA)|0);
  $182$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vA+4)|0);
  $182$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($181)|0);
  HEAP32[(($st$38$0)>>2)]=$182$0;
  $st$39$1=(($181+4)|0);
  HEAP32[(($st$39$1)>>2)]=$182$1;
  $183=((HEAP32[(($17)>>2)])|0);
  $184=((HEAP32[(($61)>>2)])|0);
  $185=(($184+((($183)*(12))&-1)+8)|0);
  HEAPF32[(($185)>>2)]=$wA_0;
  $186=((HEAP32[(($22)>>2)])|0);
  $187=((HEAP32[(($61)>>2)])|0);
  $188=(($187+((($186)*(12))&-1))|0);
  $189=$188;
  $ld$40$0=(($vB)|0);
  $190$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vB+4)|0);
  $190$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($189)|0);
  HEAP32[(($st$42$0)>>2)]=$190$0;
  $st$43$1=(($189+4)|0);
  HEAP32[(($st$43$1)>>2)]=$190$1;
  $191=((HEAP32[(($22)>>2)])|0);
  $192=((HEAP32[(($61)>>2)])|0);
  $193=(($192+((($191)*(12))&-1)+8)|0);
  HEAPF32[(($193)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $155=(($data+8)|0);
  $156=(+(HEAPF32[(($155)>>2)]));
  __ZN6b2Vec2mLEf($153,$156);
  $157=(+(HEAPF32[(($155)>>2)]));
  $158=(($this+88)|0);
  $159=(+(HEAPF32[(($158)>>2)]));
  $160=($157)*($159);
  HEAPF32[(($158)>>2)]=$160;
  $161=(($153)|0);
  $162=(+(HEAPF32[(($161)>>2)]));
  $163=(($this+84)|0);
  $164=(+(HEAPF32[(($163)>>2)]));
  __ZN6b2Vec2C1Eff($P,$162,$164);
  __ZmlfRK6b2Vec2($11,$93,$P);
  __ZN6b2Vec2mIERKS_($tmpcast32,$11);
  $165=(+(__Z7b2CrossRK6b2Vec2S1_($87,$P)));
  $166=(+(HEAPF32[(($158)>>2)]));
  $167=($165)+($166);
  $168=($95)*($167);
  $169=($69)-($168);
  __ZmlfRK6b2Vec2($12,$94,$P);
  __ZN6b2Vec2pLERKS_($tmpcast34,$12);
  $170=(+(__Z7b2CrossRK6b2Vec2S1_($90,$P)));
  $171=(+(HEAPF32[(($158)>>2)]));
  $172=($170)+($171);
  $173=($96)*($172);
  $174=($86)+($173);
  $wA_0=$169;$wB_0=$174;


  $178=((HEAP32[(($17)>>2)])|0);
  $179=((HEAP32[(($61)>>2)])|0);
  $180=(($179+((($178)*(12))&-1))|0);
  $181=$180;
  $ld$36$0=(($vA)|0);
  $182$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vA+4)|0);
  $182$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($181)|0);
  HEAP32[(($st$38$0)>>2)]=$182$0;
  $st$39$1=(($181+4)|0);
  HEAP32[(($st$39$1)>>2)]=$182$1;
  $183=((HEAP32[(($17)>>2)])|0);
  $184=((HEAP32[(($61)>>2)])|0);
  $185=(($184+((($183)*(12))&-1)+8)|0);
  HEAPF32[(($185)>>2)]=$wA_0;
  $186=((HEAP32[(($22)>>2)])|0);
  $187=((HEAP32[(($61)>>2)])|0);
  $188=(($187+((($186)*(12))&-1))|0);
  $189=$188;
  $ld$40$0=(($vB)|0);
  $190$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vB+4)|0);
  $190$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($189)|0);
  HEAP32[(($st$42$0)>>2)]=$190$0;
  $st$43$1=(($189+4)|0);
  HEAP32[(($st$43$1)>>2)]=$190$1;
  $191=((HEAP32[(($22)>>2)])|0);
  $192=((HEAP32[(($61)>>2)])|0);
  $193=(($192+((($191)*(12))&-1)+8)|0);
  HEAPF32[(($193)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN12b2MotorJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast28=0,$Cdot1=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$impulse2=0,$tmpcast30=0,$7=0,$oldImpulse3=0,$tmpcast29=0,$8=0,$9=0,$10=0,$11=0;
 var $12=0,$13=0,$14=0,$15=0,$ld$0$0=0,$16$0=0,$ld$1$1=0,$16$1=0,$st$2$0=0,$st$3$1=0,$17=0,$18=0,$19=0,$20=.0,$21=0,$22=0,$23=0,$24=0,$ld$4$0=0,$25$0=0;
 var $ld$5$1=0,$25$1=0,$st$6$0=0,$st$7$1=0,$26=0,$27=0,$28=0,$29=.0,$30=0,$31=.0,$32=0,$33=.0,$34=0,$35=.0,$36=0,$37=.0,$38=0,$39=.0,$40=0,$41=.0;
 var $42=.0,$43=0,$44=.0,$45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=0,$51=.0,$52=.0,$53=.0,$54=0,$55=.0,$56=0,$57=.0,$58=.0,$59=.0,$60=.0,$61=.0;
 var $62=.0,$63=.0,$64=.0,$65=.0,$66=.0,$67=0,$68=0,$69=.0,$70=.0,$71=0,$72=0,$73=0,$74=0,$ld$8$0=0,$75$0=0,$ld$9$1=0,$75$1=0,$st$10$0=0,$st$11$1=0,$76=0;
 var $77=.0,$78=.0,$79=.0,$80=.0,$81=0,$83=.0,$impulse232=0,$85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=.0,$91=0,$92=0,$93=0,$94=0,$ld$12$0=0,$95$0=0,$ld$13$1=0;
 var $95$1=0,$st$14$0=0,$st$15$1=0,$96=0,$97=0,$98=0,$99=0,$100=0,$101=0,$102=0,$ld$16$0=0,$103$0=0,$ld$17$1=0,$103$1=0,$st$18$0=0,$st$19$1=0,$104=0,$105=0,$106=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast28=$vB;
 $Cdot1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $impulse2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$impulse2;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $oldImpulse3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast29=$oldImpulse3;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($this+104)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($data+32)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($13+((($11)*(12))&-1))|0);
 $15=$14;
 $ld$0$0=(($15)|0);
 $16$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($15+4)|0);
 $16$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$16$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$16$1;
 $17=((HEAP32[(($10)>>2)])|0);
 $18=((HEAP32[(($12)>>2)])|0);
 $19=(($18+((($17)*(12))&-1)+8)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=(($this+108)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($18+((($22)*(12))&-1))|0);
 $24=$23;
 $ld$4$0=(($24)|0);
 $25$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($24+4)|0);
 $25$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$25$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$25$1;
 $26=((HEAP32[(($21)>>2)])|0);
 $27=((HEAP32[(($12)>>2)])|0);
 $28=(($27+((($26)*(12))&-1)+8)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=(($this+156)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+160)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 $34=(($this+164)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+168)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($data)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($data+4)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=($29)-($20);
 $43=(($this+100)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=($41)*($44);
 $46=(($this+152)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=($45)*($47);
 $49=($42)+($48);
 $50=(($this+188)|0);
 $51=(+(HEAPF32[(($50)>>2)]));
 $52=((-.0))-($51);
 $53=($49)*($52);
 $54=(($this+88)|0);
 $55=(+(HEAPF32[(($54)>>2)]));
 $56=(($this+96)|0);
 $57=(+(HEAPF32[(($56)>>2)]));
 $58=($39)*($57);
 $59=($55)+($53);
 $60=((-.0))-($58);
 $61=(+(__Z7b2ClampIfET_S0_S0_S0_($59,$60,$58)));
 HEAPF32[(($54)>>2)]=$61;
 $62=($61)-($55);
 $63=($35)*($62);
 $64=($20)-($63);
 $65=($37)*($62);
 $66=($29)+($65);
 $67=(($this+120)|0);
 __Z7b2CrossfRK6b2Vec2($4,$66,$67);
 __ZplRK6b2Vec2S1_($3,$tmpcast28,$4);
 __ZmiRK6b2Vec2S1_($2,$3,$tmpcast);
 $68=(($this+112)|0);
 __Z7b2CrossfRK6b2Vec2($5,$64,$68);
 __ZmiRK6b2Vec2S1_($1,$2,$5);
 $69=(+(HEAPF32[(($43)>>2)]));
 $70=($41)*($69);
 $71=(($this+144)|0);
 __ZmlfRK6b2Vec2($6,$70,$71);
 __ZplRK6b2Vec2S1_($Cdot1,$1,$6);
 $72=(($this+172)|0);
 __Z5b2MulRK7b2Mat22RK6b2Vec2($7,$72,$Cdot1);
 __ZNK6b2Vec2ngEv($tmpcast30,$7);
 $73=(($this+80)|0);
 $74=$73;
 $ld$8$0=(($74)|0);
 $75$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($74+4)|0);
 $75$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($oldImpulse3)|0);
 HEAP32[(($st$10$0)>>2)]=$75$0;
 $st$11$1=(($oldImpulse3+4)|0);
 HEAP32[(($st$11$1)>>2)]=$75$1;
 __ZN6b2Vec2pLERKS_($73,$tmpcast30);
 $76=(($this+92)|0);
 $77=(+(HEAPF32[(($76)>>2)]));
 $78=($39)*($77);
 $79=(+(__ZNK6b2Vec213LengthSquaredEv($73)));
 $80=($78)*($78);
 $81=$79>$80;
 if ($81) {
  $83=(+(__ZN6b2Vec29NormalizeEv($73)));
  __ZN6b2Vec2mLEf($73,$78);
 }
 $impulse232=$impulse2;
 __ZmiRK6b2Vec2S1_($impulse232,$73,$tmpcast29);
 __ZmlfRK6b2Vec2($8,$31,$tmpcast30);
 __ZN6b2Vec2mIERKS_($tmpcast,$8);
 $85=(+(__Z7b2CrossRK6b2Vec2S1_($68,$tmpcast30)));
 $86=($35)*($85);
 $87=($64)-($86);
 __ZmlfRK6b2Vec2($9,$33,$tmpcast30);
 __ZN6b2Vec2pLERKS_($tmpcast28,$9);
 $88=(+(__Z7b2CrossRK6b2Vec2S1_($67,$tmpcast30)));
 $89=($37)*($88);
 $90=($66)+($89);
 $91=((HEAP32[(($10)>>2)])|0);
 $92=((HEAP32[(($12)>>2)])|0);
 $93=(($92+((($91)*(12))&-1))|0);
 $94=$93;
 $ld$12$0=(($vA)|0);
 $95$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vA+4)|0);
 $95$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($94)|0);
 HEAP32[(($st$14$0)>>2)]=$95$0;
 $st$15$1=(($94+4)|0);
 HEAP32[(($st$15$1)>>2)]=$95$1;
 $96=((HEAP32[(($10)>>2)])|0);
 $97=((HEAP32[(($12)>>2)])|0);
 $98=(($97+((($96)*(12))&-1)+8)|0);
 HEAPF32[(($98)>>2)]=$87;
 $99=((HEAP32[(($21)>>2)])|0);
 $100=((HEAP32[(($12)>>2)])|0);
 $101=(($100+((($99)*(12))&-1))|0);
 $102=$101;
 $ld$16$0=(($vB)|0);
 $103$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($vB+4)|0);
 $103$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($102)|0);
 HEAP32[(($st$18$0)>>2)]=$103$0;
 $st$19$1=(($102+4)|0);
 HEAP32[(($st$19$1)>>2)]=$103$1;
 $104=((HEAP32[(($21)>>2)])|0);
 $105=((HEAP32[(($12)>>2)])|0);
 $106=(($105+((($104)*(12))&-1)+8)|0);
 HEAPF32[(($106)>>2)]=$90;
 STACKTOP=sp;return;
}


function __Z7b2ClampIfET_S0_S0_S0_($a,$low,$high){
 $a=+($a);
 $low=+($low);
 $high=+($high);
 var $1=.0,$2=.0,label=0;

 $1=(+(__Z5b2MinIfET_S0_S0_($a,$high)));
 $2=(+(__Z5b2MaxIfET_S0_S0_($low,$1)));
 return (+($2));
}


function __ZN12b2MotorJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK12b2MotorJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK6b2Body11GetPositionEv($2))|0);
 $4=$3;
 $5=$agg_result;
 $ld$0$0=(($4)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($4+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($5)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($5+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 return;
}


function __ZNK12b2MotorJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK6b2Body11GetPositionEv($2))|0);
 $4=$3;
 $5=$agg_result;
 $ld$0$0=(($4)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($4+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($5)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($5+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 return;
}


function __ZNK12b2MotorJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,label=0;

 $1=(($this+80)|0);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$1);
 return;
}


function __ZNK12b2MotorJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+88)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN12b2MotorJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3968,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(4120,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2992,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2640,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(2216,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 __Z5b2LogPKcz(1752,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$20,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $21=(($this+92)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1304,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+96)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(968,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+100)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(592,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+56)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 __Z5b2LogPKcz(304,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$31,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN7b2Joint11ShiftOriginERK6b2Vec2($this,$newOrigin){
 $this=($this)|0;
 $newOrigin=($newOrigin)|0;
 var label=0;

 return;
}


function __ZN12b2MotorJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN12b2MotorJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN18b2DistanceJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($this,$b1,$b2,$anchor1,$anchor2){
 $this=($this)|0;
 $b1=($b1)|0;
 $b2=($b2)|0;
 $anchor1=($anchor1)|0;
 $anchor2=($anchor2)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast7=0,$d=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0;
 var $12$0=0,$ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,$13=.0,$14=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast7=$2;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$b1;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$b2;
 $5=(($this+20)|0);
 $6=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$6,$anchor1);
 $7=$5;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast7,$10,$anchor2);
 $11=$9;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 __ZmiRK6b2Vec2S1_($d,$anchor2,$anchor1);
 $13=(+(__ZNK6b2Vec26LengthEv($d)));
 $14=(($this+36)|0);
 HEAPF32[(($14)>>2)]=$13;
 STACKTOP=sp;return;
}


function __ZN15b2DistanceJointC2EPK18b2DistanceJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0,$ld$4$0=0,$13$0=0,$ld$5$1=0;
 var $13$1=0,$st$6$0=0,$st$7$1=0,$14=0,$15=.0,$16=0,$17=0,$18=.0,$19=0,$20=0,$21=.0,$22=0,$23=0,$24=0,$25=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=5240;
 $4=(($this+80)|0);
 $5=(($this+88)|0);
 $6=(($def+20)|0);
 $7=$6;
 $8=$4;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($def+28)|0);
 $11=$10;
 $12=$5;
 $ld$4$0=(($11)|0);
 $13$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($11+4)|0);
 $13$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($12)|0);
 HEAP32[(($st$6$0)>>2)]=$13$0;
 $st$7$1=(($12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$13$1;
 $14=(($def+36)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($this+104)|0);
 HEAPF32[(($16)>>2)]=$15;
 $17=(($def+40)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+68)|0);
 HEAPF32[(($19)>>2)]=$18;
 $20=(($def+44)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=(($this+72)|0);
 HEAPF32[(($22)>>2)]=$21;
 $23=(($this+100)|0);
 HEAPF32[(($23)>>2)]=0.0;
 $24=(($this+96)|0);
 HEAPF32[(($24)>>2)]=0.0;
 $25=(($this+76)|0);
 HEAPF32[(($25)>>2)]=0.0;
 return;
}


function __ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast31=0,$cB=0,$tmpcast32=0,$vB=0,$tmpcast33=0,$qA=0,$qB=0,$1=0,$tmpcast34=0,$2=0,$3=0,$tmpcast35=0,$4=0,$5=0,$tmpcast36=0,$6=0,$7=0;
 var $P=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$ld$0$0=0,$25$0=0;
 var $ld$1$1=0,$25$1=0,$st$2$0=0,$st$3$1=0,$26=0,$27=0,$28=0,$29=0,$30=0,$ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$32=0,$33=0,$34=.0,$35=0,$36=0;
 var $37=0,$38=.0,$39=0,$40=0,$41=0,$42=.0,$43=0,$44=0,$45=0,$46=.0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$ld$8$0=0,$53$0=0,$ld$9$1=0,$53$1=0;
 var $st$10$0=0,$st$11$1=0,$54=0,$55=0,$56=0,$57=.0,$58=0,$59=0,$60=0,$61=0,$ld$12$0=0,$62$0=0,$ld$13$1=0,$62$1=0,$st$14$0=0,$st$15$1=0,$63=0,$64=0,$65=0,$66=.0;
 var $67=0,$68=0,$69=0,$70=0,$ld$16$0=0,$71$0=0,$ld$17$1=0,$71$1=0,$st$18$0=0,$st$19$1=0,$72=0,$73=0,$74=0,$75=.0,$76=0,$77=0,$78=0,$ld$20$0=0,$79$0=0,$ld$21$1=0;
 var $79$1=0,$st$22$0=0,$st$23$1=0,$80=0,$81=0,$82=0,$83=.0,$84=0,$85=0,$86=0,$ld$24$0=0,$87$0=0,$ld$25$1=0,$87$1=0,$st$26$0=0,$st$27$1=0,$88=0,$89=0,$90=0,$ld$28$0=0;
 var $91$0=0,$ld$29$1=0,$91$1=0,$st$30$0=0,$st$31$1=0,$92=0,$93=0,$ld$32$0=0,$94$0=0,$ld$33$1=0,$94$1=0,$st$34$0=0,$st$35$1=0,$95=.0,$96=0,$98=.0,$101=.0,$102=.0,$103=.0,$104=.0;
 var $105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=0,$116=.0,$118=.0,$119=0,$120=0,$121=.0,$122=0,$124=0,$125=.0,$126=.0,$127=.0;
 var $128=.0,$129=0,$130=.0,$131=.0,$132=.0,$133=.0,$134=.0,$135=0,$136=.0,$137=.0,$138=.0,$139=.0,$140=0,$141=0,$143=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=0;
 var $150=.0,$151=.0,$152=0,$154=.0,$156=.0,$158=0,$159=0,$161=0,$162=0,$163=0,$165=0,$166=.0,$167=0,$168=.0,$169=.0,$170=.0,$171=.0,$172=.0,$173=.0,$174=.0;
 var $175=.0,$176=.0,$177=.0,$178=.0,$179=.0,$181=0,$wB_0=.0,$wA_0=.0,$183=0,$184=0,$185=0,$186=0,$ld$36$0=0,$187$0=0,$ld$37$1=0,$187$1=0,$st$38$0=0,$st$39$1=0,$188=0,$189=0;
 var $190=0,$191=0,$192=0,$193=0,$194=0,$ld$40$0=0,$195$0=0,$ld$41$1=0,$195$1=0,$st$42$0=0,$st$43$1=0,$196=0,$197=0,$198=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast31=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($this+48)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+8)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($this+108)|0);
 HEAP32[(($14)>>2)]=$13;
 $15=(($this+52)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($16+8)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($this+112)|0);
 HEAP32[(($19)>>2)]=$18;
 $20=(($this+140)|0);
 $21=((HEAP32[(($10)>>2)])|0);
 $22=(($21+44)|0);
 $23=$22;
 $24=$20;
 $ld$0$0=(($23)|0);
 $25$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($23+4)|0);
 $25$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($24)|0);
 HEAP32[(($st$2$0)>>2)]=$25$0;
 $st$3$1=(($24+4)|0);
 HEAP32[(($st$3$1)>>2)]=$25$1;
 $26=(($this+148)|0);
 $27=((HEAP32[(($15)>>2)])|0);
 $28=(($27+44)|0);
 $29=$28;
 $30=$26;
 $ld$4$0=(($29)|0);
 $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($30)|0);
 HEAP32[(($st$6$0)>>2)]=$31$0;
 $st$7$1=(($30+4)|0);
 HEAP32[(($st$7$1)>>2)]=$31$1;
 $32=((HEAP32[(($10)>>2)])|0);
 $33=(($32+136)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+156)|0);
 HEAPF32[(($35)>>2)]=$34;
 $36=((HEAP32[(($15)>>2)])|0);
 $37=(($36+136)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=(($this+160)|0);
 HEAPF32[(($39)>>2)]=$38;
 $40=((HEAP32[(($10)>>2)])|0);
 $41=(($40+144)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+164)|0);
 HEAPF32[(($43)>>2)]=$42;
 $44=((HEAP32[(($15)>>2)])|0);
 $45=(($44+144)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=(($this+168)|0);
 HEAPF32[(($47)>>2)]=$46;
 $48=((HEAP32[(($14)>>2)])|0);
 $49=(($data+28)|0);
 $50=((HEAP32[(($49)>>2)])|0);
 $51=(($50+((($48)*(12))&-1))|0);
 $52=$51;
 $ld$8$0=(($52)|0);
 $53$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($52+4)|0);
 $53$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$53$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$53$1;
 $54=((HEAP32[(($14)>>2)])|0);
 $55=((HEAP32[(($49)>>2)])|0);
 $56=(($55+((($54)*(12))&-1)+8)|0);
 $57=(+(HEAPF32[(($56)>>2)]));
 $58=(($data+32)|0);
 $59=((HEAP32[(($58)>>2)])|0);
 $60=(($59+((($54)*(12))&-1))|0);
 $61=$60;
 $ld$12$0=(($61)|0);
 $62$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($61+4)|0);
 $62$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$62$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$62$1;
 $63=((HEAP32[(($14)>>2)])|0);
 $64=((HEAP32[(($58)>>2)])|0);
 $65=(($64+((($63)*(12))&-1)+8)|0);
 $66=(+(HEAPF32[(($65)>>2)]));
 $67=((HEAP32[(($19)>>2)])|0);
 $68=((HEAP32[(($49)>>2)])|0);
 $69=(($68+((($67)*(12))&-1))|0);
 $70=$69;
 $ld$16$0=(($70)|0);
 $71$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($70+4)|0);
 $71$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$71$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$71$1;
 $72=((HEAP32[(($19)>>2)])|0);
 $73=((HEAP32[(($49)>>2)])|0);
 $74=(($73+((($72)*(12))&-1)+8)|0);
 $75=(+(HEAPF32[(($74)>>2)]));
 $76=((HEAP32[(($58)>>2)])|0);
 $77=(($76+((($72)*(12))&-1))|0);
 $78=$77;
 $ld$20$0=(($78)|0);
 $79$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($78+4)|0);
 $79$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$79$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$79$1;
 $80=((HEAP32[(($19)>>2)])|0);
 $81=((HEAP32[(($58)>>2)])|0);
 $82=(($81+((($80)*(12))&-1)+8)|0);
 $83=(+(HEAPF32[(($82)>>2)]));
 __ZN5b2RotC1Ef($qA,$57);
 __ZN5b2RotC1Ef($qB,$75);
 $84=(($this+124)|0);
 $85=(($this+80)|0);
 __ZmiRK6b2Vec2S1_($2,$85,$20);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast34,$qA,$2);
 $86=$84;
 $ld$24$0=(($1)|0);
 $87$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($1+4)|0);
 $87$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($86)|0);
 HEAP32[(($st$26$0)>>2)]=$87$0;
 $st$27$1=(($86+4)|0);
 HEAP32[(($st$27$1)>>2)]=$87$1;
 $88=(($this+132)|0);
 $89=(($this+88)|0);
 __ZmiRK6b2Vec2S1_($4,$89,$26);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast35,$qB,$4);
 $90=$88;
 $ld$28$0=(($3)|0);
 $91$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($3+4)|0);
 $91$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($90)|0);
 HEAP32[(($st$30$0)>>2)]=$91$0;
 $st$31$1=(($90+4)|0);
 HEAP32[(($st$31$1)>>2)]=$91$1;
 $92=(($this+116)|0);
 __ZplRK6b2Vec2S1_($7,$tmpcast32,$88);
 __ZmiRK6b2Vec2S1_($6,$7,$tmpcast);
 __ZmiRK6b2Vec2S1_($tmpcast36,$6,$84);
 $93=$92;
 $ld$32$0=(($5)|0);
 $94$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($5+4)|0);
 $94$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($93)|0);
 HEAP32[(($st$34$0)>>2)]=$94$0;
 $st$35$1=(($93+4)|0);
 HEAP32[(($st$35$1)>>2)]=$94$1;
 $95=(+(__ZNK6b2Vec26LengthEv($92)));
 $96=$95>(0.004999999888241291);
 if ($96) {
  $98=((1.0))/($95);
  __ZN6b2Vec2mLEf($92,$98);
 } else {
  __ZN6b2Vec23SetEff($92,0.0,0.0);
 }
 $101=(+(__Z7b2CrossRK6b2Vec2S1_($84,$92)));
 $102=(+(__Z7b2CrossRK6b2Vec2S1_($88,$92)));
 $103=(+(HEAPF32[(($35)>>2)]));
 $104=(+(HEAPF32[(($43)>>2)]));
 $105=($101)*($104);
 $106=($101)*($105);
 $107=($103)+($106);
 $108=(+(HEAPF32[(($39)>>2)]));
 $109=($108)+($107);
 $110=(+(HEAPF32[(($47)>>2)]));
 $111=($102)*($110);
 $112=($102)*($111);
 $113=($109)+($112);
 $114=$113!=(0.0);
 if ($114) {
  $116=((1.0))/($113);
  $118=$116;
 } else {
  $118=0.0;
 }

 $119=(($this+172)|0);
 HEAPF32[(($119)>>2)]=$118;
 $120=(($this+68)|0);
 $121=(+(HEAPF32[(($120)>>2)]));
 $122=$121>(0.0);
 if ($122) {
  $124=(($this+104)|0);
  $125=(+(HEAPF32[(($124)>>2)]));
  $126=($95)-($125);
  $127=($121)*((6.2831854820251465));
  $128=($118)*((2.0));
  $129=(($this+72)|0);
  $130=(+(HEAPF32[(($129)>>2)]));
  $131=($128)*($130);
  $132=($127)*($131);
  $133=($118)*($127);
  $134=($127)*($133);
  $135=(($data)|0);
  $136=(+(HEAPF32[(($135)>>2)]));
  $137=($134)*($136);
  $138=($132)+($137);
  $139=($136)*($138);
  $140=(($this+96)|0);
  HEAPF32[(($140)>>2)]=$139;
  $141=$139!=(0.0);
  if ($141) {
   $143=((1.0))/($139);
   $145=$143;
  } else {
   $145=0.0;
  }

  HEAPF32[(($140)>>2)]=$145;
  $146=($126)*($136);
  $147=($134)*($146);
  $148=($147)*($145);
  $149=(($this+76)|0);
  HEAPF32[(($149)>>2)]=$148;
  $150=(+(HEAPF32[(($140)>>2)]));
  $151=($113)+($150);
  $152=$151!=(0.0);
  if ($152) {
   $154=((1.0))/($151);
   $156=$154;
  } else {
   $156=0.0;
  }

  HEAPF32[(($119)>>2)]=$156;
 } else {
  $158=(($this+96)|0);
  HEAPF32[(($158)>>2)]=0.0;
  $159=(($this+76)|0);
  HEAPF32[(($159)>>2)]=0.0;
 }
 $161=(($data+24)|0);
 $162=((HEAP8[($161)])|0);
 $163=(($162<<24)>>24)==0;
 if ($163) {
  $181=(($this+100)|0);
  HEAPF32[(($181)>>2)]=0.0;
  $wA_0=$66;$wB_0=$83;


  $183=((HEAP32[(($14)>>2)])|0);
  $184=((HEAP32[(($58)>>2)])|0);
  $185=(($184+((($183)*(12))&-1))|0);
  $186=$185;
  $ld$36$0=(($vA)|0);
  $187$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vA+4)|0);
  $187$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($186)|0);
  HEAP32[(($st$38$0)>>2)]=$187$0;
  $st$39$1=(($186+4)|0);
  HEAP32[(($st$39$1)>>2)]=$187$1;
  $188=((HEAP32[(($14)>>2)])|0);
  $189=((HEAP32[(($58)>>2)])|0);
  $190=(($189+((($188)*(12))&-1)+8)|0);
  HEAPF32[(($190)>>2)]=$wA_0;
  $191=((HEAP32[(($19)>>2)])|0);
  $192=((HEAP32[(($58)>>2)])|0);
  $193=(($192+((($191)*(12))&-1))|0);
  $194=$193;
  $ld$40$0=(($vB)|0);
  $195$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vB+4)|0);
  $195$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($194)|0);
  HEAP32[(($st$42$0)>>2)]=$195$0;
  $st$43$1=(($194+4)|0);
  HEAP32[(($st$43$1)>>2)]=$195$1;
  $196=((HEAP32[(($19)>>2)])|0);
  $197=((HEAP32[(($58)>>2)])|0);
  $198=(($197+((($196)*(12))&-1)+8)|0);
  HEAPF32[(($198)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $165=(($data+8)|0);
  $166=(+(HEAPF32[(($165)>>2)]));
  $167=(($this+100)|0);
  $168=(+(HEAPF32[(($167)>>2)]));
  $169=($166)*($168);
  HEAPF32[(($167)>>2)]=$169;
  __ZmlfRK6b2Vec2($P,$169,$92);
  $170=(+(HEAPF32[(($35)>>2)]));
  __ZmlfRK6b2Vec2($8,$170,$P);
  __ZN6b2Vec2mIERKS_($tmpcast31,$8);
  $171=(+(HEAPF32[(($43)>>2)]));
  $172=(+(__Z7b2CrossRK6b2Vec2S1_($84,$P)));
  $173=($171)*($172);
  $174=($66)-($173);
  $175=(+(HEAPF32[(($39)>>2)]));
  __ZmlfRK6b2Vec2($9,$175,$P);
  __ZN6b2Vec2pLERKS_($tmpcast33,$9);
  $176=(+(HEAPF32[(($47)>>2)]));
  $177=(+(__Z7b2CrossRK6b2Vec2S1_($88,$P)));
  $178=($176)*($177);
  $179=($83)+($178);
  $wA_0=$174;$wB_0=$179;


  $183=((HEAP32[(($14)>>2)])|0);
  $184=((HEAP32[(($58)>>2)])|0);
  $185=(($184+((($183)*(12))&-1))|0);
  $186=$185;
  $ld$36$0=(($vA)|0);
  $187$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vA+4)|0);
  $187$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($186)|0);
  HEAP32[(($st$38$0)>>2)]=$187$0;
  $st$39$1=(($186+4)|0);
  HEAP32[(($st$39$1)>>2)]=$187$1;
  $188=((HEAP32[(($14)>>2)])|0);
  $189=((HEAP32[(($58)>>2)])|0);
  $190=(($189+((($188)*(12))&-1)+8)|0);
  HEAPF32[(($190)>>2)]=$wA_0;
  $191=((HEAP32[(($19)>>2)])|0);
  $192=((HEAP32[(($58)>>2)])|0);
  $193=(($192+((($191)*(12))&-1))|0);
  $194=$193;
  $ld$40$0=(($vB)|0);
  $195$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vB+4)|0);
  $195$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($194)|0);
  HEAP32[(($st$42$0)>>2)]=$195$0;
  $st$43$1=(($194+4)|0);
  HEAP32[(($st$43$1)>>2)]=$195$1;
  $196=((HEAP32[(($19)>>2)])|0);
  $197=((HEAP32[(($58)>>2)])|0);
  $198=(($197+((($196)*(12))&-1)+8)|0);
  HEAPF32[(($198)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast14=0,$vpA=0,$1=0,$vpB=0,$2=0,$3=0,$P=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0;
 var $ld$1$1=0,$12$1=0,$st$2$0=0,$st$3$1=0,$13=0,$14=0,$15=0,$16=.0,$17=0,$18=0,$19=0,$20=0,$ld$4$0=0,$21$0=0,$ld$5$1=0,$21$1=0,$st$6$0=0,$st$7$1=0,$22=0,$23=0;
 var $24=0,$25=.0,$26=0,$27=0,$28=0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=.0,$35=.0,$36=0,$37=.0,$38=0,$39=.0,$40=.0,$41=.0,$42=.0,$43=.0;
 var $44=0,$45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=.0,$56=.0,$57=.0,$58=0,$59=0,$60=0,$61=0,$ld$8$0=0,$62$0=0;
 var $ld$9$1=0,$62$1=0,$st$10$0=0,$st$11$1=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$ld$12$0=0,$70$0=0,$ld$13$1=0,$70$1=0,$st$14$0=0,$st$15$1=0,$71=0,$72=0,$73=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast14=$vB;
 $vpA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $vpB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=(($this+108)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($data+32)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+((($7)*(12))&-1))|0);
 $11=$10;
 $ld$0$0=(($11)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($11+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$12$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$12$1;
 $13=((HEAP32[(($6)>>2)])|0);
 $14=((HEAP32[(($8)>>2)])|0);
 $15=(($14+((($13)*(12))&-1)+8)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(($this+112)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($14+((($18)*(12))&-1))|0);
 $20=$19;
 $ld$4$0=(($20)|0);
 $21$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$21$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$21$1;
 $22=((HEAP32[(($17)>>2)])|0);
 $23=((HEAP32[(($8)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+124)|0);
 __Z7b2CrossfRK6b2Vec2($1,$16,$26);
 __ZplRK6b2Vec2S1_($vpA,$tmpcast,$1);
 $27=(($this+132)|0);
 __Z7b2CrossfRK6b2Vec2($2,$25,$27);
 __ZplRK6b2Vec2S1_($vpB,$tmpcast14,$2);
 $28=(($this+116)|0);
 __ZmiRK6b2Vec2S1_($3,$vpB,$vpA);
 $29=(+(__Z5b2DotRK6b2Vec2S1_($28,$3)));
 $30=(($this+172)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=((-.0))-($31);
 $33=(($this+76)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=($29)+($34);
 $36=(($this+96)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+100)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=($37)*($39);
 $41=($35)+($40);
 $42=($41)*($32);
 $43=($39)+($42);
 HEAPF32[(($38)>>2)]=$43;
 __ZmlfRK6b2Vec2($P,$42,$28);
 $44=(($this+156)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 __ZmlfRK6b2Vec2($4,$45,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$4);
 $46=(($this+164)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=(+(__Z7b2CrossRK6b2Vec2S1_($26,$P)));
 $49=($47)*($48);
 $50=($16)-($49);
 $51=(($this+160)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 __ZmlfRK6b2Vec2($5,$52,$P);
 __ZN6b2Vec2pLERKS_($tmpcast14,$5);
 $53=(($this+168)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=(+(__Z7b2CrossRK6b2Vec2S1_($27,$P)));
 $56=($54)*($55);
 $57=($25)+($56);
 $58=((HEAP32[(($6)>>2)])|0);
 $59=((HEAP32[(($8)>>2)])|0);
 $60=(($59+((($58)*(12))&-1))|0);
 $61=$60;
 $ld$8$0=(($vA)|0);
 $62$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $62$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($61)|0);
 HEAP32[(($st$10$0)>>2)]=$62$0;
 $st$11$1=(($61+4)|0);
 HEAP32[(($st$11$1)>>2)]=$62$1;
 $63=((HEAP32[(($6)>>2)])|0);
 $64=((HEAP32[(($8)>>2)])|0);
 $65=(($64+((($63)*(12))&-1)+8)|0);
 HEAPF32[(($65)>>2)]=$50;
 $66=((HEAP32[(($17)>>2)])|0);
 $67=((HEAP32[(($8)>>2)])|0);
 $68=(($67+((($66)*(12))&-1))|0);
 $69=$68;
 $ld$12$0=(($vB)|0);
 $70$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $70$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($69)|0);
 HEAP32[(($st$14$0)>>2)]=$70$0;
 $st$15$1=(($69+4)|0);
 HEAP32[(($st$15$1)>>2)]=$70$1;
 $71=((HEAP32[(($17)>>2)])|0);
 $72=((HEAP32[(($8)>>2)])|0);
 $73=(($72+((($71)*(12))&-1)+8)|0);
 HEAPF32[(($73)>>2)]=$57;
 STACKTOP=sp;return;
}


function __ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast16=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$u=0,$3=0,$4=0,$P=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$11=0;
 var $12=0,$13=0,$14=0,$15=0,$16=0,$ld$0$0=0,$17$0=0,$ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$18=0,$19=0,$20=0,$21=.0,$22=0,$23=0,$24=0,$25=0,$ld$4$0=0;
 var $26$0=0,$ld$5$1=0,$26$1=0,$st$6$0=0,$st$7$1=0,$27=0,$28=0,$29=0,$30=.0,$31=0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=.0,$38=.0,$39=.0,$40=0,$41=.0;
 var $42=.0,$43=.0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=.0,$56=.0,$57=.0,$58=0,$59=0,$60=0,$61=0;
 var $ld$8$0=0,$62$0=0,$ld$9$1=0,$62$1=0,$st$10$0=0,$st$11$1=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$ld$12$0=0,$70$0=0,$ld$13$1=0,$70$1=0,$st$14$0=0,$st$15$1=0,$71=0;
 var $72=0,$73=0,$74=.0,$75=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast16=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+68)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=$8>(0.0);
 if ($9) {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 $11=(($this+108)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($data+28)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+((($12)*(12))&-1))|0);
 $16=$15;
 $ld$0$0=(($16)|0);
 $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($16+4)|0);
 $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$17$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$17$1;
 $18=((HEAP32[(($11)>>2)])|0);
 $19=((HEAP32[(($13)>>2)])|0);
 $20=(($19+((($18)*(12))&-1)+8)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=(($this+112)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($19+((($23)*(12))&-1))|0);
 $25=$24;
 $ld$4$0=(($25)|0);
 $26$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($25+4)|0);
 $26$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$26$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$26$1;
 $27=((HEAP32[(($22)>>2)])|0);
 $28=((HEAP32[(($13)>>2)])|0);
 $29=(($28+((($27)*(12))&-1)+8)|0);
 $30=(+(HEAPF32[(($29)>>2)]));
 __ZN5b2RotC1Ef($qA,$21);
 __ZN5b2RotC1Ef($qB,$30);
 $31=(($this+80)|0);
 $32=(($this+140)|0);
 __ZmiRK6b2Vec2S1_($1,$31,$32);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $33=(($this+88)|0);
 $34=(($this+148)|0);
 __ZmiRK6b2Vec2S1_($2,$33,$34);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast16,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($u,$3,$rA);
 $35=(+(__ZN6b2Vec29NormalizeEv($u)));
 $36=(($this+104)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=($35)-($37);
 $39=(+(__Z7b2ClampIfET_S0_S0_S0_($38,-0.20000000298023224,0.20000000298023224)));
 $40=(($this+172)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=((-.0))-($41);
 $43=($39)*($42);
 __ZmlfRK6b2Vec2($P,$43,$u);
 $44=(($this+156)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 __ZmlfRK6b2Vec2($5,$45,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$5);
 $46=(($this+164)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
 $49=($47)*($48);
 $50=($21)-($49);
 $51=(($this+160)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 __ZmlfRK6b2Vec2($6,$52,$P);
 __ZN6b2Vec2pLERKS_($tmpcast16,$6);
 $53=(($this+168)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
 $56=($54)*($55);
 $57=($30)+($56);
 $58=((HEAP32[(($11)>>2)])|0);
 $59=((HEAP32[(($13)>>2)])|0);
 $60=(($59+((($58)*(12))&-1))|0);
 $61=$60;
 $ld$8$0=(($cA)|0);
 $62$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $62$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($61)|0);
 HEAP32[(($st$10$0)>>2)]=$62$0;
 $st$11$1=(($61+4)|0);
 HEAP32[(($st$11$1)>>2)]=$62$1;
 $63=((HEAP32[(($11)>>2)])|0);
 $64=((HEAP32[(($13)>>2)])|0);
 $65=(($64+((($63)*(12))&-1)+8)|0);
 HEAPF32[(($65)>>2)]=$50;
 $66=((HEAP32[(($22)>>2)])|0);
 $67=((HEAP32[(($13)>>2)])|0);
 $68=(($67+((($66)*(12))&-1))|0);
 $69=$68;
 $ld$12$0=(($cB)|0);
 $70$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $70$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($69)|0);
 HEAP32[(($st$14$0)>>2)]=$70$0;
 $st$15$1=(($69+4)|0);
 HEAP32[(($st$15$1)>>2)]=$70$1;
 $71=((HEAP32[(($22)>>2)])|0);
 $72=((HEAP32[(($13)>>2)])|0);
 $73=(($72+((($71)*(12))&-1)+8)|0);
 HEAPF32[(($73)>>2)]=$57;
 $74=(+(__Z5b2AbsIfET_S0_($39)));
 $75=$74<(0.004999999888241291);
 $_0=$75;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK15b2DistanceJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+80)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2DistanceJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+88)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2DistanceJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,$4=0,label=0;

 $1=(($this+100)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 $4=(($this+116)|0);
 __ZmlfRK6b2Vec2($agg_result,$3,$4);
 return;
}


function __ZNK15b2DistanceJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var label=0;

 return 0.0;
}


function __ZN15b2DistanceJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3936,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3872,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2960,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2600,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+80)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+84)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(2168,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+88)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+92)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1704,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+104)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(1280,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+68)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(936,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+72)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 __Z5b2LogPKcz(560,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+56)|0);
 $34=((HEAP32[(($33)>>2)])|0);
 __Z5b2LogPKcz(256,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$34,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN15b2DistanceJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2DistanceJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN18b2FrictionJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($this,$bA,$bB,$anchor){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0,$12$0=0;
 var $ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$bA;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$bB;
 $5=(($this+20)|0);
 $6=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$6,$anchor);
 $7=$5;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast5,$10,$anchor);
 $11=$9;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 STACKTOP=sp;return;
}


function __ZN15b2FrictionJointC2EPK18b2FrictionJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=0,$13=0,$ld$4$0=0,$14$0=0;
 var $ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=.0,$21=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=5176;
 $4=(($this+68)|0);
 $5=(($this+76)|0);
 $6=(($this+84)|0);
 $7=(($def+20)|0);
 $8=$7;
 $9=$4;
 $ld$0$0=(($8)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($8+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($def+28)|0);
 $12=$11;
 $13=$5;
 $ld$4$0=(($12)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 __ZN6b2Vec27SetZeroEv($6);
 $15=(($this+92)|0);
 HEAPF32[(($15)>>2)]=0.0;
 $16=(($def+36)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+96)|0);
 HEAPF32[(($18)>>2)]=$17;
 $19=(($def+40)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=(($this+100)|0);
 HEAPF32[(($21)>>2)]=$20;
 return;
}


function __ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast28=0,$qA=0,$qB=0,$1=0,$tmpcast29=0,$2=0,$3=0,$tmpcast30=0,$4=0,$K=0,$5=0,$P=0,$6=0,$7=0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$ld$0$0=0,$23$0=0,$ld$1$1=0,$23$1=0,$st$2$0=0,$st$3$1=0,$24=0,$25=0;
 var $26=0,$27=0,$28=0,$ld$4$0=0,$29$0=0,$ld$5$1=0,$29$1=0,$st$6$0=0,$st$7$1=0,$30=0,$31=0,$32=.0,$33=0,$34=0,$35=0,$36=.0,$37=0,$38=0,$39=0,$40=.0;
 var $41=0,$42=0,$43=0,$44=.0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=.0,$51=0,$52=0,$53=0,$54=0,$ld$8$0=0,$55$0=0,$ld$9$1=0,$55$1=0,$st$10$0=0,$st$11$1=0;
 var $56=0,$57=0,$58=0,$59=.0,$60=0,$61=0,$62=0,$63=.0,$64=0,$65=0,$ld$12$0=0,$66$0=0,$ld$13$1=0,$66$1=0,$st$14$0=0,$st$15$1=0,$67=0,$68=0,$69=0,$70=.0;
 var $71=0,$72=0,$73=0,$ld$16$0=0,$74$0=0,$ld$17$1=0,$74$1=0,$st$18$0=0,$st$19$1=0,$75=0,$76=0,$77=0,$ld$20$0=0,$78$0=0,$ld$21$1=0,$78$1=0,$st$22$0=0,$st$23$1=0,$79=.0,$80=.0;
 var $81=.0,$82=.0,$83=.0,$84=0,$85=.0,$86=.0,$87=.0,$88=.0,$89=0,$90=.0,$91=.0,$92=.0,$93=.0,$94=0,$95=.0,$96=0,$97=.0,$98=.0,$99=.0,$100=.0;
 var $101=0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=0,$108=0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=0,$118=0,$119=0,$120=0;
 var $121=.0,$122=0,$123=0,$125=.0,$storemerge=.0,$127=0,$128=0,$129=0,$130=0,$132=0,$133=.0,$134=.0,$135=0,$136=.0,$137=.0,$138=0,$139=.0,$140=0,$141=.0,$142=.0;
 var $143=.0,$144=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=.0,$150=.0,$151=.0,$153=0,$wB_0=.0,$wA_0=.0,$155=0,$156=0,$157=0,$158=0,$ld$24$0=0,$159$0=0,$ld$25$1=0,$159$1=0;
 var $st$26$0=0,$st$27$1=0,$160=0,$161=0,$162=0,$163=0,$164=0,$165=0,$166=0,$ld$28$0=0,$167$0=0,$ld$29$1=0,$167$1=0,$st$30$0=0,$st$31$1=0,$168=0,$169=0,$170=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast28=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast29=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=(($this+48)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+8)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($this+104)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(($this+52)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+8)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($this+108)|0);
 HEAP32[(($17)>>2)]=$16;
 $18=(($this+128)|0);
 $19=((HEAP32[(($8)>>2)])|0);
 $20=(($19+44)|0);
 $21=$20;
 $22=$18;
 $ld$0$0=(($21)|0);
 $23$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($21+4)|0);
 $23$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($22)|0);
 HEAP32[(($st$2$0)>>2)]=$23$0;
 $st$3$1=(($22+4)|0);
 HEAP32[(($st$3$1)>>2)]=$23$1;
 $24=(($this+136)|0);
 $25=((HEAP32[(($13)>>2)])|0);
 $26=(($25+44)|0);
 $27=$26;
 $28=$24;
 $ld$4$0=(($27)|0);
 $29$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($27+4)|0);
 $29$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($28)|0);
 HEAP32[(($st$6$0)>>2)]=$29$0;
 $st$7$1=(($28+4)|0);
 HEAP32[(($st$7$1)>>2)]=$29$1;
 $30=((HEAP32[(($8)>>2)])|0);
 $31=(($30+136)|0);
 $32=(+(HEAPF32[(($31)>>2)]));
 $33=(($this+144)|0);
 HEAPF32[(($33)>>2)]=$32;
 $34=((HEAP32[(($13)>>2)])|0);
 $35=(($34+136)|0);
 $36=(+(HEAPF32[(($35)>>2)]));
 $37=(($this+148)|0);
 HEAPF32[(($37)>>2)]=$36;
 $38=((HEAP32[(($8)>>2)])|0);
 $39=(($38+144)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=(($this+152)|0);
 HEAPF32[(($41)>>2)]=$40;
 $42=((HEAP32[(($13)>>2)])|0);
 $43=(($42+144)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+156)|0);
 HEAPF32[(($45)>>2)]=$44;
 $46=((HEAP32[(($12)>>2)])|0);
 $47=(($data+28)|0);
 $48=((HEAP32[(($47)>>2)])|0);
 $49=(($48+((($46)*(12))&-1)+8)|0);
 $50=(+(HEAPF32[(($49)>>2)]));
 $51=(($data+32)|0);
 $52=((HEAP32[(($51)>>2)])|0);
 $53=(($52+((($46)*(12))&-1))|0);
 $54=$53;
 $ld$8$0=(($54)|0);
 $55$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($54+4)|0);
 $55$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vA)|0);
 HEAP32[(($st$10$0)>>2)]=$55$0;
 $st$11$1=(($vA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$55$1;
 $56=((HEAP32[(($12)>>2)])|0);
 $57=((HEAP32[(($51)>>2)])|0);
 $58=(($57+((($56)*(12))&-1)+8)|0);
 $59=(+(HEAPF32[(($58)>>2)]));
 $60=((HEAP32[(($17)>>2)])|0);
 $61=((HEAP32[(($47)>>2)])|0);
 $62=(($61+((($60)*(12))&-1)+8)|0);
 $63=(+(HEAPF32[(($62)>>2)]));
 $64=(($57+((($60)*(12))&-1))|0);
 $65=$64;
 $ld$12$0=(($65)|0);
 $66$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($65+4)|0);
 $66$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vB)|0);
 HEAP32[(($st$14$0)>>2)]=$66$0;
 $st$15$1=(($vB+4)|0);
 HEAP32[(($st$15$1)>>2)]=$66$1;
 $67=((HEAP32[(($17)>>2)])|0);
 $68=((HEAP32[(($51)>>2)])|0);
 $69=(($68+((($67)*(12))&-1)+8)|0);
 $70=(+(HEAPF32[(($69)>>2)]));
 __ZN5b2RotC1Ef($qA,$50);
 __ZN5b2RotC1Ef($qB,$63);
 $71=(($this+112)|0);
 $72=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($2,$72,$18);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast29,$qA,$2);
 $73=$71;
 $ld$16$0=(($1)|0);
 $74$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($1+4)|0);
 $74$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($73)|0);
 HEAP32[(($st$18$0)>>2)]=$74$0;
 $st$19$1=(($73+4)|0);
 HEAP32[(($st$19$1)>>2)]=$74$1;
 $75=(($this+120)|0);
 $76=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($4,$76,$24);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast30,$qB,$4);
 $77=$75;
 $ld$20$0=(($3)|0);
 $78$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($3+4)|0);
 $78$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($77)|0);
 HEAP32[(($st$22$0)>>2)]=$78$0;
 $st$23$1=(($77+4)|0);
 HEAP32[(($st$23$1)>>2)]=$78$1;
 $79=(+(HEAPF32[(($33)>>2)]));
 $80=(+(HEAPF32[(($37)>>2)]));
 $81=(+(HEAPF32[(($41)>>2)]));
 $82=(+(HEAPF32[(($45)>>2)]));
 $83=($79)+($80);
 $84=(($this+116)|0);
 $85=(+(HEAPF32[(($84)>>2)]));
 $86=($81)*($85);
 $87=($85)*($86);
 $88=($83)+($87);
 $89=(($this+124)|0);
 $90=(+(HEAPF32[(($89)>>2)]));
 $91=($82)*($90);
 $92=($90)*($91);
 $93=($88)+($92);
 $94=(($K)|0);
 HEAPF32[(($94)>>2)]=$93;
 $95=((-.0))-($81);
 $96=(($71)|0);
 $97=(+(HEAPF32[(($96)>>2)]));
 $98=($97)*($95);
 $99=(+(HEAPF32[(($84)>>2)]));
 $100=($98)*($99);
 $101=(($75)|0);
 $102=(+(HEAPF32[(($101)>>2)]));
 $103=($82)*($102);
 $104=(+(HEAPF32[(($89)>>2)]));
 $105=($103)*($104);
 $106=($100)-($105);
 $107=(($K+4)|0);
 HEAPF32[(($107)>>2)]=$106;
 $108=(($K+8)|0);
 HEAPF32[(($108)>>2)]=$106;
 $109=(+(HEAPF32[(($96)>>2)]));
 $110=($81)*($109);
 $111=($109)*($110);
 $112=($83)+($111);
 $113=(+(HEAPF32[(($101)>>2)]));
 $114=($82)*($113);
 $115=($113)*($114);
 $116=($112)+($115);
 $117=(($K+12)|0);
 HEAPF32[(($117)>>2)]=$116;
 $118=(($this+160)|0);
 __ZNK7b2Mat2210GetInverseEv($5,$K);
 $119=$118;
 $120=$5;
 HEAP32[(($119)>>2)]=((HEAP32[(($120)>>2)])|0);HEAP32[((($119)+(4))>>2)]=((HEAP32[((($120)+(4))>>2)])|0);HEAP32[((($119)+(8))>>2)]=((HEAP32[((($120)+(8))>>2)])|0);HEAP32[((($119)+(12))>>2)]=((HEAP32[((($120)+(12))>>2)])|0);
 $121=($81)+($82);
 $122=(($this+176)|0);
 $123=$121>(0.0);
 if ($123) {
  $125=((1.0))/($121);
  $storemerge=$125;
 } else {
  $storemerge=$121;
 }

 HEAPF32[(($122)>>2)]=$storemerge;
 $127=(($data+24)|0);
 $128=((HEAP8[($127)])|0);
 $129=(($128<<24)>>24)==0;
 $130=(($this+84)|0);
 if ($129) {
  __ZN6b2Vec27SetZeroEv($130);
  $153=(($this+92)|0);
  HEAPF32[(($153)>>2)]=0.0;
  $wA_0=$59;$wB_0=$70;


  $155=((HEAP32[(($12)>>2)])|0);
  $156=((HEAP32[(($51)>>2)])|0);
  $157=(($156+((($155)*(12))&-1))|0);
  $158=$157;
  $ld$24$0=(($vA)|0);
  $159$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $159$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($158)|0);
  HEAP32[(($st$26$0)>>2)]=$159$0;
  $st$27$1=(($158+4)|0);
  HEAP32[(($st$27$1)>>2)]=$159$1;
  $160=((HEAP32[(($12)>>2)])|0);
  $161=((HEAP32[(($51)>>2)])|0);
  $162=(($161+((($160)*(12))&-1)+8)|0);
  HEAPF32[(($162)>>2)]=$wA_0;
  $163=((HEAP32[(($17)>>2)])|0);
  $164=((HEAP32[(($51)>>2)])|0);
  $165=(($164+((($163)*(12))&-1))|0);
  $166=$165;
  $ld$28$0=(($vB)|0);
  $167$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $167$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($166)|0);
  HEAP32[(($st$30$0)>>2)]=$167$0;
  $st$31$1=(($166+4)|0);
  HEAP32[(($st$31$1)>>2)]=$167$1;
  $168=((HEAP32[(($17)>>2)])|0);
  $169=((HEAP32[(($51)>>2)])|0);
  $170=(($169+((($168)*(12))&-1)+8)|0);
  HEAPF32[(($170)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $132=(($data+8)|0);
  $133=(+(HEAPF32[(($132)>>2)]));
  __ZN6b2Vec2mLEf($130,$133);
  $134=(+(HEAPF32[(($132)>>2)]));
  $135=(($this+92)|0);
  $136=(+(HEAPF32[(($135)>>2)]));
  $137=($134)*($136);
  HEAPF32[(($135)>>2)]=$137;
  $138=(($130)|0);
  $139=(+(HEAPF32[(($138)>>2)]));
  $140=(($this+88)|0);
  $141=(+(HEAPF32[(($140)>>2)]));
  __ZN6b2Vec2C1Eff($P,$139,$141);
  __ZmlfRK6b2Vec2($6,$79,$P);
  __ZN6b2Vec2mIERKS_($tmpcast,$6);
  $142=(+(__Z7b2CrossRK6b2Vec2S1_($71,$P)));
  $143=(+(HEAPF32[(($135)>>2)]));
  $144=($142)+($143);
  $145=($81)*($144);
  $146=($59)-($145);
  __ZmlfRK6b2Vec2($7,$80,$P);
  __ZN6b2Vec2pLERKS_($tmpcast28,$7);
  $147=(+(__Z7b2CrossRK6b2Vec2S1_($75,$P)));
  $148=(+(HEAPF32[(($135)>>2)]));
  $149=($147)+($148);
  $150=($82)*($149);
  $151=($70)+($150);
  $wA_0=$146;$wB_0=$151;


  $155=((HEAP32[(($12)>>2)])|0);
  $156=((HEAP32[(($51)>>2)])|0);
  $157=(($156+((($155)*(12))&-1))|0);
  $158=$157;
  $ld$24$0=(($vA)|0);
  $159$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $159$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($158)|0);
  HEAP32[(($st$26$0)>>2)]=$159$0;
  $st$27$1=(($158+4)|0);
  HEAP32[(($st$27$1)>>2)]=$159$1;
  $160=((HEAP32[(($12)>>2)])|0);
  $161=((HEAP32[(($51)>>2)])|0);
  $162=(($161+((($160)*(12))&-1)+8)|0);
  HEAPF32[(($162)>>2)]=$wA_0;
  $163=((HEAP32[(($17)>>2)])|0);
  $164=((HEAP32[(($51)>>2)])|0);
  $165=(($164+((($163)*(12))&-1))|0);
  $166=$165;
  $ld$28$0=(($vB)|0);
  $167$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $167$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($166)|0);
  HEAP32[(($st$30$0)>>2)]=$167$0;
  $st$31$1=(($166+4)|0);
  HEAP32[(($st$31$1)>>2)]=$167$1;
  $168=((HEAP32[(($17)>>2)])|0);
  $169=((HEAP32[(($51)>>2)])|0);
  $170=(($169+((($168)*(12))&-1)+8)|0);
  HEAPF32[(($170)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast26=0,$Cdot1=0,$1=0,$2=0,$3=0,$4=0,$impulse2=0,$tmpcast28=0,$5=0,$oldImpulse3=0,$tmpcast27=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0;
 var $12=0,$13=0,$ld$0$0=0,$14$0=0,$ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0,$15=0,$16=0,$17=0,$18=.0,$19=0,$20=0,$21=0,$22=0,$ld$4$0=0,$23$0=0,$ld$5$1=0,$23$1=0;
 var $st$6$0=0,$st$7$1=0,$24=0,$25=0,$26=0,$27=.0,$28=0,$29=.0,$30=0,$31=.0,$32=0,$33=.0,$34=0,$35=.0,$36=0,$37=.0,$38=.0,$39=0,$40=.0,$41=.0;
 var $42=.0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=.0,$53=.0,$54=.0,$55=.0,$56=0,$57=0,$58=0,$59=0,$60=0,$ld$8$0=0;
 var $61$0=0,$ld$9$1=0,$61$1=0,$st$10$0=0,$st$11$1=0,$62=0,$63=.0,$64=.0,$65=.0,$66=.0,$67=0,$69=.0,$impulse230=0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=0;
 var $78=0,$79=0,$80=0,$ld$12$0=0,$81$0=0,$ld$13$1=0,$81$1=0,$st$14$0=0,$st$15$1=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$ld$16$0=0,$89$0=0,$ld$17$1=0,$89$1=0;
 var $st$18$0=0,$st$19$1=0,$90=0,$91=0,$92=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast26=$vB;
 $Cdot1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $impulse2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast28=$impulse2;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $oldImpulse3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast27=$oldImpulse3;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=(($this+104)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($data+32)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+((($9)*(12))&-1))|0);
 $13=$12;
 $ld$0$0=(($13)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=((HEAP32[(($8)>>2)])|0);
 $16=((HEAP32[(($10)>>2)])|0);
 $17=(($16+((($15)*(12))&-1)+8)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+108)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($16+((($20)*(12))&-1))|0);
 $22=$21;
 $ld$4$0=(($22)|0);
 $23$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($22+4)|0);
 $23$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$23$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$23$1;
 $24=((HEAP32[(($19)>>2)])|0);
 $25=((HEAP32[(($10)>>2)])|0);
 $26=(($25+((($24)*(12))&-1)+8)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 $28=(($this+144)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=(($this+148)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+152)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 $34=(($this+156)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($data)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=($27)-($18);
 $39=(($this+176)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=((-.0))-($40);
 $42=($38)*($41);
 $43=(($this+92)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+100)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=($37)*($46);
 $48=($44)+($42);
 $49=((-.0))-($47);
 $50=(+(__Z7b2ClampIfET_S0_S0_S0_($48,$49,$47)));
 HEAPF32[(($43)>>2)]=$50;
 $51=($50)-($44);
 $52=($33)*($51);
 $53=($18)-($52);
 $54=($35)*($51);
 $55=($27)+($54);
 $56=(($this+120)|0);
 __Z7b2CrossfRK6b2Vec2($3,$55,$56);
 __ZplRK6b2Vec2S1_($2,$tmpcast26,$3);
 __ZmiRK6b2Vec2S1_($1,$2,$tmpcast);
 $57=(($this+112)|0);
 __Z7b2CrossfRK6b2Vec2($4,$53,$57);
 __ZmiRK6b2Vec2S1_($Cdot1,$1,$4);
 $58=(($this+160)|0);
 __Z5b2MulRK7b2Mat22RK6b2Vec2($5,$58,$Cdot1);
 __ZNK6b2Vec2ngEv($tmpcast28,$5);
 $59=(($this+84)|0);
 $60=$59;
 $ld$8$0=(($60)|0);
 $61$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($60+4)|0);
 $61$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($oldImpulse3)|0);
 HEAP32[(($st$10$0)>>2)]=$61$0;
 $st$11$1=(($oldImpulse3+4)|0);
 HEAP32[(($st$11$1)>>2)]=$61$1;
 __ZN6b2Vec2pLERKS_($59,$tmpcast28);
 $62=(($this+96)|0);
 $63=(+(HEAPF32[(($62)>>2)]));
 $64=($37)*($63);
 $65=(+(__ZNK6b2Vec213LengthSquaredEv($59)));
 $66=($64)*($64);
 $67=$65>$66;
 if ($67) {
  $69=(+(__ZN6b2Vec29NormalizeEv($59)));
  __ZN6b2Vec2mLEf($59,$64);
 }
 $impulse230=$impulse2;
 __ZmiRK6b2Vec2S1_($impulse230,$59,$tmpcast27);
 __ZmlfRK6b2Vec2($6,$29,$tmpcast28);
 __ZN6b2Vec2mIERKS_($tmpcast,$6);
 $71=(+(__Z7b2CrossRK6b2Vec2S1_($57,$tmpcast28)));
 $72=($33)*($71);
 $73=($53)-($72);
 __ZmlfRK6b2Vec2($7,$31,$tmpcast28);
 __ZN6b2Vec2pLERKS_($tmpcast26,$7);
 $74=(+(__Z7b2CrossRK6b2Vec2S1_($56,$tmpcast28)));
 $75=($35)*($74);
 $76=($55)+($75);
 $77=((HEAP32[(($8)>>2)])|0);
 $78=((HEAP32[(($10)>>2)])|0);
 $79=(($78+((($77)*(12))&-1))|0);
 $80=$79;
 $ld$12$0=(($vA)|0);
 $81$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vA+4)|0);
 $81$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($80)|0);
 HEAP32[(($st$14$0)>>2)]=$81$0;
 $st$15$1=(($80+4)|0);
 HEAP32[(($st$15$1)>>2)]=$81$1;
 $82=((HEAP32[(($8)>>2)])|0);
 $83=((HEAP32[(($10)>>2)])|0);
 $84=(($83+((($82)*(12))&-1)+8)|0);
 HEAPF32[(($84)>>2)]=$73;
 $85=((HEAP32[(($19)>>2)])|0);
 $86=((HEAP32[(($10)>>2)])|0);
 $87=(($86+((($85)*(12))&-1))|0);
 $88=$87;
 $ld$16$0=(($vB)|0);
 $89$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($vB+4)|0);
 $89$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($88)|0);
 HEAP32[(($st$18$0)>>2)]=$89$0;
 $st$19$1=(($88+4)|0);
 HEAP32[(($st$19$1)>>2)]=$89$1;
 $90=((HEAP32[(($19)>>2)])|0);
 $91=((HEAP32[(($10)>>2)])|0);
 $92=(($91+((($90)*(12))&-1)+8)|0);
 HEAPF32[(($92)>>2)]=$76;
 STACKTOP=sp;return;
}


function __ZN15b2FrictionJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK15b2FrictionJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2FrictionJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2FrictionJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,label=0;

 $1=(($this+84)|0);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$1);
 return;
}


function __ZNK15b2FrictionJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+92)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN15b2FrictionJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3472,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3776,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2928,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2560,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(2120,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1656,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+96)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(1248,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+100)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(904,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+56)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 __Z5b2LogPKcz(512,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$31,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN15b2FrictionJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2FrictionJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN14b2WeldJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($this,$bA,$bB,$anchor){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0,$12$0=0;
 var $ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,$13=0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$bA;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$bB;
 $5=(($this+20)|0);
 $6=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$6,$anchor);
 $7=$5;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast5,$10,$anchor);
 $11=$9;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 $13=((HEAP32[(($4)>>2)])|0);
 $14=(+(__ZNK6b2Body8GetAngleEv($13)));
 $15=((HEAP32[(($3)>>2)])|0);
 $16=(+(__ZNK6b2Body8GetAngleEv($15)));
 $17=($14)-($16);
 $18=(($this+36)|0);
 HEAPF32[(($18)>>2)]=$17;
 STACKTOP=sp;return;
}


function __ZN11b2WeldJointC2EPK14b2WeldJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=0,$13=0,$ld$4$0=0,$14$0=0;
 var $ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=.0,$17=0,$18=0,$19=.0,$20=0,$21=0,$22=.0,$23=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=5800;
 $4=(($this+80)|0);
 $5=(($this+88)|0);
 $6=(($this+104)|0);
 $7=(($def+20)|0);
 $8=$7;
 $9=$4;
 $ld$0$0=(($8)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($8+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($def+28)|0);
 $12=$11;
 $13=$5;
 $ld$4$0=(($12)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 $15=(($def+36)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(($this+96)|0);
 HEAPF32[(($17)>>2)]=$16;
 $18=(($def+40)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=(($this+68)|0);
 HEAPF32[(($20)>>2)]=$19;
 $21=(($def+44)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=(($this+72)|0);
 HEAPF32[(($23)>>2)]=$22;
 __ZN6b2Vec37SetZeroEv($6);
 return;
}


function __ZN6b2Vec37SetZeroEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=0.0;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=0.0;
 $3=(($this+8)|0);
 HEAPF32[(($3)>>2)]=0.0;
 return;
}


function __ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast46=0,$qA=0,$qB=0,$1=0,$tmpcast47=0,$2=0,$3=0,$tmpcast48=0,$4=0,$K=0,$P=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$ld$0$0=0,$22$0=0,$ld$1$1=0,$22$1=0,$st$2$0=0,$st$3$1=0,$23=0,$24=0,$25=0;
 var $26=0,$27=0,$ld$4$0=0,$28$0=0,$ld$5$1=0,$28$1=0,$st$6$0=0,$st$7$1=0,$29=0,$30=0,$31=.0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=.0,$40=0;
 var $41=0,$42=0,$43=.0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=.0,$50=0,$51=0,$52=0,$53=0,$ld$8$0=0,$54$0=0,$ld$9$1=0,$54$1=0,$st$10$0=0,$st$11$1=0,$55=0;
 var $56=0,$57=0,$58=.0,$59=0,$60=0,$61=0,$62=.0,$63=0,$64=0,$ld$12$0=0,$65$0=0,$ld$13$1=0,$65$1=0,$st$14$0=0,$st$15$1=0,$66=0,$67=0,$68=0,$69=.0,$70=0;
 var $71=0,$72=0,$ld$16$0=0,$73$0=0,$ld$17$1=0,$73$1=0,$st$18$0=0,$st$19$1=0,$74=0,$75=0,$76=0,$ld$20$0=0,$77$0=0,$ld$21$1=0,$77$1=0,$st$22$0=0,$st$23$1=0,$78=.0,$79=.0,$80=.0;
 var $81=.0,$82=.0,$83=0,$84=.0,$85=.0,$86=.0,$87=.0,$88=0,$89=.0,$90=.0,$91=.0,$92=.0,$93=0,$94=.0,$95=.0,$96=0,$97=.0,$98=.0,$99=.0,$100=.0;
 var $101=0,$102=.0,$103=.0,$104=.0,$105=.0,$106=0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=0,$114=.0,$115=0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0;
 var $121=.0,$122=.0,$123=.0,$124=0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=0,$131=.0,$132=0,$133=.0,$134=0,$135=.0,$136=0,$137=0,$138=.0,$139=0,$140=0;
 var $142=0,$144=.0,$146=.0,$147=.0,$148=0,$149=.0,$150=.0,$151=.0,$152=.0,$153=.0,$154=0,$155=.0,$156=.0,$157=.0,$158=.0,$159=.0,$160=0,$161=.0,$162=.0,$163=.0;
 var $164=.0,$165=0,$166=0,$168=.0,$170=.0,$171=.0,$172=.0,$173=.0,$174=0,$175=.0,$176=.0,$177=0,$179=.0,$181=.0,$182=0,$184=0,$185=0,$187=0,$188=0,$189=0;
 var $190=0,$192=0,$193=.0,$194=0,$195=.0,$196=0,$197=.0,$198=.0,$199=0,$200=.0,$201=.0,$202=.0,$203=.0,$204=.0,$205=.0,$206=.0,$207=.0,$208=.0,$wB_0=.0,$wA_0=.0;
 var $211=0,$212=0,$213=0,$214=0,$ld$24$0=0,$215$0=0,$ld$25$1=0,$215$1=0,$st$26$0=0,$st$27$1=0,$216=0,$217=0,$218=0,$219=0,$220=0,$221=0,$222=0,$ld$28$0=0,$223$0=0,$ld$29$1=0;
 var $223$1=0,$st$30$0=0,$st$31$1=0,$224=0,$225=0,$226=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast46=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast47=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast48=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 36)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+48)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+8)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($this+116)|0);
 HEAP32[(($11)>>2)]=$10;
 $12=(($this+52)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($13+8)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=(($this+120)|0);
 HEAP32[(($16)>>2)]=$15;
 $17=(($this+140)|0);
 $18=((HEAP32[(($7)>>2)])|0);
 $19=(($18+44)|0);
 $20=$19;
 $21=$17;
 $ld$0$0=(($20)|0);
 $22$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $22$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($21)|0);
 HEAP32[(($st$2$0)>>2)]=$22$0;
 $st$3$1=(($21+4)|0);
 HEAP32[(($st$3$1)>>2)]=$22$1;
 $23=(($this+148)|0);
 $24=((HEAP32[(($12)>>2)])|0);
 $25=(($24+44)|0);
 $26=$25;
 $27=$23;
 $ld$4$0=(($26)|0);
 $28$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($26+4)|0);
 $28$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($27)|0);
 HEAP32[(($st$6$0)>>2)]=$28$0;
 $st$7$1=(($27+4)|0);
 HEAP32[(($st$7$1)>>2)]=$28$1;
 $29=((HEAP32[(($7)>>2)])|0);
 $30=(($29+136)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+156)|0);
 HEAPF32[(($32)>>2)]=$31;
 $33=((HEAP32[(($12)>>2)])|0);
 $34=(($33+136)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+160)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=((HEAP32[(($7)>>2)])|0);
 $38=(($37+144)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+164)|0);
 HEAPF32[(($40)>>2)]=$39;
 $41=((HEAP32[(($12)>>2)])|0);
 $42=(($41+144)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(($this+168)|0);
 HEAPF32[(($44)>>2)]=$43;
 $45=((HEAP32[(($11)>>2)])|0);
 $46=(($data+28)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=(($47+((($45)*(12))&-1)+8)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($data+32)|0);
 $51=((HEAP32[(($50)>>2)])|0);
 $52=(($51+((($45)*(12))&-1))|0);
 $53=$52;
 $ld$8$0=(($53)|0);
 $54$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($53+4)|0);
 $54$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vA)|0);
 HEAP32[(($st$10$0)>>2)]=$54$0;
 $st$11$1=(($vA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$54$1;
 $55=((HEAP32[(($11)>>2)])|0);
 $56=((HEAP32[(($50)>>2)])|0);
 $57=(($56+((($55)*(12))&-1)+8)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=((HEAP32[(($16)>>2)])|0);
 $60=((HEAP32[(($46)>>2)])|0);
 $61=(($60+((($59)*(12))&-1)+8)|0);
 $62=(+(HEAPF32[(($61)>>2)]));
 $63=(($56+((($59)*(12))&-1))|0);
 $64=$63;
 $ld$12$0=(($64)|0);
 $65$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($64+4)|0);
 $65$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vB)|0);
 HEAP32[(($st$14$0)>>2)]=$65$0;
 $st$15$1=(($vB+4)|0);
 HEAP32[(($st$15$1)>>2)]=$65$1;
 $66=((HEAP32[(($16)>>2)])|0);
 $67=((HEAP32[(($50)>>2)])|0);
 $68=(($67+((($66)*(12))&-1)+8)|0);
 $69=(+(HEAPF32[(($68)>>2)]));
 __ZN5b2RotC1Ef($qA,$49);
 __ZN5b2RotC1Ef($qB,$62);
 $70=(($this+124)|0);
 $71=(($this+80)|0);
 __ZmiRK6b2Vec2S1_($2,$71,$17);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast47,$qA,$2);
 $72=$70;
 $ld$16$0=(($1)|0);
 $73$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($1+4)|0);
 $73$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($72)|0);
 HEAP32[(($st$18$0)>>2)]=$73$0;
 $st$19$1=(($72+4)|0);
 HEAP32[(($st$19$1)>>2)]=$73$1;
 $74=(($this+132)|0);
 $75=(($this+88)|0);
 __ZmiRK6b2Vec2S1_($4,$75,$23);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast48,$qB,$4);
 $76=$74;
 $ld$20$0=(($3)|0);
 $77$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($3+4)|0);
 $77$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($76)|0);
 HEAP32[(($st$22$0)>>2)]=$77$0;
 $st$23$1=(($76+4)|0);
 HEAP32[(($st$23$1)>>2)]=$77$1;
 $78=(+(HEAPF32[(($32)>>2)]));
 $79=(+(HEAPF32[(($36)>>2)]));
 $80=(+(HEAPF32[(($40)>>2)]));
 $81=(+(HEAPF32[(($44)>>2)]));
 $82=($78)+($79);
 $83=(($this+128)|0);
 $84=(+(HEAPF32[(($83)>>2)]));
 $85=($84)*($84);
 $86=($80)*($85);
 $87=($82)+($86);
 $88=(($this+136)|0);
 $89=(+(HEAPF32[(($88)>>2)]));
 $90=($89)*($89);
 $91=($81)*($90);
 $92=($87)+($91);
 $93=(($K)|0);
 HEAPF32[(($93)>>2)]=$92;
 $94=(+(HEAPF32[(($83)>>2)]));
 $95=((-.0))-($94);
 $96=(($70)|0);
 $97=(+(HEAPF32[(($96)>>2)]));
 $98=($97)*($95);
 $99=($80)*($98);
 $100=(+(HEAPF32[(($88)>>2)]));
 $101=(($74)|0);
 $102=(+(HEAPF32[(($101)>>2)]));
 $103=($100)*($102);
 $104=($81)*($103);
 $105=($99)-($104);
 $106=(($K+12)|0);
 HEAPF32[(($106)>>2)]=$105;
 $107=(+(HEAPF32[(($83)>>2)]));
 $108=((-.0))-($107);
 $109=($80)*($108);
 $110=(+(HEAPF32[(($88)>>2)]));
 $111=($81)*($110);
 $112=($109)-($111);
 $113=(($K+24)|0);
 HEAPF32[(($113)>>2)]=$112;
 $114=(+(HEAPF32[(($106)>>2)]));
 $115=(($K+4)|0);
 HEAPF32[(($115)>>2)]=$114;
 $116=(+(HEAPF32[(($96)>>2)]));
 $117=($116)*($116);
 $118=($80)*($117);
 $119=($82)+($118);
 $120=(+(HEAPF32[(($101)>>2)]));
 $121=($120)*($120);
 $122=($81)*($121);
 $123=($119)+($122);
 $124=(($K+16)|0);
 HEAPF32[(($124)>>2)]=$123;
 $125=(+(HEAPF32[(($96)>>2)]));
 $126=($80)*($125);
 $127=(+(HEAPF32[(($101)>>2)]));
 $128=($81)*($127);
 $129=($126)+($128);
 $130=(($K+28)|0);
 HEAPF32[(($130)>>2)]=$129;
 $131=(+(HEAPF32[(($113)>>2)]));
 $132=(($K+8)|0);
 HEAPF32[(($132)>>2)]=$131;
 $133=(+(HEAPF32[(($130)>>2)]));
 $134=(($K+20)|0);
 HEAPF32[(($134)>>2)]=$133;
 $135=($80)+($81);
 $136=(($K+32)|0);
 HEAPF32[(($136)>>2)]=$135;
 $137=(($this+68)|0);
 $138=(+(HEAPF32[(($137)>>2)]));
 $139=$138>(0.0);
 $140=(($this+172)|0);
 if ($139) {
  __ZNK7b2Mat3312GetInverse22EPS_($K,$140);
  $142=$135>(0.0);
  if ($142) {
   $144=((1.0))/($135);
   $146=$144;
  } else {
   $146=0.0;
  }

  $147=($62)-($49);
  $148=(($this+96)|0);
  $149=(+(HEAPF32[(($148)>>2)]));
  $150=($147)-($149);
  $151=(+(HEAPF32[(($137)>>2)]));
  $152=($151)*((6.2831854820251465));
  $153=($146)*((2.0));
  $154=(($this+72)|0);
  $155=(+(HEAPF32[(($154)>>2)]));
  $156=($153)*($155);
  $157=($152)*($156);
  $158=($146)*($152);
  $159=($152)*($158);
  $160=(($data)|0);
  $161=(+(HEAPF32[(($160)>>2)]));
  $162=($161)*($159);
  $163=($157)+($162);
  $164=($161)*($163);
  $165=(($this+100)|0);
  HEAPF32[(($165)>>2)]=$164;
  $166=$164!=(0.0);
  if ($166) {
   $168=((1.0))/($164);
   $170=$168;
  } else {
   $170=0.0;
  }

  HEAPF32[(($165)>>2)]=$170;
  $171=($150)*($161);
  $172=($171)*($159);
  $173=($172)*($170);
  $174=(($this+76)|0);
  HEAPF32[(($174)>>2)]=$173;
  $175=(+(HEAPF32[(($165)>>2)]));
  $176=($135)+($175);
  $177=$176!=(0.0);
  if ($177) {
   $179=((1.0))/($176);
   $181=$179;
  } else {
   $181=0.0;
  }

  $182=(($this+204)|0);
  HEAPF32[(($182)>>2)]=$181;
 } else {
  __ZNK7b2Mat3315GetSymInverse33EPS_($K,$140);
  $184=(($this+100)|0);
  HEAPF32[(($184)>>2)]=0.0;
  $185=(($this+76)|0);
  HEAPF32[(($185)>>2)]=0.0;
 }
 $187=(($data+24)|0);
 $188=((HEAP8[($187)])|0);
 $189=(($188<<24)>>24)==0;
 $190=(($this+104)|0);
 if ($189) {
  __ZN6b2Vec37SetZeroEv($190);
  $wA_0=$58;$wB_0=$69;


  $211=((HEAP32[(($11)>>2)])|0);
  $212=((HEAP32[(($50)>>2)])|0);
  $213=(($212+((($211)*(12))&-1))|0);
  $214=$213;
  $ld$24$0=(($vA)|0);
  $215$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $215$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($214)|0);
  HEAP32[(($st$26$0)>>2)]=$215$0;
  $st$27$1=(($214+4)|0);
  HEAP32[(($st$27$1)>>2)]=$215$1;
  $216=((HEAP32[(($11)>>2)])|0);
  $217=((HEAP32[(($50)>>2)])|0);
  $218=(($217+((($216)*(12))&-1)+8)|0);
  HEAPF32[(($218)>>2)]=$wA_0;
  $219=((HEAP32[(($16)>>2)])|0);
  $220=((HEAP32[(($50)>>2)])|0);
  $221=(($220+((($219)*(12))&-1))|0);
  $222=$221;
  $ld$28$0=(($vB)|0);
  $223$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $223$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($222)|0);
  HEAP32[(($st$30$0)>>2)]=$223$0;
  $st$31$1=(($222+4)|0);
  HEAP32[(($st$31$1)>>2)]=$223$1;
  $224=((HEAP32[(($16)>>2)])|0);
  $225=((HEAP32[(($50)>>2)])|0);
  $226=(($225+((($224)*(12))&-1)+8)|0);
  HEAPF32[(($226)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $192=(($data+8)|0);
  $193=(+(HEAPF32[(($192)>>2)]));
  __ZN6b2Vec3mLEf($190,$193);
  $194=(($190)|0);
  $195=(+(HEAPF32[(($194)>>2)]));
  $196=(($this+108)|0);
  $197=(+(HEAPF32[(($196)>>2)]));
  __ZN6b2Vec2C1Eff($P,$195,$197);
  __ZmlfRK6b2Vec2($5,$78,$P);
  __ZN6b2Vec2mIERKS_($tmpcast,$5);
  $198=(+(__Z7b2CrossRK6b2Vec2S1_($70,$P)));
  $199=(($this+112)|0);
  $200=(+(HEAPF32[(($199)>>2)]));
  $201=($198)+($200);
  $202=($80)*($201);
  $203=($58)-($202);
  __ZmlfRK6b2Vec2($6,$79,$P);
  __ZN6b2Vec2pLERKS_($tmpcast46,$6);
  $204=(+(__Z7b2CrossRK6b2Vec2S1_($74,$P)));
  $205=(+(HEAPF32[(($199)>>2)]));
  $206=($204)+($205);
  $207=($81)*($206);
  $208=($69)+($207);
  $wA_0=$203;$wB_0=$208;


  $211=((HEAP32[(($11)>>2)])|0);
  $212=((HEAP32[(($50)>>2)])|0);
  $213=(($212+((($211)*(12))&-1))|0);
  $214=$213;
  $ld$24$0=(($vA)|0);
  $215$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $215$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($214)|0);
  HEAP32[(($st$26$0)>>2)]=$215$0;
  $st$27$1=(($214+4)|0);
  HEAP32[(($st$27$1)>>2)]=$215$1;
  $216=((HEAP32[(($11)>>2)])|0);
  $217=((HEAP32[(($50)>>2)])|0);
  $218=(($217+((($216)*(12))&-1)+8)|0);
  HEAPF32[(($218)>>2)]=$wA_0;
  $219=((HEAP32[(($16)>>2)])|0);
  $220=((HEAP32[(($50)>>2)])|0);
  $221=(($220+((($219)*(12))&-1))|0);
  $222=$221;
  $ld$28$0=(($vB)|0);
  $223$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $223$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($222)|0);
  HEAP32[(($st$30$0)>>2)]=$223$0;
  $st$31$1=(($222+4)|0);
  HEAP32[(($st$31$1)>>2)]=$223$1;
  $224=((HEAP32[(($16)>>2)])|0);
  $225=((HEAP32[(($50)>>2)])|0);
  $226=(($225+((($224)*(12))&-1)+8)|0);
  HEAPF32[(($226)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN6b2Vec3mLEf($this,$s){
 $this=($this)|0;
 $s=+($s);
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($s);
 HEAPF32[(($1)>>2)]=$3;
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($s);
 HEAPF32[(($4)>>2)]=$6;
 $7=(($this+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($8)*($s);
 HEAPF32[(($7)>>2)]=$9;
 return;
}


function __ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast30=0,$Cdot1=0,$1=0,$2=0,$3=0,$4=0,$impulse1=0,$tmpcast32=0,$5=0,$P=0,$tmpcast31=0,$6=0,$7=0,$Cdot11=0,$8=0,$9=0,$10=0;
 var $11=0,$Cdot=0,$impulse=0,$12=0,$P3=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$ld$0$0=0,$21$0=0,$ld$1$1=0,$21$1=0,$st$2$0=0,$st$3$1=0,$22=0;
 var $23=0,$24=0,$25=.0,$26=0,$27=0,$28=0,$29=0,$ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0,$st$7$1=0,$31=0,$32=0,$33=0,$34=.0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=0,$42=.0,$43=0,$44=.0,$45=0,$47=.0,$48=0,$49=0,$50=.0,$51=.0,$52=0,$53=.0,$54=.0,$55=0,$56=.0,$57=0,$58=.0;
 var $59=.0,$60=.0,$61=.0,$62=.0,$63=.0,$64=.0,$65=.0,$66=.0,$67=0,$68=0,$69=0,$70=.0,$71=0,$72=.0,$73=.0,$74=0,$75=.0,$76=0,$77=.0,$78=.0;
 var $ld$8$0=0,$79$0=0,$ld$9$1=0,$79$1=0,$st$10$0=0,$st$11$1=0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0,$87=0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=0;
 var $95=0,$96=0,$97=.0,$98=0,$99=.0,$100=.0,$101=0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,$wB_0=.0,$wA_0=.0,$112=0,$113=0;
 var $114=0,$115=0,$ld$12$0=0,$116$0=0,$ld$13$1=0,$116$1=0,$st$14$0=0,$st$15$1=0,$117=0,$118=0,$119=0,$120=0,$121=0,$122=0,$123=0,$ld$16$0=0,$124$0=0,$ld$17$1=0,$124$1=0,$st$18$0=0;
 var $st$19$1=0,$125=0,$126=0,$127=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$vB;
 $Cdot1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $impulse1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$impulse1;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast31=$P;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $impulse=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $12=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $P3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=(($this+116)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($data+32)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($18+((($16)*(12))&-1))|0);
 $20=$19;
 $ld$0$0=(($20)|0);
 $21$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$21$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$21$1;
 $22=((HEAP32[(($15)>>2)])|0);
 $23=((HEAP32[(($17)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+120)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($23+((($27)*(12))&-1))|0);
 $29=$28;
 $ld$4$0=(($29)|0);
 $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$30$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$30$1;
 $31=((HEAP32[(($26)>>2)])|0);
 $32=((HEAP32[(($17)>>2)])|0);
 $33=(($32+((($31)*(12))&-1)+8)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+156)|0);
 $36=(+(HEAPF32[(($35)>>2)]));
 $37=(($this+160)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=(($this+164)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=(($this+168)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+68)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=$44>(0.0);
 if ($45) {
  $47=($34)-($25);
  $48=(($this+172)|0);
  $49=(($this+204)|0);
  $50=(+(HEAPF32[(($49)>>2)]));
  $51=((-.0))-($50);
  $52=(($this+76)|0);
  $53=(+(HEAPF32[(($52)>>2)]));
  $54=($47)+($53);
  $55=(($this+100)|0);
  $56=(+(HEAPF32[(($55)>>2)]));
  $57=(($this+112)|0);
  $58=(+(HEAPF32[(($57)>>2)]));
  $59=($56)*($58);
  $60=($54)+($59);
  $61=($60)*($51);
  $62=($58)+($61);
  HEAPF32[(($57)>>2)]=$62;
  $63=($40)*($61);
  $64=($25)-($63);
  $65=($42)*($61);
  $66=($34)+($65);
  $67=(($this+132)|0);
  __Z7b2CrossfRK6b2Vec2($3,$66,$67);
  __ZplRK6b2Vec2S1_($2,$tmpcast30,$3);
  __ZmiRK6b2Vec2S1_($1,$2,$tmpcast);
  $68=(($this+124)|0);
  __Z7b2CrossfRK6b2Vec2($4,$64,$68);
  __ZmiRK6b2Vec2S1_($Cdot1,$1,$4);
  __Z7b2Mul22RK7b2Mat33RK6b2Vec2($5,$48,$Cdot1);
  __ZNK6b2Vec2ngEv($tmpcast32,$5);
  $69=$impulse1;
  $70=(+(HEAPF32[(($69)>>2)]));
  $71=(($this+104)|0);
  $72=(+(HEAPF32[(($71)>>2)]));
  $73=($70)+($72);
  HEAPF32[(($71)>>2)]=$73;
  $74=(($tmpcast32+4)|0);
  $75=(+(HEAPF32[(($74)>>2)]));
  $76=(($this+108)|0);
  $77=(+(HEAPF32[(($76)>>2)]));
  $78=($75)+($77);
  HEAPF32[(($76)>>2)]=$78;
  $ld$8$0=(($impulse1)|0);
  $79$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($impulse1+4)|0);
  $79$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($P)|0);
  HEAP32[(($st$10$0)>>2)]=$79$0;
  $st$11$1=(($P+4)|0);
  HEAP32[(($st$11$1)>>2)]=$79$1;
  __ZmlfRK6b2Vec2($6,$36,$tmpcast31);
  __ZN6b2Vec2mIERKS_($tmpcast,$6);
  $80=(+(__Z7b2CrossRK6b2Vec2S1_($68,$tmpcast31)));
  $81=($40)*($80);
  $82=($64)-($81);
  __ZmlfRK6b2Vec2($7,$38,$tmpcast31);
  __ZN6b2Vec2pLERKS_($tmpcast30,$7);
  $83=(+(__Z7b2CrossRK6b2Vec2S1_($67,$tmpcast31)));
  $84=($42)*($83);
  $85=($66)+($84);
  $wA_0=$82;$wB_0=$85;


  $112=((HEAP32[(($15)>>2)])|0);
  $113=((HEAP32[(($17)>>2)])|0);
  $114=(($113+((($112)*(12))&-1))|0);
  $115=$114;
  $ld$12$0=(($vA)|0);
  $116$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($vA+4)|0);
  $116$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($115)|0);
  HEAP32[(($st$14$0)>>2)]=$116$0;
  $st$15$1=(($115+4)|0);
  HEAP32[(($st$15$1)>>2)]=$116$1;
  $117=((HEAP32[(($15)>>2)])|0);
  $118=((HEAP32[(($17)>>2)])|0);
  $119=(($118+((($117)*(12))&-1)+8)|0);
  HEAPF32[(($119)>>2)]=$wA_0;
  $120=((HEAP32[(($26)>>2)])|0);
  $121=((HEAP32[(($17)>>2)])|0);
  $122=(($121+((($120)*(12))&-1))|0);
  $123=$122;
  $ld$16$0=(($vB)|0);
  $124$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($vB+4)|0);
  $124$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($123)|0);
  HEAP32[(($st$18$0)>>2)]=$124$0;
  $st$19$1=(($123+4)|0);
  HEAP32[(($st$19$1)>>2)]=$124$1;
  $125=((HEAP32[(($26)>>2)])|0);
  $126=((HEAP32[(($17)>>2)])|0);
  $127=(($126+((($125)*(12))&-1)+8)|0);
  HEAPF32[(($127)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $87=(($this+132)|0);
  __Z7b2CrossfRK6b2Vec2($10,$34,$87);
  __ZplRK6b2Vec2S1_($9,$tmpcast30,$10);
  __ZmiRK6b2Vec2S1_($8,$9,$tmpcast);
  $88=(($this+124)|0);
  __Z7b2CrossfRK6b2Vec2($11,$25,$88);
  __ZmiRK6b2Vec2S1_($Cdot11,$8,$11);
  $89=($34)-($25);
  $90=(($Cdot11)|0);
  $91=(+(HEAPF32[(($90)>>2)]));
  $92=(($Cdot11+4)|0);
  $93=(+(HEAPF32[(($92)>>2)]));
  __ZN6b2Vec3C1Efff($Cdot,$91,$93,$89);
  $94=(($this+172)|0);
  __Z5b2MulRK7b2Mat33RK6b2Vec3($12,$94,$Cdot);
  __ZNK6b2Vec3ngEv($impulse,$12);
  $95=(($this+104)|0);
  __ZN6b2Vec3pLERKS_($95,$impulse);
  $96=(($impulse)|0);
  $97=(+(HEAPF32[(($96)>>2)]));
  $98=(($impulse+4)|0);
  $99=(+(HEAPF32[(($98)>>2)]));
  __ZN6b2Vec2C1Eff($P3,$97,$99);
  __ZmlfRK6b2Vec2($13,$36,$P3);
  __ZN6b2Vec2mIERKS_($tmpcast,$13);
  $100=(+(__Z7b2CrossRK6b2Vec2S1_($88,$P3)));
  $101=(($impulse+8)|0);
  $102=(+(HEAPF32[(($101)>>2)]));
  $103=($100)+($102);
  $104=($40)*($103);
  $105=($25)-($104);
  __ZmlfRK6b2Vec2($14,$38,$P3);
  __ZN6b2Vec2pLERKS_($tmpcast30,$14);
  $106=(+(__Z7b2CrossRK6b2Vec2S1_($87,$P3)));
  $107=(+(HEAPF32[(($101)>>2)]));
  $108=($106)+($107);
  $109=($42)*($108);
  $110=($34)+($109);
  $wA_0=$105;$wB_0=$110;


  $112=((HEAP32[(($15)>>2)])|0);
  $113=((HEAP32[(($17)>>2)])|0);
  $114=(($113+((($112)*(12))&-1))|0);
  $115=$114;
  $ld$12$0=(($vA)|0);
  $116$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($vA+4)|0);
  $116$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($115)|0);
  HEAP32[(($st$14$0)>>2)]=$116$0;
  $st$15$1=(($115+4)|0);
  HEAP32[(($st$15$1)>>2)]=$116$1;
  $117=((HEAP32[(($15)>>2)])|0);
  $118=((HEAP32[(($17)>>2)])|0);
  $119=(($118+((($117)*(12))&-1)+8)|0);
  HEAPF32[(($119)>>2)]=$wA_0;
  $120=((HEAP32[(($26)>>2)])|0);
  $121=((HEAP32[(($17)>>2)])|0);
  $122=(($121+((($120)*(12))&-1))|0);
  $123=$122;
  $ld$16$0=(($vB)|0);
  $124$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($vB+4)|0);
  $124$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($123)|0);
  HEAP32[(($st$18$0)>>2)]=$124$0;
  $st$19$1=(($123+4)|0);
  HEAP32[(($st$19$1)>>2)]=$124$1;
  $125=((HEAP32[(($26)>>2)])|0);
  $126=((HEAP32[(($17)>>2)])|0);
  $127=(($126+((($125)*(12))&-1)+8)|0);
  HEAPF32[(($127)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __Z7b2Mul22RK7b2Mat33RK6b2Vec2($agg_result,$A,$v){
 $agg_result=($agg_result)|0;
 $A=($A)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=.0,label=0;

 $1=(($A)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($v)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($A+12)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 $12=(($A+4)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($4)*($13);
 $15=(($A+16)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=($9)*($16);
 $18=($14)+($17);
 __ZN6b2Vec2C1Eff($agg_result,$11,$18);
 return;
}


function __ZN6b2Vec3C1Efff($this,$x,$y,$z){
 $this=($this)|0;
 $x=+($x);
 $y=+($y);
 $z=+($z);
 var label=0;

 __ZN6b2Vec3C2Efff($this,$x,$y,$z);
 return;
}


function __Z5b2MulRK7b2Mat33RK6b2Vec3($agg_result,$A,$v){
 $agg_result=($agg_result)|0;
 $A=($A)|0;
 $v=($v)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=0,$9=.0,$10=0,$11=0,$12=.0,$13=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $1=((sp)|0);
 $2=(((sp)+(16))|0);
 $3=(((sp)+(32))|0);
 $4=(((sp)+(48))|0);
 $5=(($v)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($A)|0);
 __ZmlfRK6b2Vec3($2,$6,$7);
 $8=(($v+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=(($A+12)|0);
 __ZmlfRK6b2Vec3($3,$9,$10);
 __ZplRK6b2Vec3S1_($1,$2,$3);
 $11=(($v+8)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($A+24)|0);
 __ZmlfRK6b2Vec3($4,$12,$13);
 __ZplRK6b2Vec3S1_($agg_result,$1,$4);
 STACKTOP=sp;return;
}


function __ZNK6b2Vec3ngEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=((-.0))-($2);
 $4=(($this+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=((-.0))-($5);
 $7=(($this+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=((-.0))-($8);
 __ZN6b2Vec33SetEfff($agg_result,$3,$6,$9);
 return;
}


function __ZN6b2Vec3pLERKS_($this,$v){
 $this=($this)|0;
 $v=($v)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=0,$14=.0,$15=.0,label=0;

 $1=(($v)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)+($4);
 HEAPF32[(($3)>>2)]=$5;
 $6=(($v+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($this+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)+($9);
 HEAPF32[(($8)>>2)]=$10;
 $11=(($v+8)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($this+8)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=($12)+($14);
 HEAPF32[(($13)>>2)]=$15;
 return;
}


function __ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast38=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$K=0,$C1=0,$3=0,$4=0,$P=0,$5=0,$6=0,$7=0,$C11=0,$8=0;
 var $9=0,$C=0,$impulse=0,$10=0,$P2=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$ld$0$0=0,$19$0=0,$ld$1$1=0,$19$1=0,$st$2$0=0,$st$3$1=0,$20=0;
 var $21=0,$22=0,$23=.0,$24=0,$25=0,$26=0,$27=0,$ld$4$0=0,$28$0=0,$ld$5$1=0,$28$1=0,$st$6$0=0,$st$7$1=0,$29=0,$30=0,$31=0,$32=.0,$33=0,$34=.0,$35=0;
 var $36=.0,$37=0,$38=.0,$39=0,$40=.0,$41=0,$42=0,$43=0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0,$55=.0;
 var $56=0,$57=.0,$58=.0,$59=0,$60=.0,$61=.0,$62=.0,$63=.0,$64=0,$65=.0,$66=.0,$67=.0,$68=.0,$69=0,$70=.0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0;
 var $76=0,$77=.0,$78=0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0,$86=.0,$87=0,$88=.0,$89=.0,$90=.0,$91=.0,$92=.0,$93=0,$94=.0,$95=0;
 var $96=.0,$97=0,$98=.0,$99=0,$100=0,$101=.0,$102=0,$104=.0,$105=.0,$106=.0,$108=.0,$109=0,$110=.0,$111=.0,$112=.0,$113=.0,$114=0,$115=.0,$116=0,$117=.0;
 var $118=0,$119=.0,$120=0,$121=.0,$122=.0,$123=0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$_pn40=.0,$positionError_0=.0,$angularError_0=.0,$_pn41=.0,$_pn39=.0,$_pn=.0,$aA_0=.0,$aB_0=.0,$130=0;
 var $131=0,$132=0,$133=0,$ld$8$0=0,$134$0=0,$ld$9$1=0,$134$1=0,$st$10$0=0,$st$11$1=0,$135=0,$136=0,$137=0,$138=0,$139=0,$140=0,$141=0,$ld$12$0=0,$142$0=0,$ld$13$1=0,$142$1=0;
 var $st$14$0=0,$st$15$1=0,$143=0,$144=0,$145=0,$146=0,$148=0,$150=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast38=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 36)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $C1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $C11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $C=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $impulse=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $10=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $P2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=(($this+116)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($data+28)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($16+((($14)*(12))&-1))|0);
 $18=$17;
 $ld$0$0=(($18)|0);
 $19$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($18+4)|0);
 $19$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$19$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$19$1;
 $20=((HEAP32[(($13)>>2)])|0);
 $21=((HEAP32[(($15)>>2)])|0);
 $22=(($21+((($20)*(12))&-1)+8)|0);
 $23=(+(HEAPF32[(($22)>>2)]));
 $24=(($this+120)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=(($21+((($25)*(12))&-1))|0);
 $27=$26;
 $ld$4$0=(($27)|0);
 $28$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($27+4)|0);
 $28$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$28$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$28$1;
 $29=((HEAP32[(($24)>>2)])|0);
 $30=((HEAP32[(($15)>>2)])|0);
 $31=(($30+((($29)*(12))&-1)+8)|0);
 $32=(+(HEAPF32[(($31)>>2)]));
 __ZN5b2RotC1Ef($qA,$23);
 __ZN5b2RotC1Ef($qB,$32);
 $33=(($this+156)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+160)|0);
 $36=(+(HEAPF32[(($35)>>2)]));
 $37=(($this+164)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=(($this+168)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=(($this+80)|0);
 $42=(($this+140)|0);
 __ZmiRK6b2Vec2S1_($1,$41,$42);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $43=(($this+88)|0);
 $44=(($this+148)|0);
 __ZmiRK6b2Vec2S1_($2,$43,$44);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 $45=($34)+($36);
 $46=(($rA+4)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=($47)*($47);
 $49=($38)*($48);
 $50=($45)+($49);
 $51=(($rB+4)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 $53=($52)*($52);
 $54=($40)*($53);
 $55=($50)+($54);
 $56=(($K)|0);
 HEAPF32[(($56)>>2)]=$55;
 $57=(+(HEAPF32[(($46)>>2)]));
 $58=((-.0))-($57);
 $59=(($rA)|0);
 $60=(+(HEAPF32[(($59)>>2)]));
 $61=($60)*($58);
 $62=($38)*($61);
 $63=(+(HEAPF32[(($51)>>2)]));
 $64=(($rB)|0);
 $65=(+(HEAPF32[(($64)>>2)]));
 $66=($63)*($65);
 $67=($40)*($66);
 $68=($62)-($67);
 $69=(($K+12)|0);
 HEAPF32[(($69)>>2)]=$68;
 $70=(+(HEAPF32[(($46)>>2)]));
 $71=((-.0))-($70);
 $72=($38)*($71);
 $73=(+(HEAPF32[(($51)>>2)]));
 $74=($40)*($73);
 $75=($72)-($74);
 $76=(($K+24)|0);
 HEAPF32[(($76)>>2)]=$75;
 $77=(+(HEAPF32[(($69)>>2)]));
 $78=(($K+4)|0);
 HEAPF32[(($78)>>2)]=$77;
 $79=(+(HEAPF32[(($59)>>2)]));
 $80=($79)*($79);
 $81=($38)*($80);
 $82=($45)+($81);
 $83=(+(HEAPF32[(($64)>>2)]));
 $84=($83)*($83);
 $85=($40)*($84);
 $86=($82)+($85);
 $87=(($K+16)|0);
 HEAPF32[(($87)>>2)]=$86;
 $88=(+(HEAPF32[(($59)>>2)]));
 $89=($38)*($88);
 $90=(+(HEAPF32[(($64)>>2)]));
 $91=($40)*($90);
 $92=($89)+($91);
 $93=(($K+28)|0);
 HEAPF32[(($93)>>2)]=$92;
 $94=(+(HEAPF32[(($76)>>2)]));
 $95=(($K+8)|0);
 HEAPF32[(($95)>>2)]=$94;
 $96=(+(HEAPF32[(($93)>>2)]));
 $97=(($K+20)|0);
 HEAPF32[(($97)>>2)]=$96;
 $98=($38)+($40);
 $99=(($K+32)|0);
 HEAPF32[(($99)>>2)]=$98;
 $100=(($this+68)|0);
 $101=(+(HEAPF32[(($100)>>2)]));
 $102=$101>(0.0);
 if ($102) {
  __ZplRK6b2Vec2S1_($4,$tmpcast38,$rB);
  __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
  __ZmiRK6b2Vec2S1_($C1,$3,$rA);
  $104=(+(__ZNK6b2Vec26LengthEv($C1)));
  __ZNK7b2Mat337Solve22ERK6b2Vec2($5,$K,$C1);
  __ZNK6b2Vec2ngEv($P,$5);
  __ZmlfRK6b2Vec2($6,$34,$P);
  __ZN6b2Vec2mIERKS_($tmpcast,$6);
  $105=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
  __ZmlfRK6b2Vec2($7,$36,$P);
  __ZN6b2Vec2pLERKS_($tmpcast38,$7);
  $106=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
  $_pn41=$105;$angularError_0=0.0;$positionError_0=$104;$_pn40=$106;
 } else {
  __ZplRK6b2Vec2S1_($9,$tmpcast38,$rB);
  __ZmiRK6b2Vec2S1_($8,$9,$tmpcast);
  __ZmiRK6b2Vec2S1_($C11,$8,$rA);
  $108=($32)-($23);
  $109=(($this+96)|0);
  $110=(+(HEAPF32[(($109)>>2)]));
  $111=($108)-($110);
  $112=(+(__ZNK6b2Vec26LengthEv($C11)));
  $113=(+(__Z5b2AbsIfET_S0_($111)));
  $114=(($C11)|0);
  $115=(+(HEAPF32[(($114)>>2)]));
  $116=(($C11+4)|0);
  $117=(+(HEAPF32[(($116)>>2)]));
  __ZN6b2Vec3C1Efff($C,$115,$117,$111);
  __ZNK7b2Mat337Solve33ERK6b2Vec3($10,$K,$C);
  __ZNK6b2Vec3ngEv($impulse,$10);
  $118=(($impulse)|0);
  $119=(+(HEAPF32[(($118)>>2)]));
  $120=(($impulse+4)|0);
  $121=(+(HEAPF32[(($120)>>2)]));
  __ZN6b2Vec2C1Eff($P2,$119,$121);
  __ZmlfRK6b2Vec2($11,$34,$P2);
  __ZN6b2Vec2mIERKS_($tmpcast,$11);
  $122=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P2)));
  $123=(($impulse+8)|0);
  $124=(+(HEAPF32[(($123)>>2)]));
  $125=($122)+($124);
  __ZmlfRK6b2Vec2($12,$36,$P2);
  __ZN6b2Vec2pLERKS_($tmpcast38,$12);
  $126=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P2)));
  $127=(+(HEAPF32[(($123)>>2)]));
  $128=($126)+($127);
  $_pn41=$125;$angularError_0=$113;$positionError_0=$112;$_pn40=$128;
 }




 $_pn39=($38)*($_pn41);
 $_pn=($40)*($_pn40);
 $aA_0=($23)-($_pn39);
 $aB_0=($32)+($_pn);
 $130=((HEAP32[(($13)>>2)])|0);
 $131=((HEAP32[(($15)>>2)])|0);
 $132=(($131+((($130)*(12))&-1))|0);
 $133=$132;
 $ld$8$0=(($cA)|0);
 $134$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $134$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($133)|0);
 HEAP32[(($st$10$0)>>2)]=$134$0;
 $st$11$1=(($133+4)|0);
 HEAP32[(($st$11$1)>>2)]=$134$1;
 $135=((HEAP32[(($13)>>2)])|0);
 $136=((HEAP32[(($15)>>2)])|0);
 $137=(($136+((($135)*(12))&-1)+8)|0);
 HEAPF32[(($137)>>2)]=$aA_0;
 $138=((HEAP32[(($24)>>2)])|0);
 $139=((HEAP32[(($15)>>2)])|0);
 $140=(($139+((($138)*(12))&-1))|0);
 $141=$140;
 $ld$12$0=(($cB)|0);
 $142$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $142$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($141)|0);
 HEAP32[(($st$14$0)>>2)]=$142$0;
 $st$15$1=(($141+4)|0);
 HEAP32[(($st$15$1)>>2)]=$142$1;
 $143=((HEAP32[(($24)>>2)])|0);
 $144=((HEAP32[(($15)>>2)])|0);
 $145=(($144+((($143)*(12))&-1)+8)|0);
 HEAPF32[(($145)>>2)]=$aB_0;
 $146=$positionError_0>(0.004999999888241291);
 if ($146) {
  $150=0;

  STACKTOP=sp;return (($150)|0);
 }
 $148=$angularError_0<=(0.03490658849477768);
 $150=$148;

 STACKTOP=sp;return (($150)|0);
}


function __ZNK11b2WeldJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+80)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2WeldJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+88)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2WeldJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $P=0,$1=0,$2=.0,$3=0,$4=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $P=((sp)|0);
 $1=(($this+104)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+108)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 __ZN6b2Vec2C1Eff($P,$2,$4);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$P);
 STACKTOP=sp;return;
}


function __ZNK11b2WeldJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+112)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN11b2WeldJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3304,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3696,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2872,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2520,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+80)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+84)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(2072,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+88)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+92)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1608,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+96)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(1216,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+68)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(872,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+72)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 __Z5b2LogPKcz(480,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+56)|0);
 $34=((HEAP32[(($33)>>2)])|0);
 __Z5b2LogPKcz(208,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$34,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN11b2WeldJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN11b2WeldJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN6b2Vec33SetEfff($this,$x_,$y_,$z_){
 $this=($this)|0;
 $x_=+($x_);
 $y_=+($y_);
 $z_=+($z_);
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$x_;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$y_;
 $3=(($this+8)|0);
 HEAPF32[(($3)>>2)]=$z_;
 return;
}


function __ZplRK6b2Vec3S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=0,$14=.0,$15=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)+($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)+($9);
 $11=(($a+8)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($b+8)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=($12)+($14);
 __ZN6b2Vec3C1Efff($agg_result,$5,$10,$15);
 return;
}


function __ZmlfRK6b2Vec3($agg_result,$s,$a){
 $agg_result=($agg_result)|0;
 $s=+($s);
 $a=($a)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=0,$8=.0,$9=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($s);
 $4=(($a+4)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($s);
 $7=(($a+8)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($8)*($s);
 __ZN6b2Vec3C1Efff($agg_result,$3,$6,$9);
 return;
}


function __ZN6b2Vec3C2Efff($this,$x,$y,$z){
 $this=($this)|0;
 $x=+($x);
 $y=+($y);
 $z=+($z);
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=$x;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=$y;
 $3=(($this+8)|0);
 HEAPF32[(($3)>>2)]=$z;
 return;
}


function __ZN11b2GearJointC2EPK14b2GearJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $xfA=0,$xfC=0,$pC=0,$pA=0,$1=0,$2=0,$3=0,$4=0,$xfB=0,$xfD=0,$pD=0,$tmpcast19=0,$pB=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0;
 var $12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0;
 var $32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=.0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$50=0,$51=0,$52=.0;
 var $53=0,$54=0,$55=0,$ld$0$0=0,$56$0=0,$ld$1$1=0,$56$1=0,$st$2$0=0,$st$3$1=0,$57=0,$58=0,$59=0,$ld$4$0=0,$60$0=0,$ld$5$1=0,$60$1=0,$st$6$0=0,$st$7$1=0,$61=0,$62=0;
 var $63=.0,$64=0,$65=.0,$66=.0,$67=.0,$tmpcast=0,$69=0,$70=0,$71=0,$ld$8$0=0,$72$0=0,$ld$9$1=0,$72$1=0,$st$10$0=0,$st$11$1=0,$73=0,$74=0,$75=0,$ld$12$0=0,$76$0=0;
 var $ld$13$1=0,$76$1=0,$st$14$0=0,$st$15$1=0,$77=0,$78=0,$79=.0,$80=0,$81=0,$82=0,$83=0,$ld$16$0=0,$84$0=0,$ld$17$1=0,$84$1=0,$st$18$0=0,$st$19$1=0,$ld$20$0=0,$85$0=0,$ld$21$1=0;
 var $85$1=0,$st$22$0=0,$st$23$1=0,$86=0,$87=0,$88=0,$89=0,$90=.0,$coordinateA_0=.0,$92=0,$93=0,$94=0,$95=0,$96=0,$97=0,$98=0,$99=0,$100=0,$101=0,$102=0;
 var $103=.0,$104=0,$105=0,$106=0,$107=0,$108=0,$109=0,$110=0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$ld$24$0=0,$118$0=0,$ld$25$1=0,$118$1=0,$st$26$0=0,$st$27$1=0;
 var $119=0,$120=0,$121=0,$ld$28$0=0,$122$0=0,$ld$29$1=0,$122$1=0,$st$30$0=0,$st$31$1=0,$123=0,$124=0,$125=.0,$126=0,$127=.0,$128=.0,$129=.0,$131=0,$132=0,$133=0,$ld$32$0=0;
 var $134$0=0,$ld$33$1=0,$134$1=0,$st$34$0=0,$st$35$1=0,$135=0,$136=0,$137=0,$ld$36$0=0,$138$0=0,$ld$37$1=0,$138$1=0,$st$38$0=0,$st$39$1=0,$139=0,$140=0,$141=.0,$142=0,$143=0,$144=0;
 var $145=0,$ld$40$0=0,$146$0=0,$ld$41$1=0,$146$1=0,$st$42$0=0,$st$43$1=0,$ld$44$0=0,$147$0=0,$ld$45$1=0,$147$1=0,$st$46$0=0,$st$47$1=0,$148=0,$149=0,$150=0,$151=0,$152=.0,$coordinateB_0=.0,$154=0;
 var $155=.0,$156=0,$157=.0,$158=.0,$159=0,$160=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+120)|0;
 $xfA=((sp)|0);
 $xfC=(((sp)+(16))|0);
 $pC=(((sp)+(32))|0);
 $pA=(((sp)+(40))|0);
 $1=(((sp)+(48))|0);
 $2=(((sp)+(56))|0);
 $3=(((sp)+(64))|0);
 $4=(((sp)+(72))|0);
 $xfB=(((sp)+(80))|0);
 $xfD=(((sp)+(96))|0);
 $pD=(((sp)+(112))|0);
 $tmpcast19=$pD;
 $pB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=(($this)|0);
 $10=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($9,$10);
 $11=(($this)|0);
 HEAP32[(($11)>>2)]=5928;
 $12=(($this+92)|0);
 $13=(($this+100)|0);
 $14=(($this+108)|0);
 $15=(($this+116)|0);
 $16=(($this+124)|0);
 $17=(($this+132)|0);
 $18=(($def+20)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($this+68)|0);
 HEAP32[(($20)>>2)]=$19;
 $21=(($def+24)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($this+72)|0);
 HEAP32[(($23)>>2)]=$22;
 $24=((HEAP32[(($20)>>2)])|0);
 $25=((__ZNK7b2Joint7GetTypeEv($24))|0);
 $26=(($this+76)|0);
 HEAP32[(($26)>>2)]=$25;
 $27=((HEAP32[(($23)>>2)])|0);
 $28=((__ZNK7b2Joint7GetTypeEv($27))|0);
 $29=(($this+80)|0);
 HEAP32[(($29)>>2)]=$28;
 $30=((HEAP32[(($20)>>2)])|0);
 $31=((__ZN7b2Joint8GetBodyAEv($30))|0);
 $32=(($this+84)|0);
 HEAP32[(($32)>>2)]=$31;
 $33=((HEAP32[(($20)>>2)])|0);
 $34=((__ZN7b2Joint8GetBodyBEv($33))|0);
 $35=(($this+48)|0);
 HEAP32[(($35)>>2)]=$34;
 $36=(($34+12)|0);
 $37=$xfA;
 $38=$36;
 HEAP32[(($37)>>2)]=((HEAP32[(($38)>>2)])|0);HEAP32[((($37)+(4))>>2)]=((HEAP32[((($38)+(4))>>2)])|0);HEAP32[((($37)+(8))>>2)]=((HEAP32[((($38)+(8))>>2)])|0);HEAP32[((($37)+(12))>>2)]=((HEAP32[((($38)+(12))>>2)])|0);
 $39=((HEAP32[(($35)>>2)])|0);
 $40=(($39+72)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=((HEAP32[(($32)>>2)])|0);
 $43=(($42+12)|0);
 $44=$xfC;
 $45=$43;
 HEAP32[(($44)>>2)]=((HEAP32[(($45)>>2)])|0);HEAP32[((($44)+(4))>>2)]=((HEAP32[((($45)+(4))>>2)])|0);HEAP32[((($44)+(8))>>2)]=((HEAP32[((($45)+(8))>>2)])|0);HEAP32[((($44)+(12))>>2)]=((HEAP32[((($45)+(12))>>2)])|0);
 $46=((HEAP32[(($26)>>2)])|0);
 $47=($46|0)==1;
 $48=((HEAP32[(($18)>>2)])|0);
 if ($47) {
  $50=((HEAP32[(($32)>>2)])|0);
  $51=(($50+72)|0);
  $52=(+(HEAPF32[(($51)>>2)]));
  $53=(($48+68)|0);
  $54=$53;
  $55=$14;
  $ld$0$0=(($54)|0);
  $56$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($54+4)|0);
  $56$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($55)|0);
  HEAP32[(($st$2$0)>>2)]=$56$0;
  $st$3$1=(($55+4)|0);
  HEAP32[(($st$3$1)>>2)]=$56$1;
  $57=(($48+76)|0);
  $58=$57;
  $59=$12;
  $ld$4$0=(($58)|0);
  $60$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($58+4)|0);
  $60$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($59)|0);
  HEAP32[(($st$6$0)>>2)]=$60$0;
  $st$7$1=(($59+4)|0);
  HEAP32[(($st$7$1)>>2)]=$60$1;
  $61=(($48+116)|0);
  $62=$61;
  $63=(+(HEAPF32[(($62)>>2)]));
  $64=(($this+140)|0);
  HEAPF32[(($64)>>2)]=$63;
  __ZN6b2Vec27SetZeroEv($16);
  $65=($41)-($52);
  $66=(+(HEAPF32[(($64)>>2)]));
  $67=($65)-($66);
  $coordinateA_0=$67;
 } else {
  $tmpcast=$pC;
  $69=(($48+68)|0);
  $70=$69;
  $71=$14;
  $ld$8$0=(($70)|0);
  $72$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($70+4)|0);
  $72$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($71)|0);
  HEAP32[(($st$10$0)>>2)]=$72$0;
  $st$11$1=(($71+4)|0);
  HEAP32[(($st$11$1)>>2)]=$72$1;
  $73=(($48+76)|0);
  $74=$73;
  $75=$12;
  $ld$12$0=(($74)|0);
  $76$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($74+4)|0);
  $76$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($75)|0);
  HEAP32[(($st$14$0)>>2)]=$76$0;
  $st$15$1=(($75+4)|0);
  HEAP32[(($st$15$1)>>2)]=$76$1;
  $77=(($48+100)|0);
  $78=$77;
  $79=(+(HEAPF32[(($78)>>2)]));
  $80=(($this+140)|0);
  HEAPF32[(($80)>>2)]=$79;
  $81=(($48+84)|0);
  $82=$81;
  $83=$16;
  $ld$16$0=(($82)|0);
  $84$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($82+4)|0);
  $84$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($83)|0);
  HEAP32[(($st$18$0)>>2)]=$84$0;
  $st$19$1=(($83+4)|0);
  HEAP32[(($st$19$1)>>2)]=$84$1;
  $ld$20$0=(($71)|0);
  $85$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($71+4)|0);
  $85$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($pC)|0);
  HEAP32[(($st$22$0)>>2)]=$85$0;
  $st$23$1=(($pC+4)|0);
  HEAP32[(($st$23$1)>>2)]=$85$1;
  $86=(($xfC+8)|0);
  $87=(($xfA+8)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($2,$87,$12);
  $88=(($xfA)|0);
  $89=(($xfC)|0);
  __ZmiRK6b2Vec2S1_($3,$88,$89);
  __ZplRK6b2Vec2S1_($1,$2,$3);
  __Z6b2MulTRK5b2RotRK6b2Vec2($pA,$86,$1);
  __ZmiRK6b2Vec2S1_($4,$pA,$tmpcast);
  $90=(+(__Z5b2DotRK6b2Vec2S1_($4,$16)));
  $coordinateA_0=$90;
 }

 $92=((HEAP32[(($23)>>2)])|0);
 $93=((__ZN7b2Joint8GetBodyAEv($92))|0);
 $94=(($this+88)|0);
 HEAP32[(($94)>>2)]=$93;
 $95=((HEAP32[(($23)>>2)])|0);
 $96=((__ZN7b2Joint8GetBodyBEv($95))|0);
 $97=(($this+52)|0);
 HEAP32[(($97)>>2)]=$96;
 $98=(($96+12)|0);
 $99=$xfB;
 $100=$98;
 HEAP32[(($99)>>2)]=((HEAP32[(($100)>>2)])|0);HEAP32[((($99)+(4))>>2)]=((HEAP32[((($100)+(4))>>2)])|0);HEAP32[((($99)+(8))>>2)]=((HEAP32[((($100)+(8))>>2)])|0);HEAP32[((($99)+(12))>>2)]=((HEAP32[((($100)+(12))>>2)])|0);
 $101=((HEAP32[(($97)>>2)])|0);
 $102=(($101+72)|0);
 $103=(+(HEAPF32[(($102)>>2)]));
 $104=((HEAP32[(($94)>>2)])|0);
 $105=(($104+12)|0);
 $106=$xfD;
 $107=$105;
 HEAP32[(($106)>>2)]=((HEAP32[(($107)>>2)])|0);HEAP32[((($106)+(4))>>2)]=((HEAP32[((($107)+(4))>>2)])|0);HEAP32[((($106)+(8))>>2)]=((HEAP32[((($107)+(8))>>2)])|0);HEAP32[((($106)+(12))>>2)]=((HEAP32[((($107)+(12))>>2)])|0);
 $108=((HEAP32[(($29)>>2)])|0);
 $109=($108|0)==1;
 $110=((HEAP32[(($21)>>2)])|0);
 if ($109) {
  $112=((HEAP32[(($94)>>2)])|0);
  $113=(($112+72)|0);
  $114=(+(HEAPF32[(($113)>>2)]));
  $115=(($110+68)|0);
  $116=$115;
  $117=$15;
  $ld$24$0=(($116)|0);
  $118$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($116+4)|0);
  $118$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($117)|0);
  HEAP32[(($st$26$0)>>2)]=$118$0;
  $st$27$1=(($117+4)|0);
  HEAP32[(($st$27$1)>>2)]=$118$1;
  $119=(($110+76)|0);
  $120=$119;
  $121=$13;
  $ld$28$0=(($120)|0);
  $122$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($120+4)|0);
  $122$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($121)|0);
  HEAP32[(($st$30$0)>>2)]=$122$0;
  $st$31$1=(($121+4)|0);
  HEAP32[(($st$31$1)>>2)]=$122$1;
  $123=(($110+116)|0);
  $124=$123;
  $125=(+(HEAPF32[(($124)>>2)]));
  $126=(($this+144)|0);
  HEAPF32[(($126)>>2)]=$125;
  __ZN6b2Vec27SetZeroEv($17);
  $127=($103)-($114);
  $128=(+(HEAPF32[(($126)>>2)]));
  $129=($127)-($128);
  $coordinateB_0=$129;

  $154=(($def+28)|0);
  $155=(+(HEAPF32[(($154)>>2)]));
  $156=(($this+152)|0);
  HEAPF32[(($156)>>2)]=$155;
  $157=($coordinateB_0)*($155);
  $158=($coordinateA_0)+($157);
  $159=(($this+148)|0);
  HEAPF32[(($159)>>2)]=$158;
  $160=(($this+156)|0);
  HEAPF32[(($160)>>2)]=0.0;
  STACKTOP=sp;return;
 } else {
  $131=(($110+68)|0);
  $132=$131;
  $133=$15;
  $ld$32$0=(($132)|0);
  $134$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($132+4)|0);
  $134$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($133)|0);
  HEAP32[(($st$34$0)>>2)]=$134$0;
  $st$35$1=(($133+4)|0);
  HEAP32[(($st$35$1)>>2)]=$134$1;
  $135=(($110+76)|0);
  $136=$135;
  $137=$13;
  $ld$36$0=(($136)|0);
  $138$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($136+4)|0);
  $138$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($137)|0);
  HEAP32[(($st$38$0)>>2)]=$138$0;
  $st$39$1=(($137+4)|0);
  HEAP32[(($st$39$1)>>2)]=$138$1;
  $139=(($110+100)|0);
  $140=$139;
  $141=(+(HEAPF32[(($140)>>2)]));
  $142=(($this+144)|0);
  HEAPF32[(($142)>>2)]=$141;
  $143=(($110+84)|0);
  $144=$143;
  $145=$17;
  $ld$40$0=(($144)|0);
  $146$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($144+4)|0);
  $146$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($145)|0);
  HEAP32[(($st$42$0)>>2)]=$146$0;
  $st$43$1=(($145+4)|0);
  HEAP32[(($st$43$1)>>2)]=$146$1;
  $ld$44$0=(($133)|0);
  $147$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($133+4)|0);
  $147$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($pD)|0);
  HEAP32[(($st$46$0)>>2)]=$147$0;
  $st$47$1=(($pD+4)|0);
  HEAP32[(($st$47$1)>>2)]=$147$1;
  $148=(($xfD+8)|0);
  $149=(($xfB+8)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($6,$149,$13);
  $150=(($xfB)|0);
  $151=(($xfD)|0);
  __ZmiRK6b2Vec2S1_($7,$150,$151);
  __ZplRK6b2Vec2S1_($5,$6,$7);
  __Z6b2MulTRK5b2RotRK6b2Vec2($pB,$148,$5);
  __ZmiRK6b2Vec2S1_($8,$pB,$tmpcast19);
  $152=(+(__Z5b2DotRK6b2Vec2S1_($8,$17)));
  $coordinateB_0=$152;

  $154=(($def+28)|0);
  $155=(+(HEAPF32[(($154)>>2)]));
  $156=(($this+152)|0);
  HEAPF32[(($156)>>2)]=$155;
  $157=($coordinateB_0)*($155);
  $158=($coordinateA_0)+($157);
  $159=(($this+148)|0);
  HEAPF32[(($159)>>2)]=$158;
  $160=(($this+156)|0);
  HEAPF32[(($160)>>2)]=0.0;
  STACKTOP=sp;return;
 }
}


function __ZNK7b2Joint7GetTypeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN7b2Joint8GetBodyAEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN7b2Joint8GetBodyBEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast26=0,$vC=0,$tmpcast27=0,$vD=0,$tmpcast28=0,$qA=0,$qB=0,$qC=0,$qD=0,$u=0,$tmpcast29=0,$rC=0,$1=0,$rA=0,$2=0,$u1=0,$rD=0;
 var $3=0,$rB=0,$4=0,$5=0,$tmpcast30=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$ld$0$0=0,$35$0=0,$ld$1$1=0,$35$1=0,$st$2$0=0,$st$3$1=0;
 var $36=0,$37=0,$38=0,$39=0,$40=0,$ld$4$0=0,$41$0=0,$ld$5$1=0,$41$1=0,$st$6$0=0,$st$7$1=0,$42=0,$43=0,$44=0,$45=0,$46=0,$ld$8$0=0,$47$0=0,$ld$9$1=0,$47$1=0;
 var $st$10$0=0,$st$11$1=0,$48=0,$49=0,$50=0,$51=0,$52=0,$ld$12$0=0,$53$0=0,$ld$13$1=0,$53$1=0,$st$14$0=0,$st$15$1=0,$54=0,$55=0,$56=.0,$57=0,$58=0,$59=0,$60=.0;
 var $61=0,$62=0,$63=0,$64=.0,$65=0,$66=0,$67=0,$68=.0,$69=0,$70=0,$71=0,$72=.0,$73=0,$74=0,$75=0,$76=.0,$77=0,$78=0,$79=0,$80=.0;
 var $81=0,$82=0,$83=0,$84=.0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=.0,$91=0,$92=0,$93=0,$94=0,$ld$16$0=0,$95$0=0,$ld$17$1=0,$95$1=0,$st$18$0=0,$st$19$1=0;
 var $96=0,$97=0,$98=0,$99=.0,$100=0,$101=0,$102=0,$103=.0,$104=0,$105=0,$ld$20$0=0,$106$0=0,$ld$21$1=0,$106$1=0,$st$22$0=0,$st$23$1=0,$107=0,$108=0,$109=0,$110=.0;
 var $111=0,$112=0,$113=0,$114=.0,$115=0,$116=0,$ld$24$0=0,$117$0=0,$ld$25$1=0,$117$1=0,$st$26$0=0,$st$27$1=0,$118=0,$119=0,$120=0,$121=.0,$122=0,$123=0,$124=0,$125=.0;
 var $126=0,$127=0,$ld$28$0=0,$128$0=0,$ld$29$1=0,$128$1=0,$st$30$0=0,$st$31$1=0,$129=0,$130=0,$131=0,$132=.0,$133=0,$134=0,$135=0,$136=0,$138=0,$139=0,$140=0,$141=.0;
 var $142=.0,$143=.0,$144=.0,$145=.0,$147=0,$148=0,$149=0,$150=0,$151=0,$ld$32$0=0,$152$0=0,$ld$33$1=0,$152$1=0,$st$34$0=0,$st$35$1=0,$153=.0,$154=0,$155=.0,$156=0,$157=.0;
 var $158=.0,$159=.0,$160=.0,$161=.0,$162=.0,$163=.0,$164=.0,$165=.0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0,$storemerge=.0,$172=0,$173=0,$174=0,$176=0,$177=0,$178=.0;
 var $179=0,$180=.0,$181=0,$182=.0,$183=.0,$184=.0,$185=.0,$186=.0,$187=.0,$188=.0,$189=.0,$191=0,$192=0,$193=0,$194=0,$195=0,$196=.0,$197=0,$ld$36$0=0,$198$0=0;
 var $ld$37$1=0,$198$1=0,$st$38$0=0,$st$39$1=0,$199=.0,$200=.0,$201=.0,$202=0,$203=.0,$204=.0,$205=.0,$206=0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0;
 var $215=.0,$216=.0,$217=.0,$218=.0,$219=.0,$220=.0,$221=.0,$222=.0,$223=.0,$storemerge31=.0,$225=0,$227=.0,$229=.0,$230=0,$231=0,$232=0,$234=.0,$235=0,$236=.0,$237=.0;
 var $238=0,$239=.0,$240=.0,$241=.0,$242=0,$243=.0,$244=.0,$245=.0,$246=.0,$247=.0,$248=0,$249=.0,$250=.0,$251=.0,$252=0,$253=.0,$254=.0,$255=.0,$256=.0,$257=.0;
 var $258=.0,$259=.0,$260=.0,$261=0,$262=.0,$263=.0,$264=.0,$265=.0,$266=.0,$267=.0,$268=.0,$269=.0,$270=0,$271=.0,$272=.0,$273=.0,$275=0,$wB_0=.0,$wC_0=.0,$wA_0=.0;
 var $wD_0=.0,$277=0,$278=0,$279=0,$280=0,$ld$40$0=0,$281$0=0,$ld$41$1=0,$281$1=0,$st$42$0=0,$st$43$1=0,$282=0,$283=0,$284=0,$285=0,$286=0,$287=0,$288=0,$ld$44$0=0,$289$0=0;
 var $ld$45$1=0,$289$1=0,$st$46$0=0,$st$47$1=0,$290=0,$291=0,$292=0,$293=0,$294=0,$295=0,$296=0,$ld$48$0=0,$297$0=0,$ld$49$1=0,$297$1=0,$st$50$0=0,$st$51$1=0,$298=0,$299=0,$300=0;
 var $301=0,$302=0,$303=0,$304=0,$ld$52$0=0,$305$0=0,$ld$53$1=0,$305$1=0,$st$54$0=0,$st$55$1=0,$306=0,$307=0,$308=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast26=$vB;
 $vC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast27=$vC;
 $vD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast28=$vD;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast29=$u;
 $rC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($this+48)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+8)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($this+160)|0);
 HEAP32[(($14)>>2)]=$13;
 $15=(($this+52)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($16+8)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($this+164)|0);
 HEAP32[(($19)>>2)]=$18;
 $20=(($this+84)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($21+8)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($this+168)|0);
 HEAP32[(($24)>>2)]=$23;
 $25=(($this+88)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=(($26+8)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=(($this+172)|0);
 HEAP32[(($29)>>2)]=$28;
 $30=(($this+176)|0);
 $31=((HEAP32[(($10)>>2)])|0);
 $32=(($31+44)|0);
 $33=$32;
 $34=$30;
 $ld$0$0=(($33)|0);
 $35$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($33+4)|0);
 $35$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($34)|0);
 HEAP32[(($st$2$0)>>2)]=$35$0;
 $st$3$1=(($34+4)|0);
 HEAP32[(($st$3$1)>>2)]=$35$1;
 $36=(($this+184)|0);
 $37=((HEAP32[(($15)>>2)])|0);
 $38=(($37+44)|0);
 $39=$38;
 $40=$36;
 $ld$4$0=(($39)|0);
 $41$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($39+4)|0);
 $41$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($40)|0);
 HEAP32[(($st$6$0)>>2)]=$41$0;
 $st$7$1=(($40+4)|0);
 HEAP32[(($st$7$1)>>2)]=$41$1;
 $42=(($this+192)|0);
 $43=((HEAP32[(($20)>>2)])|0);
 $44=(($43+44)|0);
 $45=$44;
 $46=$42;
 $ld$8$0=(($45)|0);
 $47$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($45+4)|0);
 $47$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($46)|0);
 HEAP32[(($st$10$0)>>2)]=$47$0;
 $st$11$1=(($46+4)|0);
 HEAP32[(($st$11$1)>>2)]=$47$1;
 $48=(($this+200)|0);
 $49=((HEAP32[(($25)>>2)])|0);
 $50=(($49+44)|0);
 $51=$50;
 $52=$48;
 $ld$12$0=(($51)|0);
 $53$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($51+4)|0);
 $53$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($52)|0);
 HEAP32[(($st$14$0)>>2)]=$53$0;
 $st$15$1=(($52+4)|0);
 HEAP32[(($st$15$1)>>2)]=$53$1;
 $54=((HEAP32[(($10)>>2)])|0);
 $55=(($54+136)|0);
 $56=(+(HEAPF32[(($55)>>2)]));
 $57=(($this+208)|0);
 HEAPF32[(($57)>>2)]=$56;
 $58=((HEAP32[(($15)>>2)])|0);
 $59=(($58+136)|0);
 $60=(+(HEAPF32[(($59)>>2)]));
 $61=(($this+212)|0);
 HEAPF32[(($61)>>2)]=$60;
 $62=((HEAP32[(($20)>>2)])|0);
 $63=(($62+136)|0);
 $64=(+(HEAPF32[(($63)>>2)]));
 $65=(($this+216)|0);
 HEAPF32[(($65)>>2)]=$64;
 $66=((HEAP32[(($25)>>2)])|0);
 $67=(($66+136)|0);
 $68=(+(HEAPF32[(($67)>>2)]));
 $69=(($this+220)|0);
 HEAPF32[(($69)>>2)]=$68;
 $70=((HEAP32[(($10)>>2)])|0);
 $71=(($70+144)|0);
 $72=(+(HEAPF32[(($71)>>2)]));
 $73=(($this+224)|0);
 HEAPF32[(($73)>>2)]=$72;
 $74=((HEAP32[(($15)>>2)])|0);
 $75=(($74+144)|0);
 $76=(+(HEAPF32[(($75)>>2)]));
 $77=(($this+228)|0);
 HEAPF32[(($77)>>2)]=$76;
 $78=((HEAP32[(($20)>>2)])|0);
 $79=(($78+144)|0);
 $80=(+(HEAPF32[(($79)>>2)]));
 $81=(($this+232)|0);
 HEAPF32[(($81)>>2)]=$80;
 $82=((HEAP32[(($25)>>2)])|0);
 $83=(($82+144)|0);
 $84=(+(HEAPF32[(($83)>>2)]));
 $85=(($this+236)|0);
 HEAPF32[(($85)>>2)]=$84;
 $86=((HEAP32[(($14)>>2)])|0);
 $87=(($data+28)|0);
 $88=((HEAP32[(($87)>>2)])|0);
 $89=(($88+((($86)*(12))&-1)+8)|0);
 $90=(+(HEAPF32[(($89)>>2)]));
 $91=(($data+32)|0);
 $92=((HEAP32[(($91)>>2)])|0);
 $93=(($92+((($86)*(12))&-1))|0);
 $94=$93;
 $ld$16$0=(($94)|0);
 $95$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($94+4)|0);
 $95$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($vA)|0);
 HEAP32[(($st$18$0)>>2)]=$95$0;
 $st$19$1=(($vA+4)|0);
 HEAP32[(($st$19$1)>>2)]=$95$1;
 $96=((HEAP32[(($14)>>2)])|0);
 $97=((HEAP32[(($91)>>2)])|0);
 $98=(($97+((($96)*(12))&-1)+8)|0);
 $99=(+(HEAPF32[(($98)>>2)]));
 $100=((HEAP32[(($19)>>2)])|0);
 $101=((HEAP32[(($87)>>2)])|0);
 $102=(($101+((($100)*(12))&-1)+8)|0);
 $103=(+(HEAPF32[(($102)>>2)]));
 $104=(($97+((($100)*(12))&-1))|0);
 $105=$104;
 $ld$20$0=(($105)|0);
 $106$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($105+4)|0);
 $106$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$106$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$106$1;
 $107=((HEAP32[(($19)>>2)])|0);
 $108=((HEAP32[(($91)>>2)])|0);
 $109=(($108+((($107)*(12))&-1)+8)|0);
 $110=(+(HEAPF32[(($109)>>2)]));
 $111=((HEAP32[(($24)>>2)])|0);
 $112=((HEAP32[(($87)>>2)])|0);
 $113=(($112+((($111)*(12))&-1)+8)|0);
 $114=(+(HEAPF32[(($113)>>2)]));
 $115=(($108+((($111)*(12))&-1))|0);
 $116=$115;
 $ld$24$0=(($116)|0);
 $117$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($116+4)|0);
 $117$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($vC)|0);
 HEAP32[(($st$26$0)>>2)]=$117$0;
 $st$27$1=(($vC+4)|0);
 HEAP32[(($st$27$1)>>2)]=$117$1;
 $118=((HEAP32[(($24)>>2)])|0);
 $119=((HEAP32[(($91)>>2)])|0);
 $120=(($119+((($118)*(12))&-1)+8)|0);
 $121=(+(HEAPF32[(($120)>>2)]));
 $122=((HEAP32[(($29)>>2)])|0);
 $123=((HEAP32[(($87)>>2)])|0);
 $124=(($123+((($122)*(12))&-1)+8)|0);
 $125=(+(HEAPF32[(($124)>>2)]));
 $126=(($119+((($122)*(12))&-1))|0);
 $127=$126;
 $ld$28$0=(($127)|0);
 $128$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($127+4)|0);
 $128$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($vD)|0);
 HEAP32[(($st$30$0)>>2)]=$128$0;
 $st$31$1=(($vD+4)|0);
 HEAP32[(($st$31$1)>>2)]=$128$1;
 $129=((HEAP32[(($29)>>2)])|0);
 $130=((HEAP32[(($91)>>2)])|0);
 $131=(($130+((($129)*(12))&-1)+8)|0);
 $132=(+(HEAPF32[(($131)>>2)]));
 __ZN5b2RotC1Ef($qA,$90);
 __ZN5b2RotC1Ef($qB,$103);
 __ZN5b2RotC1Ef($qC,$114);
 __ZN5b2RotC1Ef($qD,$125);
 $133=(($this+272)|0);
 HEAPF32[(($133)>>2)]=0.0;
 $134=(($this+76)|0);
 $135=((HEAP32[(($134)>>2)])|0);
 $136=($135|0)==1;
 if ($136) {
  $138=(($this+240)|0);
  __ZN6b2Vec27SetZeroEv($138);
  $139=(($this+256)|0);
  HEAPF32[(($139)>>2)]=1.0;
  $140=(($this+264)|0);
  HEAPF32[(($140)>>2)]=1.0;
  $141=(+(HEAPF32[(($73)>>2)]));
  $142=(+(HEAPF32[(($81)>>2)]));
  $143=($141)+($142);
  $144=(+(HEAPF32[(($133)>>2)]));
  $145=($144)+($143);
  $storemerge=$145;
 } else {
  $147=(($this+124)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast29,$qC,$147);
  $148=(($this+108)|0);
  __ZmiRK6b2Vec2S1_($1,$148,$42);
  __Z5b2MulRK5b2RotRK6b2Vec2($rC,$qC,$1);
  $149=(($this+92)|0);
  __ZmiRK6b2Vec2S1_($2,$149,$30);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$2);
  $150=(($this+240)|0);
  $151=$150;
  $ld$32$0=(($u)|0);
  $152$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($u+4)|0);
  $152$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($151)|0);
  HEAP32[(($st$34$0)>>2)]=$152$0;
  $st$35$1=(($151+4)|0);
  HEAP32[(($st$35$1)>>2)]=$152$1;
  $153=(+(__Z7b2CrossRK6b2Vec2S1_($rC,$tmpcast29)));
  $154=(($this+264)|0);
  HEAPF32[(($154)>>2)]=$153;
  $155=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$tmpcast29)));
  $156=(($this+256)|0);
  HEAPF32[(($156)>>2)]=$155;
  $157=(+(HEAPF32[(($65)>>2)]));
  $158=(+(HEAPF32[(($57)>>2)]));
  $159=($157)+($158);
  $160=(+(HEAPF32[(($81)>>2)]));
  $161=(+(HEAPF32[(($154)>>2)]));
  $162=($160)*($161);
  $163=($161)*($162);
  $164=($159)+($163);
  $165=(+(HEAPF32[(($73)>>2)]));
  $166=($155)*($165);
  $167=($155)*($166);
  $168=($164)+($167);
  $169=(+(HEAPF32[(($133)>>2)]));
  $170=($169)+($168);
  $storemerge=$170;
 }

 HEAPF32[(($133)>>2)]=$storemerge;
 $172=(($this+80)|0);
 $173=((HEAP32[(($172)>>2)])|0);
 $174=($173|0)==1;
 if ($174) {
  $176=(($this+248)|0);
  __ZN6b2Vec27SetZeroEv($176);
  $177=(($this+152)|0);
  $178=(+(HEAPF32[(($177)>>2)]));
  $179=(($this+260)|0);
  HEAPF32[(($179)>>2)]=$178;
  $180=(+(HEAPF32[(($177)>>2)]));
  $181=(($this+268)|0);
  HEAPF32[(($181)>>2)]=$180;
  $182=(+(HEAPF32[(($177)>>2)]));
  $183=($182)*($182);
  $184=(+(HEAPF32[(($77)>>2)]));
  $185=(+(HEAPF32[(($85)>>2)]));
  $186=($184)+($185);
  $187=($183)*($186);
  $188=(+(HEAPF32[(($133)>>2)]));
  $189=($188)+($187);
  $storemerge31=$189;
 } else {
  $191=(($this+132)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($u1,$qD,$191);
  $192=(($this+116)|0);
  __ZmiRK6b2Vec2S1_($3,$192,$48);
  __Z5b2MulRK5b2RotRK6b2Vec2($rD,$qD,$3);
  $193=(($this+100)|0);
  __ZmiRK6b2Vec2S1_($4,$193,$36);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$4);
  $194=(($this+248)|0);
  $195=(($this+152)|0);
  $196=(+(HEAPF32[(($195)>>2)]));
  __ZmlfRK6b2Vec2($tmpcast30,$196,$u1);
  $197=$194;
  $ld$36$0=(($5)|0);
  $198$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($5+4)|0);
  $198$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($197)|0);
  HEAP32[(($st$38$0)>>2)]=$198$0;
  $st$39$1=(($197+4)|0);
  HEAP32[(($st$39$1)>>2)]=$198$1;
  $199=(+(HEAPF32[(($195)>>2)]));
  $200=(+(__Z7b2CrossRK6b2Vec2S1_($rD,$u1)));
  $201=($199)*($200);
  $202=(($this+268)|0);
  HEAPF32[(($202)>>2)]=$201;
  $203=(+(HEAPF32[(($195)>>2)]));
  $204=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$u1)));
  $205=($203)*($204);
  $206=(($this+260)|0);
  HEAPF32[(($206)>>2)]=$205;
  $207=(+(HEAPF32[(($195)>>2)]));
  $208=($207)*($207);
  $209=(+(HEAPF32[(($69)>>2)]));
  $210=(+(HEAPF32[(($61)>>2)]));
  $211=($209)+($210);
  $212=($208)*($211);
  $213=(+(HEAPF32[(($85)>>2)]));
  $214=(+(HEAPF32[(($202)>>2)]));
  $215=($213)*($214);
  $216=($214)*($215);
  $217=($212)+($216);
  $218=(+(HEAPF32[(($77)>>2)]));
  $219=($205)*($218);
  $220=($205)*($219);
  $221=($217)+($220);
  $222=(+(HEAPF32[(($133)>>2)]));
  $223=($222)+($221);
  $storemerge31=$223;
 }

 HEAPF32[(($133)>>2)]=$storemerge31;
 $225=$storemerge31>(0.0);
 if ($225) {
  $227=((1.0))/($storemerge31);
  $229=$227;
 } else {
  $229=0.0;
 }

 HEAPF32[(($133)>>2)]=$229;
 $230=(($data+24)|0);
 $231=((HEAP8[($230)])|0);
 $232=(($231<<24)>>24)==0;
 if ($232) {
  $275=(($this+156)|0);
  HEAPF32[(($275)>>2)]=0.0;
  $wD_0=$132;$wA_0=$99;$wC_0=$121;$wB_0=$110;




  $277=((HEAP32[(($14)>>2)])|0);
  $278=((HEAP32[(($91)>>2)])|0);
  $279=(($278+((($277)*(12))&-1))|0);
  $280=$279;
  $ld$40$0=(($vA)|0);
  $281$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vA+4)|0);
  $281$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($280)|0);
  HEAP32[(($st$42$0)>>2)]=$281$0;
  $st$43$1=(($280+4)|0);
  HEAP32[(($st$43$1)>>2)]=$281$1;
  $282=((HEAP32[(($14)>>2)])|0);
  $283=((HEAP32[(($91)>>2)])|0);
  $284=(($283+((($282)*(12))&-1)+8)|0);
  HEAPF32[(($284)>>2)]=$wA_0;
  $285=((HEAP32[(($19)>>2)])|0);
  $286=((HEAP32[(($91)>>2)])|0);
  $287=(($286+((($285)*(12))&-1))|0);
  $288=$287;
  $ld$44$0=(($vB)|0);
  $289$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($vB+4)|0);
  $289$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($288)|0);
  HEAP32[(($st$46$0)>>2)]=$289$0;
  $st$47$1=(($288+4)|0);
  HEAP32[(($st$47$1)>>2)]=$289$1;
  $290=((HEAP32[(($19)>>2)])|0);
  $291=((HEAP32[(($91)>>2)])|0);
  $292=(($291+((($290)*(12))&-1)+8)|0);
  HEAPF32[(($292)>>2)]=$wB_0;
  $293=((HEAP32[(($24)>>2)])|0);
  $294=((HEAP32[(($91)>>2)])|0);
  $295=(($294+((($293)*(12))&-1))|0);
  $296=$295;
  $ld$48$0=(($vC)|0);
  $297$0=((HEAP32[(($ld$48$0)>>2)])|0);
  $ld$49$1=(($vC+4)|0);
  $297$1=((HEAP32[(($ld$49$1)>>2)])|0);
  $st$50$0=(($296)|0);
  HEAP32[(($st$50$0)>>2)]=$297$0;
  $st$51$1=(($296+4)|0);
  HEAP32[(($st$51$1)>>2)]=$297$1;
  $298=((HEAP32[(($24)>>2)])|0);
  $299=((HEAP32[(($91)>>2)])|0);
  $300=(($299+((($298)*(12))&-1)+8)|0);
  HEAPF32[(($300)>>2)]=$wC_0;
  $301=((HEAP32[(($29)>>2)])|0);
  $302=((HEAP32[(($91)>>2)])|0);
  $303=(($302+((($301)*(12))&-1))|0);
  $304=$303;
  $ld$52$0=(($vD)|0);
  $305$0=((HEAP32[(($ld$52$0)>>2)])|0);
  $ld$53$1=(($vD+4)|0);
  $305$1=((HEAP32[(($ld$53$1)>>2)])|0);
  $st$54$0=(($304)|0);
  HEAP32[(($st$54$0)>>2)]=$305$0;
  $st$55$1=(($304+4)|0);
  HEAP32[(($st$55$1)>>2)]=$305$1;
  $306=((HEAP32[(($29)>>2)])|0);
  $307=((HEAP32[(($91)>>2)])|0);
  $308=(($307+((($306)*(12))&-1)+8)|0);
  HEAPF32[(($308)>>2)]=$wD_0;
  STACKTOP=sp;return;
 } else {
  $234=(+(HEAPF32[(($57)>>2)]));
  $235=(($this+156)|0);
  $236=(+(HEAPF32[(($235)>>2)]));
  $237=($234)*($236);
  $238=(($this+240)|0);
  __ZmlfRK6b2Vec2($6,$237,$238);
  __ZN6b2Vec2pLERKS_($tmpcast,$6);
  $239=(+(HEAPF32[(($73)>>2)]));
  $240=(+(HEAPF32[(($235)>>2)]));
  $241=($239)*($240);
  $242=(($this+256)|0);
  $243=(+(HEAPF32[(($242)>>2)]));
  $244=($241)*($243);
  $245=($99)+($244);
  $246=(+(HEAPF32[(($61)>>2)]));
  $247=($240)*($246);
  $248=(($this+248)|0);
  __ZmlfRK6b2Vec2($7,$247,$248);
  __ZN6b2Vec2pLERKS_($tmpcast26,$7);
  $249=(+(HEAPF32[(($77)>>2)]));
  $250=(+(HEAPF32[(($235)>>2)]));
  $251=($249)*($250);
  $252=(($this+260)|0);
  $253=(+(HEAPF32[(($252)>>2)]));
  $254=($251)*($253);
  $255=($110)+($254);
  $256=(+(HEAPF32[(($65)>>2)]));
  $257=($250)*($256);
  __ZmlfRK6b2Vec2($8,$257,$238);
  __ZN6b2Vec2mIERKS_($tmpcast27,$8);
  $258=(+(HEAPF32[(($81)>>2)]));
  $259=(+(HEAPF32[(($235)>>2)]));
  $260=($258)*($259);
  $261=(($this+264)|0);
  $262=(+(HEAPF32[(($261)>>2)]));
  $263=($260)*($262);
  $264=($121)-($263);
  $265=(+(HEAPF32[(($69)>>2)]));
  $266=($259)*($265);
  __ZmlfRK6b2Vec2($9,$266,$248);
  __ZN6b2Vec2mIERKS_($tmpcast28,$9);
  $267=(+(HEAPF32[(($85)>>2)]));
  $268=(+(HEAPF32[(($235)>>2)]));
  $269=($267)*($268);
  $270=(($this+268)|0);
  $271=(+(HEAPF32[(($270)>>2)]));
  $272=($269)*($271);
  $273=($132)-($272);
  $wD_0=$273;$wA_0=$245;$wC_0=$264;$wB_0=$255;




  $277=((HEAP32[(($14)>>2)])|0);
  $278=((HEAP32[(($91)>>2)])|0);
  $279=(($278+((($277)*(12))&-1))|0);
  $280=$279;
  $ld$40$0=(($vA)|0);
  $281$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vA+4)|0);
  $281$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($280)|0);
  HEAP32[(($st$42$0)>>2)]=$281$0;
  $st$43$1=(($280+4)|0);
  HEAP32[(($st$43$1)>>2)]=$281$1;
  $282=((HEAP32[(($14)>>2)])|0);
  $283=((HEAP32[(($91)>>2)])|0);
  $284=(($283+((($282)*(12))&-1)+8)|0);
  HEAPF32[(($284)>>2)]=$wA_0;
  $285=((HEAP32[(($19)>>2)])|0);
  $286=((HEAP32[(($91)>>2)])|0);
  $287=(($286+((($285)*(12))&-1))|0);
  $288=$287;
  $ld$44$0=(($vB)|0);
  $289$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($vB+4)|0);
  $289$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($288)|0);
  HEAP32[(($st$46$0)>>2)]=$289$0;
  $st$47$1=(($288+4)|0);
  HEAP32[(($st$47$1)>>2)]=$289$1;
  $290=((HEAP32[(($19)>>2)])|0);
  $291=((HEAP32[(($91)>>2)])|0);
  $292=(($291+((($290)*(12))&-1)+8)|0);
  HEAPF32[(($292)>>2)]=$wB_0;
  $293=((HEAP32[(($24)>>2)])|0);
  $294=((HEAP32[(($91)>>2)])|0);
  $295=(($294+((($293)*(12))&-1))|0);
  $296=$295;
  $ld$48$0=(($vC)|0);
  $297$0=((HEAP32[(($ld$48$0)>>2)])|0);
  $ld$49$1=(($vC+4)|0);
  $297$1=((HEAP32[(($ld$49$1)>>2)])|0);
  $st$50$0=(($296)|0);
  HEAP32[(($st$50$0)>>2)]=$297$0;
  $st$51$1=(($296+4)|0);
  HEAP32[(($st$51$1)>>2)]=$297$1;
  $298=((HEAP32[(($24)>>2)])|0);
  $299=((HEAP32[(($91)>>2)])|0);
  $300=(($299+((($298)*(12))&-1)+8)|0);
  HEAPF32[(($300)>>2)]=$wC_0;
  $301=((HEAP32[(($29)>>2)])|0);
  $302=((HEAP32[(($91)>>2)])|0);
  $303=(($302+((($301)*(12))&-1))|0);
  $304=$303;
  $ld$52$0=(($vD)|0);
  $305$0=((HEAP32[(($ld$52$0)>>2)])|0);
  $ld$53$1=(($vD+4)|0);
  $305$1=((HEAP32[(($ld$53$1)>>2)])|0);
  $st$54$0=(($304)|0);
  HEAP32[(($st$54$0)>>2)]=$305$0;
  $st$55$1=(($304+4)|0);
  HEAP32[(($st$55$1)>>2)]=$305$1;
  $306=((HEAP32[(($29)>>2)])|0);
  $307=((HEAP32[(($91)>>2)])|0);
  $308=(($307+((($306)*(12))&-1)+8)|0);
  HEAPF32[(($308)>>2)]=$wD_0;
  STACKTOP=sp;return;
 }
}


function __ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast34=0,$vC=0,$tmpcast35=0,$vD=0,$tmpcast36=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0;
 var $ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=0,$21=0,$ld$4$0=0,$22$0=0,$ld$5$1=0,$22$1=0,$st$6$0=0,$st$7$1=0;
 var $23=0,$24=0,$25=0,$26=.0,$27=0,$28=0,$29=0,$30=0,$ld$8$0=0,$31$0=0,$ld$9$1=0,$31$1=0,$st$10$0=0,$st$11$1=0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=0;
 var $38=0,$39=0,$ld$12$0=0,$40$0=0,$ld$13$1=0,$40$1=0,$st$14$0=0,$st$15$1=0,$41=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=0,$51=.0,$52=.0;
 var $53=0,$54=.0,$55=.0,$56=.0,$57=0,$58=.0,$59=.0,$60=0,$61=.0,$62=.0,$63=.0,$64=.0,$65=.0,$66=0,$67=.0,$68=.0,$69=.0,$70=0,$71=.0,$72=.0;
 var $73=0,$74=.0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=0,$83=.0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=.0,$90=.0,$91=0,$92=.0;
 var $93=.0,$94=0,$95=.0,$96=.0,$97=.0,$98=.0,$99=.0,$100=0,$101=.0,$102=.0,$103=0,$104=.0,$105=.0,$106=.0,$107=.0,$108=.0,$109=0,$110=0,$111=0,$112=0;
 var $ld$16$0=0,$113$0=0,$ld$17$1=0,$113$1=0,$st$18$0=0,$st$19$1=0,$114=0,$115=0,$116=0,$117=0,$118=0,$119=0,$120=0,$ld$20$0=0,$121$0=0,$ld$21$1=0,$121$1=0,$st$22$0=0,$st$23$1=0,$122=0;
 var $123=0,$124=0,$125=0,$126=0,$127=0,$128=0,$ld$24$0=0,$129$0=0,$ld$25$1=0,$129$1=0,$st$26$0=0,$st$27$1=0,$130=0,$131=0,$132=0,$133=0,$134=0,$135=0,$136=0,$ld$28$0=0;
 var $137$0=0,$ld$29$1=0,$137$1=0,$st$30$0=0,$st$31$1=0,$138=0,$139=0,$140=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$vB;
 $vC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$vC;
 $vD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$vD;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+160)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($data+32)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+((($8)*(12))&-1))|0);
 $12=$11;
 $ld$0$0=(($12)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=((HEAP32[(($9)>>2)])|0);
 $16=(($15+((($14)*(12))&-1)+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+164)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($15+((($19)*(12))&-1))|0);
 $21=$20;
 $ld$4$0=(($21)|0);
 $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($21+4)|0);
 $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$22$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$22$1;
 $23=((HEAP32[(($18)>>2)])|0);
 $24=((HEAP32[(($9)>>2)])|0);
 $25=(($24+((($23)*(12))&-1)+8)|0);
 $26=(+(HEAPF32[(($25)>>2)]));
 $27=(($this+168)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=(($24+((($28)*(12))&-1))|0);
 $30=$29;
 $ld$8$0=(($30)|0);
 $31$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($30+4)|0);
 $31$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vC)|0);
 HEAP32[(($st$10$0)>>2)]=$31$0;
 $st$11$1=(($vC+4)|0);
 HEAP32[(($st$11$1)>>2)]=$31$1;
 $32=((HEAP32[(($27)>>2)])|0);
 $33=((HEAP32[(($9)>>2)])|0);
 $34=(($33+((($32)*(12))&-1)+8)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+172)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=(($33+((($37)*(12))&-1))|0);
 $39=$38;
 $ld$12$0=(($39)|0);
 $40$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($39+4)|0);
 $40$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vD)|0);
 HEAP32[(($st$14$0)>>2)]=$40$0;
 $st$15$1=(($vD+4)|0);
 HEAP32[(($st$15$1)>>2)]=$40$1;
 $41=((HEAP32[(($36)>>2)])|0);
 $42=((HEAP32[(($9)>>2)])|0);
 $43=(($42+((($41)*(12))&-1)+8)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+240)|0);
 __ZmiRK6b2Vec2S1_($1,$tmpcast,$tmpcast35);
 $46=(+(__Z5b2DotRK6b2Vec2S1_($45,$1)));
 $47=(($this+248)|0);
 __ZmiRK6b2Vec2S1_($2,$tmpcast34,$tmpcast36);
 $48=(+(__Z5b2DotRK6b2Vec2S1_($47,$2)));
 $49=($46)+($48);
 $50=(($this+256)|0);
 $51=(+(HEAPF32[(($50)>>2)]));
 $52=($17)*($51);
 $53=(($this+264)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=($35)*($54);
 $56=($52)-($55);
 $57=(($this+260)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=($26)*($58);
 $60=(($this+268)|0);
 $61=(+(HEAPF32[(($60)>>2)]));
 $62=($44)*($61);
 $63=($59)-($62);
 $64=($56)+($63);
 $65=($49)+($64);
 $66=(($this+272)|0);
 $67=(+(HEAPF32[(($66)>>2)]));
 $68=((-.0))-($67);
 $69=($65)*($68);
 $70=(($this+156)|0);
 $71=(+(HEAPF32[(($70)>>2)]));
 $72=($71)+($69);
 HEAPF32[(($70)>>2)]=$72;
 $73=(($this+208)|0);
 $74=(+(HEAPF32[(($73)>>2)]));
 $75=($74)*($69);
 __ZmlfRK6b2Vec2($3,$75,$45);
 __ZN6b2Vec2pLERKS_($tmpcast,$3);
 $76=(($this+224)|0);
 $77=(+(HEAPF32[(($76)>>2)]));
 $78=($69)*($77);
 $79=(+(HEAPF32[(($50)>>2)]));
 $80=($78)*($79);
 $81=($17)+($80);
 $82=(($this+212)|0);
 $83=(+(HEAPF32[(($82)>>2)]));
 $84=($69)*($83);
 __ZmlfRK6b2Vec2($4,$84,$47);
 __ZN6b2Vec2pLERKS_($tmpcast34,$4);
 $85=(($this+228)|0);
 $86=(+(HEAPF32[(($85)>>2)]));
 $87=($69)*($86);
 $88=(+(HEAPF32[(($57)>>2)]));
 $89=($87)*($88);
 $90=($26)+($89);
 $91=(($this+216)|0);
 $92=(+(HEAPF32[(($91)>>2)]));
 $93=($69)*($92);
 __ZmlfRK6b2Vec2($5,$93,$45);
 __ZN6b2Vec2mIERKS_($tmpcast35,$5);
 $94=(($this+232)|0);
 $95=(+(HEAPF32[(($94)>>2)]));
 $96=($69)*($95);
 $97=(+(HEAPF32[(($53)>>2)]));
 $98=($96)*($97);
 $99=($35)-($98);
 $100=(($this+220)|0);
 $101=(+(HEAPF32[(($100)>>2)]));
 $102=($69)*($101);
 __ZmlfRK6b2Vec2($6,$102,$47);
 __ZN6b2Vec2mIERKS_($tmpcast36,$6);
 $103=(($this+236)|0);
 $104=(+(HEAPF32[(($103)>>2)]));
 $105=($69)*($104);
 $106=(+(HEAPF32[(($60)>>2)]));
 $107=($105)*($106);
 $108=($44)-($107);
 $109=((HEAP32[(($7)>>2)])|0);
 $110=((HEAP32[(($9)>>2)])|0);
 $111=(($110+((($109)*(12))&-1))|0);
 $112=$111;
 $ld$16$0=(($vA)|0);
 $113$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($vA+4)|0);
 $113$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($112)|0);
 HEAP32[(($st$18$0)>>2)]=$113$0;
 $st$19$1=(($112+4)|0);
 HEAP32[(($st$19$1)>>2)]=$113$1;
 $114=((HEAP32[(($7)>>2)])|0);
 $115=((HEAP32[(($9)>>2)])|0);
 $116=(($115+((($114)*(12))&-1)+8)|0);
 HEAPF32[(($116)>>2)]=$81;
 $117=((HEAP32[(($18)>>2)])|0);
 $118=((HEAP32[(($9)>>2)])|0);
 $119=(($118+((($117)*(12))&-1))|0);
 $120=$119;
 $ld$20$0=(($vB)|0);
 $121$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($vB+4)|0);
 $121$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($120)|0);
 HEAP32[(($st$22$0)>>2)]=$121$0;
 $st$23$1=(($120+4)|0);
 HEAP32[(($st$23$1)>>2)]=$121$1;
 $122=((HEAP32[(($18)>>2)])|0);
 $123=((HEAP32[(($9)>>2)])|0);
 $124=(($123+((($122)*(12))&-1)+8)|0);
 HEAPF32[(($124)>>2)]=$90;
 $125=((HEAP32[(($27)>>2)])|0);
 $126=((HEAP32[(($9)>>2)])|0);
 $127=(($126+((($125)*(12))&-1))|0);
 $128=$127;
 $ld$24$0=(($vC)|0);
 $129$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($vC+4)|0);
 $129$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($128)|0);
 HEAP32[(($st$26$0)>>2)]=$129$0;
 $st$27$1=(($128+4)|0);
 HEAP32[(($st$27$1)>>2)]=$129$1;
 $130=((HEAP32[(($27)>>2)])|0);
 $131=((HEAP32[(($9)>>2)])|0);
 $132=(($131+((($130)*(12))&-1)+8)|0);
 HEAPF32[(($132)>>2)]=$99;
 $133=((HEAP32[(($36)>>2)])|0);
 $134=((HEAP32[(($9)>>2)])|0);
 $135=(($134+((($133)*(12))&-1))|0);
 $136=$135;
 $ld$28$0=(($vD)|0);
 $137$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($vD+4)|0);
 $137$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($136)|0);
 HEAP32[(($st$30$0)>>2)]=$137$0;
 $st$31$1=(($136+4)|0);
 HEAP32[(($st$31$1)>>2)]=$137$1;
 $138=((HEAP32[(($36)>>2)])|0);
 $139=((HEAP32[(($9)>>2)])|0);
 $140=(($139+((($138)*(12))&-1)+8)|0);
 HEAPF32[(($140)>>2)]=$108;
 STACKTOP=sp;return;
}


function __ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast49=0,$cC=0,$tmpcast50=0,$cD=0,$tmpcast51=0,$qA=0,$qB=0,$qC=0,$qD=0,$JvAC=0,$tmpcast52=0,$JvBD=0,$tmpcast54=0,$u=0,$tmpcast53=0,$rC=0,$1=0;
 var $rA=0,$2=0,$pC=0,$pA=0,$3=0,$4=0,$5=0,$u1=0,$rD=0,$6=0,$rB=0,$7=0,$pD=0,$pB=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0;
 var $14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$ld$0$0=0,$21$0=0,$ld$1$1=0,$21$1=0,$st$2$0=0,$st$3$1=0,$22=0,$23=0,$24=0,$25=.0,$26=0,$27=0,$28=0;
 var $29=0,$ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0,$st$7$1=0,$31=0,$32=0,$33=0,$34=.0,$35=0,$36=0,$37=0,$38=0,$ld$8$0=0,$39$0=0,$ld$9$1=0,$39$1=0,$st$10$0=0;
 var $st$11$1=0,$40=0,$41=0,$42=0,$43=.0,$44=0,$45=0,$46=0,$47=0,$ld$12$0=0,$48$0=0,$ld$13$1=0,$48$1=0,$st$14$0=0,$st$15$1=0,$49=0,$50=0,$51=0,$52=.0,$53=0;
 var $54=0,$55=0,$57=0,$58=.0,$59=0,$60=.0,$61=.0,$62=.0,$63=0,$64=.0,$65=.0,$67=0,$68=0,$69=0,$70=0,$71=0,$ld$16$0=0,$72$0=0,$ld$17$1=0,$72$1=0;
 var $st$18$0=0,$st$19$1=0,$73=.0,$74=.0,$75=0,$76=.0,$77=0,$78=.0,$79=.0,$80=0,$81=.0,$82=.0,$83=.0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=.0,$90=.0;
 var $coordinateA_0=.0,$JwA_0=.0,$JwC_0=.0,$mass_0_in=.0,$mass_0=.0,$92=0,$93=0,$94=0,$96=0,$97=.0,$98=.0,$99=0,$100=.0,$101=0,$102=.0,$103=.0,$104=.0,$105=.0,$106=0,$107=.0;
 var $108=.0,$110=0,$111=0,$112=0,$113=0,$114=0,$115=0,$116=.0,$JvBD56=0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=.0,$123=0,$124=.0,$125=0,$126=.0,$127=.0;
 var $128=.0,$129=0,$130=.0,$131=.0,$132=.0,$133=.0,$134=0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$coordinateB_0=.0,$JwB_0=.0,$JwD_0=.0,$_pn=.0,$mass_1=.0,$141=0,$143=0,$144=.0;
 var $145=0,$146=.0,$147=.0,$148=.0,$149=.0,$150=.0,$151=.0,$impulse_0=.0,$153=0,$154=.0,$155=.0,$156=0,$157=.0,$158=.0,$159=.0,$160=.0,$161=0,$162=.0,$163=.0,$164=0;
 var $165=.0,$166=.0,$167=.0,$168=.0,$169=0,$170=.0,$171=.0,$172=0,$173=.0,$174=.0,$175=.0,$176=.0,$177=0,$178=.0,$179=.0,$180=0,$181=.0,$182=.0,$183=.0,$184=.0;
 var $185=0,$186=0,$187=0,$188=0,$ld$20$0=0,$189$0=0,$ld$21$1=0,$189$1=0,$st$22$0=0,$st$23$1=0,$190=0,$191=0,$192=0,$193=0,$194=0,$195=0,$196=0,$ld$24$0=0,$197$0=0,$ld$25$1=0;
 var $197$1=0,$st$26$0=0,$st$27$1=0,$198=0,$199=0,$200=0,$201=0,$202=0,$203=0,$204=0,$ld$28$0=0,$205$0=0,$ld$29$1=0,$205$1=0,$st$30$0=0,$st$31$1=0,$206=0,$207=0,$208=0,$209=0;
 var $210=0,$211=0,$212=0,$ld$32$0=0,$213$0=0,$ld$33$1=0,$213$1=0,$st$34$0=0,$st$35$1=0,$214=0,$215=0,$216=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast49=$cB;
 $cC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast50=$cC;
 $cD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast51=$cD;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $JvAC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast52=$JvAC;
 $JvBD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast54=$JvBD;
 $u=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast53=$u;
 $rC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pC=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pD=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=(($this+160)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($data+28)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($18+((($16)*(12))&-1))|0);
 $20=$19;
 $ld$0$0=(($20)|0);
 $21$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$21$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$21$1;
 $22=((HEAP32[(($15)>>2)])|0);
 $23=((HEAP32[(($17)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+164)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($23+((($27)*(12))&-1))|0);
 $29=$28;
 $ld$4$0=(($29)|0);
 $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$30$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$30$1;
 $31=((HEAP32[(($26)>>2)])|0);
 $32=((HEAP32[(($17)>>2)])|0);
 $33=(($32+((($31)*(12))&-1)+8)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+168)|0);
 $36=((HEAP32[(($35)>>2)])|0);
 $37=(($32+((($36)*(12))&-1))|0);
 $38=$37;
 $ld$8$0=(($38)|0);
 $39$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($38+4)|0);
 $39$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cC)|0);
 HEAP32[(($st$10$0)>>2)]=$39$0;
 $st$11$1=(($cC+4)|0);
 HEAP32[(($st$11$1)>>2)]=$39$1;
 $40=((HEAP32[(($35)>>2)])|0);
 $41=((HEAP32[(($17)>>2)])|0);
 $42=(($41+((($40)*(12))&-1)+8)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(($this+172)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=(($41+((($45)*(12))&-1))|0);
 $47=$46;
 $ld$12$0=(($47)|0);
 $48$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($47+4)|0);
 $48$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($cD)|0);
 HEAP32[(($st$14$0)>>2)]=$48$0;
 $st$15$1=(($cD+4)|0);
 HEAP32[(($st$15$1)>>2)]=$48$1;
 $49=((HEAP32[(($44)>>2)])|0);
 $50=((HEAP32[(($17)>>2)])|0);
 $51=(($50+((($49)*(12))&-1)+8)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 __ZN5b2RotC1Ef($qA,$25);
 __ZN5b2RotC1Ef($qB,$34);
 __ZN5b2RotC1Ef($qC,$43);
 __ZN5b2RotC1Ef($qD,$52);
 $53=(($this+76)|0);
 $54=((HEAP32[(($53)>>2)])|0);
 $55=($54|0)==1;
 if ($55) {
  __ZN6b2Vec27SetZeroEv($tmpcast52);
  $57=(($this+224)|0);
  $58=(+(HEAPF32[(($57)>>2)]));
  $59=(($this+232)|0);
  $60=(+(HEAPF32[(($59)>>2)]));
  $61=($58)+($60);
  $62=($25)-($43);
  $63=(($this+140)|0);
  $64=(+(HEAPF32[(($63)>>2)]));
  $65=($62)-($64);
  $mass_0_in=$61;$JwC_0=1.0;$JwA_0=1.0;$coordinateA_0=$65;
 } else {
  $67=(($this+124)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast53,$qC,$67);
  $68=(($this+108)|0);
  $69=(($this+192)|0);
  __ZmiRK6b2Vec2S1_($1,$68,$69);
  __Z5b2MulRK5b2RotRK6b2Vec2($rC,$qC,$1);
  $70=(($this+92)|0);
  $71=(($this+176)|0);
  __ZmiRK6b2Vec2S1_($2,$70,$71);
  __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$2);
  $ld$16$0=(($u)|0);
  $72$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($u+4)|0);
  $72$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($JvAC)|0);
  HEAP32[(($st$18$0)>>2)]=$72$0;
  $st$19$1=(($JvAC+4)|0);
  HEAP32[(($st$19$1)>>2)]=$72$1;
  $73=(+(__Z7b2CrossRK6b2Vec2S1_($rC,$tmpcast53)));
  $74=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$tmpcast53)));
  $75=(($this+216)|0);
  $76=(+(HEAPF32[(($75)>>2)]));
  $77=(($this+208)|0);
  $78=(+(HEAPF32[(($77)>>2)]));
  $79=($76)+($78);
  $80=(($this+232)|0);
  $81=(+(HEAPF32[(($80)>>2)]));
  $82=($73)*($81);
  $83=($73)*($82);
  $84=($79)+($83);
  $85=(($this+224)|0);
  $86=(+(HEAPF32[(($85)>>2)]));
  $87=($74)*($86);
  $88=($74)*($87);
  $89=($84)+($88);
  __ZmiRK6b2Vec2S1_($pC,$68,$69);
  __ZmiRK6b2Vec2S1_($4,$tmpcast,$tmpcast50);
  __ZplRK6b2Vec2S1_($3,$rA,$4);
  __Z6b2MulTRK5b2RotRK6b2Vec2($pA,$qC,$3);
  __ZmiRK6b2Vec2S1_($5,$pA,$pC);
  $90=(+(__Z5b2DotRK6b2Vec2S1_($5,$67)));
  $mass_0_in=$89;$JwC_0=$73;$JwA_0=$74;$coordinateA_0=$90;
 }




 $mass_0=($mass_0_in)+((0.0));
 $92=(($this+80)|0);
 $93=((HEAP32[(($92)>>2)])|0);
 $94=($93|0)==1;
 if ($94) {
  __ZN6b2Vec27SetZeroEv($tmpcast54);
  $96=(($this+152)|0);
  $97=(+(HEAPF32[(($96)>>2)]));
  $98=($97)*($97);
  $99=(($this+228)|0);
  $100=(+(HEAPF32[(($99)>>2)]));
  $101=(($this+236)|0);
  $102=(+(HEAPF32[(($101)>>2)]));
  $103=($100)+($102);
  $104=($98)*($103);
  $105=($34)-($52);
  $106=(($this+144)|0);
  $107=(+(HEAPF32[(($106)>>2)]));
  $108=($105)-($107);
  $_pn=$104;$JwD_0=$97;$JwB_0=$97;$coordinateB_0=$108;
 } else {
  $110=(($this+132)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($u1,$qD,$110);
  $111=(($this+116)|0);
  $112=(($this+200)|0);
  __ZmiRK6b2Vec2S1_($6,$111,$112);
  __Z5b2MulRK5b2RotRK6b2Vec2($rD,$qD,$6);
  $113=(($this+100)|0);
  $114=(($this+184)|0);
  __ZmiRK6b2Vec2S1_($7,$113,$114);
  __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$7);
  $115=(($this+152)|0);
  $116=(+(HEAPF32[(($115)>>2)]));
  $JvBD56=$JvBD;
  __ZmlfRK6b2Vec2($JvBD56,$116,$u1);
  $117=(+(HEAPF32[(($115)>>2)]));
  $118=(+(__Z7b2CrossRK6b2Vec2S1_($rD,$u1)));
  $119=($117)*($118);
  $120=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$u1)));
  $121=($117)*($120);
  $122=($117)*($117);
  $123=(($this+220)|0);
  $124=(+(HEAPF32[(($123)>>2)]));
  $125=(($this+212)|0);
  $126=(+(HEAPF32[(($125)>>2)]));
  $127=($124)+($126);
  $128=($122)*($127);
  $129=(($this+236)|0);
  $130=(+(HEAPF32[(($129)>>2)]));
  $131=($119)*($130);
  $132=($119)*($131);
  $133=($128)+($132);
  $134=(($this+228)|0);
  $135=(+(HEAPF32[(($134)>>2)]));
  $136=($121)*($135);
  $137=($121)*($136);
  $138=($133)+($137);
  __ZmiRK6b2Vec2S1_($pD,$111,$112);
  __ZmiRK6b2Vec2S1_($9,$tmpcast49,$tmpcast51);
  __ZplRK6b2Vec2S1_($8,$rB,$9);
  __Z6b2MulTRK5b2RotRK6b2Vec2($pB,$qD,$8);
  __ZmiRK6b2Vec2S1_($10,$pB,$pD);
  $139=(+(__Z5b2DotRK6b2Vec2S1_($10,$110)));
  $_pn=$138;$JwD_0=$119;$JwB_0=$121;$coordinateB_0=$139;
 }




 $mass_1=($mass_0)+($_pn);
 $141=$mass_1>(0.0);
 if ($141) {
  $143=(($this+152)|0);
  $144=(+(HEAPF32[(($143)>>2)]));
  $145=(($this+148)|0);
  $146=($coordinateB_0)*($144);
  $147=(+(HEAPF32[(($145)>>2)]));
  $148=($coordinateA_0)+($146);
  $149=($148)-($147);
  $150=((-.0))-($149);
  $151=($150)/($mass_1);
  $impulse_0=$151;
 } else {
  $impulse_0=0.0;
 }

 $153=(($this+208)|0);
 $154=(+(HEAPF32[(($153)>>2)]));
 $155=($impulse_0)*($154);
 __ZmlfRK6b2Vec2($11,$155,$tmpcast52);
 __ZN6b2Vec2pLERKS_($tmpcast,$11);
 $156=(($this+224)|0);
 $157=(+(HEAPF32[(($156)>>2)]));
 $158=($impulse_0)*($157);
 $159=($JwA_0)*($158);
 $160=($25)+($159);
 $161=(($this+212)|0);
 $162=(+(HEAPF32[(($161)>>2)]));
 $163=($impulse_0)*($162);
 __ZmlfRK6b2Vec2($12,$163,$tmpcast54);
 __ZN6b2Vec2pLERKS_($tmpcast49,$12);
 $164=(($this+228)|0);
 $165=(+(HEAPF32[(($164)>>2)]));
 $166=($impulse_0)*($165);
 $167=($JwB_0)*($166);
 $168=($34)+($167);
 $169=(($this+216)|0);
 $170=(+(HEAPF32[(($169)>>2)]));
 $171=($impulse_0)*($170);
 __ZmlfRK6b2Vec2($13,$171,$tmpcast52);
 __ZN6b2Vec2mIERKS_($tmpcast50,$13);
 $172=(($this+232)|0);
 $173=(+(HEAPF32[(($172)>>2)]));
 $174=($impulse_0)*($173);
 $175=($JwC_0)*($174);
 $176=($43)-($175);
 $177=(($this+220)|0);
 $178=(+(HEAPF32[(($177)>>2)]));
 $179=($impulse_0)*($178);
 __ZmlfRK6b2Vec2($14,$179,$tmpcast54);
 __ZN6b2Vec2mIERKS_($tmpcast51,$14);
 $180=(($this+236)|0);
 $181=(+(HEAPF32[(($180)>>2)]));
 $182=($impulse_0)*($181);
 $183=($JwD_0)*($182);
 $184=($52)-($183);
 $185=((HEAP32[(($15)>>2)])|0);
 $186=((HEAP32[(($17)>>2)])|0);
 $187=(($186+((($185)*(12))&-1))|0);
 $188=$187;
 $ld$20$0=(($cA)|0);
 $189$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($cA+4)|0);
 $189$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($188)|0);
 HEAP32[(($st$22$0)>>2)]=$189$0;
 $st$23$1=(($188+4)|0);
 HEAP32[(($st$23$1)>>2)]=$189$1;
 $190=((HEAP32[(($15)>>2)])|0);
 $191=((HEAP32[(($17)>>2)])|0);
 $192=(($191+((($190)*(12))&-1)+8)|0);
 HEAPF32[(($192)>>2)]=$160;
 $193=((HEAP32[(($26)>>2)])|0);
 $194=((HEAP32[(($17)>>2)])|0);
 $195=(($194+((($193)*(12))&-1))|0);
 $196=$195;
 $ld$24$0=(($cB)|0);
 $197$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($cB+4)|0);
 $197$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($196)|0);
 HEAP32[(($st$26$0)>>2)]=$197$0;
 $st$27$1=(($196+4)|0);
 HEAP32[(($st$27$1)>>2)]=$197$1;
 $198=((HEAP32[(($26)>>2)])|0);
 $199=((HEAP32[(($17)>>2)])|0);
 $200=(($199+((($198)*(12))&-1)+8)|0);
 HEAPF32[(($200)>>2)]=$168;
 $201=((HEAP32[(($35)>>2)])|0);
 $202=((HEAP32[(($17)>>2)])|0);
 $203=(($202+((($201)*(12))&-1))|0);
 $204=$203;
 $ld$28$0=(($cC)|0);
 $205$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($cC+4)|0);
 $205$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($204)|0);
 HEAP32[(($st$30$0)>>2)]=$205$0;
 $st$31$1=(($204+4)|0);
 HEAP32[(($st$31$1)>>2)]=$205$1;
 $206=((HEAP32[(($35)>>2)])|0);
 $207=((HEAP32[(($17)>>2)])|0);
 $208=(($207+((($206)*(12))&-1)+8)|0);
 HEAPF32[(($208)>>2)]=$176;
 $209=((HEAP32[(($44)>>2)])|0);
 $210=((HEAP32[(($17)>>2)])|0);
 $211=(($210+((($209)*(12))&-1))|0);
 $212=$211;
 $ld$32$0=(($cD)|0);
 $213$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($cD+4)|0);
 $213$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($212)|0);
 HEAP32[(($st$34$0)>>2)]=$213$0;
 $st$35$1=(($212+4)|0);
 HEAP32[(($st$35$1)>>2)]=$213$1;
 $214=((HEAP32[(($44)>>2)])|0);
 $215=((HEAP32[(($17)>>2)])|0);
 $216=(($215+((($214)*(12))&-1)+8)|0);
 HEAPF32[(($216)>>2)]=$184;
 STACKTOP=sp;return ((1)|0);
}


function __ZNK11b2GearJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+92)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2GearJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+100)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2GearJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $P=0,$1=0,$2=.0,$3=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $P=((sp)|0);
 $1=(($this+156)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+240)|0);
 __ZmlfRK6b2Vec2($P,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$P);
 STACKTOP=sp;return;
}


function __ZNK11b2GearJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=.0,label=0;

 $1=(($this+156)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+256)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=($5)*($inv_dt);
 return (+($6));
}


function __ZN11b2GearJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=.0,$22=.0,$23=0,$24=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($this+68)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+56)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($this+72)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+56)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 __Z5b2LogPKcz(3184,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3664,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2840,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $17=(($this+61)|0);
 $18=((HEAP8[($17)])|0);
 $19=($18&255);
 __Z5b2LogPKcz(2480,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$19,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2040,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$12,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(1576,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$16,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $20=(($this+152)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=$21;
 __Z5b2LogPKcz(1192,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$22,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $23=(($this+56)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 __Z5b2LogPKcz(824,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$24,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN11b2GearJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN11b2GearJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN19b2PrismaticJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($this,$bA,$bB,$anchor,$axis){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 $axis=($axis)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast6=0,$3=0,$tmpcast7=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0;
 var $ld$4$0=0,$13$0=0,$ld$5$1=0,$13$1=0,$st$6$0=0,$st$7$1=0,$14=0,$15=0,$16=0,$ld$8$0=0,$17$0=0,$ld$9$1=0,$17$1=0,$st$10$0=0,$st$11$1=0,$18=0,$19=.0,$20=0,$21=.0,$22=.0;
 var $23=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast6=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast7=$3;
 $4=(($this+8)|0);
 HEAP32[(($4)>>2)]=$bA;
 $5=(($this+12)|0);
 HEAP32[(($5)>>2)]=$bB;
 $6=(($this+20)|0);
 $7=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$7,$anchor);
 $8=$6;
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($this+28)|0);
 $11=((HEAP32[(($5)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast6,$11,$anchor);
 $12=$10;
 $ld$4$0=(($2)|0);
 $13$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $13$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($12)|0);
 HEAP32[(($st$6$0)>>2)]=$13$0;
 $st$7$1=(($12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$13$1;
 $14=(($this+36)|0);
 $15=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body14GetLocalVectorERK6b2Vec2($tmpcast7,$15,$axis);
 $16=$14;
 $ld$8$0=(($3)|0);
 $17$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($3+4)|0);
 $17$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($16)|0);
 HEAP32[(($st$10$0)>>2)]=$17$0;
 $st$11$1=(($16+4)|0);
 HEAP32[(($st$11$1)>>2)]=$17$1;
 $18=((HEAP32[(($5)>>2)])|0);
 $19=(+(__ZNK6b2Body8GetAngleEv($18)));
 $20=((HEAP32[(($4)>>2)])|0);
 $21=(+(__ZNK6b2Body8GetAngleEv($20)));
 $22=($19)-($21);
 $23=(($this+44)|0);
 HEAPF32[(($23)>>2)]=$22;
 STACKTOP=sp;return;
}


function __ZNK6b2Body14GetLocalVectorERK6b2Vec2($agg_result,$this,$worldVector){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $worldVector=($worldVector)|0;
 var $1=0,label=0;

 $1=(($this+20)|0);
 __Z6b2MulTRK5b2RotRK6b2Vec2($agg_result,$1,$worldVector);
 return;
}


function __ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$ld$0$0=0,$15$0=0,$ld$1$1=0,$15$1=0,$st$2$0=0;
 var $st$3$1=0,$16=0,$17=0,$18=0,$ld$4$0=0,$19$0=0,$ld$5$1=0,$19$1=0,$st$6$0=0,$st$7$1=0,$20=0,$21=0,$22=0,$ld$8$0=0,$23$0=0,$ld$9$1=0,$23$1=0,$st$10$0=0,$st$11$1=0,$24=.0;
 var $25=0,$ld$12$0=0,$26$0=0,$ld$13$1=0,$26$1=0,$st$14$0=0,$st$15$1=0,$27=0,$28=.0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=0,$35=0,$36=.0,$37=0,$38=0,$39=.0;
 var $40=0,$41=0,$42=.0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=(($this)|0);
 $3=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($2,$3);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=4976;
 $5=(($this+68)|0);
 $6=(($this+76)|0);
 $7=(($this+84)|0);
 $8=(($this+92)|0);
 $9=(($this+104)|0);
 $10=(($this+184)|0);
 $11=(($this+192)|0);
 $12=(($def+20)|0);
 $13=$12;
 $14=$5;
 $ld$0$0=(($13)|0);
 $15$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $15$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($14)|0);
 HEAP32[(($st$2$0)>>2)]=$15$0;
 $st$3$1=(($14+4)|0);
 HEAP32[(($st$3$1)>>2)]=$15$1;
 $16=(($def+28)|0);
 $17=$16;
 $18=$6;
 $ld$4$0=(($17)|0);
 $19$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($17+4)|0);
 $19$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($18)|0);
 HEAP32[(($st$6$0)>>2)]=$19$0;
 $st$7$1=(($18+4)|0);
 HEAP32[(($st$7$1)>>2)]=$19$1;
 $20=(($def+36)|0);
 $21=$20;
 $22=$7;
 $ld$8$0=(($21)|0);
 $23$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($21+4)|0);
 $23$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($22)|0);
 HEAP32[(($st$10$0)>>2)]=$23$0;
 $st$11$1=(($22+4)|0);
 HEAP32[(($st$11$1)>>2)]=$23$1;
 $24=(+(__ZN6b2Vec29NormalizeEv($7)));
 __Z7b2CrossfRK6b2Vec2($tmpcast,1.0,$7);
 $25=$8;
 $ld$12$0=(($1)|0);
 $26$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($1+4)|0);
 $26$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($25)|0);
 HEAP32[(($st$14$0)>>2)]=$26$0;
 $st$15$1=(($25+4)|0);
 HEAP32[(($st$15$1)>>2)]=$26$1;
 $27=(($def+44)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=(($this+100)|0);
 HEAPF32[(($29)>>2)]=$28;
 __ZN6b2Vec37SetZeroEv($9);
 $30=(($this+252)|0);
 HEAPF32[(($30)>>2)]=0.0;
 $31=(($this+116)|0);
 HEAPF32[(($31)>>2)]=0.0;
 $32=(($def+52)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 $34=(($this+120)|0);
 HEAPF32[(($34)>>2)]=$33;
 $35=(($def+56)|0);
 $36=(+(HEAPF32[(($35)>>2)]));
 $37=(($this+124)|0);
 HEAPF32[(($37)>>2)]=$36;
 $38=(($def+64)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+128)|0);
 HEAPF32[(($40)>>2)]=$39;
 $41=(($def+68)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+132)|0);
 HEAPF32[(($43)>>2)]=$42;
 $44=(($def+48)|0);
 $45=((HEAP8[($44)])|0);
 $46=(($this+136)|0);
 HEAP8[($46)]=$45;
 $47=(($def+60)|0);
 $48=((HEAP8[($47)])|0);
 $49=(($this+137)|0);
 HEAP8[($49)]=$48;
 $50=(($this+140)|0);
 HEAP32[(($50)>>2)]=0;
 __ZN6b2Vec27SetZeroEv($10);
 __ZN6b2Vec27SetZeroEv($11);
 STACKTOP=sp;return;
}


function __ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast43=0,$cB=0,$tmpcast44=0,$vB=0,$tmpcast45=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$d=0,$3=0,$4=0,$5=0,$tmpcast46=0,$6=0;
 var $7=0,$tmpcast47=0,$8=0,$P=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0;
 var $25=0,$26=0,$27=0,$ld$0$0=0,$28$0=0,$ld$1$1=0,$28$1=0,$st$2$0=0,$st$3$1=0,$29=0,$30=0,$31=0,$32=0,$33=0,$ld$4$0=0,$34$0=0,$ld$5$1=0,$34$1=0,$st$6$0=0,$st$7$1=0;
 var $35=0,$36=0,$37=.0,$38=0,$39=0,$40=0,$41=.0,$42=0,$43=0,$44=0,$45=.0,$46=0,$47=0,$48=0,$49=.0,$50=0,$51=0,$52=0,$53=0,$54=0;
 var $55=0,$ld$8$0=0,$56$0=0,$ld$9$1=0,$56$1=0,$st$10$0=0,$st$11$1=0,$57=0,$58=0,$59=0,$60=.0,$61=0,$62=0,$63=0,$64=0,$ld$12$0=0,$65$0=0,$ld$13$1=0,$65$1=0,$st$14$0=0;
 var $st$15$1=0,$66=0,$67=0,$68=0,$69=.0,$70=0,$71=0,$72=0,$73=0,$ld$16$0=0,$74$0=0,$ld$17$1=0,$74$1=0,$st$18$0=0,$st$19$1=0,$75=0,$76=0,$77=0,$78=.0,$79=0;
 var $80=0,$81=0,$ld$20$0=0,$82$0=0,$ld$21$1=0,$82$1=0,$st$22$0=0,$st$23$1=0,$83=0,$84=0,$85=0,$86=.0,$87=0,$88=0,$89=.0,$90=.0,$91=.0,$92=.0,$93=0,$94=0;
 var $95=0,$ld$24$0=0,$96$0=0,$ld$25$1=0,$96$1=0,$st$26$0=0,$st$27$1=0,$97=.0,$98=0,$99=.0,$100=0,$101=.0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=.0,$108=.0,$109=0;
 var $110=0,$112=.0,$storemerge=.0,$114=0,$115=0,$116=0,$ld$28$0=0,$117$0=0,$ld$29$1=0,$117$1=0,$st$30$0=0,$st$31$1=0,$118=.0,$119=0,$120=.0,$121=0,$122=.0,$123=.0,$124=.0,$125=.0;
 var $126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=.0,$132=.0,$133=.0,$134=.0,$135=.0,$136=0,$k22_0=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=.0,$143=.0,$144=0;
 var $145=0,$146=0,$147=0,$148=0,$149=0,$151=.0,$152=0,$153=.0,$154=0,$155=.0,$156=.0,$157=.0,$158=0,$160=0,$162=0,$164=0,$165=0,$166=0,$168=0,$170=0;
 var $171=0,$173=0,$174=0,$176=0,$178=0,$180=0,$181=0,$183=0,$184=0,$185=0,$187=0,$189=0,$190=0,$191=0,$192=0,$194=0,$195=.0,$196=.0,$197=0,$198=.0;
 var $199=.0,$200=0,$201=.0,$202=.0,$203=0,$204=.0,$205=.0,$206=.0,$207=.0,$208=.0,$209=0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=.0,$216=.0,$217=.0,$218=.0;
 var $219=.0,$220=.0,$221=.0,$222=.0,$223=.0,$224=.0,$225=.0,$226=.0,$227=.0,$229=0,$wB_0=.0,$wA_0=.0,$231=0,$232=0,$233=0,$234=0,$ld$32$0=0,$235$0=0,$ld$33$1=0,$235$1=0;
 var $st$34$0=0,$st$35$1=0,$236=0,$237=0,$238=0,$239=0,$240=0,$241=0,$242=0,$ld$36$0=0,$243$0=0,$ld$37$1=0,$243$1=0,$st$38$0=0,$st$39$1=0,$244=0,$245=0,$246=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast43=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast44=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast45=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast46=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast47=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=(($this+48)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+8)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($this+144)|0);
 HEAP32[(($17)>>2)]=$16;
 $18=(($this+52)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($19+8)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($this+148)|0);
 HEAP32[(($22)>>2)]=$21;
 $23=(($this+152)|0);
 $24=((HEAP32[(($13)>>2)])|0);
 $25=(($24+44)|0);
 $26=$25;
 $27=$23;
 $ld$0$0=(($26)|0);
 $28$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($26+4)|0);
 $28$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($27)|0);
 HEAP32[(($st$2$0)>>2)]=$28$0;
 $st$3$1=(($27+4)|0);
 HEAP32[(($st$3$1)>>2)]=$28$1;
 $29=(($this+160)|0);
 $30=((HEAP32[(($18)>>2)])|0);
 $31=(($30+44)|0);
 $32=$31;
 $33=$29;
 $ld$4$0=(($32)|0);
 $34$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($32+4)|0);
 $34$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($33)|0);
 HEAP32[(($st$6$0)>>2)]=$34$0;
 $st$7$1=(($33+4)|0);
 HEAP32[(($st$7$1)>>2)]=$34$1;
 $35=((HEAP32[(($13)>>2)])|0);
 $36=(($35+136)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+168)|0);
 HEAPF32[(($38)>>2)]=$37;
 $39=((HEAP32[(($18)>>2)])|0);
 $40=(($39+136)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+172)|0);
 HEAPF32[(($42)>>2)]=$41;
 $43=((HEAP32[(($13)>>2)])|0);
 $44=(($43+144)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 $46=(($this+176)|0);
 HEAPF32[(($46)>>2)]=$45;
 $47=((HEAP32[(($18)>>2)])|0);
 $48=(($47+144)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($this+180)|0);
 HEAPF32[(($50)>>2)]=$49;
 $51=((HEAP32[(($17)>>2)])|0);
 $52=(($data+28)|0);
 $53=((HEAP32[(($52)>>2)])|0);
 $54=(($53+((($51)*(12))&-1))|0);
 $55=$54;
 $ld$8$0=(($55)|0);
 $56$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($55+4)|0);
 $56$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$56$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$56$1;
 $57=((HEAP32[(($17)>>2)])|0);
 $58=((HEAP32[(($52)>>2)])|0);
 $59=(($58+((($57)*(12))&-1)+8)|0);
 $60=(+(HEAPF32[(($59)>>2)]));
 $61=(($data+32)|0);
 $62=((HEAP32[(($61)>>2)])|0);
 $63=(($62+((($57)*(12))&-1))|0);
 $64=$63;
 $ld$12$0=(($64)|0);
 $65$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($64+4)|0);
 $65$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$65$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$65$1;
 $66=((HEAP32[(($17)>>2)])|0);
 $67=((HEAP32[(($61)>>2)])|0);
 $68=(($67+((($66)*(12))&-1)+8)|0);
 $69=(+(HEAPF32[(($68)>>2)]));
 $70=((HEAP32[(($22)>>2)])|0);
 $71=((HEAP32[(($52)>>2)])|0);
 $72=(($71+((($70)*(12))&-1))|0);
 $73=$72;
 $ld$16$0=(($73)|0);
 $74$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($73+4)|0);
 $74$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$74$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$74$1;
 $75=((HEAP32[(($22)>>2)])|0);
 $76=((HEAP32[(($52)>>2)])|0);
 $77=(($76+((($75)*(12))&-1)+8)|0);
 $78=(+(HEAPF32[(($77)>>2)]));
 $79=((HEAP32[(($61)>>2)])|0);
 $80=(($79+((($75)*(12))&-1))|0);
 $81=$80;
 $ld$20$0=(($81)|0);
 $82$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($81+4)|0);
 $82$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$82$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$82$1;
 $83=((HEAP32[(($22)>>2)])|0);
 $84=((HEAP32[(($61)>>2)])|0);
 $85=(($84+((($83)*(12))&-1)+8)|0);
 $86=(+(HEAPF32[(($85)>>2)]));
 __ZN5b2RotC1Ef($qA,$60);
 __ZN5b2RotC1Ef($qB,$78);
 $87=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($1,$87,$23);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $88=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($2,$88,$29);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZmiRK6b2Vec2S1_($4,$tmpcast44,$tmpcast);
 __ZplRK6b2Vec2S1_($3,$4,$rB);
 __ZmiRK6b2Vec2S1_($d,$3,$rA);
 $89=(+(HEAPF32[(($38)>>2)]));
 $90=(+(HEAPF32[(($42)>>2)]));
 $91=(+(HEAPF32[(($46)>>2)]));
 $92=(+(HEAPF32[(($50)>>2)]));
 $93=(($this+184)|0);
 $94=(($this+84)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast46,$qA,$94);
 $95=$93;
 $ld$24$0=(($5)|0);
 $96$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($5+4)|0);
 $96$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($95)|0);
 HEAP32[(($st$26$0)>>2)]=$96$0;
 $st$27$1=(($95+4)|0);
 HEAP32[(($st$27$1)>>2)]=$96$1;
 __ZplRK6b2Vec2S1_($6,$d,$rA);
 $97=(+(__Z7b2CrossRK6b2Vec2S1_($6,$93)));
 $98=(($this+208)|0);
 HEAPF32[(($98)>>2)]=$97;
 $99=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$93)));
 $100=(($this+212)|0);
 HEAPF32[(($100)>>2)]=$99;
 $101=($89)+($90);
 $102=(+(HEAPF32[(($98)>>2)]));
 $103=($91)*($102);
 $104=($102)*($103);
 $105=($101)+($104);
 $106=($92)*($99);
 $107=($99)*($106);
 $108=($107)+($105);
 $109=(($this+252)|0);
 $110=$108>(0.0);
 if ($110) {
  $112=((1.0))/($108);
  $storemerge=$112;
 } else {
  $storemerge=$108;
 }

 HEAPF32[(($109)>>2)]=$storemerge;
 $114=(($this+192)|0);
 $115=(($this+92)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast47,$qA,$115);
 $116=$114;
 $ld$28$0=(($7)|0);
 $117$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($7+4)|0);
 $117$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($116)|0);
 HEAP32[(($st$30$0)>>2)]=$117$0;
 $st$31$1=(($116+4)|0);
 HEAP32[(($st$31$1)>>2)]=$117$1;
 __ZplRK6b2Vec2S1_($8,$d,$rA);
 $118=(+(__Z7b2CrossRK6b2Vec2S1_($8,$114)));
 $119=(($this+200)|0);
 HEAPF32[(($119)>>2)]=$118;
 $120=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$114)));
 $121=(($this+204)|0);
 HEAPF32[(($121)>>2)]=$120;
 $122=(+(HEAPF32[(($119)>>2)]));
 $123=($91)*($122);
 $124=($122)*($123);
 $125=($101)+($124);
 $126=($92)*($120);
 $127=($120)*($126);
 $128=($127)+($125);
 $129=($126)+($123);
 $130=(+(HEAPF32[(($98)>>2)]));
 $131=($123)*($130);
 $132=(+(HEAPF32[(($100)>>2)]));
 $133=($126)*($132);
 $134=($131)+($133);
 $135=($91)+($92);
 $136=$135==(0.0);
 $k22_0=($136?(1.0):$135);
 $137=($91)*($130);
 $138=($92)*($132);
 $139=($137)+($138);
 $140=($130)*($137);
 $141=($101)+($140);
 $142=($132)*($138);
 $143=($141)+($142);
 $144=(($this+216)|0);
 __ZN6b2Vec33SetEfff($144,$128,$129,$134);
 $145=(($this+228)|0);
 __ZN6b2Vec33SetEfff($145,$129,$k22_0,$139);
 $146=(($this+240)|0);
 __ZN6b2Vec33SetEfff($146,$134,$139,$143);
 $147=(($this+136)|0);
 $148=((HEAP8[($147)])|0);
 $149=(($148<<24)>>24)==0;
 do {
  if ($149) {
   $180=(($this+140)|0);
   HEAP32[(($180)>>2)]=0;
   $181=(($this+112)|0);
   HEAPF32[(($181)>>2)]=0.0;
  } else {
   $151=(+(__Z5b2DotRK6b2Vec2S1_($93,$d)));
   $152=(($this+124)|0);
   $153=(+(HEAPF32[(($152)>>2)]));
   $154=(($this+120)|0);
   $155=(+(HEAPF32[(($154)>>2)]));
   $156=($153)-($155);
   $157=(+(__Z5b2AbsIfET_S0_($156)));
   $158=$157<(0.009999999776482582);
   if ($158) {
    $160=(($this+140)|0);
    HEAP32[(($160)>>2)]=3;
    break;
   }
   $162=$151>$155;
   if (!($162)) {
    $164=(($this+140)|0);
    $165=((HEAP32[(($164)>>2)])|0);
    $166=($165|0)==1;
    if ($166) {
     break;
    }
    HEAP32[(($164)>>2)]=1;
    $168=(($this+112)|0);
    HEAPF32[(($168)>>2)]=0.0;
    break;
   }
   $170=$151<$153;
   $171=(($this+140)|0);
   if ($170) {
    HEAP32[(($171)>>2)]=0;
    $178=(($this+112)|0);
    HEAPF32[(($178)>>2)]=0.0;
    break;
   }
   $173=((HEAP32[(($171)>>2)])|0);
   $174=($173|0)==2;
   if ($174) {
    break;
   }
   HEAP32[(($171)>>2)]=2;
   $176=(($this+112)|0);
   HEAPF32[(($176)>>2)]=0.0;
  }
 } while(0);
 $183=(($this+137)|0);
 $184=((HEAP8[($183)])|0);
 $185=(($184<<24)>>24)==0;
 if ($185) {
  $187=(($this+116)|0);
  HEAPF32[(($187)>>2)]=0.0;
 }
 $189=(($data+24)|0);
 $190=((HEAP8[($189)])|0);
 $191=(($190<<24)>>24)==0;
 $192=(($this+104)|0);
 if ($191) {
  __ZN6b2Vec37SetZeroEv($192);
  $229=(($this+116)|0);
  HEAPF32[(($229)>>2)]=0.0;
  $wA_0=$69;$wB_0=$86;


  $231=((HEAP32[(($17)>>2)])|0);
  $232=((HEAP32[(($61)>>2)])|0);
  $233=(($232+((($231)*(12))&-1))|0);
  $234=$233;
  $ld$32$0=(($vA)|0);
  $235$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($vA+4)|0);
  $235$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($234)|0);
  HEAP32[(($st$34$0)>>2)]=$235$0;
  $st$35$1=(($234+4)|0);
  HEAP32[(($st$35$1)>>2)]=$235$1;
  $236=((HEAP32[(($17)>>2)])|0);
  $237=((HEAP32[(($61)>>2)])|0);
  $238=(($237+((($236)*(12))&-1)+8)|0);
  HEAPF32[(($238)>>2)]=$wA_0;
  $239=((HEAP32[(($22)>>2)])|0);
  $240=((HEAP32[(($61)>>2)])|0);
  $241=(($240+((($239)*(12))&-1))|0);
  $242=$241;
  $ld$36$0=(($vB)|0);
  $243$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vB+4)|0);
  $243$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($242)|0);
  HEAP32[(($st$38$0)>>2)]=$243$0;
  $st$39$1=(($242+4)|0);
  HEAP32[(($st$39$1)>>2)]=$243$1;
  $244=((HEAP32[(($22)>>2)])|0);
  $245=((HEAP32[(($61)>>2)])|0);
  $246=(($245+((($244)*(12))&-1)+8)|0);
  HEAPF32[(($246)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $194=(($data+8)|0);
  $195=(+(HEAPF32[(($194)>>2)]));
  __ZN6b2Vec3mLEf($192,$195);
  $196=(+(HEAPF32[(($194)>>2)]));
  $197=(($this+116)|0);
  $198=(+(HEAPF32[(($197)>>2)]));
  $199=($196)*($198);
  HEAPF32[(($197)>>2)]=$199;
  $200=(($192)|0);
  $201=(+(HEAPF32[(($200)>>2)]));
  __ZmlfRK6b2Vec2($9,$201,$114);
  $202=(+(HEAPF32[(($197)>>2)]));
  $203=(($this+112)|0);
  $204=(+(HEAPF32[(($203)>>2)]));
  $205=($202)+($204);
  __ZmlfRK6b2Vec2($10,$205,$93);
  __ZplRK6b2Vec2S1_($P,$9,$10);
  $206=(+(HEAPF32[(($200)>>2)]));
  $207=(+(HEAPF32[(($119)>>2)]));
  $208=($206)*($207);
  $209=(($this+108)|0);
  $210=(+(HEAPF32[(($209)>>2)]));
  $211=($208)+($210);
  $212=(+(HEAPF32[(($197)>>2)]));
  $213=(+(HEAPF32[(($203)>>2)]));
  $214=($212)+($213);
  $215=(+(HEAPF32[(($98)>>2)]));
  $216=($214)*($215);
  $217=($211)+($216);
  $218=(+(HEAPF32[(($121)>>2)]));
  $219=($206)*($218);
  $220=($210)+($219);
  $221=(+(HEAPF32[(($100)>>2)]));
  $222=($214)*($221);
  $223=($220)+($222);
  __ZmlfRK6b2Vec2($11,$89,$P);
  __ZN6b2Vec2mIERKS_($tmpcast43,$11);
  $224=($91)*($217);
  $225=($69)-($224);
  __ZmlfRK6b2Vec2($12,$90,$P);
  __ZN6b2Vec2pLERKS_($tmpcast45,$12);
  $226=($92)*($223);
  $227=($86)+($226);
  $wA_0=$225;$wB_0=$227;


  $231=((HEAP32[(($17)>>2)])|0);
  $232=((HEAP32[(($61)>>2)])|0);
  $233=(($232+((($231)*(12))&-1))|0);
  $234=$233;
  $ld$32$0=(($vA)|0);
  $235$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($vA+4)|0);
  $235$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($234)|0);
  HEAP32[(($st$34$0)>>2)]=$235$0;
  $st$35$1=(($234+4)|0);
  HEAP32[(($st$35$1)>>2)]=$235$1;
  $236=((HEAP32[(($17)>>2)])|0);
  $237=((HEAP32[(($61)>>2)])|0);
  $238=(($237+((($236)*(12))&-1)+8)|0);
  HEAPF32[(($238)>>2)]=$wA_0;
  $239=((HEAP32[(($22)>>2)])|0);
  $240=((HEAP32[(($61)>>2)])|0);
  $241=(($240+((($239)*(12))&-1))|0);
  $242=$241;
  $ld$36$0=(($vB)|0);
  $243$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vB+4)|0);
  $243$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($242)|0);
  HEAP32[(($st$38$0)>>2)]=$243$0;
  $st$39$1=(($242+4)|0);
  HEAP32[(($st$39$1)>>2)]=$243$1;
  $244=((HEAP32[(($22)>>2)])|0);
  $245=((HEAP32[(($61)>>2)])|0);
  $246=(($245+((($244)*(12))&-1)+8)|0);
  HEAPF32[(($246)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast36=0,$1=0,$P=0,$2=0,$3=0,$Cdot1=0,$4=0,$5=0,$Cdot3=0,$f1=0,$df=0,$6=0,$b=0,$7=0,$8=0,$9=0,$f2r=0;
 var $10=0,$11=0,$12=0,$P4=0,$13=0,$14=0,$15=0,$16=0,$df7=0,$17=0,$P8=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$ld$0$0=0;
 var $26$0=0,$ld$1$1=0,$26$1=0,$st$2$0=0,$st$3$1=0,$27=0,$28=0,$29=0,$30=.0,$31=0,$32=0,$33=0,$34=0,$ld$4$0=0,$35$0=0,$ld$5$1=0,$35$1=0,$st$6$0=0,$st$7$1=0,$36=0;
 var $37=0,$38=0,$39=.0,$40=0,$41=.0,$42=0,$43=.0,$44=0,$45=.0,$46=0,$47=.0,$48=0,$49=0,$50=0,$52=0,$53=0,$54=0,$56=0,$57=.0,$58=0;
 var $59=.0,$60=.0,$61=.0,$62=0,$63=.0,$64=.0,$65=.0,$66=0,$67=.0,$68=0,$69=.0,$70=.0,$71=.0,$72=0,$73=.0,$74=0,$75=.0,$76=0,$77=.0,$78=.0;
 var $79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=.0,$wB_0=.0,$wA_0=.0,$92=0,$93=.0,$94=0,$95=.0,$96=.0,$97=.0;
 var $98=0,$99=.0,$100=.0,$101=.0,$102=0,$103=.0,$104=0,$105=0,$106=0,$107=0,$109=0,$110=0,$111=0,$113=0,$114=.0,$115=0,$116=.0,$117=.0,$118=.0,$119=0;
 var $120=.0,$121=.0,$122=.0,$123=.0,$124=.0,$125=0,$126=0,$127=0,$128=0,$129=0,$131=0,$132=.0,$133=.0,$135=0,$136=.0,$137=.0,$139=0,$140=.0,$141=0,$142=.0;
 var $143=.0,$144=0,$145=.0,$146=0,$147=.0,$148=0,$149=.0,$150=0,$151=.0,$152=0,$153=.0,$154=0,$155=0,$156=.0,$157=0,$158=0,$159=0,$160=0,$161=.0,$162=0;
 var $163=.0,$164=.0,$165=.0,$166=.0,$167=0,$168=.0,$169=.0,$170=.0,$171=.0,$172=.0,$173=.0,$174=.0,$175=.0,$176=.0,$177=.0,$178=.0,$179=.0,$181=0,$182=0,$183=.0;
 var $184=0,$185=.0,$186=.0,$187=0,$188=.0,$189=0,$190=.0,$191=.0,$192=.0,$193=.0,$194=.0,$195=.0,$196=.0,$197=.0,$198=.0,$199=.0,$200=.0,$_pn38=.0,$_pn39=.0,$_pn37=.0;
 var $_pn=.0,$wA_1=.0,$wB_1=.0,$202=0,$203=0,$204=0,$205=0,$ld$8$0=0,$206$0=0,$ld$9$1=0,$206$1=0,$st$10$0=0,$st$11$1=0,$207=0,$208=0,$209=0,$210=0,$211=0,$212=0,$213=0;
 var $ld$12$0=0,$214$0=0,$ld$13$1=0,$214$1=0,$st$14$0=0,$st$15$1=0,$215=0,$216=0,$217=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$vB;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot3=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $f1=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $df=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $6=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $b=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f2r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $P4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $df7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $19=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $20=(($this+144)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($data+32)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($23+((($21)*(12))&-1))|0);
 $25=$24;
 $ld$0$0=(($25)|0);
 $26$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($25+4)|0);
 $26$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$26$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$26$1;
 $27=((HEAP32[(($20)>>2)])|0);
 $28=((HEAP32[(($22)>>2)])|0);
 $29=(($28+((($27)*(12))&-1)+8)|0);
 $30=(+(HEAPF32[(($29)>>2)]));
 $31=(($this+148)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 $33=(($28+((($32)*(12))&-1))|0);
 $34=$33;
 $ld$4$0=(($34)|0);
 $35$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($34+4)|0);
 $35$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$35$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$35$1;
 $36=((HEAP32[(($31)>>2)])|0);
 $37=((HEAP32[(($22)>>2)])|0);
 $38=(($37+((($36)*(12))&-1)+8)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+168)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+172)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(($this+176)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 $46=(($this+180)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=(($this+137)|0);
 $49=((HEAP8[($48)])|0);
 $50=(($49<<24)>>24)==0;
 do {
  if ($50) {
   $wA_0=$30;$wB_0=$39;
  } else {
   $52=(($this+140)|0);
   $53=((HEAP32[(($52)>>2)])|0);
   $54=($53|0)==3;
   if ($54) {
    $wA_0=$30;$wB_0=$39;
    break;
   }
   $56=(($this+184)|0);
   __ZmiRK6b2Vec2S1_($1,$tmpcast36,$tmpcast);
   $57=(+(__Z5b2DotRK6b2Vec2S1_($56,$1)));
   $58=(($this+212)|0);
   $59=(+(HEAPF32[(($58)>>2)]));
   $60=($39)*($59);
   $61=($57)+($60);
   $62=(($this+208)|0);
   $63=(+(HEAPF32[(($62)>>2)]));
   $64=($30)*($63);
   $65=($61)-($64);
   $66=(($this+252)|0);
   $67=(+(HEAPF32[(($66)>>2)]));
   $68=(($this+132)|0);
   $69=(+(HEAPF32[(($68)>>2)]));
   $70=($69)-($65);
   $71=($67)*($70);
   $72=(($this+116)|0);
   $73=(+(HEAPF32[(($72)>>2)]));
   $74=(($data)|0);
   $75=(+(HEAPF32[(($74)>>2)]));
   $76=(($this+128)|0);
   $77=(+(HEAPF32[(($76)>>2)]));
   $78=($75)*($77);
   $79=($73)+($71);
   $80=((-.0))-($78);
   $81=(+(__Z7b2ClampIfET_S0_S0_S0_($79,$80,$78)));
   HEAPF32[(($72)>>2)]=$81;
   $82=($81)-($73);
   __ZmlfRK6b2Vec2($P,$82,$56);
   $83=(+(HEAPF32[(($62)>>2)]));
   $84=($82)*($83);
   $85=(+(HEAPF32[(($58)>>2)]));
   $86=($82)*($85);
   __ZmlfRK6b2Vec2($2,$41,$P);
   __ZN6b2Vec2mIERKS_($tmpcast,$2);
   $87=($45)*($84);
   $88=($30)-($87);
   __ZmlfRK6b2Vec2($3,$43,$P);
   __ZN6b2Vec2pLERKS_($tmpcast36,$3);
   $89=($47)*($86);
   $90=($39)+($89);
   $wA_0=$88;$wB_0=$90;
  }
 } while(0);


 $92=(($this+192)|0);
 __ZmiRK6b2Vec2S1_($4,$tmpcast36,$tmpcast);
 $93=(+(__Z5b2DotRK6b2Vec2S1_($92,$4)));
 $94=(($this+204)|0);
 $95=(+(HEAPF32[(($94)>>2)]));
 $96=($wB_0)*($95);
 $97=($93)+($96);
 $98=(($this+200)|0);
 $99=(+(HEAPF32[(($98)>>2)]));
 $100=($wA_0)*($99);
 $101=($97)-($100);
 $102=(($Cdot1)|0);
 HEAPF32[(($102)>>2)]=$101;
 $103=($wB_0)-($wA_0);
 $104=(($Cdot1+4)|0);
 HEAPF32[(($104)>>2)]=$103;
 $105=(($this+136)|0);
 $106=((HEAP8[($105)])|0);
 $107=(($106<<24)>>24)==0;
 do {
  if (!($107)) {
   $109=(($this+140)|0);
   $110=((HEAP32[(($109)>>2)])|0);
   $111=($110|0)==0;
   if ($111) {
    break;
   }
   $113=(($this+184)|0);
   __ZmiRK6b2Vec2S1_($5,$tmpcast36,$tmpcast);
   $114=(+(__Z5b2DotRK6b2Vec2S1_($113,$5)));
   $115=(($this+212)|0);
   $116=(+(HEAPF32[(($115)>>2)]));
   $117=($wB_0)*($116);
   $118=($114)+($117);
   $119=(($this+208)|0);
   $120=(+(HEAPF32[(($119)>>2)]));
   $121=($wA_0)*($120);
   $122=($118)-($121);
   $123=(+(HEAPF32[(($102)>>2)]));
   $124=(+(HEAPF32[(($104)>>2)]));
   __ZN6b2Vec3C1Efff($Cdot3,$123,$124,$122);
   $125=(($this+104)|0);
   $126=$f1;
   $127=$125;
   HEAP32[(($126)>>2)]=((HEAP32[(($127)>>2)])|0);HEAP32[((($126)+(4))>>2)]=((HEAP32[((($127)+(4))>>2)])|0);HEAP32[((($126)+(8))>>2)]=((HEAP32[((($127)+(8))>>2)])|0);
   $128=(($this+216)|0);
   __ZNK6b2Vec3ngEv($6,$Cdot3);
   __ZNK7b2Mat337Solve33ERK6b2Vec3($df,$128,$6);
   __ZN6b2Vec3pLERKS_($125,$df);
   $129=((HEAP32[(($109)>>2)])|0);
   if (((($129|0))|0)==((1)|0)) {
    $131=(($this+112)|0);
    $132=(+(HEAPF32[(($131)>>2)]));
    $133=(+(__Z5b2MaxIfET_S0_S0_($132,0.0)));
    HEAPF32[(($131)>>2)]=$133;
   } else if (((($129|0))|0)==((2)|0)) {
    $135=(($this+112)|0);
    $136=(+(HEAPF32[(($135)>>2)]));
    $137=(+(__Z5b2MinIfET_S0_S0_($136,0.0)));
    HEAPF32[(($135)>>2)]=$137;
   }
   __ZNK6b2Vec2ngEv($7,$Cdot1);
   $139=(($this+112)|0);
   $140=(+(HEAPF32[(($139)>>2)]));
   $141=(($f1+8)|0);
   $142=(+(HEAPF32[(($141)>>2)]));
   $143=($140)-($142);
   $144=(($this+240)|0);
   $145=(+(HEAPF32[(($144)>>2)]));
   $146=(($this+244)|0);
   $147=(+(HEAPF32[(($146)>>2)]));
   __ZN6b2Vec2C1Eff($9,$145,$147);
   __ZmlfRK6b2Vec2($8,$143,$9);
   __ZmiRK6b2Vec2S1_($b,$7,$8);
   __ZNK7b2Mat337Solve22ERK6b2Vec2($10,$128,$b);
   $148=(($f1)|0);
   $149=(+(HEAPF32[(($148)>>2)]));
   $150=(($f1+4)|0);
   $151=(+(HEAPF32[(($150)>>2)]));
   __ZN6b2Vec2C1Eff($11,$149,$151);
   __ZplRK6b2Vec2S1_($f2r,$10,$11);
   $152=(($f2r)|0);
   $153=(+(HEAPF32[(($152)>>2)]));
   $154=(($125)|0);
   HEAPF32[(($154)>>2)]=$153;
   $155=(($f2r+4)|0);
   $156=(+(HEAPF32[(($155)>>2)]));
   $157=(($this+108)|0);
   HEAPF32[(($157)>>2)]=$156;
   __ZmiRK6b2Vec3S1_($12,$125,$f1);
   $158=$df;
   $159=$12;
   HEAP32[(($158)>>2)]=((HEAP32[(($159)>>2)])|0);HEAP32[((($158)+(4))>>2)]=((HEAP32[((($159)+(4))>>2)])|0);HEAP32[((($158)+(8))>>2)]=((HEAP32[((($159)+(8))>>2)])|0);
   $160=(($df)|0);
   $161=(+(HEAPF32[(($160)>>2)]));
   __ZmlfRK6b2Vec2($13,$161,$92);
   $162=(($df+8)|0);
   $163=(+(HEAPF32[(($162)>>2)]));
   __ZmlfRK6b2Vec2($14,$163,$113);
   __ZplRK6b2Vec2S1_($P4,$13,$14);
   $164=(+(HEAPF32[(($160)>>2)]));
   $165=(+(HEAPF32[(($98)>>2)]));
   $166=($164)*($165);
   $167=(($df+4)|0);
   $168=(+(HEAPF32[(($167)>>2)]));
   $169=($166)+($168);
   $170=(+(HEAPF32[(($162)>>2)]));
   $171=(+(HEAPF32[(($119)>>2)]));
   $172=($170)*($171);
   $173=($169)+($172);
   $174=(+(HEAPF32[(($94)>>2)]));
   $175=($164)*($174);
   $176=($168)+($175);
   $177=(+(HEAPF32[(($115)>>2)]));
   $178=($170)*($177);
   $179=($176)+($178);
   __ZmlfRK6b2Vec2($15,$41,$P4);
   __ZN6b2Vec2mIERKS_($tmpcast,$15);
   __ZmlfRK6b2Vec2($16,$43,$P4);
   __ZN6b2Vec2pLERKS_($tmpcast36,$16);
   $_pn39=$173;$_pn38=$179;


   $_pn37=($45)*($_pn39);
   $_pn=($47)*($_pn38);
   $wA_1=($wA_0)-($_pn37);
   $wB_1=($wB_0)+($_pn);
   $202=((HEAP32[(($20)>>2)])|0);
   $203=((HEAP32[(($22)>>2)])|0);
   $204=(($203+((($202)*(12))&-1))|0);
   $205=$204;
   $ld$8$0=(($vA)|0);
   $206$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($vA+4)|0);
   $206$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($205)|0);
   HEAP32[(($st$10$0)>>2)]=$206$0;
   $st$11$1=(($205+4)|0);
   HEAP32[(($st$11$1)>>2)]=$206$1;
   $207=((HEAP32[(($20)>>2)])|0);
   $208=((HEAP32[(($22)>>2)])|0);
   $209=(($208+((($207)*(12))&-1)+8)|0);
   HEAPF32[(($209)>>2)]=$wA_1;
   $210=((HEAP32[(($31)>>2)])|0);
   $211=((HEAP32[(($22)>>2)])|0);
   $212=(($211+((($210)*(12))&-1))|0);
   $213=$212;
   $ld$12$0=(($vB)|0);
   $214$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($vB+4)|0);
   $214$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($213)|0);
   HEAP32[(($st$14$0)>>2)]=$214$0;
   $st$15$1=(($213+4)|0);
   HEAP32[(($st$15$1)>>2)]=$214$1;
   $215=((HEAP32[(($31)>>2)])|0);
   $216=((HEAP32[(($22)>>2)])|0);
   $217=(($216+((($215)*(12))&-1)+8)|0);
   HEAPF32[(($217)>>2)]=$wB_1;
   STACKTOP=sp;return;
  }
 } while(0);
 $181=(($this+216)|0);
 __ZNK6b2Vec2ngEv($17,$Cdot1);
 __ZNK7b2Mat337Solve22ERK6b2Vec2($df7,$181,$17);
 $182=(($df7)|0);
 $183=(+(HEAPF32[(($182)>>2)]));
 $184=(($this+104)|0);
 $185=(+(HEAPF32[(($184)>>2)]));
 $186=($183)+($185);
 HEAPF32[(($184)>>2)]=$186;
 $187=(($df7+4)|0);
 $188=(+(HEAPF32[(($187)>>2)]));
 $189=(($this+108)|0);
 $190=(+(HEAPF32[(($189)>>2)]));
 $191=($188)+($190);
 HEAPF32[(($189)>>2)]=$191;
 $192=(+(HEAPF32[(($182)>>2)]));
 __ZmlfRK6b2Vec2($P8,$192,$92);
 $193=(+(HEAPF32[(($182)>>2)]));
 $194=(+(HEAPF32[(($98)>>2)]));
 $195=($193)*($194);
 $196=(+(HEAPF32[(($187)>>2)]));
 $197=($195)+($196);
 $198=(+(HEAPF32[(($94)>>2)]));
 $199=($193)*($198);
 $200=($196)+($199);
 __ZmlfRK6b2Vec2($18,$41,$P8);
 __ZN6b2Vec2mIERKS_($tmpcast,$18);
 __ZmlfRK6b2Vec2($19,$43,$P8);
 __ZN6b2Vec2pLERKS_($tmpcast36,$19);
 $_pn39=$197;$_pn38=$200;


 $_pn37=($45)*($_pn39);
 $_pn=($47)*($_pn38);
 $wA_1=($wA_0)-($_pn37);
 $wB_1=($wB_0)+($_pn);
 $202=((HEAP32[(($20)>>2)])|0);
 $203=((HEAP32[(($22)>>2)])|0);
 $204=(($203+((($202)*(12))&-1))|0);
 $205=$204;
 $ld$8$0=(($vA)|0);
 $206$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $206$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($205)|0);
 HEAP32[(($st$10$0)>>2)]=$206$0;
 $st$11$1=(($205+4)|0);
 HEAP32[(($st$11$1)>>2)]=$206$1;
 $207=((HEAP32[(($20)>>2)])|0);
 $208=((HEAP32[(($22)>>2)])|0);
 $209=(($208+((($207)*(12))&-1)+8)|0);
 HEAPF32[(($209)>>2)]=$wA_1;
 $210=((HEAP32[(($31)>>2)])|0);
 $211=((HEAP32[(($22)>>2)])|0);
 $212=(($211+((($210)*(12))&-1))|0);
 $213=$212;
 $ld$12$0=(($vB)|0);
 $214$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $214$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($213)|0);
 HEAP32[(($st$14$0)>>2)]=$214$0;
 $st$15$1=(($213+4)|0);
 HEAP32[(($st$15$1)>>2)]=$214$1;
 $215=((HEAP32[(($31)>>2)])|0);
 $216=((HEAP32[(($22)>>2)])|0);
 $217=(($216+((($215)*(12))&-1)+8)|0);
 HEAPF32[(($217)>>2)]=$wB_1;
 STACKTOP=sp;return;
}


function __ZmiRK6b2Vec3S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=0,$12=.0,$13=0,$14=.0,$15=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)-($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)-($9);
 $11=(($a+8)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($b+8)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=($12)-($14);
 __ZN6b2Vec3C1Efff($agg_result,$5,$10,$15);
 return;
}


function __ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast67=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$d=0,$3=0,$4=0,$axis=0,$5=0,$perp=0,$6=0,$C1=0,$K=0,$C=0;
 var $7=0,$8=0,$K4=0,$impulse1=0,$9=0,$P=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$ld$0$0=0,$20$0=0,$ld$1$1=0,$20$1=0;
 var $st$2$0=0,$st$3$1=0,$21=0,$22=0,$23=0,$24=.0,$25=0,$26=0,$27=0,$28=0,$ld$4$0=0,$29$0=0,$ld$5$1=0,$29$1=0,$st$6$0=0,$st$7$1=0,$30=0,$31=0,$32=0,$33=.0;
 var $34=0,$35=.0,$36=0,$37=.0,$38=0,$39=.0,$40=0,$41=.0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=.0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=0;
 var $54=.0,$55=0,$56=.0,$57=.0,$58=0,$59=.0,$60=.0,$61=.0,$62=0,$63=0,$64=0,$66=.0,$67=0,$68=.0,$69=0,$70=.0,$71=.0,$72=.0,$73=0,$75=.0;
 var $76=.0,$77=.0,$79=0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0,$87=0,$89=.0,$90=.0,$91=.0,$92=.0,$C2_0=.0,$active_0_off0=0,$linearError_0=.0,$94=.0,$95=.0,$96=.0,$97=.0;
 var $98=.0,$99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=0,$k22_0=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=0,$116=0,$117=0;
 var $118=.0,$119=0,$120=.0,$121=0,$122=0,$impulse_sroa_0_0__idx=0,$impulse_sroa_0_0_copyload=.0,$impulse_sroa_1_4__idx69=0,$impulse_sroa_1_4_copyload=.0,$impulse_sroa_2_8__idx71=0,$impulse_sroa_2_8_copyload=.0,$124=.0,$125=0,$k223_0=.0,$126=0,$127=0,$128=0,$129=.0,$130=0,$131=.0;
 var $impulse_sroa_2_8_copyload74=.0,$impulse_sroa_1_4_copyload73=.0,$impulse_sroa_0_0_copyload72=.0,$133=.0,$134=.0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$ld$8$0=0;
 var $149$0=0,$ld$9$1=0,$149$1=0,$st$10$0=0,$st$11$1=0,$150=0,$151=0,$152=0,$153=0,$154=0,$155=0,$156=0,$ld$12$0=0,$157$0=0,$ld$13$1=0,$157$1=0,$st$14$0=0,$st$15$1=0,$158=0,$159=0;
 var $160=0,$161=0,$163=0,$165=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast67=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $axis=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $perp=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $C1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 36)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $C=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $7=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $8=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $K4=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $impulse1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=(($this+144)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=(($data+28)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=(($17+((($15)*(12))&-1))|0);
 $19=$18;
 $ld$0$0=(($19)|0);
 $20$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($19+4)|0);
 $20$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$20$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$20$1;
 $21=((HEAP32[(($14)>>2)])|0);
 $22=((HEAP32[(($16)>>2)])|0);
 $23=(($22+((($21)*(12))&-1)+8)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(($this+148)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=(($22+((($26)*(12))&-1))|0);
 $28=$27;
 $ld$4$0=(($28)|0);
 $29$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($28+4)|0);
 $29$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$29$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$29$1;
 $30=((HEAP32[(($25)>>2)])|0);
 $31=((HEAP32[(($16)>>2)])|0);
 $32=(($31+((($30)*(12))&-1)+8)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 __ZN5b2RotC1Ef($qA,$24);
 __ZN5b2RotC1Ef($qB,$33);
 $34=(($this+168)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+172)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+176)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+180)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+68)|0);
 $43=(($this+152)|0);
 __ZmiRK6b2Vec2S1_($1,$42,$43);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $44=(($this+76)|0);
 $45=(($this+160)|0);
 __ZmiRK6b2Vec2S1_($2,$44,$45);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast67,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($d,$3,$rA);
 $46=(($this+84)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($axis,$qA,$46);
 __ZplRK6b2Vec2S1_($5,$d,$rA);
 $47=(+(__Z7b2CrossRK6b2Vec2S1_($5,$axis)));
 $48=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$axis)));
 $49=(($this+92)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($perp,$qA,$49);
 __ZplRK6b2Vec2S1_($6,$d,$rA);
 $50=(+(__Z7b2CrossRK6b2Vec2S1_($6,$perp)));
 $51=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$perp)));
 $52=(+(__Z5b2DotRK6b2Vec2S1_($perp,$d)));
 $53=(($C1)|0);
 HEAPF32[(($53)>>2)]=$52;
 $54=($33)-($24);
 $55=(($this+100)|0);
 $56=(+(HEAPF32[(($55)>>2)]));
 $57=($54)-($56);
 $58=(($C1+4)|0);
 HEAPF32[(($58)>>2)]=$57;
 $59=(+(HEAPF32[(($53)>>2)]));
 $60=(+(__Z5b2AbsIfET_S0_($59)));
 $61=(+(__Z5b2AbsIfET_S0_($57)));
 $62=(($this+136)|0);
 $63=((HEAP8[($62)])|0);
 $64=(($63<<24)>>24)==0;
 do {
  if ($64) {
   $linearError_0=$60;$active_0_off0=0;$C2_0=0.0;
  } else {
   $66=(+(__Z5b2DotRK6b2Vec2S1_($axis,$d)));
   $67=(($this+124)|0);
   $68=(+(HEAPF32[(($67)>>2)]));
   $69=(($this+120)|0);
   $70=(+(HEAPF32[(($69)>>2)]));
   $71=($68)-($70);
   $72=(+(__Z5b2AbsIfET_S0_($71)));
   $73=$72<(0.009999999776482582);
   if ($73) {
    $75=(+(__Z7b2ClampIfET_S0_S0_S0_($66,-0.20000000298023224,0.20000000298023224)));
    $76=(+(__Z5b2AbsIfET_S0_($66)));
    $77=(+(__Z5b2MaxIfET_S0_S0_($60,$76)));
    $linearError_0=$77;$active_0_off0=1;$C2_0=$75;
    break;
   }
   $79=$66>$70;
   if (!($79)) {
    $81=($66)-($70);
    $82=($81)+((0.004999999888241291));
    $83=(+(__Z7b2ClampIfET_S0_S0_S0_($82,-0.20000000298023224,0.0)));
    $84=($70)-($66);
    $85=(+(__Z5b2MaxIfET_S0_S0_($60,$84)));
    $linearError_0=$85;$active_0_off0=1;$C2_0=$83;
    break;
   }
   $87=$66<$68;
   if ($87) {
    $linearError_0=$60;$active_0_off0=0;$C2_0=0.0;
    break;
   }
   $89=($66)-($68);
   $90=($89)+((-0.004999999888241291));
   $91=(+(__Z7b2ClampIfET_S0_S0_S0_($90,0.0,0.20000000298023224)));
   $92=(+(__Z5b2MaxIfET_S0_S0_($60,$89)));
   $linearError_0=$92;$active_0_off0=1;$C2_0=$91;
  }
 } while(0);



 $94=($35)+($37);
 $95=($39)*($50);
 $96=($50)*($95);
 $97=($94)+($96);
 $98=($41)*($51);
 $99=($51)*($98);
 $100=($97)+($99);
 $101=($95)+($98);
 if ($active_0_off0) {
  $103=($47)*($95);
  $104=($48)*($98);
  $105=($103)+($104);
  $106=($39)+($41);
  $107=$106==(0.0);
  $k22_0=($107?(1.0):$106);
  $108=($39)*($47);
  $109=($41)*($48);
  $110=($108)+($109);
  $111=($47)*($108);
  $112=($94)+($111);
  $113=($48)*($109);
  $114=($112)+($113);
  $115=(($K)|0);
  __ZN6b2Vec33SetEfff($115,$100,$101,$105);
  $116=(($K+12)|0);
  __ZN6b2Vec33SetEfff($116,$101,$k22_0,$110);
  $117=(($K+24)|0);
  __ZN6b2Vec33SetEfff($117,$105,$110,$114);
  $118=(+(HEAPF32[(($53)>>2)]));
  $119=(($C)|0);
  HEAPF32[(($119)>>2)]=$118;
  $120=(+(HEAPF32[(($58)>>2)]));
  $121=(($C+4)|0);
  HEAPF32[(($121)>>2)]=$120;
  $122=(($C+8)|0);
  HEAPF32[(($122)>>2)]=$C2_0;
  __ZNK6b2Vec3ngEv($8,$C);
  __ZNK7b2Mat337Solve33ERK6b2Vec3($7,$K,$8);
  $impulse_sroa_0_0__idx=(($7)|0);
  $impulse_sroa_0_0_copyload=(+(HEAPF32[(($impulse_sroa_0_0__idx)>>2)]));
  $impulse_sroa_1_4__idx69=(($7+4)|0);
  $impulse_sroa_1_4_copyload=(+(HEAPF32[(($impulse_sroa_1_4__idx69)>>2)]));
  $impulse_sroa_2_8__idx71=(($7+8)|0);
  $impulse_sroa_2_8_copyload=(+(HEAPF32[(($impulse_sroa_2_8__idx71)>>2)]));
  $impulse_sroa_0_0_copyload72=$impulse_sroa_0_0_copyload;$impulse_sroa_1_4_copyload73=$impulse_sroa_1_4_copyload;$impulse_sroa_2_8_copyload74=$impulse_sroa_2_8_copyload;
 } else {
  $124=($39)+($41);
  $125=$124==(0.0);
  $k223_0=($125?(1.0):$124);
  $126=(($K4)|0);
  __ZN6b2Vec23SetEff($126,$100,$101);
  $127=(($K4+8)|0);
  __ZN6b2Vec23SetEff($127,$101,$k223_0);
  __ZNK6b2Vec2ngEv($9,$C1);
  __ZNK7b2Mat225SolveERK6b2Vec2($impulse1,$K4,$9);
  $128=(($impulse1)|0);
  $129=(+(HEAPF32[(($128)>>2)]));
  $130=(($impulse1+4)|0);
  $131=(+(HEAPF32[(($130)>>2)]));
  $impulse_sroa_0_0_copyload72=$129;$impulse_sroa_1_4_copyload73=$131;$impulse_sroa_2_8_copyload74=0.0;
 }



 __ZmlfRK6b2Vec2($10,$impulse_sroa_0_0_copyload72,$perp);
 __ZmlfRK6b2Vec2($11,$impulse_sroa_2_8_copyload74,$axis);
 __ZplRK6b2Vec2S1_($P,$10,$11);
 $133=($50)*($impulse_sroa_0_0_copyload72);
 $134=($impulse_sroa_1_4_copyload73)+($133);
 $135=($47)*($impulse_sroa_2_8_copyload74);
 $136=($135)+($134);
 $137=($51)*($impulse_sroa_0_0_copyload72);
 $138=($impulse_sroa_1_4_copyload73)+($137);
 $139=($48)*($impulse_sroa_2_8_copyload74);
 $140=($139)+($138);
 __ZmlfRK6b2Vec2($12,$35,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$12);
 $141=($39)*($136);
 $142=($24)-($141);
 __ZmlfRK6b2Vec2($13,$37,$P);
 __ZN6b2Vec2pLERKS_($tmpcast67,$13);
 $143=($41)*($140);
 $144=($33)+($143);
 $145=((HEAP32[(($14)>>2)])|0);
 $146=((HEAP32[(($16)>>2)])|0);
 $147=(($146+((($145)*(12))&-1))|0);
 $148=$147;
 $ld$8$0=(($cA)|0);
 $149$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $149$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($148)|0);
 HEAP32[(($st$10$0)>>2)]=$149$0;
 $st$11$1=(($148+4)|0);
 HEAP32[(($st$11$1)>>2)]=$149$1;
 $150=((HEAP32[(($14)>>2)])|0);
 $151=((HEAP32[(($16)>>2)])|0);
 $152=(($151+((($150)*(12))&-1)+8)|0);
 HEAPF32[(($152)>>2)]=$142;
 $153=((HEAP32[(($25)>>2)])|0);
 $154=((HEAP32[(($16)>>2)])|0);
 $155=(($154+((($153)*(12))&-1))|0);
 $156=$155;
 $ld$12$0=(($cB)|0);
 $157$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $157$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($156)|0);
 HEAP32[(($st$14$0)>>2)]=$157$0;
 $st$15$1=(($156+4)|0);
 HEAP32[(($st$15$1)>>2)]=$157$1;
 $158=((HEAP32[(($25)>>2)])|0);
 $159=((HEAP32[(($16)>>2)])|0);
 $160=(($159+((($158)*(12))&-1)+8)|0);
 HEAPF32[(($160)>>2)]=$144;
 $161=$linearError_0>(0.004999999888241291);
 if ($161) {
  $165=0;

  STACKTOP=sp;return (($165)|0);
 }
 $163=$61<=(0.03490658849477768);
 $165=$163;

 STACKTOP=sp;return (($165)|0);
}


function __ZNK7b2Mat225SolveERK6b2Vec2($agg_result,$this,$b){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=.0,$12=0,$14=.0,$det_0=.0,$16=0,$17=.0,$18=.0,$19=0,$20=.0,$21=.0;
 var $22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=.0,$28=.0,$29=.0,$30=.0,$31=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+8)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+12)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($2)*($8);
 $10=($4)*($6);
 $11=($9)-($10);
 $12=$11!=(0.0);
 if ($12) {
  $14=((1.0))/($11);
  $det_0=$14;
 } else {
  $det_0=$11;
 }

 $16=(($b)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=($8)*($17);
 $19=(($b+4)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=($4)*($20);
 $22=($18)-($21);
 $23=($det_0)*($22);
 $24=(($agg_result)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=(+(HEAPF32[(($19)>>2)]));
 $26=($2)*($25);
 $27=(+(HEAPF32[(($16)>>2)]));
 $28=($6)*($27);
 $29=($26)-($28);
 $30=($det_0)*($29);
 $31=(($agg_result+4)|0);
 HEAPF32[(($31)>>2)]=$30;
 return;
}


function __ZNK16b2PrismaticJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK16b2PrismaticJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK16b2PrismaticJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=.0,$12=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(($this+104)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($this+192)|0);
 __ZmlfRK6b2Vec2($2,$5,$6);
 $7=(($this+116)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($this+112)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=($8)+($10);
 $12=(($this+184)|0);
 __ZmlfRK6b2Vec2($3,$11,$12);
 __ZplRK6b2Vec2S1_($1,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$1);
 STACKTOP=sp;return;
}


function __ZNK16b2PrismaticJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+108)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN16b2PrismaticJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=0,$35=0,$36=0,$37=.0,$38=.0,$39=0,$40=.0;
 var $41=.0,$42=0,$43=0,$44=0,$45=0,$46=.0,$47=.0,$48=0,$49=.0,$50=.0,$51=0,$52=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3152,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3632,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2808,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2440,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(1992,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1528,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+84)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 $27=(($this+88)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(1152,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$26,HEAPF64[(((tempVarArgs)+(8))>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+100)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 __Z5b2LogPKcz(792,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+136)|0);
 $34=((HEAP8[($33)])|0);
 $35=($34&255);
 __Z5b2LogPKcz(448,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$35,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $36=(($this+120)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=$37;
 __Z5b2LogPKcz(168,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$38,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $39=(($this+124)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=$40;
 __Z5b2LogPKcz(4080,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$41,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $42=(($this+137)|0);
 $43=((HEAP8[($42)])|0);
 $44=($43&255);
 __Z5b2LogPKcz(3904,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$44,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $45=(($this+132)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=$46;
 __Z5b2LogPKcz(3504,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$47,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $48=(($this+128)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=$49;
 __Z5b2LogPKcz(3328,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$50,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $51=(($this+56)|0);
 $52=((HEAP32[(($51)>>2)])|0);
 __Z5b2LogPKcz(3208,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$52,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN16b2PrismaticJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN16b2PrismaticJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN11b2RopeJointC2EPK14b2RopeJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0,$ld$4$0=0,$13$0=0,$ld$5$1=0;
 var $13$1=0,$st$6$0=0,$st$7$1=0,$14=0,$15=.0,$16=0,$17=0,$18=0,$19=0,$20=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=5864;
 $4=(($this+68)|0);
 $5=(($this+76)|0);
 $6=(($def+20)|0);
 $7=$6;
 $8=$4;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($def+28)|0);
 $11=$10;
 $12=$5;
 $ld$4$0=(($11)|0);
 $13$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($11+4)|0);
 $13$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($12)|0);
 HEAP32[(($st$6$0)>>2)]=$13$0;
 $st$7$1=(($12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$13$1;
 $14=(($def+36)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($this+84)|0);
 HEAPF32[(($16)>>2)]=$15;
 $17=(($this+160)|0);
 HEAPF32[(($17)>>2)]=0.0;
 $18=(($this+92)|0);
 HEAPF32[(($18)>>2)]=0.0;
 $19=(($this+164)|0);
 HEAP32[(($19)>>2)]=0;
 $20=(($this+88)|0);
 HEAPF32[(($20)>>2)]=0.0;
 return;
}


function __ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast20=0,$cB=0,$tmpcast21=0,$vB=0,$tmpcast22=0,$qA=0,$qB=0,$1=0,$tmpcast23=0,$2=0,$3=0,$tmpcast24=0,$4=0,$5=0,$tmpcast25=0,$6=0,$7=0;
 var $P=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$ld$0$0=0,$25$0=0;
 var $ld$1$1=0,$25$1=0,$st$2$0=0,$st$3$1=0,$26=0,$27=0,$28=0,$29=0,$30=0,$ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$32=0,$33=0,$34=.0,$35=0,$36=0;
 var $37=0,$38=.0,$39=0,$40=0,$41=0,$42=.0,$43=0,$44=0,$45=0,$46=.0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$ld$8$0=0,$53$0=0,$ld$9$1=0,$53$1=0;
 var $st$10$0=0,$st$11$1=0,$54=0,$55=0,$56=0,$57=.0,$58=0,$59=0,$60=0,$61=0,$ld$12$0=0,$62$0=0,$ld$13$1=0,$62$1=0,$st$14$0=0,$st$15$1=0,$63=0,$64=0,$65=0,$66=.0;
 var $67=0,$68=0,$69=0,$70=0,$ld$16$0=0,$71$0=0,$ld$17$1=0,$71$1=0,$st$18$0=0,$st$19$1=0,$72=0,$73=0,$74=0,$75=.0,$76=0,$77=0,$78=0,$ld$20$0=0,$79$0=0,$ld$21$1=0;
 var $79$1=0,$st$22$0=0,$st$23$1=0,$80=0,$81=0,$82=0,$83=.0,$84=0,$85=0,$86=0,$ld$24$0=0,$87$0=0,$ld$25$1=0,$87$1=0,$st$26$0=0,$st$27$1=0,$88=0,$89=0,$90=0,$ld$28$0=0;
 var $91$0=0,$ld$29$1=0,$91$1=0,$st$30$0=0,$st$31$1=0,$92=0,$93=0,$ld$32$0=0,$94$0=0,$ld$33$1=0,$94$1=0,$st$34$0=0,$st$35$1=0,$95=.0,$96=0,$97=0,$98=.0,$99=.0,$100=0,$101=0;
 var $_=0,$102=.0,$103=0,$105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=.0,$118=.0,$119=0,$121=0,$122=0;
 var $124=.0,$126=.0,$127=0,$128=0,$129=0,$130=0,$132=0,$133=.0,$134=0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=.0,$143=.0,$144=.0,$145=.0;
 var $146=.0,$148=0,$wB_0=.0,$wA_0=.0,$150=0,$151=0,$152=0,$153=0,$ld$36$0=0,$154$0=0,$ld$37$1=0,$154$1=0,$st$38$0=0,$st$39$1=0,$155=0,$156=0,$157=0,$158=0,$159=0,$160=0;
 var $161=0,$ld$40$0=0,$162$0=0,$ld$41$1=0,$162$1=0,$st$42$0=0,$st$43$1=0,$163=0,$164=0,$165=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast20=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast21=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast22=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast23=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast24=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast25=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($this+48)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+8)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($this+96)|0);
 HEAP32[(($14)>>2)]=$13;
 $15=(($this+52)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($16+8)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($this+100)|0);
 HEAP32[(($19)>>2)]=$18;
 $20=(($this+128)|0);
 $21=((HEAP32[(($10)>>2)])|0);
 $22=(($21+44)|0);
 $23=$22;
 $24=$20;
 $ld$0$0=(($23)|0);
 $25$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($23+4)|0);
 $25$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($24)|0);
 HEAP32[(($st$2$0)>>2)]=$25$0;
 $st$3$1=(($24+4)|0);
 HEAP32[(($st$3$1)>>2)]=$25$1;
 $26=(($this+136)|0);
 $27=((HEAP32[(($15)>>2)])|0);
 $28=(($27+44)|0);
 $29=$28;
 $30=$26;
 $ld$4$0=(($29)|0);
 $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($30)|0);
 HEAP32[(($st$6$0)>>2)]=$31$0;
 $st$7$1=(($30+4)|0);
 HEAP32[(($st$7$1)>>2)]=$31$1;
 $32=((HEAP32[(($10)>>2)])|0);
 $33=(($32+136)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+144)|0);
 HEAPF32[(($35)>>2)]=$34;
 $36=((HEAP32[(($15)>>2)])|0);
 $37=(($36+136)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=(($this+148)|0);
 HEAPF32[(($39)>>2)]=$38;
 $40=((HEAP32[(($10)>>2)])|0);
 $41=(($40+144)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+152)|0);
 HEAPF32[(($43)>>2)]=$42;
 $44=((HEAP32[(($15)>>2)])|0);
 $45=(($44+144)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=(($this+156)|0);
 HEAPF32[(($47)>>2)]=$46;
 $48=((HEAP32[(($14)>>2)])|0);
 $49=(($data+28)|0);
 $50=((HEAP32[(($49)>>2)])|0);
 $51=(($50+((($48)*(12))&-1))|0);
 $52=$51;
 $ld$8$0=(($52)|0);
 $53$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($52+4)|0);
 $53$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$53$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$53$1;
 $54=((HEAP32[(($14)>>2)])|0);
 $55=((HEAP32[(($49)>>2)])|0);
 $56=(($55+((($54)*(12))&-1)+8)|0);
 $57=(+(HEAPF32[(($56)>>2)]));
 $58=(($data+32)|0);
 $59=((HEAP32[(($58)>>2)])|0);
 $60=(($59+((($54)*(12))&-1))|0);
 $61=$60;
 $ld$12$0=(($61)|0);
 $62$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($61+4)|0);
 $62$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$62$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$62$1;
 $63=((HEAP32[(($14)>>2)])|0);
 $64=((HEAP32[(($58)>>2)])|0);
 $65=(($64+((($63)*(12))&-1)+8)|0);
 $66=(+(HEAPF32[(($65)>>2)]));
 $67=((HEAP32[(($19)>>2)])|0);
 $68=((HEAP32[(($49)>>2)])|0);
 $69=(($68+((($67)*(12))&-1))|0);
 $70=$69;
 $ld$16$0=(($70)|0);
 $71$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($70+4)|0);
 $71$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$71$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$71$1;
 $72=((HEAP32[(($19)>>2)])|0);
 $73=((HEAP32[(($49)>>2)])|0);
 $74=(($73+((($72)*(12))&-1)+8)|0);
 $75=(+(HEAPF32[(($74)>>2)]));
 $76=((HEAP32[(($58)>>2)])|0);
 $77=(($76+((($72)*(12))&-1))|0);
 $78=$77;
 $ld$20$0=(($78)|0);
 $79$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($78+4)|0);
 $79$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$79$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$79$1;
 $80=((HEAP32[(($19)>>2)])|0);
 $81=((HEAP32[(($58)>>2)])|0);
 $82=(($81+((($80)*(12))&-1)+8)|0);
 $83=(+(HEAPF32[(($82)>>2)]));
 __ZN5b2RotC1Ef($qA,$57);
 __ZN5b2RotC1Ef($qB,$75);
 $84=(($this+112)|0);
 $85=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($2,$85,$20);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast23,$qA,$2);
 $86=$84;
 $ld$24$0=(($1)|0);
 $87$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($1+4)|0);
 $87$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($86)|0);
 HEAP32[(($st$26$0)>>2)]=$87$0;
 $st$27$1=(($86+4)|0);
 HEAP32[(($st$27$1)>>2)]=$87$1;
 $88=(($this+120)|0);
 $89=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($4,$89,$26);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast24,$qB,$4);
 $90=$88;
 $ld$28$0=(($3)|0);
 $91$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($3+4)|0);
 $91$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($90)|0);
 HEAP32[(($st$30$0)>>2)]=$91$0;
 $st$31$1=(($90+4)|0);
 HEAP32[(($st$31$1)>>2)]=$91$1;
 $92=(($this+104)|0);
 __ZplRK6b2Vec2S1_($7,$tmpcast21,$88);
 __ZmiRK6b2Vec2S1_($6,$7,$tmpcast);
 __ZmiRK6b2Vec2S1_($tmpcast25,$6,$84);
 $93=$92;
 $ld$32$0=(($5)|0);
 $94$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($5+4)|0);
 $94$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($93)|0);
 HEAP32[(($st$34$0)>>2)]=$94$0;
 $st$35$1=(($93+4)|0);
 HEAP32[(($st$35$1)>>2)]=$94$1;
 $95=(+(__ZNK6b2Vec26LengthEv($92)));
 $96=(($this+88)|0);
 HEAPF32[(($96)>>2)]=$95;
 $97=(($this+84)|0);
 $98=(+(HEAPF32[(($97)>>2)]));
 $99=($95)-($98);
 $100=$99>(0.0);
 $101=(($this+164)|0);
 $_=($100?2:0);
 HEAP32[(($101)>>2)]=$_;
 $102=(+(HEAPF32[(($96)>>2)]));
 $103=$102>(0.004999999888241291);
 if (!($103)) {
  __ZN6b2Vec27SetZeroEv($92);
  $121=(($this+160)|0);
  HEAPF32[(($121)>>2)]=0.0;
  $122=(($this+92)|0);
  HEAPF32[(($122)>>2)]=0.0;
  STACKTOP=sp;return;
 }
 $105=((1.0))/($102);
 __ZN6b2Vec2mLEf($92,$105);
 $106=(+(__Z7b2CrossRK6b2Vec2S1_($84,$92)));
 $107=(+(__Z7b2CrossRK6b2Vec2S1_($88,$92)));
 $108=(+(HEAPF32[(($35)>>2)]));
 $109=(+(HEAPF32[(($43)>>2)]));
 $110=($106)*($109);
 $111=($106)*($110);
 $112=($108)+($111);
 $113=(+(HEAPF32[(($39)>>2)]));
 $114=($113)+($112);
 $115=(+(HEAPF32[(($47)>>2)]));
 $116=($107)*($115);
 $117=($107)*($116);
 $118=($114)+($117);
 $119=$118!=(0.0);
 if ($119) {
  $124=((1.0))/($118);
  $126=$124;
 } else {
  $126=0.0;
 }

 $127=(($this+160)|0);
 HEAPF32[(($127)>>2)]=$126;
 $128=(($data+24)|0);
 $129=((HEAP8[($128)])|0);
 $130=(($129<<24)>>24)==0;
 if ($130) {
  $148=(($this+92)|0);
  HEAPF32[(($148)>>2)]=0.0;
  $wA_0=$66;$wB_0=$83;
 } else {
  $132=(($data+8)|0);
  $133=(+(HEAPF32[(($132)>>2)]));
  $134=(($this+92)|0);
  $135=(+(HEAPF32[(($134)>>2)]));
  $136=($133)*($135);
  HEAPF32[(($134)>>2)]=$136;
  __ZmlfRK6b2Vec2($P,$136,$92);
  $137=(+(HEAPF32[(($35)>>2)]));
  __ZmlfRK6b2Vec2($8,$137,$P);
  __ZN6b2Vec2mIERKS_($tmpcast20,$8);
  $138=(+(HEAPF32[(($43)>>2)]));
  $139=(+(__Z7b2CrossRK6b2Vec2S1_($84,$P)));
  $140=($138)*($139);
  $141=($66)-($140);
  $142=(+(HEAPF32[(($39)>>2)]));
  __ZmlfRK6b2Vec2($9,$142,$P);
  __ZN6b2Vec2pLERKS_($tmpcast22,$9);
  $143=(+(HEAPF32[(($47)>>2)]));
  $144=(+(__Z7b2CrossRK6b2Vec2S1_($88,$P)));
  $145=($143)*($144);
  $146=($83)+($145);
  $wA_0=$141;$wB_0=$146;
 }


 $150=((HEAP32[(($14)>>2)])|0);
 $151=((HEAP32[(($58)>>2)])|0);
 $152=(($151+((($150)*(12))&-1))|0);
 $153=$152;
 $ld$36$0=(($vA)|0);
 $154$0=((HEAP32[(($ld$36$0)>>2)])|0);
 $ld$37$1=(($vA+4)|0);
 $154$1=((HEAP32[(($ld$37$1)>>2)])|0);
 $st$38$0=(($153)|0);
 HEAP32[(($st$38$0)>>2)]=$154$0;
 $st$39$1=(($153+4)|0);
 HEAP32[(($st$39$1)>>2)]=$154$1;
 $155=((HEAP32[(($14)>>2)])|0);
 $156=((HEAP32[(($58)>>2)])|0);
 $157=(($156+((($155)*(12))&-1)+8)|0);
 HEAPF32[(($157)>>2)]=$wA_0;
 $158=((HEAP32[(($19)>>2)])|0);
 $159=((HEAP32[(($58)>>2)])|0);
 $160=(($159+((($158)*(12))&-1))|0);
 $161=$160;
 $ld$40$0=(($vB)|0);
 $162$0=((HEAP32[(($ld$40$0)>>2)])|0);
 $ld$41$1=(($vB+4)|0);
 $162$1=((HEAP32[(($ld$41$1)>>2)])|0);
 $st$42$0=(($161)|0);
 HEAP32[(($st$42$0)>>2)]=$162$0;
 $st$43$1=(($161+4)|0);
 HEAP32[(($st$43$1)>>2)]=$162$1;
 $163=((HEAP32[(($19)>>2)])|0);
 $164=((HEAP32[(($58)>>2)])|0);
 $165=(($164+((($163)*(12))&-1)+8)|0);
 HEAPF32[(($165)>>2)]=$wB_0;
 STACKTOP=sp;return;
}


function __ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast17=0,$vpA=0,$1=0,$vpB=0,$2=0,$3=0,$P=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0;
 var $ld$1$1=0,$12$1=0,$st$2$0=0,$st$3$1=0,$13=0,$14=0,$15=0,$16=.0,$17=0,$18=0,$19=0,$20=0,$ld$4$0=0,$21$0=0,$ld$5$1=0,$21$1=0,$st$6$0=0,$st$7$1=0,$22=0,$23=0;
 var $24=0,$25=.0,$26=0,$27=0,$28=0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=.0,$35=0,$37=0,$38=.0,$39=.0,$40=.0,$Cdot_0=.0,$42=0,$43=.0,$44=.0;
 var $45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=.0,$56=.0,$57=.0,$58=0,$59=.0,$60=0,$61=.0,$62=.0,$63=.0,$64=.0;
 var $65=0,$66=0,$67=0,$68=0,$ld$8$0=0,$69$0=0,$ld$9$1=0,$69$1=0,$st$10$0=0,$st$11$1=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$ld$12$0=0,$77$0=0,$ld$13$1=0;
 var $77$1=0,$st$14$0=0,$st$15$1=0,$78=0,$79=0,$80=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast17=$vB;
 $vpA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $vpB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=(($this+96)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($data+32)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+((($7)*(12))&-1))|0);
 $11=$10;
 $ld$0$0=(($11)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($11+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$12$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$12$1;
 $13=((HEAP32[(($6)>>2)])|0);
 $14=((HEAP32[(($8)>>2)])|0);
 $15=(($14+((($13)*(12))&-1)+8)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(($this+100)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($14+((($18)*(12))&-1))|0);
 $20=$19;
 $ld$4$0=(($20)|0);
 $21$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$21$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$21$1;
 $22=((HEAP32[(($17)>>2)])|0);
 $23=((HEAP32[(($8)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+112)|0);
 __Z7b2CrossfRK6b2Vec2($1,$16,$26);
 __ZplRK6b2Vec2S1_($vpA,$tmpcast,$1);
 $27=(($this+120)|0);
 __Z7b2CrossfRK6b2Vec2($2,$25,$27);
 __ZplRK6b2Vec2S1_($vpB,$tmpcast17,$2);
 $28=(($this+88)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=(($this+84)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=($29)-($31);
 $33=(($this+104)|0);
 __ZmiRK6b2Vec2S1_($3,$vpB,$vpA);
 $34=(+(__Z5b2DotRK6b2Vec2S1_($33,$3)));
 $35=$32<(0.0);
 if ($35) {
  $37=(($data+4)|0);
  $38=(+(HEAPF32[(($37)>>2)]));
  $39=($32)*($38);
  $40=($34)+($39);
  $Cdot_0=$40;
 } else {
  $Cdot_0=$34;
 }

 $42=(($this+160)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=((-.0))-($43);
 $45=($Cdot_0)*($44);
 $46=(($this+92)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=($47)+($45);
 $49=(+(__Z5b2MinIfET_S0_S0_(0.0,$48)));
 HEAPF32[(($46)>>2)]=$49;
 $50=($49)-($47);
 __ZmlfRK6b2Vec2($P,$50,$33);
 $51=(($this+144)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 __ZmlfRK6b2Vec2($4,$52,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$4);
 $53=(($this+152)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=(+(__Z7b2CrossRK6b2Vec2S1_($26,$P)));
 $56=($54)*($55);
 $57=($16)-($56);
 $58=(($this+148)|0);
 $59=(+(HEAPF32[(($58)>>2)]));
 __ZmlfRK6b2Vec2($5,$59,$P);
 __ZN6b2Vec2pLERKS_($tmpcast17,$5);
 $60=(($this+156)|0);
 $61=(+(HEAPF32[(($60)>>2)]));
 $62=(+(__Z7b2CrossRK6b2Vec2S1_($27,$P)));
 $63=($61)*($62);
 $64=($25)+($63);
 $65=((HEAP32[(($6)>>2)])|0);
 $66=((HEAP32[(($8)>>2)])|0);
 $67=(($66+((($65)*(12))&-1))|0);
 $68=$67;
 $ld$8$0=(($vA)|0);
 $69$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $69$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($68)|0);
 HEAP32[(($st$10$0)>>2)]=$69$0;
 $st$11$1=(($68+4)|0);
 HEAP32[(($st$11$1)>>2)]=$69$1;
 $70=((HEAP32[(($6)>>2)])|0);
 $71=((HEAP32[(($8)>>2)])|0);
 $72=(($71+((($70)*(12))&-1)+8)|0);
 HEAPF32[(($72)>>2)]=$57;
 $73=((HEAP32[(($17)>>2)])|0);
 $74=((HEAP32[(($8)>>2)])|0);
 $75=(($74+((($73)*(12))&-1))|0);
 $76=$75;
 $ld$12$0=(($vB)|0);
 $77$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $77$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($76)|0);
 HEAP32[(($st$14$0)>>2)]=$77$0;
 $st$15$1=(($76+4)|0);
 HEAP32[(($st$15$1)>>2)]=$77$1;
 $78=((HEAP32[(($17)>>2)])|0);
 $79=((HEAP32[(($8)>>2)])|0);
 $80=(($79+((($78)*(12))&-1)+8)|0);
 HEAPF32[(($80)>>2)]=$64;
 STACKTOP=sp;return;
}


function __ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast15=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$u=0,$3=0,$4=0,$P=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=0,$21=0,$ld$4$0=0,$22$0=0,$ld$5$1=0,$22$1=0;
 var $st$6$0=0,$st$7$1=0,$23=0,$24=0,$25=0,$26=.0,$27=0,$28=0,$29=0,$30=0,$31=.0,$32=0,$33=.0,$34=.0,$35=.0,$36=0,$37=.0,$38=.0,$39=.0,$40=0;
 var $41=.0,$42=0,$43=.0,$44=.0,$45=.0,$46=.0,$47=0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=.0,$54=0,$55=0,$56=0,$57=0,$ld$8$0=0,$58$0=0,$ld$9$1=0;
 var $58$1=0,$st$10$0=0,$st$11$1=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=0,$ld$12$0=0,$66$0=0,$ld$13$1=0,$66$1=0,$st$14$0=0,$st$15$1=0,$67=0,$68=0,$69=0,$70=.0;
 var $71=.0,$72=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $u=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+96)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($data+28)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+((($8)*(12))&-1))|0);
 $12=$11;
 $ld$0$0=(($12)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=((HEAP32[(($9)>>2)])|0);
 $16=(($15+((($14)*(12))&-1)+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+100)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($15+((($19)*(12))&-1))|0);
 $21=$20;
 $ld$4$0=(($21)|0);
 $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($21+4)|0);
 $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$22$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$22$1;
 $23=((HEAP32[(($18)>>2)])|0);
 $24=((HEAP32[(($9)>>2)])|0);
 $25=(($24+((($23)*(12))&-1)+8)|0);
 $26=(+(HEAPF32[(($25)>>2)]));
 __ZN5b2RotC1Ef($qA,$17);
 __ZN5b2RotC1Ef($qB,$26);
 $27=(($this+68)|0);
 $28=(($this+128)|0);
 __ZmiRK6b2Vec2S1_($1,$27,$28);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $29=(($this+76)|0);
 $30=(($this+136)|0);
 __ZmiRK6b2Vec2S1_($2,$29,$30);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast15,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($u,$3,$rA);
 $31=(+(__ZN6b2Vec29NormalizeEv($u)));
 $32=(($this+84)|0);
 $33=(+(HEAPF32[(($32)>>2)]));
 $34=($31)-($33);
 $35=(+(__Z7b2ClampIfET_S0_S0_S0_($34,0.0,0.20000000298023224)));
 $36=(($this+160)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=((-.0))-($37);
 $39=($35)*($38);
 __ZmlfRK6b2Vec2($P,$39,$u);
 $40=(($this+144)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 __ZmlfRK6b2Vec2($5,$41,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$5);
 $42=(($this+152)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
 $45=($43)*($44);
 $46=($17)-($45);
 $47=(($this+148)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 __ZmlfRK6b2Vec2($6,$48,$P);
 __ZN6b2Vec2pLERKS_($tmpcast15,$6);
 $49=(($this+156)|0);
 $50=(+(HEAPF32[(($49)>>2)]));
 $51=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
 $52=($50)*($51);
 $53=($26)+($52);
 $54=((HEAP32[(($7)>>2)])|0);
 $55=((HEAP32[(($9)>>2)])|0);
 $56=(($55+((($54)*(12))&-1))|0);
 $57=$56;
 $ld$8$0=(($cA)|0);
 $58$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $58$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($57)|0);
 HEAP32[(($st$10$0)>>2)]=$58$0;
 $st$11$1=(($57+4)|0);
 HEAP32[(($st$11$1)>>2)]=$58$1;
 $59=((HEAP32[(($7)>>2)])|0);
 $60=((HEAP32[(($9)>>2)])|0);
 $61=(($60+((($59)*(12))&-1)+8)|0);
 HEAPF32[(($61)>>2)]=$46;
 $62=((HEAP32[(($18)>>2)])|0);
 $63=((HEAP32[(($9)>>2)])|0);
 $64=(($63+((($62)*(12))&-1))|0);
 $65=$64;
 $ld$12$0=(($cB)|0);
 $66$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $66$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($65)|0);
 HEAP32[(($st$14$0)>>2)]=$66$0;
 $st$15$1=(($65+4)|0);
 HEAP32[(($st$15$1)>>2)]=$66$1;
 $67=((HEAP32[(($18)>>2)])|0);
 $68=((HEAP32[(($9)>>2)])|0);
 $69=(($68+((($67)*(12))&-1)+8)|0);
 HEAPF32[(($69)>>2)]=$53;
 $70=(+(HEAPF32[(($32)>>2)]));
 $71=($31)-($70);
 $72=$71<(0.004999999888241291);
 STACKTOP=sp;return (($72)|0);
}


function __ZNK11b2RopeJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2RopeJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK11b2RopeJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,$4=0,label=0;

 $1=(($this+92)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 $4=(($this+104)|0);
 __ZmlfRK6b2Vec2($agg_result,$3,$4);
 return;
}


function __ZNK11b2RopeJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var label=0;

 return 0.0;
}


function __ZN11b2RopeJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3128,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3600,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2776,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2400,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(1944,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1480,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+84)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(1120,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+56)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 __Z5b2LogPKcz(744,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$28,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN11b2RopeJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN11b2RopeJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator($def,$allocator){
 $def=($def)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$5=0,$7=0,$8=0,$10=0,$11=0,$13=0,$14=0,$16=0,$17=0,$19=0,$20=0,$22=0,$23=0,$25=0,$26=0,$28=0,$29=0;
 var $31=0,$32=0,$34=0,$35=0,$37=0,$38=0,$40=0,$41=0,$43=0,$44=0,$46=0,$47=0,$49=0,$50=0,$52=0,$53=0,$55=0,$56=0,$58=0,$59=0;
 var $61=0,$62=0,$64=0,$65=0,$67=0,$68=0,$70=0,$71=0,$73=0,$74=0,$76=0,$77=0,$79=0,$80=0,$82=0,$83=0,$85=0,$86=0,$88=0,$89=0;
 var $91=0,$92=0,$94=0,$95=0,$97=0,$98=0,$100=0,$101=0,$joint_0=0,label=0;

 $1=(($def)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 switch (($2|0)) {
 case 1: {
  $31=((__ZN16b2BlockAllocator8AllocateEi($allocator,228))|0);
  $32=($31|0)==0;
  if ($32) {
   $37=0;
  } else {
   $34=$31;
   $35=$def;
   __ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef($34,$35);
   $37=$34;
  }

  $38=(($37)|0);
  $joint_0=$38;

  return (($joint_0)|0);
  break;
 }
 case 3: {
  $4=((__ZN16b2BlockAllocator8AllocateEi($allocator,176))|0);
  $5=($4|0)==0;
  if ($5) {
   $10=0;
  } else {
   $7=$4;
   $8=$def;
   __ZN15b2DistanceJointC2EPK18b2DistanceJointDef($7,$8);
   $10=$7;
  }

  $11=(($10)|0);
  $joint_0=$11;

  return (($joint_0)|0);
  break;
 }
 case 4: {
  $40=((__ZN16b2BlockAllocator8AllocateEi($allocator,196))|0);
  $41=($40|0)==0;
  if ($41) {
   $46=0;
  } else {
   $43=$40;
   $44=$def;
   __ZN13b2PulleyJointC2EPK16b2PulleyJointDef($43,$44);
   $46=$43;
  }

  $47=(($46)|0);
  $joint_0=$47;

  return (($joint_0)|0);
  break;
 }
 case 5: {
  $13=((__ZN16b2BlockAllocator8AllocateEi($allocator,168))|0);
  $14=($13|0)==0;
  if ($14) {
   $19=0;
  } else {
   $16=$13;
   $17=$def;
   __ZN12b2MouseJointC2EPK15b2MouseJointDef($16,$17);
   $19=$16;
  }

  $20=(($19)|0);
  $joint_0=$20;

  return (($joint_0)|0);
  break;
 }
 case 6: {
  $49=((__ZN16b2BlockAllocator8AllocateEi($allocator,276))|0);
  $50=($49|0)==0;
  if ($50) {
   $55=0;
  } else {
   $52=$49;
   $53=$def;
   __ZN11b2GearJointC2EPK14b2GearJointDef($52,$53);
   $55=$52;
  }

  $56=(($55)|0);
  $joint_0=$56;

  return (($joint_0)|0);
  break;
 }
 case 7: {
  $58=((__ZN16b2BlockAllocator8AllocateEi($allocator,224))|0);
  $59=($58|0)==0;
  if ($59) {
   $64=0;
  } else {
   $61=$58;
   $62=$def;
   __ZN12b2WheelJointC2EPK15b2WheelJointDef($61,$62);
   $64=$61;
  }

  $65=(($64)|0);
  $joint_0=$65;

  return (($joint_0)|0);
  break;
 }
 case 8: {
  $67=((__ZN16b2BlockAllocator8AllocateEi($allocator,208))|0);
  $68=($67|0)==0;
  if ($68) {
   $73=0;
  } else {
   $70=$67;
   $71=$def;
   __ZN11b2WeldJointC2EPK14b2WeldJointDef($70,$71);
   $73=$70;
  }

  $74=(($73)|0);
  $joint_0=$74;

  return (($joint_0)|0);
  break;
 }
 case 9: {
  $76=((__ZN16b2BlockAllocator8AllocateEi($allocator,180))|0);
  $77=($76|0)==0;
  if ($77) {
   $82=0;
  } else {
   $79=$76;
   $80=$def;
   __ZN15b2FrictionJointC2EPK18b2FrictionJointDef($79,$80);
   $82=$79;
  }

  $83=(($82)|0);
  $joint_0=$83;

  return (($joint_0)|0);
  break;
 }
 case 10: {
  $85=((__ZN16b2BlockAllocator8AllocateEi($allocator,168))|0);
  $86=($85|0)==0;
  if ($86) {
   $91=0;
  } else {
   $88=$85;
   $89=$def;
   __ZN11b2RopeJointC2EPK14b2RopeJointDef($88,$89);
   $91=$88;
  }

  $92=(($91)|0);
  $joint_0=$92;

  return (($joint_0)|0);
  break;
 }
 case 11: {
  $94=((__ZN16b2BlockAllocator8AllocateEi($allocator,192))|0);
  $95=($94|0)==0;
  if ($95) {
   $100=0;
  } else {
   $97=$94;
   $98=$def;
   __ZN12b2MotorJointC2EPK15b2MotorJointDef($97,$98);
   $100=$97;
  }

  $101=(($100)|0);
  $joint_0=$101;

  return (($joint_0)|0);
  break;
 }
 case 2: {
  $22=((__ZN16b2BlockAllocator8AllocateEi($allocator,256))|0);
  $23=($22|0)==0;
  if ($23) {
   $28=0;
  } else {
   $25=$22;
   $26=$def;
   __ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef($25,$26);
   $28=$25;
  }

  $29=(($28)|0);
  $joint_0=$29;

  return (($joint_0)|0);
  break;
 }
 default: {
  $joint_0=0;

  return (($joint_0)|0);
 }
 }
  return 0;
}


function __ZN7b2Joint7DestroyEPS_P16b2BlockAllocator($joint,$allocator){
 $joint=($joint)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$8=0,$10=0,$12=0,$14=0,$16=0,$18=0,$20=0,$22=0,$24=0,$26=0,$28=0,label=0;

 $1=$joint;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+24)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 FUNCTION_TABLE_vi[($4)&255]($joint);
 $5=(($joint+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 switch (($6|0)) {
 case 5: {
  $10=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$10,168);
  return;
  break;
 }
 case 3: {
  $8=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$8,176);
  return;
  break;
 }
 case 6: {
  $18=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$18,276);
  return;
  break;
 }
 case 1: {
  $14=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$14,228);
  return;
  break;
 }
 case 7: {
  $20=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$20,224);
  return;
  break;
 }
 case 11: {
  $28=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$28,192);
  return;
  break;
 }
 case 4: {
  $16=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$16,196);
  return;
  break;
 }
 case 2: {
  $12=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$12,256);
  return;
  break;
 }
 case 8: {
  $22=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$22,208);
  return;
  break;
 }
 case 9: {
  $24=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$24,180);
  return;
  break;
 }
 case 10: {
  $26=$joint;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$26,168);
  return;
  break;
 }
 default: {
  return;
 }
 }
}


function __ZN7b2JointC2EPK10b2JointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=4640;
 $2=(($def)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($this+4)|0);
 HEAP32[(($4)>>2)]=$3;
 $5=(($this+8)|0);
 HEAP32[(($5)>>2)]=0;
 $6=(($this+12)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($def+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($this+48)|0);
 HEAP32[(($9)>>2)]=$8;
 $10=(($def+12)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($this+52)|0);
 HEAP32[(($12)>>2)]=$11;
 $13=(($this+56)|0);
 HEAP32[(($13)>>2)]=0;
 $14=(($def+16)|0);
 $15=((HEAP8[($14)])|0);
 $16=(($this+61)|0);
 HEAP8[($16)]=$15;
 $17=(($this+60)|0);
 HEAP8[($17)]=0;
 $18=(($def+4)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($this+64)|0);
 HEAP32[(($20)>>2)]=$19;
 $21=(($this+16)|0);
 $22=$21;
 _memset((((($22)|0))|0), ((((0)|0))|0), ((((32)|0))|0))|0;
 return;
}


function __ZNK6b2Body8IsActiveEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&32;
 $4=(($3<<16)>>16)!=0;
 return (($4)|0);
}


function __ZN7b2Joint4DumpEv($this){
 $this=($this)|0;
 var label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 __Z5b2LogPKcz(3080,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN7b2JointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN7b2JointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN18b2RevoluteJointDef10InitializeEP6b2BodyS1_RK6b2Vec2($this,$bA,$bB,$anchor){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0,$12$0=0;
 var $ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,$13=0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$bA;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$bB;
 $5=(($this+20)|0);
 $6=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$6,$anchor);
 $7=$5;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast5,$10,$anchor);
 $11=$9;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 $13=((HEAP32[(($4)>>2)])|0);
 $14=(+(__ZNK6b2Body8GetAngleEv($13)));
 $15=((HEAP32[(($3)>>2)])|0);
 $16=(+(__ZNK6b2Body8GetAngleEv($15)));
 $17=($14)-($16);
 $18=(($this+36)|0);
 HEAPF32[(($18)>>2)]=$17;
 STACKTOP=sp;return;
}


function __ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=0,$13=0,$ld$4$0=0,$14$0=0;
 var $ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=.0,$17=0,$18=0,$19=0,$20=.0,$21=0,$22=0,$23=.0,$24=0,$25=0,$26=.0,$27=0,$28=0,$29=.0,$30=0;
 var $31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=5072;
 $4=(($this+68)|0);
 $5=(($this+76)|0);
 $6=(($this+84)|0);
 $7=(($def+20)|0);
 $8=$7;
 $9=$4;
 $ld$0$0=(($8)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($8+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($def+28)|0);
 $12=$11;
 $13=$5;
 $ld$4$0=(($12)|0);
 $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($13)|0);
 HEAP32[(($st$6$0)>>2)]=$14$0;
 $st$7$1=(($13+4)|0);
 HEAP32[(($st$7$1)>>2)]=$14$1;
 $15=(($def+36)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(($this+116)|0);
 HEAPF32[(($17)>>2)]=$16;
 __ZN6b2Vec37SetZeroEv($6);
 $18=(($this+96)|0);
 HEAPF32[(($18)>>2)]=0.0;
 $19=(($def+44)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=(($this+120)|0);
 HEAPF32[(($21)>>2)]=$20;
 $22=(($def+48)|0);
 $23=(+(HEAPF32[(($22)>>2)]));
 $24=(($this+124)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=(($def+60)|0);
 $26=(+(HEAPF32[(($25)>>2)]));
 $27=(($this+104)|0);
 HEAPF32[(($27)>>2)]=$26;
 $28=(($def+56)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=(($this+108)|0);
 HEAPF32[(($30)>>2)]=$29;
 $31=(($def+40)|0);
 $32=((HEAP8[($31)])|0);
 $33=(($this+112)|0);
 HEAP8[($33)]=$32;
 $34=(($def+52)|0);
 $35=((HEAP8[($34)])|0);
 $36=(($this+100)|0);
 HEAP8[($36)]=$35;
 $37=(($this+224)|0);
 HEAP32[(($37)>>2)]=0;
 return;
}


function __ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast40=0,$qA=0,$qB=0,$1=0,$tmpcast41=0,$2=0,$3=0,$tmpcast42=0,$4=0,$P=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0;
 var $12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$ld$0$0=0,$22$0=0,$ld$1$1=0,$22$1=0,$st$2$0=0,$st$3$1=0,$23=0,$24=0,$25=0,$26=0;
 var $27=0,$ld$4$0=0,$28$0=0,$ld$5$1=0,$28$1=0,$st$6$0=0,$st$7$1=0,$29=0,$30=0,$31=.0,$32=0,$33=0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=.0,$40=0,$41=0;
 var $42=0,$43=.0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=.0,$50=0,$51=0,$52=0,$53=0,$ld$8$0=0,$54$0=0,$ld$9$1=0,$54$1=0,$st$10$0=0,$st$11$1=0,$55=0,$56=0;
 var $57=0,$58=.0,$59=0,$60=0,$61=0,$62=.0,$63=0,$64=0,$ld$12$0=0,$65$0=0,$ld$13$1=0,$65$1=0,$st$14$0=0,$st$15$1=0,$66=0,$67=0,$68=0,$69=.0,$70=0,$71=0;
 var $72=0,$ld$16$0=0,$73$0=0,$ld$17$1=0,$73$1=0,$st$18$0=0,$st$19$1=0,$74=0,$75=0,$76=0,$ld$20$0=0,$77$0=0,$ld$21$1=0,$77$1=0,$st$22$0=0,$st$23$1=0,$78=.0,$79=.0,$80=.0,$81=.0;
 var $82=.0,$83=0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=.0,$90=0,$91=.0,$92=.0,$93=.0,$94=.0,$95=0,$96=.0,$97=.0,$98=0,$99=.0,$100=.0,$101=.0;
 var $102=.0,$103=0,$104=.0,$105=.0,$106=.0,$107=.0,$108=0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=0,$116=.0,$117=0,$118=.0,$119=.0,$120=.0,$121=.0;
 var $122=.0,$123=.0,$124=.0,$125=.0,$126=0,$127=.0,$128=.0,$129=.0,$130=.0,$131=.0,$132=0,$133=.0,$134=0,$135=.0,$136=0,$137=0,$138=0,$139=0,$141=.0,$storemerge=.0;
 var $143=0,$144=0,$145=0,$brmerge=0,$147=0,$149=0,$150=0,$151=0,$brmerge43=0,$153=.0,$154=0,$155=.0,$156=.0,$157=0,$158=.0,$159=0,$160=.0,$161=.0,$162=.0,$163=0;
 var $165=0,$167=0,$169=0,$170=0,$171=0,$173=0,$176=0,$177=0,$179=0,$180=0,$182=0,$185=0,$187=0,$189=0,$190=0,$191=0,$192=0,$194=0,$195=.0,$196=.0;
 var $197=0,$198=.0,$199=.0,$200=0,$201=.0,$202=0,$203=.0,$204=.0,$205=.0,$206=.0,$207=0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=.0,$216=.0;
 var $217=.0,$218=.0,$220=0,$wB_0=.0,$wA_0=.0,$222=0,$223=0,$224=0,$225=0,$ld$24$0=0,$226$0=0,$ld$25$1=0,$226$1=0,$st$26$0=0,$st$27$1=0,$227=0,$228=0,$229=0,$230=0,$231=0;
 var $232=0,$233=0,$ld$28$0=0,$234$0=0,$ld$29$1=0,$234$1=0,$st$30$0=0,$st$31$1=0,$235=0,$236=0,$237=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast40=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast41=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast42=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+48)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+8)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($this+128)|0);
 HEAP32[(($11)>>2)]=$10;
 $12=(($this+52)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($13+8)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=(($this+132)|0);
 HEAP32[(($16)>>2)]=$15;
 $17=(($this+152)|0);
 $18=((HEAP32[(($7)>>2)])|0);
 $19=(($18+44)|0);
 $20=$19;
 $21=$17;
 $ld$0$0=(($20)|0);
 $22$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $22$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($21)|0);
 HEAP32[(($st$2$0)>>2)]=$22$0;
 $st$3$1=(($21+4)|0);
 HEAP32[(($st$3$1)>>2)]=$22$1;
 $23=(($this+160)|0);
 $24=((HEAP32[(($12)>>2)])|0);
 $25=(($24+44)|0);
 $26=$25;
 $27=$23;
 $ld$4$0=(($26)|0);
 $28$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($26+4)|0);
 $28$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($27)|0);
 HEAP32[(($st$6$0)>>2)]=$28$0;
 $st$7$1=(($27+4)|0);
 HEAP32[(($st$7$1)>>2)]=$28$1;
 $29=((HEAP32[(($7)>>2)])|0);
 $30=(($29+136)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+168)|0);
 HEAPF32[(($32)>>2)]=$31;
 $33=((HEAP32[(($12)>>2)])|0);
 $34=(($33+136)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+172)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=((HEAP32[(($7)>>2)])|0);
 $38=(($37+144)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+176)|0);
 HEAPF32[(($40)>>2)]=$39;
 $41=((HEAP32[(($12)>>2)])|0);
 $42=(($41+144)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(($this+180)|0);
 HEAPF32[(($44)>>2)]=$43;
 $45=((HEAP32[(($11)>>2)])|0);
 $46=(($data+28)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=(($47+((($45)*(12))&-1)+8)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($data+32)|0);
 $51=((HEAP32[(($50)>>2)])|0);
 $52=(($51+((($45)*(12))&-1))|0);
 $53=$52;
 $ld$8$0=(($53)|0);
 $54$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($53+4)|0);
 $54$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($vA)|0);
 HEAP32[(($st$10$0)>>2)]=$54$0;
 $st$11$1=(($vA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$54$1;
 $55=((HEAP32[(($11)>>2)])|0);
 $56=((HEAP32[(($50)>>2)])|0);
 $57=(($56+((($55)*(12))&-1)+8)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=((HEAP32[(($16)>>2)])|0);
 $60=((HEAP32[(($46)>>2)])|0);
 $61=(($60+((($59)*(12))&-1)+8)|0);
 $62=(+(HEAPF32[(($61)>>2)]));
 $63=(($56+((($59)*(12))&-1))|0);
 $64=$63;
 $ld$12$0=(($64)|0);
 $65$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($64+4)|0);
 $65$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vB)|0);
 HEAP32[(($st$14$0)>>2)]=$65$0;
 $st$15$1=(($vB+4)|0);
 HEAP32[(($st$15$1)>>2)]=$65$1;
 $66=((HEAP32[(($16)>>2)])|0);
 $67=((HEAP32[(($50)>>2)])|0);
 $68=(($67+((($66)*(12))&-1)+8)|0);
 $69=(+(HEAPF32[(($68)>>2)]));
 __ZN5b2RotC1Ef($qA,$49);
 __ZN5b2RotC1Ef($qB,$62);
 $70=(($this+136)|0);
 $71=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($2,$71,$17);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast41,$qA,$2);
 $72=$70;
 $ld$16$0=(($1)|0);
 $73$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($1+4)|0);
 $73$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($72)|0);
 HEAP32[(($st$18$0)>>2)]=$73$0;
 $st$19$1=(($72+4)|0);
 HEAP32[(($st$19$1)>>2)]=$73$1;
 $74=(($this+144)|0);
 $75=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($4,$75,$23);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast42,$qB,$4);
 $76=$74;
 $ld$20$0=(($3)|0);
 $77$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($3+4)|0);
 $77$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($76)|0);
 HEAP32[(($st$22$0)>>2)]=$77$0;
 $st$23$1=(($76+4)|0);
 HEAP32[(($st$23$1)>>2)]=$77$1;
 $78=(+(HEAPF32[(($32)>>2)]));
 $79=(+(HEAPF32[(($36)>>2)]));
 $80=(+(HEAPF32[(($40)>>2)]));
 $81=(+(HEAPF32[(($44)>>2)]));
 $82=($80)+($81);
 $83=$82==(0.0);
 $84=($78)+($79);
 $85=(($this+140)|0);
 $86=(+(HEAPF32[(($85)>>2)]));
 $87=($86)*($86);
 $88=($80)*($87);
 $89=($84)+($88);
 $90=(($this+148)|0);
 $91=(+(HEAPF32[(($90)>>2)]));
 $92=($91)*($91);
 $93=($81)*($92);
 $94=($89)+($93);
 $95=(($this+184)|0);
 HEAPF32[(($95)>>2)]=$94;
 $96=(+(HEAPF32[(($85)>>2)]));
 $97=((-.0))-($96);
 $98=(($70)|0);
 $99=(+(HEAPF32[(($98)>>2)]));
 $100=($99)*($97);
 $101=($80)*($100);
 $102=(+(HEAPF32[(($90)>>2)]));
 $103=(($74)|0);
 $104=(+(HEAPF32[(($103)>>2)]));
 $105=($102)*($104);
 $106=($81)*($105);
 $107=($101)-($106);
 $108=(($this+196)|0);
 HEAPF32[(($108)>>2)]=$107;
 $109=(+(HEAPF32[(($85)>>2)]));
 $110=((-.0))-($109);
 $111=($80)*($110);
 $112=(+(HEAPF32[(($90)>>2)]));
 $113=($81)*($112);
 $114=($111)-($113);
 $115=(($this+208)|0);
 HEAPF32[(($115)>>2)]=$114;
 $116=(+(HEAPF32[(($108)>>2)]));
 $117=(($this+188)|0);
 HEAPF32[(($117)>>2)]=$116;
 $118=(+(HEAPF32[(($98)>>2)]));
 $119=($118)*($118);
 $120=($80)*($119);
 $121=($84)+($120);
 $122=(+(HEAPF32[(($103)>>2)]));
 $123=($122)*($122);
 $124=($81)*($123);
 $125=($121)+($124);
 $126=(($this+200)|0);
 HEAPF32[(($126)>>2)]=$125;
 $127=(+(HEAPF32[(($98)>>2)]));
 $128=($80)*($127);
 $129=(+(HEAPF32[(($103)>>2)]));
 $130=($81)*($129);
 $131=($128)+($130);
 $132=(($this+212)|0);
 HEAPF32[(($132)>>2)]=$131;
 $133=(+(HEAPF32[(($115)>>2)]));
 $134=(($this+192)|0);
 HEAPF32[(($134)>>2)]=$133;
 $135=(+(HEAPF32[(($132)>>2)]));
 $136=(($this+204)|0);
 HEAPF32[(($136)>>2)]=$135;
 $137=(($this+216)|0);
 HEAPF32[(($137)>>2)]=$82;
 $138=(($this+220)|0);
 $139=$82>(0.0);
 if ($139) {
  $141=((1.0))/($82);
  $storemerge=$141;
 } else {
  $storemerge=$82;
 }

 HEAPF32[(($138)>>2)]=$storemerge;
 $143=(($this+100)|0);
 $144=((HEAP8[($143)])|0);
 $145=(($144<<24)>>24)==0;
 $brmerge=$145|$83;
 if ($brmerge) {
  $147=(($this+96)|0);
  HEAPF32[(($147)>>2)]=0.0;
 }
 $149=(($this+112)|0);
 $150=((HEAP8[($149)])|0);
 $151=(($150<<24)>>24)==0;
 $brmerge43=$151|$83;
 do {
  if ($brmerge43) {
   $187=(($this+224)|0);
   HEAP32[(($187)>>2)]=0;
  } else {
   $153=($62)-($49);
   $154=(($this+116)|0);
   $155=(+(HEAPF32[(($154)>>2)]));
   $156=($153)-($155);
   $157=(($this+124)|0);
   $158=(+(HEAPF32[(($157)>>2)]));
   $159=(($this+120)|0);
   $160=(+(HEAPF32[(($159)>>2)]));
   $161=($158)-($160);
   $162=(+(__Z5b2AbsIfET_S0_($161)));
   $163=$162<(0.06981317698955536);
   if ($163) {
    $165=(($this+224)|0);
    HEAP32[(($165)>>2)]=3;
    break;
   }
   $167=$156>$160;
   if (!($167)) {
    $169=(($this+224)|0);
    $170=((HEAP32[(($169)>>2)])|0);
    $171=($170|0)==1;
    if (!($171)) {
     $173=(($this+92)|0);
     HEAPF32[(($173)>>2)]=0.0;
    }
    HEAP32[(($169)>>2)]=1;
    break;
   }
   $176=$156<$158;
   $177=(($this+224)|0);
   if ($176) {
    HEAP32[(($177)>>2)]=0;
    $185=(($this+92)|0);
    HEAPF32[(($185)>>2)]=0.0;
    break;
   }
   $179=((HEAP32[(($177)>>2)])|0);
   $180=($179|0)==2;
   if (!($180)) {
    $182=(($this+92)|0);
    HEAPF32[(($182)>>2)]=0.0;
   }
   HEAP32[(($177)>>2)]=2;
  }
 } while(0);
 $189=(($data+24)|0);
 $190=((HEAP8[($189)])|0);
 $191=(($190<<24)>>24)==0;
 $192=(($this+84)|0);
 if ($191) {
  __ZN6b2Vec37SetZeroEv($192);
  $220=(($this+96)|0);
  HEAPF32[(($220)>>2)]=0.0;
  $wA_0=$58;$wB_0=$69;


  $222=((HEAP32[(($11)>>2)])|0);
  $223=((HEAP32[(($50)>>2)])|0);
  $224=(($223+((($222)*(12))&-1))|0);
  $225=$224;
  $ld$24$0=(($vA)|0);
  $226$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $226$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($225)|0);
  HEAP32[(($st$26$0)>>2)]=$226$0;
  $st$27$1=(($225+4)|0);
  HEAP32[(($st$27$1)>>2)]=$226$1;
  $227=((HEAP32[(($11)>>2)])|0);
  $228=((HEAP32[(($50)>>2)])|0);
  $229=(($228+((($227)*(12))&-1)+8)|0);
  HEAPF32[(($229)>>2)]=$wA_0;
  $230=((HEAP32[(($16)>>2)])|0);
  $231=((HEAP32[(($50)>>2)])|0);
  $232=(($231+((($230)*(12))&-1))|0);
  $233=$232;
  $ld$28$0=(($vB)|0);
  $234$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $234$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($233)|0);
  HEAP32[(($st$30$0)>>2)]=$234$0;
  $st$31$1=(($233+4)|0);
  HEAP32[(($st$31$1)>>2)]=$234$1;
  $235=((HEAP32[(($16)>>2)])|0);
  $236=((HEAP32[(($50)>>2)])|0);
  $237=(($236+((($235)*(12))&-1)+8)|0);
  HEAPF32[(($237)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $194=(($data+8)|0);
  $195=(+(HEAPF32[(($194)>>2)]));
  __ZN6b2Vec3mLEf($192,$195);
  $196=(+(HEAPF32[(($194)>>2)]));
  $197=(($this+96)|0);
  $198=(+(HEAPF32[(($197)>>2)]));
  $199=($196)*($198);
  HEAPF32[(($197)>>2)]=$199;
  $200=(($192)|0);
  $201=(+(HEAPF32[(($200)>>2)]));
  $202=(($this+88)|0);
  $203=(+(HEAPF32[(($202)>>2)]));
  __ZN6b2Vec2C1Eff($P,$201,$203);
  __ZmlfRK6b2Vec2($5,$78,$P);
  __ZN6b2Vec2mIERKS_($tmpcast,$5);
  $204=(+(__Z7b2CrossRK6b2Vec2S1_($70,$P)));
  $205=(+(HEAPF32[(($197)>>2)]));
  $206=($204)+($205);
  $207=(($this+92)|0);
  $208=(+(HEAPF32[(($207)>>2)]));
  $209=($206)+($208);
  $210=($80)*($209);
  $211=($58)-($210);
  __ZmlfRK6b2Vec2($6,$79,$P);
  __ZN6b2Vec2pLERKS_($tmpcast40,$6);
  $212=(+(__Z7b2CrossRK6b2Vec2S1_($74,$P)));
  $213=(+(HEAPF32[(($197)>>2)]));
  $214=($212)+($213);
  $215=(+(HEAPF32[(($207)>>2)]));
  $216=($214)+($215);
  $217=($81)*($216);
  $218=($69)+($217);
  $wA_0=$211;$wB_0=$218;


  $222=((HEAP32[(($11)>>2)])|0);
  $223=((HEAP32[(($50)>>2)])|0);
  $224=(($223+((($222)*(12))&-1))|0);
  $225=$224;
  $ld$24$0=(($vA)|0);
  $226$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($vA+4)|0);
  $226$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($225)|0);
  HEAP32[(($st$26$0)>>2)]=$226$0;
  $st$27$1=(($225+4)|0);
  HEAP32[(($st$27$1)>>2)]=$226$1;
  $227=((HEAP32[(($11)>>2)])|0);
  $228=((HEAP32[(($50)>>2)])|0);
  $229=(($228+((($227)*(12))&-1)+8)|0);
  HEAPF32[(($229)>>2)]=$wA_0;
  $230=((HEAP32[(($16)>>2)])|0);
  $231=((HEAP32[(($50)>>2)])|0);
  $232=(($231+((($230)*(12))&-1))|0);
  $233=$232;
  $ld$28$0=(($vB)|0);
  $234$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($vB+4)|0);
  $234$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($233)|0);
  HEAP32[(($st$30$0)>>2)]=$234$0;
  $st$31$1=(($233+4)|0);
  HEAP32[(($st$31$1)>>2)]=$234$1;
  $235=((HEAP32[(($16)>>2)])|0);
  $236=((HEAP32[(($50)>>2)])|0);
  $237=(($236+((($235)*(12))&-1)+8)|0);
  HEAPF32[(($237)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast36=0,$Cdot1=0,$1=0,$2=0,$3=0,$4=0,$Cdot3=0,$impulse4=0,$5=0,$rhs=0,$6=0,$7=0,$8=0,$reduced=0,$rhs6=0,$9=0,$10=0;
 var $11=0,$reduced7=0,$P=0,$12=0,$13=0,$Cdot8=0,$14=0,$15=0,$16=0,$17=0,$impulse9=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0;
 var $ld$0$0=0,$27$0=0,$ld$1$1=0,$27$1=0,$st$2$0=0,$st$3$1=0,$28=0,$29=0,$30=0,$31=.0,$32=0,$33=0,$34=0,$35=0,$ld$4$0=0,$36$0=0,$ld$5$1=0,$36$1=0,$st$6$0=0,$st$7$1=0;
 var $37=0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=0,$51=0,$52=0,$53=0,$55=0,$56=0,$57=0;
 var $brmerge=0,$59=.0,$60=0,$61=.0,$62=.0,$63=0,$64=.0,$65=.0,$66=.0,$67=0,$68=.0,$69=0,$70=.0,$71=0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=.0;
 var $78=.0,$79=.0,$80=.0,$81=.0,$wB_0=.0,$wA_0=.0,$83=0,$84=0,$85=0,$87=0,$88=0,$89=0,$brmerge40=0,$91=0,$92=0,$93=.0,$94=0,$95=.0,$96=0,$97=.0;
 var $98=0,$99=0,$101=0,$103=0,$104=0,$105=.0,$106=0,$107=.0,$108=.0,$109=0,$111=.0,$112=0,$113=.0,$114=0,$115=.0,$116=0,$117=.0,$118=0,$119=0,$120=.0;
 var $121=0,$122=.0,$123=.0,$124=.0,$125=0,$126=.0,$127=.0,$128=.0,$129=0,$130=.0,$131=.0,$134=0,$135=0,$136=.0,$137=0,$138=.0,$139=.0,$140=0,$142=.0,$143=0;
 var $144=.0,$145=0,$146=.0,$147=0,$148=.0,$149=0,$150=0,$151=.0,$152=0,$153=.0,$154=.0,$155=.0,$156=0,$157=.0,$158=.0,$159=.0,$160=0,$161=.0,$162=.0,$165=0;
 var $166=.0,$167=0,$168=.0,$169=.0,$170=0,$171=.0,$172=.0,$173=.0,$174=.0,$175=.0,$177=0,$178=0,$179=0,$180=0,$181=.0,$182=0,$183=.0,$184=.0,$185=0,$186=.0;
 var $187=0,$188=.0,$189=.0,$190=.0,$191=.0,$_pn38=.0,$_pn39=.0,$_pn37=.0,$_pn=.0,$wA_1=.0,$wB_1=.0,$193=0,$194=0,$195=0,$196=0,$ld$8$0=0,$197$0=0,$ld$9$1=0,$197$1=0,$st$10$0=0;
 var $st$11$1=0,$198=0,$199=0,$200=0,$201=0,$202=0,$203=0,$204=0,$ld$12$0=0,$205$0=0,$ld$13$1=0,$205$1=0,$st$14$0=0,$st$15$1=0,$206=0,$207=0,$208=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$vB;
 $Cdot1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot3=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $impulse4=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $5=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $rhs=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $reduced=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rhs6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $reduced7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $Cdot8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $impulse9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $19=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $20=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $21=(($this+128)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($data+32)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($24+((($22)*(12))&-1))|0);
 $26=$25;
 $ld$0$0=(($26)|0);
 $27$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($26+4)|0);
 $27$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$27$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$27$1;
 $28=((HEAP32[(($21)>>2)])|0);
 $29=((HEAP32[(($23)>>2)])|0);
 $30=(($29+((($28)*(12))&-1)+8)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+132)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=(($29+((($33)*(12))&-1))|0);
 $35=$34;
 $ld$4$0=(($35)|0);
 $36$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($35+4)|0);
 $36$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$36$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$36$1;
 $37=((HEAP32[(($32)>>2)])|0);
 $38=((HEAP32[(($23)>>2)])|0);
 $39=(($38+((($37)*(12))&-1)+8)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=(($this+168)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+172)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+176)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=(($this+180)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 $49=($46)+($48);
 $50=$49==(0.0);
 $51=(($this+100)|0);
 $52=((HEAP8[($51)])|0);
 $53=(($52<<24)>>24)==0;
 do {
  if ($53) {
   $wA_0=$31;$wB_0=$40;
  } else {
   $55=(($this+224)|0);
   $56=((HEAP32[(($55)>>2)])|0);
   $57=($56|0)==3;
   $brmerge=$57|$50;
   if ($brmerge) {
    $wA_0=$31;$wB_0=$40;
    break;
   }
   $59=($40)-($31);
   $60=(($this+108)|0);
   $61=(+(HEAPF32[(($60)>>2)]));
   $62=($59)-($61);
   $63=(($this+220)|0);
   $64=(+(HEAPF32[(($63)>>2)]));
   $65=((-.0))-($64);
   $66=($62)*($65);
   $67=(($this+96)|0);
   $68=(+(HEAPF32[(($67)>>2)]));
   $69=(($data)|0);
   $70=(+(HEAPF32[(($69)>>2)]));
   $71=(($this+104)|0);
   $72=(+(HEAPF32[(($71)>>2)]));
   $73=($70)*($72);
   $74=($68)+($66);
   $75=((-.0))-($73);
   $76=(+(__Z7b2ClampIfET_S0_S0_S0_($74,$75,$73)));
   HEAPF32[(($67)>>2)]=$76;
   $77=($76)-($68);
   $78=($46)*($77);
   $79=($31)-($78);
   $80=($48)*($77);
   $81=($40)+($80);
   $wA_0=$79;$wB_0=$81;
  }
 } while(0);


 $83=(($this+112)|0);
 $84=((HEAP8[($83)])|0);
 $85=(($84<<24)>>24)==0;
 do {
  if (!($85)) {
   $87=(($this+224)|0);
   $88=((HEAP32[(($87)>>2)])|0);
   $89=($88|0)==0;
   $brmerge40=$89|$50;
   if ($brmerge40) {
    break;
   }
   $91=(($this+144)|0);
   __Z7b2CrossfRK6b2Vec2($3,$wB_0,$91);
   __ZplRK6b2Vec2S1_($2,$tmpcast36,$3);
   __ZmiRK6b2Vec2S1_($1,$2,$tmpcast);
   $92=(($this+136)|0);
   __Z7b2CrossfRK6b2Vec2($4,$wA_0,$92);
   __ZmiRK6b2Vec2S1_($Cdot1,$1,$4);
   $93=($wB_0)-($wA_0);
   $94=(($Cdot1)|0);
   $95=(+(HEAPF32[(($94)>>2)]));
   $96=(($Cdot1+4)|0);
   $97=(+(HEAPF32[(($96)>>2)]));
   __ZN6b2Vec3C1Efff($Cdot3,$95,$97,$93);
   $98=(($this+184)|0);
   __ZNK7b2Mat337Solve33ERK6b2Vec3($5,$98,$Cdot3);
   __ZNK6b2Vec3ngEv($impulse4,$5);
   $99=((HEAP32[(($87)>>2)])|0);
   do {
    if (((($99|0))|0)==((1)|0)) {
     $103=(($this+84)|0);
     $104=(($this+92)|0);
     $105=(+(HEAPF32[(($104)>>2)]));
     $106=(($impulse4+8)|0);
     $107=(+(HEAPF32[(($106)>>2)]));
     $108=($105)+($107);
     $109=$108<(0.0);
     if ($109) {
      __ZNK6b2Vec2ngEv($6,$Cdot1);
      $111=(+(HEAPF32[(($104)>>2)]));
      $112=(($this+208)|0);
      $113=(+(HEAPF32[(($112)>>2)]));
      $114=(($this+212)|0);
      $115=(+(HEAPF32[(($114)>>2)]));
      __ZN6b2Vec2C1Eff($8,$113,$115);
      __ZmlfRK6b2Vec2($7,$111,$8);
      __ZplRK6b2Vec2S1_($rhs,$6,$7);
      __ZNK7b2Mat337Solve22ERK6b2Vec2($reduced,$98,$rhs);
      $116=(($reduced)|0);
      $117=(+(HEAPF32[(($116)>>2)]));
      $118=(($impulse4)|0);
      HEAPF32[(($118)>>2)]=$117;
      $119=(($reduced+4)|0);
      $120=(+(HEAPF32[(($119)>>2)]));
      $121=(($impulse4+4)|0);
      HEAPF32[(($121)>>2)]=$120;
      $122=(+(HEAPF32[(($104)>>2)]));
      $123=((-.0))-($122);
      HEAPF32[(($106)>>2)]=$123;
      $124=(+(HEAPF32[(($116)>>2)]));
      $125=(($103)|0);
      $126=(+(HEAPF32[(($125)>>2)]));
      $127=($124)+($126);
      HEAPF32[(($125)>>2)]=$127;
      $128=(+(HEAPF32[(($119)>>2)]));
      $129=(($this+88)|0);
      $130=(+(HEAPF32[(($129)>>2)]));
      $131=($128)+($130);
      HEAPF32[(($129)>>2)]=$131;
      HEAPF32[(($104)>>2)]=0.0;
      break;
     } else {
      __ZN6b2Vec3pLERKS_($103,$impulse4);
      break;
     }
    } else if (((($99|0))|0)==((2)|0)) {
     $134=(($this+84)|0);
     $135=(($this+92)|0);
     $136=(+(HEAPF32[(($135)>>2)]));
     $137=(($impulse4+8)|0);
     $138=(+(HEAPF32[(($137)>>2)]));
     $139=($136)+($138);
     $140=$139>(0.0);
     if ($140) {
      __ZNK6b2Vec2ngEv($9,$Cdot1);
      $142=(+(HEAPF32[(($135)>>2)]));
      $143=(($this+208)|0);
      $144=(+(HEAPF32[(($143)>>2)]));
      $145=(($this+212)|0);
      $146=(+(HEAPF32[(($145)>>2)]));
      __ZN6b2Vec2C1Eff($11,$144,$146);
      __ZmlfRK6b2Vec2($10,$142,$11);
      __ZplRK6b2Vec2S1_($rhs6,$9,$10);
      __ZNK7b2Mat337Solve22ERK6b2Vec2($reduced7,$98,$rhs6);
      $147=(($reduced7)|0);
      $148=(+(HEAPF32[(($147)>>2)]));
      $149=(($impulse4)|0);
      HEAPF32[(($149)>>2)]=$148;
      $150=(($reduced7+4)|0);
      $151=(+(HEAPF32[(($150)>>2)]));
      $152=(($impulse4+4)|0);
      HEAPF32[(($152)>>2)]=$151;
      $153=(+(HEAPF32[(($135)>>2)]));
      $154=((-.0))-($153);
      HEAPF32[(($137)>>2)]=$154;
      $155=(+(HEAPF32[(($147)>>2)]));
      $156=(($134)|0);
      $157=(+(HEAPF32[(($156)>>2)]));
      $158=($155)+($157);
      HEAPF32[(($156)>>2)]=$158;
      $159=(+(HEAPF32[(($150)>>2)]));
      $160=(($this+88)|0);
      $161=(+(HEAPF32[(($160)>>2)]));
      $162=($159)+($161);
      HEAPF32[(($160)>>2)]=$162;
      HEAPF32[(($135)>>2)]=0.0;
      break;
     } else {
      __ZN6b2Vec3pLERKS_($134,$impulse4);
      break;
     }
    } else if (((($99|0))|0)==((3)|0)) {
     $101=(($this+84)|0);
     __ZN6b2Vec3pLERKS_($101,$impulse4);
    }
   } while(0);
   $165=(($impulse4)|0);
   $166=(+(HEAPF32[(($165)>>2)]));
   $167=(($impulse4+4)|0);
   $168=(+(HEAPF32[(($167)>>2)]));
   __ZN6b2Vec2C1Eff($P,$166,$168);
   __ZmlfRK6b2Vec2($12,$42,$P);
   __ZN6b2Vec2mIERKS_($tmpcast,$12);
   $169=(+(__Z7b2CrossRK6b2Vec2S1_($92,$P)));
   $170=(($impulse4+8)|0);
   $171=(+(HEAPF32[(($170)>>2)]));
   $172=($169)+($171);
   __ZmlfRK6b2Vec2($13,$44,$P);
   __ZN6b2Vec2pLERKS_($tmpcast36,$13);
   $173=(+(__Z7b2CrossRK6b2Vec2S1_($91,$P)));
   $174=(+(HEAPF32[(($170)>>2)]));
   $175=($173)+($174);
   $_pn39=$172;$_pn38=$175;


   $_pn37=($46)*($_pn39);
   $_pn=($48)*($_pn38);
   $wA_1=($wA_0)-($_pn37);
   $wB_1=($wB_0)+($_pn);
   $193=((HEAP32[(($21)>>2)])|0);
   $194=((HEAP32[(($23)>>2)])|0);
   $195=(($194+((($193)*(12))&-1))|0);
   $196=$195;
   $ld$8$0=(($vA)|0);
   $197$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($vA+4)|0);
   $197$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($196)|0);
   HEAP32[(($st$10$0)>>2)]=$197$0;
   $st$11$1=(($196+4)|0);
   HEAP32[(($st$11$1)>>2)]=$197$1;
   $198=((HEAP32[(($21)>>2)])|0);
   $199=((HEAP32[(($23)>>2)])|0);
   $200=(($199+((($198)*(12))&-1)+8)|0);
   HEAPF32[(($200)>>2)]=$wA_1;
   $201=((HEAP32[(($32)>>2)])|0);
   $202=((HEAP32[(($23)>>2)])|0);
   $203=(($202+((($201)*(12))&-1))|0);
   $204=$203;
   $ld$12$0=(($vB)|0);
   $205$0=((HEAP32[(($ld$12$0)>>2)])|0);
   $ld$13$1=(($vB+4)|0);
   $205$1=((HEAP32[(($ld$13$1)>>2)])|0);
   $st$14$0=(($204)|0);
   HEAP32[(($st$14$0)>>2)]=$205$0;
   $st$15$1=(($204+4)|0);
   HEAP32[(($st$15$1)>>2)]=$205$1;
   $206=((HEAP32[(($32)>>2)])|0);
   $207=((HEAP32[(($23)>>2)])|0);
   $208=(($207+((($206)*(12))&-1)+8)|0);
   HEAPF32[(($208)>>2)]=$wB_1;
   STACKTOP=sp;return;
  }
 } while(0);
 $177=(($this+144)|0);
 __Z7b2CrossfRK6b2Vec2($16,$wB_0,$177);
 __ZplRK6b2Vec2S1_($15,$tmpcast36,$16);
 __ZmiRK6b2Vec2S1_($14,$15,$tmpcast);
 $178=(($this+136)|0);
 __Z7b2CrossfRK6b2Vec2($17,$wA_0,$178);
 __ZmiRK6b2Vec2S1_($Cdot8,$14,$17);
 $179=(($this+184)|0);
 __ZNK6b2Vec2ngEv($18,$Cdot8);
 __ZNK7b2Mat337Solve22ERK6b2Vec2($impulse9,$179,$18);
 $180=(($impulse9)|0);
 $181=(+(HEAPF32[(($180)>>2)]));
 $182=(($this+84)|0);
 $183=(+(HEAPF32[(($182)>>2)]));
 $184=($181)+($183);
 HEAPF32[(($182)>>2)]=$184;
 $185=(($impulse9+4)|0);
 $186=(+(HEAPF32[(($185)>>2)]));
 $187=(($this+88)|0);
 $188=(+(HEAPF32[(($187)>>2)]));
 $189=($186)+($188);
 HEAPF32[(($187)>>2)]=$189;
 __ZmlfRK6b2Vec2($19,$42,$impulse9);
 __ZN6b2Vec2mIERKS_($tmpcast,$19);
 $190=(+(__Z7b2CrossRK6b2Vec2S1_($178,$impulse9)));
 __ZmlfRK6b2Vec2($20,$44,$impulse9);
 __ZN6b2Vec2pLERKS_($tmpcast36,$20);
 $191=(+(__Z7b2CrossRK6b2Vec2S1_($177,$impulse9)));
 $_pn39=$190;$_pn38=$191;


 $_pn37=($46)*($_pn39);
 $_pn=($48)*($_pn38);
 $wA_1=($wA_0)-($_pn37);
 $wB_1=($wB_0)+($_pn);
 $193=((HEAP32[(($21)>>2)])|0);
 $194=((HEAP32[(($23)>>2)])|0);
 $195=(($194+((($193)*(12))&-1))|0);
 $196=$195;
 $ld$8$0=(($vA)|0);
 $197$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $197$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($196)|0);
 HEAP32[(($st$10$0)>>2)]=$197$0;
 $st$11$1=(($196+4)|0);
 HEAP32[(($st$11$1)>>2)]=$197$1;
 $198=((HEAP32[(($21)>>2)])|0);
 $199=((HEAP32[(($23)>>2)])|0);
 $200=(($199+((($198)*(12))&-1)+8)|0);
 HEAPF32[(($200)>>2)]=$wA_1;
 $201=((HEAP32[(($32)>>2)])|0);
 $202=((HEAP32[(($23)>>2)])|0);
 $203=(($202+((($201)*(12))&-1))|0);
 $204=$203;
 $ld$12$0=(($vB)|0);
 $205$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $205$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($204)|0);
 HEAP32[(($st$14$0)>>2)]=$205$0;
 $st$15$1=(($204+4)|0);
 HEAP32[(($st$15$1)>>2)]=$205$1;
 $206=((HEAP32[(($32)>>2)])|0);
 $207=((HEAP32[(($23)>>2)])|0);
 $208=(($207+((($206)*(12))&-1)+8)|0);
 HEAPF32[(($208)>>2)]=$wB_1;
 STACKTOP=sp;return;
}


function __ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast37=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$C3=0,$3=0,$4=0,$K=0,$impulse=0,$5=0,$6=0,$7=0,$8=0,$9=0;
 var $10=0,$11=0,$12=0,$13=0,$ld$0$0=0,$14$0=0,$ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0,$15=0,$16=0,$17=0,$18=.0,$19=0,$20=0,$21=0,$22=0,$ld$4$0=0,$23$0=0;
 var $ld$5$1=0,$23$1=0,$st$6$0=0,$st$7$1=0,$24=0,$25=0,$26=0,$27=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$34=.0,$35=.0,$36=.0,$37=0,$38=0,$39=0,$40=0;
 var $brmerge=0,$42=.0,$43=0,$44=.0,$45=.0,$47=0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0,$55=.0,$57=0,$58=.0,$59=.0,$60=.0,$61=.0,$62=.0;
 var $63=0,$64=.0,$65=.0,$66=.0,$68=0,$69=.0,$70=.0,$71=.0,$72=.0,$73=0,$74=.0,$75=.0,$76=.0,$limitImpulse_0=.0,$angularError_0=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0;
 var $83=.0,$angularError_1=.0,$aB_0=.0,$aA_0=.0,$85=0,$86=0,$87=0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=.0,$95=.0,$96=.0,$97=0,$98=.0,$99=.0,$100=.0;
 var $101=.0,$102=0,$103=.0,$104=.0,$105=.0,$106=.0,$107=0,$108=.0,$109=0,$110=.0,$111=.0,$112=.0,$113=.0,$114=0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=0;
 var $121=0,$122=.0,$123=.0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=0,$131=.0,$132=.0,$133=.0,$134=.0,$135=.0,$136=.0,$137=0,$138=0,$139=0,$140=0;
 var $ld$8$0=0,$141$0=0,$ld$9$1=0,$141$1=0,$st$10$0=0,$st$11$1=0,$142=0,$143=0,$144=0,$145=0,$146=0,$147=0,$148=0,$ld$12$0=0,$149$0=0,$ld$13$1=0,$149$1=0,$st$14$0=0,$st$15$1=0,$150=0;
 var $151=0,$152=0,$153=0,$155=0,$157=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $C3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $K=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $impulse=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=(($this+128)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($data+28)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+((($9)*(12))&-1))|0);
 $13=$12;
 $ld$0$0=(($13)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=((HEAP32[(($8)>>2)])|0);
 $16=((HEAP32[(($10)>>2)])|0);
 $17=(($16+((($15)*(12))&-1)+8)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+132)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($16+((($20)*(12))&-1))|0);
 $22=$21;
 $ld$4$0=(($22)|0);
 $23$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($22+4)|0);
 $23$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$23$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$23$1;
 $24=((HEAP32[(($19)>>2)])|0);
 $25=((HEAP32[(($10)>>2)])|0);
 $26=(($25+((($24)*(12))&-1)+8)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 __ZN5b2RotC1Ef($qA,$18);
 __ZN5b2RotC1Ef($qB,$27);
 $28=(($this+176)|0);
 $29=(($this+180)|0);
 $30=(($this+112)|0);
 $31=((HEAP8[($30)])|0);
 $32=(($31<<24)>>24)==0;
 do {
  if ($32) {
   $aA_0=$18;$aB_0=$27;$angularError_1=0.0;
  } else {
   $34=(+(HEAPF32[(($29)>>2)]));
   $35=(+(HEAPF32[(($28)>>2)]));
   $36=($34)+($35);
   $37=$36==(0.0);
   $38=(($this+224)|0);
   $39=((HEAP32[(($38)>>2)])|0);
   $40=($39|0)==0;
   $brmerge=$40|$37;
   if ($brmerge) {
    $aA_0=$18;$aB_0=$27;$angularError_1=0.0;
    break;
   }
   $42=($27)-($18);
   $43=(($this+116)|0);
   $44=(+(HEAPF32[(($43)>>2)]));
   $45=($42)-($44);
   if (((($39|0))|0)==((2)|0)) {
    $68=(($this+124)|0);
    $69=(+(HEAPF32[(($68)>>2)]));
    $70=($45)-($69);
    $71=($70)+((-0.03490658849477768));
    $72=(+(__Z7b2ClampIfET_S0_S0_S0_($71,0.0,0.13962635397911072)));
    $73=(($this+220)|0);
    $74=(+(HEAPF32[(($73)>>2)]));
    $75=((-.0))-($74);
    $76=($72)*($75);
    $angularError_0=$70;$limitImpulse_0=$76;
   } else if (((($39|0))|0)==((3)|0)) {
    $47=(($this+120)|0);
    $48=(+(HEAPF32[(($47)>>2)]));
    $49=($45)-($48);
    $50=(+(__Z7b2ClampIfET_S0_S0_S0_($49,-0.13962635397911072,0.13962635397911072)));
    $51=(($this+220)|0);
    $52=(+(HEAPF32[(($51)>>2)]));
    $53=((-.0))-($52);
    $54=($50)*($53);
    $55=(+(__Z5b2AbsIfET_S0_($50)));
    $angularError_0=$55;$limitImpulse_0=$54;
   } else if (((($39|0))|0)==((1)|0)) {
    $57=(($this+120)|0);
    $58=(+(HEAPF32[(($57)>>2)]));
    $59=($45)-($58);
    $60=((-.0))-($59);
    $61=($59)+((0.03490658849477768));
    $62=(+(__Z7b2ClampIfET_S0_S0_S0_($61,-0.13962635397911072,0.0)));
    $63=(($this+220)|0);
    $64=(+(HEAPF32[(($63)>>2)]));
    $65=((-.0))-($64);
    $66=($62)*($65);
    $angularError_0=$60;$limitImpulse_0=$66;
   } else {
    $angularError_0=0.0;$limitImpulse_0=0.0;
   }


   $78=(+(HEAPF32[(($28)>>2)]));
   $79=($limitImpulse_0)*($78);
   $80=($18)-($79);
   $81=(+(HEAPF32[(($29)>>2)]));
   $82=($limitImpulse_0)*($81);
   $83=($27)+($82);
   $aA_0=$80;$aB_0=$83;$angularError_1=$angularError_0;
  }
 } while(0);



 __ZN5b2Rot3SetEf($qA,$aA_0);
 __ZN5b2Rot3SetEf($qB,$aB_0);
 $85=(($this+68)|0);
 $86=(($this+152)|0);
 __ZmiRK6b2Vec2S1_($1,$85,$86);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $87=(($this+76)|0);
 $88=(($this+160)|0);
 __ZmiRK6b2Vec2S1_($2,$87,$88);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast37,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($C3,$3,$rA);
 $89=(+(__ZNK6b2Vec26LengthEv($C3)));
 $90=(($this+168)|0);
 $91=(+(HEAPF32[(($90)>>2)]));
 $92=(($this+172)|0);
 $93=(+(HEAPF32[(($92)>>2)]));
 $94=(+(HEAPF32[(($28)>>2)]));
 $95=(+(HEAPF32[(($29)>>2)]));
 $96=($91)+($93);
 $97=(($rA+4)|0);
 $98=(+(HEAPF32[(($97)>>2)]));
 $99=($94)*($98);
 $100=($98)*($99);
 $101=($96)+($100);
 $102=(($rB+4)|0);
 $103=(+(HEAPF32[(($102)>>2)]));
 $104=($95)*($103);
 $105=($103)*($104);
 $106=($101)+($105);
 $107=(($K)|0);
 HEAPF32[(($107)>>2)]=$106;
 $108=((-.0))-($94);
 $109=(($rA)|0);
 $110=(+(HEAPF32[(($109)>>2)]));
 $111=($110)*($108);
 $112=(+(HEAPF32[(($97)>>2)]));
 $113=($111)*($112);
 $114=(($rB)|0);
 $115=(+(HEAPF32[(($114)>>2)]));
 $116=($95)*($115);
 $117=(+(HEAPF32[(($102)>>2)]));
 $118=($116)*($117);
 $119=($113)-($118);
 $120=(($K+4)|0);
 HEAPF32[(($120)>>2)]=$119;
 $121=(($K+8)|0);
 HEAPF32[(($121)>>2)]=$119;
 $122=(+(HEAPF32[(($109)>>2)]));
 $123=($94)*($122);
 $124=($122)*($123);
 $125=($96)+($124);
 $126=(+(HEAPF32[(($114)>>2)]));
 $127=($95)*($126);
 $128=($126)*($127);
 $129=($125)+($128);
 $130=(($K+12)|0);
 HEAPF32[(($130)>>2)]=$129;
 __ZNK7b2Mat225SolveERK6b2Vec2($5,$K,$C3);
 __ZNK6b2Vec2ngEv($impulse,$5);
 __ZmlfRK6b2Vec2($6,$91,$impulse);
 __ZN6b2Vec2mIERKS_($tmpcast,$6);
 $131=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$impulse)));
 $132=($94)*($131);
 $133=($aA_0)-($132);
 __ZmlfRK6b2Vec2($7,$93,$impulse);
 __ZN6b2Vec2pLERKS_($tmpcast37,$7);
 $134=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$impulse)));
 $135=($95)*($134);
 $136=($aB_0)+($135);
 $137=((HEAP32[(($8)>>2)])|0);
 $138=((HEAP32[(($10)>>2)])|0);
 $139=(($138+((($137)*(12))&-1))|0);
 $140=$139;
 $ld$8$0=(($cA)|0);
 $141$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $141$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($140)|0);
 HEAP32[(($st$10$0)>>2)]=$141$0;
 $st$11$1=(($140+4)|0);
 HEAP32[(($st$11$1)>>2)]=$141$1;
 $142=((HEAP32[(($8)>>2)])|0);
 $143=((HEAP32[(($10)>>2)])|0);
 $144=(($143+((($142)*(12))&-1)+8)|0);
 HEAPF32[(($144)>>2)]=$133;
 $145=((HEAP32[(($19)>>2)])|0);
 $146=((HEAP32[(($10)>>2)])|0);
 $147=(($146+((($145)*(12))&-1))|0);
 $148=$147;
 $ld$12$0=(($cB)|0);
 $149$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $149$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($148)|0);
 HEAP32[(($st$14$0)>>2)]=$149$0;
 $st$15$1=(($148+4)|0);
 HEAP32[(($st$15$1)>>2)]=$149$1;
 $150=((HEAP32[(($19)>>2)])|0);
 $151=((HEAP32[(($10)>>2)])|0);
 $152=(($151+((($150)*(12))&-1)+8)|0);
 HEAPF32[(($152)>>2)]=$136;
 $153=$89>(0.004999999888241291);
 if ($153) {
  $157=0;

  STACKTOP=sp;return (($157)|0);
 }
 $155=$angularError_1<=(0.03490658849477768);
 $157=$155;

 STACKTOP=sp;return (($157)|0);
}


function __ZNK15b2RevoluteJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+68)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2RevoluteJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK15b2RevoluteJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $P=0,$1=0,$2=.0,$3=0,$4=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $P=((sp)|0);
 $1=(($this+84)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+88)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 __ZN6b2Vec2C1Eff($P,$2,$4);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$P);
 STACKTOP=sp;return;
}


function __ZNK15b2RevoluteJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+92)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN15b2RevoluteJoint13SetMotorSpeedEf($this,$speed){
 $this=($this)|0;
 $speed=+($speed);
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+108)|0);
 HEAPF32[(($5)>>2)]=$speed;
 return;
}


function __ZN15b2RevoluteJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=0,$29=0,$30=0,$31=.0,$32=.0,$33=0,$34=.0,$35=.0,$36=0,$37=0,$38=0,$39=0,$40=.0;
 var $41=.0,$42=0,$43=.0,$44=.0,$45=0,$46=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3048,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3568,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2744,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2360,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(1896,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1432,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+116)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 __Z5b2LogPKcz(1088,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$26,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $27=(($this+112)|0);
 $28=((HEAP8[($27)])|0);
 $29=($28&255);
 __Z5b2LogPKcz(712,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+120)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 __Z5b2LogPKcz(416,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+124)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=$34;
 __Z5b2LogPKcz(136,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$35,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $36=(($this+100)|0);
 $37=((HEAP8[($36)])|0);
 $38=($37&255);
 __Z5b2LogPKcz(4048,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$38,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $39=(($this+108)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=$40;
 __Z5b2LogPKcz(3840,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$41,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $42=(($this+104)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=$43;
 __Z5b2LogPKcz(3408,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$44,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $45=(($this+56)|0);
 $46=((HEAP32[(($45)>>2)])|0);
 __Z5b2LogPKcz(3256,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$46,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN15b2RevoluteJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2RevoluteJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN15b2WheelJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_($this,$bA,$bB,$anchor,$axis){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $anchor=($anchor)|0;
 $axis=($axis)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast6=0,$3=0,$tmpcast7=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0;
 var $ld$4$0=0,$13$0=0,$ld$5$1=0,$13$1=0,$st$6$0=0,$st$7$1=0,$14=0,$15=0,$16=0,$ld$8$0=0,$17$0=0,$ld$9$1=0,$17$1=0,$st$10$0=0,$st$11$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast6=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast7=$3;
 $4=(($this+8)|0);
 HEAP32[(($4)>>2)]=$bA;
 $5=(($this+12)|0);
 HEAP32[(($5)>>2)]=$bB;
 $6=(($this+20)|0);
 $7=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$7,$anchor);
 $8=$6;
 $ld$0$0=(($1)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($this+28)|0);
 $11=((HEAP32[(($5)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast6,$11,$anchor);
 $12=$10;
 $ld$4$0=(($2)|0);
 $13$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $13$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($12)|0);
 HEAP32[(($st$6$0)>>2)]=$13$0;
 $st$7$1=(($12+4)|0);
 HEAP32[(($st$7$1)>>2)]=$13$1;
 $14=(($this+36)|0);
 $15=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body14GetLocalVectorERK6b2Vec2($tmpcast7,$15,$axis);
 $16=$14;
 $ld$8$0=(($3)|0);
 $17$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($3+4)|0);
 $17$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($16)|0);
 HEAP32[(($st$10$0)>>2)]=$17$0;
 $st$11$1=(($16+4)|0);
 HEAP32[(($st$11$1)>>2)]=$17$1;
 STACKTOP=sp;return;
}


function __ZN12b2WheelJointC2EPK15b2WheelJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$ld$0$0=0,$14$0=0,$ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0;
 var $15=0,$16=0,$17=0,$ld$4$0=0,$18$0=0,$ld$5$1=0,$18$1=0,$st$6$0=0,$st$7$1=0,$19=0,$20=0,$21=0,$ld$8$0=0,$22$0=0,$ld$9$1=0,$22$1=0,$st$10$0=0,$st$11$1=0,$23=0,$ld$12$0=0;
 var $24$0=0,$ld$13$1=0,$24$1=0,$st$14$0=0,$st$15$1=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=.0,$33=0,$34=0,$35=.0,$36=0,$37=0,$38=0,$39=0;
 var $40=0,$41=.0,$42=0,$43=0,$44=.0,$45=0,$46=0,$47=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=(($this)|0);
 $3=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($2,$3);
 $4=(($this)|0);
 HEAP32[(($4)>>2)]=5552;
 $5=(($this+76)|0);
 $6=(($this+84)|0);
 $7=(($this+92)|0);
 $8=(($this+100)|0);
 $9=(($this+172)|0);
 $10=(($this+180)|0);
 $11=(($def+20)|0);
 $12=$11;
 $13=$5;
 $ld$0$0=(($12)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($13)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($13+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=(($def+28)|0);
 $16=$15;
 $17=$6;
 $ld$4$0=(($16)|0);
 $18$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($16+4)|0);
 $18$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($17)|0);
 HEAP32[(($st$6$0)>>2)]=$18$0;
 $st$7$1=(($17+4)|0);
 HEAP32[(($st$7$1)>>2)]=$18$1;
 $19=(($def+36)|0);
 $20=$19;
 $21=$7;
 $ld$8$0=(($20)|0);
 $22$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($20+4)|0);
 $22$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($21)|0);
 HEAP32[(($st$10$0)>>2)]=$22$0;
 $st$11$1=(($21+4)|0);
 HEAP32[(($st$11$1)>>2)]=$22$1;
 __Z7b2CrossfRK6b2Vec2($tmpcast,1.0,$7);
 $23=$8;
 $ld$12$0=(($1)|0);
 $24$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($1+4)|0);
 $24$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($23)|0);
 HEAP32[(($st$14$0)>>2)]=$24$0;
 $st$15$1=(($23+4)|0);
 HEAP32[(($st$15$1)>>2)]=$24$1;
 $25=(($this+204)|0);
 HEAPF32[(($25)>>2)]=0.0;
 $26=(($this+108)|0);
 HEAPF32[(($26)>>2)]=0.0;
 $27=(($this+208)|0);
 HEAPF32[(($27)>>2)]=0.0;
 $28=(($this+112)|0);
 HEAPF32[(($28)>>2)]=0.0;
 $29=(($this+212)|0);
 HEAPF32[(($29)>>2)]=0.0;
 $30=(($this+116)|0);
 HEAPF32[(($30)>>2)]=0.0;
 $31=(($def+48)|0);
 $32=(+(HEAPF32[(($31)>>2)]));
 $33=(($this+120)|0);
 HEAPF32[(($33)>>2)]=$32;
 $34=(($def+52)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+124)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=(($def+44)|0);
 $38=((HEAP8[($37)])|0);
 $39=(($this+128)|0);
 HEAP8[($39)]=$38;
 $40=(($def+56)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+68)|0);
 HEAPF32[(($42)>>2)]=$41;
 $43=(($def+60)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=(($this+72)|0);
 HEAPF32[(($45)>>2)]=$44;
 $46=(($this+216)|0);
 HEAPF32[(($46)>>2)]=0.0;
 $47=(($this+220)|0);
 HEAPF32[(($47)>>2)]=0.0;
 __ZN6b2Vec27SetZeroEv($9);
 __ZN6b2Vec27SetZeroEv($10);
 STACKTOP=sp;return;
}


function __ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast33=0,$cB=0,$tmpcast34=0,$vB=0,$tmpcast35=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$d=0,$3=0,$4=0,$5=0,$tmpcast36=0,$6=0;
 var $7=0,$tmpcast37=0,$8=0,$P=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0;
 var $25=0,$26=0,$27=0,$ld$0$0=0,$28$0=0,$ld$1$1=0,$28$1=0,$st$2$0=0,$st$3$1=0,$29=0,$30=0,$31=0,$32=0,$33=0,$ld$4$0=0,$34$0=0,$ld$5$1=0,$34$1=0,$st$6$0=0,$st$7$1=0;
 var $35=0,$36=0,$37=.0,$38=0,$39=0,$40=0,$41=.0,$42=0,$43=0,$44=0,$45=.0,$46=0,$47=0,$48=0,$49=.0,$50=0,$51=.0,$52=.0,$53=.0,$54=0;
 var $55=0,$56=0,$57=0,$58=0,$ld$8$0=0,$59$0=0,$ld$9$1=0,$59$1=0,$st$10$0=0,$st$11$1=0,$60=0,$61=0,$62=0,$63=.0,$64=0,$65=0,$66=0,$67=0,$ld$12$0=0,$68$0=0;
 var $ld$13$1=0,$68$1=0,$st$14$0=0,$st$15$1=0,$69=0,$70=0,$71=0,$72=.0,$73=0,$74=0,$75=0,$76=0,$ld$16$0=0,$77$0=0,$ld$17$1=0,$77$1=0,$st$18$0=0,$st$19$1=0,$78=0,$79=0;
 var $80=0,$81=.0,$82=0,$83=0,$84=0,$ld$20$0=0,$85$0=0,$ld$21$1=0,$85$1=0,$st$22$0=0,$st$23$1=0,$86=0,$87=0,$88=0,$89=.0,$90=0,$91=0,$92=0,$93=0,$94=0;
 var $ld$24$0=0,$95$0=0,$ld$25$1=0,$95$1=0,$st$26$0=0,$st$27$1=0,$96=.0,$97=0,$98=.0,$99=0,$100=.0,$101=.0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=.0,$108=0,$109=0;
 var $111=.0,$storemerge38=.0,$113=0,$114=0,$115=0,$116=0,$117=.0,$118=0,$120=0,$121=0,$122=0,$ld$28$0=0,$123$0=0,$ld$29$1=0,$123$1=0,$st$30$0=0,$st$31$1=0,$124=.0,$125=0,$126=.0;
 var $127=0,$128=.0,$129=.0,$130=.0,$131=.0,$132=.0,$133=.0,$134=.0,$135=0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=0,$143=.0,$144=.0,$145=.0,$146=.0,$147=.0;
 var $148=0,$149=.0,$150=.0,$151=.0,$152=.0,$153=0,$155=.0,$storemerge=.0,$157=.0,$158=.0,$159=.0,$160=.0,$161=.0,$162=0,$164=.0,$166=0,$168=0,$169=0,$170=0,$172=.0;
 var $173=0,$174=0,$176=.0,$178=0,$179=0,$181=0,$182=0,$183=0,$185=0,$186=.0,$187=0,$188=.0,$189=.0,$190=.0,$191=0,$192=.0,$193=.0,$194=.0,$195=0,$196=.0;
 var $197=.0,$198=.0,$199=.0,$200=0,$201=.0,$202=.0,$203=.0,$204=.0,$205=0,$206=.0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=0,$214=.0,$215=.0,$216=.0;
 var $217=.0,$218=.0,$219=.0,$220=.0,$221=.0,$222=.0,$223=.0,$224=.0,$225=.0,$227=0,$228=0,$229=0,$wB_0=.0,$wA_0=.0,$231=0,$232=0,$233=0,$234=0,$ld$32$0=0,$235$0=0;
 var $ld$33$1=0,$235$1=0,$st$34$0=0,$st$35$1=0,$236=0,$237=0,$238=0,$239=0,$240=0,$241=0,$242=0,$ld$36$0=0,$243$0=0,$ld$37$1=0,$243$1=0,$st$38$0=0,$st$39$1=0,$244=0,$245=0,$246=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast36=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=(($this+48)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+8)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($this+132)|0);
 HEAP32[(($17)>>2)]=$16;
 $18=(($this+52)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($19+8)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($this+136)|0);
 HEAP32[(($22)>>2)]=$21;
 $23=(($this+140)|0);
 $24=((HEAP32[(($13)>>2)])|0);
 $25=(($24+44)|0);
 $26=$25;
 $27=$23;
 $ld$0$0=(($26)|0);
 $28$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($26+4)|0);
 $28$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($27)|0);
 HEAP32[(($st$2$0)>>2)]=$28$0;
 $st$3$1=(($27+4)|0);
 HEAP32[(($st$3$1)>>2)]=$28$1;
 $29=(($this+148)|0);
 $30=((HEAP32[(($18)>>2)])|0);
 $31=(($30+44)|0);
 $32=$31;
 $33=$29;
 $ld$4$0=(($32)|0);
 $34$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($32+4)|0);
 $34$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($33)|0);
 HEAP32[(($st$6$0)>>2)]=$34$0;
 $st$7$1=(($33+4)|0);
 HEAP32[(($st$7$1)>>2)]=$34$1;
 $35=((HEAP32[(($13)>>2)])|0);
 $36=(($35+136)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+156)|0);
 HEAPF32[(($38)>>2)]=$37;
 $39=((HEAP32[(($18)>>2)])|0);
 $40=(($39+136)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=(($this+160)|0);
 HEAPF32[(($42)>>2)]=$41;
 $43=((HEAP32[(($13)>>2)])|0);
 $44=(($43+144)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 $46=(($this+164)|0);
 HEAPF32[(($46)>>2)]=$45;
 $47=((HEAP32[(($18)>>2)])|0);
 $48=(($47+144)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($this+168)|0);
 HEAPF32[(($50)>>2)]=$49;
 $51=(+(HEAPF32[(($38)>>2)]));
 $52=(+(HEAPF32[(($42)>>2)]));
 $53=(+(HEAPF32[(($46)>>2)]));
 $54=((HEAP32[(($17)>>2)])|0);
 $55=(($data+28)|0);
 $56=((HEAP32[(($55)>>2)])|0);
 $57=(($56+((($54)*(12))&-1))|0);
 $58=$57;
 $ld$8$0=(($58)|0);
 $59$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($58+4)|0);
 $59$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$59$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$59$1;
 $60=((HEAP32[(($17)>>2)])|0);
 $61=((HEAP32[(($55)>>2)])|0);
 $62=(($61+((($60)*(12))&-1)+8)|0);
 $63=(+(HEAPF32[(($62)>>2)]));
 $64=(($data+32)|0);
 $65=((HEAP32[(($64)>>2)])|0);
 $66=(($65+((($60)*(12))&-1))|0);
 $67=$66;
 $ld$12$0=(($67)|0);
 $68$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($67+4)|0);
 $68$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$68$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$68$1;
 $69=((HEAP32[(($17)>>2)])|0);
 $70=((HEAP32[(($64)>>2)])|0);
 $71=(($70+((($69)*(12))&-1)+8)|0);
 $72=(+(HEAPF32[(($71)>>2)]));
 $73=((HEAP32[(($22)>>2)])|0);
 $74=((HEAP32[(($55)>>2)])|0);
 $75=(($74+((($73)*(12))&-1))|0);
 $76=$75;
 $ld$16$0=(($76)|0);
 $77$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($76+4)|0);
 $77$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$77$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$77$1;
 $78=((HEAP32[(($22)>>2)])|0);
 $79=((HEAP32[(($55)>>2)])|0);
 $80=(($79+((($78)*(12))&-1)+8)|0);
 $81=(+(HEAPF32[(($80)>>2)]));
 $82=((HEAP32[(($64)>>2)])|0);
 $83=(($82+((($78)*(12))&-1))|0);
 $84=$83;
 $ld$20$0=(($84)|0);
 $85$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($84+4)|0);
 $85$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$85$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$85$1;
 $86=((HEAP32[(($22)>>2)])|0);
 $87=((HEAP32[(($64)>>2)])|0);
 $88=(($87+((($86)*(12))&-1)+8)|0);
 $89=(+(HEAPF32[(($88)>>2)]));
 __ZN5b2RotC1Ef($qA,$63);
 __ZN5b2RotC1Ef($qB,$81);
 $90=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($1,$90,$23);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $91=(($this+84)|0);
 __ZmiRK6b2Vec2S1_($2,$91,$29);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($4,$tmpcast34,$rB);
 __ZmiRK6b2Vec2S1_($3,$4,$tmpcast);
 __ZmiRK6b2Vec2S1_($d,$3,$rA);
 $92=(($this+180)|0);
 $93=(($this+100)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast36,$qA,$93);
 $94=$92;
 $ld$24$0=(($5)|0);
 $95$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($5+4)|0);
 $95$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($94)|0);
 HEAP32[(($st$26$0)>>2)]=$95$0;
 $st$27$1=(($94+4)|0);
 HEAP32[(($st$27$1)>>2)]=$95$1;
 __ZplRK6b2Vec2S1_($6,$d,$rA);
 $96=(+(__Z7b2CrossRK6b2Vec2S1_($6,$92)));
 $97=(($this+196)|0);
 HEAPF32[(($97)>>2)]=$96;
 $98=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$92)));
 $99=(($this+200)|0);
 HEAPF32[(($99)>>2)]=$98;
 $100=($51)+($52);
 $101=(+(HEAPF32[(($97)>>2)]));
 $102=($53)*($101);
 $103=($101)*($102);
 $104=($100)+($103);
 $105=($49)*($98);
 $106=($98)*($105);
 $107=($106)+($104);
 $108=(($this+204)|0);
 $109=$107>(0.0);
 if ($109) {
  $111=((1.0))/($107);
  $storemerge38=$111;
 } else {
  $storemerge38=$107;
 }

 HEAPF32[(($108)>>2)]=$storemerge38;
 $113=(($this+212)|0);
 HEAPF32[(($113)>>2)]=0.0;
 $114=(($this+216)|0);
 HEAPF32[(($114)>>2)]=0.0;
 $115=(($this+220)|0);
 HEAPF32[(($115)>>2)]=0.0;
 $116=(($this+68)|0);
 $117=(+(HEAPF32[(($116)>>2)]));
 $118=$117>(0.0);
 do {
  if ($118) {
   $120=(($this+172)|0);
   $121=(($this+92)|0);
   __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast37,$qA,$121);
   $122=$120;
   $ld$28$0=(($7)|0);
   $123$0=((HEAP32[(($ld$28$0)>>2)])|0);
   $ld$29$1=(($7+4)|0);
   $123$1=((HEAP32[(($ld$29$1)>>2)])|0);
   $st$30$0=(($122)|0);
   HEAP32[(($st$30$0)>>2)]=$123$0;
   $st$31$1=(($122+4)|0);
   HEAP32[(($st$31$1)>>2)]=$123$1;
   __ZplRK6b2Vec2S1_($8,$d,$rA);
   $124=(+(__Z7b2CrossRK6b2Vec2S1_($8,$120)));
   $125=(($this+188)|0);
   HEAPF32[(($125)>>2)]=$124;
   $126=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$120)));
   $127=(($this+192)|0);
   HEAPF32[(($127)>>2)]=$126;
   $128=(+(HEAPF32[(($125)>>2)]));
   $129=($53)*($128);
   $130=($128)*($129);
   $131=($100)+($130);
   $132=($49)*($126);
   $133=($126)*($132);
   $134=($133)+($131);
   $135=$134>(0.0);
   if (!($135)) {
    break;
   }
   $137=((1.0))/($134);
   HEAPF32[(($113)>>2)]=$137;
   $138=(+(__Z5b2DotRK6b2Vec2S1_($d,$120)));
   $139=(+(HEAPF32[(($116)>>2)]));
   $140=($139)*((6.2831854820251465));
   $141=($137)*((2.0));
   $142=(($this+72)|0);
   $143=(+(HEAPF32[(($142)>>2)]));
   $144=($141)*($143);
   $145=($140)*($144);
   $146=($137)*($140);
   $147=($140)*($146);
   $148=(($data)|0);
   $149=(+(HEAPF32[(($148)>>2)]));
   $150=($149)*($147);
   $151=($145)+($150);
   $152=($149)*($151);
   $153=$152>(0.0);
   if ($153) {
    $155=((1.0))/($152);
    $storemerge=$155;
   } else {
    $storemerge=$152;
   }

   HEAPF32[(($115)>>2)]=$storemerge;
   $157=($138)*($149);
   $158=($157)*($147);
   $159=($158)*($storemerge);
   HEAPF32[(($114)>>2)]=$159;
   $160=(+(HEAPF32[(($115)>>2)]));
   $161=($134)+($160);
   HEAPF32[(($113)>>2)]=$161;
   $162=$161>(0.0);
   if (!($162)) {
    break;
   }
   $164=((1.0))/($161);
   HEAPF32[(($113)>>2)]=$164;
  } else {
   $166=(($this+116)|0);
   HEAPF32[(($166)>>2)]=0.0;
  }
 } while(0);
 $168=(($this+128)|0);
 $169=((HEAP8[($168)])|0);
 $170=(($169<<24)>>24)==0;
 do {
  if ($170) {
   $178=(($this+208)|0);
   HEAPF32[(($178)>>2)]=0.0;
   $179=(($this+112)|0);
   HEAPF32[(($179)>>2)]=0.0;
  } else {
   $172=($49)+($53);
   $173=(($this+208)|0);
   HEAPF32[(($173)>>2)]=$172;
   $174=$172>(0.0);
   if (!($174)) {
    break;
   }
   $176=((1.0))/($172);
   HEAPF32[(($173)>>2)]=$176;
  }
 } while(0);
 $181=(($data+24)|0);
 $182=((HEAP8[($181)])|0);
 $183=(($182<<24)>>24)==0;
 if ($183) {
  $227=(($this+108)|0);
  HEAPF32[(($227)>>2)]=0.0;
  $228=(($this+116)|0);
  HEAPF32[(($228)>>2)]=0.0;
  $229=(($this+112)|0);
  HEAPF32[(($229)>>2)]=0.0;
  $wA_0=$72;$wB_0=$89;


  $231=((HEAP32[(($17)>>2)])|0);
  $232=((HEAP32[(($64)>>2)])|0);
  $233=(($232+((($231)*(12))&-1))|0);
  $234=$233;
  $ld$32$0=(($vA)|0);
  $235$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($vA+4)|0);
  $235$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($234)|0);
  HEAP32[(($st$34$0)>>2)]=$235$0;
  $st$35$1=(($234+4)|0);
  HEAP32[(($st$35$1)>>2)]=$235$1;
  $236=((HEAP32[(($17)>>2)])|0);
  $237=((HEAP32[(($64)>>2)])|0);
  $238=(($237+((($236)*(12))&-1)+8)|0);
  HEAPF32[(($238)>>2)]=$wA_0;
  $239=((HEAP32[(($22)>>2)])|0);
  $240=((HEAP32[(($64)>>2)])|0);
  $241=(($240+((($239)*(12))&-1))|0);
  $242=$241;
  $ld$36$0=(($vB)|0);
  $243$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vB+4)|0);
  $243$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($242)|0);
  HEAP32[(($st$38$0)>>2)]=$243$0;
  $st$39$1=(($242+4)|0);
  HEAP32[(($st$39$1)>>2)]=$243$1;
  $244=((HEAP32[(($22)>>2)])|0);
  $245=((HEAP32[(($64)>>2)])|0);
  $246=(($245+((($244)*(12))&-1)+8)|0);
  HEAPF32[(($246)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $185=(($data+8)|0);
  $186=(+(HEAPF32[(($185)>>2)]));
  $187=(($this+108)|0);
  $188=(+(HEAPF32[(($187)>>2)]));
  $189=($186)*($188);
  HEAPF32[(($187)>>2)]=$189;
  $190=(+(HEAPF32[(($185)>>2)]));
  $191=(($this+116)|0);
  $192=(+(HEAPF32[(($191)>>2)]));
  $193=($190)*($192);
  HEAPF32[(($191)>>2)]=$193;
  $194=(+(HEAPF32[(($185)>>2)]));
  $195=(($this+112)|0);
  $196=(+(HEAPF32[(($195)>>2)]));
  $197=($194)*($196);
  HEAPF32[(($195)>>2)]=$197;
  $198=(+(HEAPF32[(($187)>>2)]));
  __ZmlfRK6b2Vec2($9,$198,$92);
  $199=(+(HEAPF32[(($191)>>2)]));
  $200=(($this+172)|0);
  __ZmlfRK6b2Vec2($10,$199,$200);
  __ZplRK6b2Vec2S1_($P,$9,$10);
  $201=(+(HEAPF32[(($187)>>2)]));
  $202=(+(HEAPF32[(($97)>>2)]));
  $203=($201)*($202);
  $204=(+(HEAPF32[(($191)>>2)]));
  $205=(($this+188)|0);
  $206=(+(HEAPF32[(($205)>>2)]));
  $207=($204)*($206);
  $208=($203)+($207);
  $209=(+(HEAPF32[(($195)>>2)]));
  $210=($209)+($208);
  $211=(+(HEAPF32[(($99)>>2)]));
  $212=($201)*($211);
  $213=(($this+192)|0);
  $214=(+(HEAPF32[(($213)>>2)]));
  $215=($204)*($214);
  $216=($212)+($215);
  $217=($209)+($216);
  $218=(+(HEAPF32[(($38)>>2)]));
  __ZmlfRK6b2Vec2($11,$218,$P);
  __ZN6b2Vec2mIERKS_($tmpcast33,$11);
  $219=(+(HEAPF32[(($46)>>2)]));
  $220=($210)*($219);
  $221=($72)-($220);
  $222=(+(HEAPF32[(($42)>>2)]));
  __ZmlfRK6b2Vec2($12,$222,$P);
  __ZN6b2Vec2pLERKS_($tmpcast35,$12);
  $223=(+(HEAPF32[(($50)>>2)]));
  $224=($217)*($223);
  $225=($89)+($224);
  $wA_0=$221;$wB_0=$225;


  $231=((HEAP32[(($17)>>2)])|0);
  $232=((HEAP32[(($64)>>2)])|0);
  $233=(($232+((($231)*(12))&-1))|0);
  $234=$233;
  $ld$32$0=(($vA)|0);
  $235$0=((HEAP32[(($ld$32$0)>>2)])|0);
  $ld$33$1=(($vA+4)|0);
  $235$1=((HEAP32[(($ld$33$1)>>2)])|0);
  $st$34$0=(($234)|0);
  HEAP32[(($st$34$0)>>2)]=$235$0;
  $st$35$1=(($234+4)|0);
  HEAP32[(($st$35$1)>>2)]=$235$1;
  $236=((HEAP32[(($17)>>2)])|0);
  $237=((HEAP32[(($64)>>2)])|0);
  $238=(($237+((($236)*(12))&-1)+8)|0);
  HEAPF32[(($238)>>2)]=$wA_0;
  $239=((HEAP32[(($22)>>2)])|0);
  $240=((HEAP32[(($64)>>2)])|0);
  $241=(($240+((($239)*(12))&-1))|0);
  $242=$241;
  $ld$36$0=(($vB)|0);
  $243$0=((HEAP32[(($ld$36$0)>>2)])|0);
  $ld$37$1=(($vB+4)|0);
  $243$1=((HEAP32[(($ld$37$1)>>2)])|0);
  $st$38$0=(($242)|0);
  HEAP32[(($st$38$0)>>2)]=$243$0;
  $st$39$1=(($242+4)|0);
  HEAP32[(($st$39$1)>>2)]=$243$1;
  $244=((HEAP32[(($22)>>2)])|0);
  $245=((HEAP32[(($64)>>2)])|0);
  $246=(($245+((($244)*(12))&-1)+8)|0);
  HEAPF32[(($246)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast37=0,$1=0,$P=0,$2=0,$3=0,$4=0,$P5=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$10=.0,$11=0,$12=.0,$13=0,$14=.0;
 var $15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$ld$0$0=0,$21$0=0,$ld$1$1=0,$21$1=0,$st$2$0=0,$st$3$1=0,$22=0,$23=0,$24=0,$25=.0,$26=0,$27=0,$28=0,$29=0;
 var $ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0,$st$7$1=0,$31=0,$32=0,$33=0,$34=.0,$35=0,$36=.0,$37=0,$38=.0,$39=.0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0;
 var $45=0,$46=.0,$47=.0,$48=0,$49=.0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=.0,$56=.0,$57=.0,$58=.0,$59=.0,$60=.0,$61=.0,$62=.0,$63=.0,$64=.0;
 var $65=.0,$66=.0,$67=.0,$68=0,$69=.0,$70=.0,$71=0,$72=.0,$73=.0,$74=.0,$75=0,$76=.0,$77=0,$78=.0,$79=0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0;
 var $85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=.0,$95=.0,$96=0,$97=.0,$98=.0,$99=.0,$100=0,$101=.0,$102=.0,$103=.0,$104=0;
 var $105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=0,$116=0,$117=0,$118=0,$ld$8$0=0,$119$0=0,$ld$9$1=0,$119$1=0,$st$10$0=0,$st$11$1=0;
 var $120=0,$121=0,$122=0,$123=0,$124=0,$125=0,$126=0,$ld$12$0=0,$127$0=0,$ld$13$1=0,$127$1=0,$st$14$0=0,$st$15$1=0,$128=0,$129=0,$130=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast37=$vB;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+156)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($this+160)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=(($this+164)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=(($this+168)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=(($this+132)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($data+32)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($18+((($16)*(12))&-1))|0);
 $20=$19;
 $ld$0$0=(($20)|0);
 $21$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$21$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$21$1;
 $22=((HEAP32[(($15)>>2)])|0);
 $23=((HEAP32[(($17)>>2)])|0);
 $24=(($23+((($22)*(12))&-1)+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+136)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($23+((($27)*(12))&-1))|0);
 $29=$28;
 $ld$4$0=(($29)|0);
 $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($29+4)|0);
 $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$30$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$30$1;
 $31=((HEAP32[(($26)>>2)])|0);
 $32=((HEAP32[(($17)>>2)])|0);
 $33=(($32+((($31)*(12))&-1)+8)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=(($this+172)|0);
 __ZmiRK6b2Vec2S1_($1,$tmpcast37,$tmpcast);
 $36=(+(__Z5b2DotRK6b2Vec2S1_($35,$1)));
 $37=(($this+192)|0);
 $38=(+(HEAPF32[(($37)>>2)]));
 $39=($34)*($38);
 $40=($36)+($39);
 $41=(($this+188)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=($25)*($42);
 $44=($40)-($43);
 $45=(($this+212)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=((-.0))-($46);
 $48=(($this+216)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=($44)+($49);
 $51=(($this+220)|0);
 $52=(+(HEAPF32[(($51)>>2)]));
 $53=(($this+116)|0);
 $54=(+(HEAPF32[(($53)>>2)]));
 $55=($52)*($54);
 $56=($50)+($55);
 $57=($56)*($47);
 $58=($54)+($57);
 HEAPF32[(($53)>>2)]=$58;
 __ZmlfRK6b2Vec2($P,$57,$35);
 $59=(+(HEAPF32[(($41)>>2)]));
 $60=($59)*($57);
 $61=(+(HEAPF32[(($37)>>2)]));
 $62=($57)*($61);
 __ZmlfRK6b2Vec2($2,$8,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$2);
 $63=($12)*($60);
 $64=($25)-($63);
 __ZmlfRK6b2Vec2($3,$10,$P);
 __ZN6b2Vec2pLERKS_($tmpcast37,$3);
 $65=($14)*($62);
 $66=($34)+($65);
 $67=($66)-($64);
 $68=(($this+124)|0);
 $69=(+(HEAPF32[(($68)>>2)]));
 $70=($67)-($69);
 $71=(($this+208)|0);
 $72=(+(HEAPF32[(($71)>>2)]));
 $73=((-.0))-($72);
 $74=($70)*($73);
 $75=(($this+112)|0);
 $76=(+(HEAPF32[(($75)>>2)]));
 $77=(($data)|0);
 $78=(+(HEAPF32[(($77)>>2)]));
 $79=(($this+120)|0);
 $80=(+(HEAPF32[(($79)>>2)]));
 $81=($78)*($80);
 $82=($76)+($74);
 $83=((-.0))-($81);
 $84=(+(__Z7b2ClampIfET_S0_S0_S0_($82,$83,$81)));
 HEAPF32[(($75)>>2)]=$84;
 $85=($84)-($76);
 $86=($12)*($85);
 $87=($64)-($86);
 $88=($14)*($85);
 $89=($66)+($88);
 $90=(($this+180)|0);
 __ZmiRK6b2Vec2S1_($4,$tmpcast37,$tmpcast);
 $91=(+(__Z5b2DotRK6b2Vec2S1_($90,$4)));
 $92=(($this+200)|0);
 $93=(+(HEAPF32[(($92)>>2)]));
 $94=($93)*($89);
 $95=($91)+($94);
 $96=(($this+196)|0);
 $97=(+(HEAPF32[(($96)>>2)]));
 $98=($87)*($97);
 $99=($95)-($98);
 $100=(($this+204)|0);
 $101=(+(HEAPF32[(($100)>>2)]));
 $102=((-.0))-($101);
 $103=($99)*($102);
 $104=(($this+108)|0);
 $105=(+(HEAPF32[(($104)>>2)]));
 $106=($105)+($103);
 HEAPF32[(($104)>>2)]=$106;
 __ZmlfRK6b2Vec2($P5,$103,$90);
 $107=(+(HEAPF32[(($96)>>2)]));
 $108=($103)*($107);
 $109=(+(HEAPF32[(($92)>>2)]));
 $110=($103)*($109);
 __ZmlfRK6b2Vec2($5,$8,$P5);
 __ZN6b2Vec2mIERKS_($tmpcast,$5);
 $111=($12)*($108);
 $112=($87)-($111);
 __ZmlfRK6b2Vec2($6,$10,$P5);
 __ZN6b2Vec2pLERKS_($tmpcast37,$6);
 $113=($14)*($110);
 $114=($89)+($113);
 $115=((HEAP32[(($15)>>2)])|0);
 $116=((HEAP32[(($17)>>2)])|0);
 $117=(($116+((($115)*(12))&-1))|0);
 $118=$117;
 $ld$8$0=(($vA)|0);
 $119$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $119$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($118)|0);
 HEAP32[(($st$10$0)>>2)]=$119$0;
 $st$11$1=(($118+4)|0);
 HEAP32[(($st$11$1)>>2)]=$119$1;
 $120=((HEAP32[(($15)>>2)])|0);
 $121=((HEAP32[(($17)>>2)])|0);
 $122=(($121+((($120)*(12))&-1)+8)|0);
 HEAPF32[(($122)>>2)]=$112;
 $123=((HEAP32[(($26)>>2)])|0);
 $124=((HEAP32[(($17)>>2)])|0);
 $125=(($124+((($123)*(12))&-1))|0);
 $126=$125;
 $ld$12$0=(($vB)|0);
 $127$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $127$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($126)|0);
 HEAP32[(($st$14$0)>>2)]=$127$0;
 $st$15$1=(($126+4)|0);
 HEAP32[(($st$15$1)>>2)]=$127$1;
 $128=((HEAP32[(($26)>>2)])|0);
 $129=((HEAP32[(($17)>>2)])|0);
 $130=(($129+((($128)*(12))&-1)+8)|0);
 HEAPF32[(($130)>>2)]=$114;
 STACKTOP=sp;return;
}


function __ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast17=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$d=0,$3=0,$4=0,$ay=0,$5=0,$P=0,$6=0,$7=0,$8=0,$9=0;
 var $10=0,$11=0,$12=0,$13=0,$ld$0$0=0,$14$0=0,$ld$1$1=0,$14$1=0,$st$2$0=0,$st$3$1=0,$15=0,$16=0,$17=0,$18=.0,$19=0,$20=0,$21=0,$22=0,$ld$4$0=0,$23$0=0;
 var $ld$5$1=0,$23$1=0,$st$6$0=0,$st$7$1=0,$24=0,$25=0,$26=0,$27=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=.0,$35=.0,$36=0,$37=.0,$38=0,$39=.0;
 var $40=.0,$41=0,$42=.0,$43=0,$44=.0,$45=.0,$46=.0,$47=.0,$48=0,$49=.0,$50=0,$51=.0,$52=.0,$53=.0,$54=.0,$55=0,$57=.0,$58=.0,$impulse_0=.0,$60=.0;
 var $61=.0,$62=.0,$63=.0,$64=.0,$65=.0,$66=.0,$67=.0,$68=.0,$69=.0,$70=0,$71=0,$72=0,$73=0,$ld$8$0=0,$74$0=0,$ld$9$1=0,$74$1=0,$st$10$0=0,$st$11$1=0,$75=0;
 var $76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$ld$12$0=0,$82$0=0,$ld$13$1=0,$82$1=0,$st$14$0=0,$st$15$1=0,$83=0,$84=0,$85=0,$86=.0,$87=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast17=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $ay=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=(($this+132)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($data+28)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($11+((($9)*(12))&-1))|0);
 $13=$12;
 $ld$0$0=(($13)|0);
 $14$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$14$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$14$1;
 $15=((HEAP32[(($8)>>2)])|0);
 $16=((HEAP32[(($10)>>2)])|0);
 $17=(($16+((($15)*(12))&-1)+8)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=(($this+136)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($16+((($20)*(12))&-1))|0);
 $22=$21;
 $ld$4$0=(($22)|0);
 $23$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($22+4)|0);
 $23$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$23$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$23$1;
 $24=((HEAP32[(($19)>>2)])|0);
 $25=((HEAP32[(($10)>>2)])|0);
 $26=(($25+((($24)*(12))&-1)+8)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 __ZN5b2RotC1Ef($qA,$18);
 __ZN5b2RotC1Ef($qB,$27);
 $28=(($this+76)|0);
 $29=(($this+140)|0);
 __ZmiRK6b2Vec2S1_($1,$28,$29);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $30=(($this+84)|0);
 $31=(($this+148)|0);
 __ZmiRK6b2Vec2S1_($2,$30,$31);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZmiRK6b2Vec2S1_($4,$tmpcast17,$tmpcast);
 __ZplRK6b2Vec2S1_($3,$4,$rB);
 __ZmiRK6b2Vec2S1_($d,$3,$rA);
 $32=(($this+100)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($ay,$qA,$32);
 __ZplRK6b2Vec2S1_($5,$d,$rA);
 $33=(+(__Z7b2CrossRK6b2Vec2S1_($5,$ay)));
 $34=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$ay)));
 $35=(+(__Z5b2DotRK6b2Vec2S1_($d,$ay)));
 $36=(($this+156)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=(($this+160)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=($37)+($39);
 $41=(($this+164)|0);
 $42=(+(HEAPF32[(($41)>>2)]));
 $43=(($this+196)|0);
 $44=(+(HEAPF32[(($43)>>2)]));
 $45=($42)*($44);
 $46=($44)*($45);
 $47=($40)+($46);
 $48=(($this+168)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=(($this+200)|0);
 $51=(+(HEAPF32[(($50)>>2)]));
 $52=($49)*($51);
 $53=($51)*($52);
 $54=($47)+($53);
 $55=$54!=(0.0);
 if ($55) {
  $57=((-.0))-($35);
  $58=($57)/($54);
  $impulse_0=$58;
 } else {
  $impulse_0=0.0;
 }

 __ZmlfRK6b2Vec2($P,$impulse_0,$ay);
 $60=($33)*($impulse_0);
 $61=($34)*($impulse_0);
 $62=(+(HEAPF32[(($36)>>2)]));
 __ZmlfRK6b2Vec2($6,$62,$P);
 __ZN6b2Vec2mIERKS_($tmpcast,$6);
 $63=(+(HEAPF32[(($41)>>2)]));
 $64=($60)*($63);
 $65=($18)-($64);
 $66=(+(HEAPF32[(($38)>>2)]));
 __ZmlfRK6b2Vec2($7,$66,$P);
 __ZN6b2Vec2pLERKS_($tmpcast17,$7);
 $67=(+(HEAPF32[(($48)>>2)]));
 $68=($61)*($67);
 $69=($27)+($68);
 $70=((HEAP32[(($8)>>2)])|0);
 $71=((HEAP32[(($10)>>2)])|0);
 $72=(($71+((($70)*(12))&-1))|0);
 $73=$72;
 $ld$8$0=(($cA)|0);
 $74$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $74$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($73)|0);
 HEAP32[(($st$10$0)>>2)]=$74$0;
 $st$11$1=(($73+4)|0);
 HEAP32[(($st$11$1)>>2)]=$74$1;
 $75=((HEAP32[(($8)>>2)])|0);
 $76=((HEAP32[(($10)>>2)])|0);
 $77=(($76+((($75)*(12))&-1)+8)|0);
 HEAPF32[(($77)>>2)]=$65;
 $78=((HEAP32[(($19)>>2)])|0);
 $79=((HEAP32[(($10)>>2)])|0);
 $80=(($79+((($78)*(12))&-1))|0);
 $81=$80;
 $ld$12$0=(($cB)|0);
 $82$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $82$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($81)|0);
 HEAP32[(($st$14$0)>>2)]=$82$0;
 $st$15$1=(($81+4)|0);
 HEAP32[(($st$15$1)>>2)]=$82$1;
 $83=((HEAP32[(($19)>>2)])|0);
 $84=((HEAP32[(($10)>>2)])|0);
 $85=(($84+((($83)*(12))&-1)+8)|0);
 HEAPF32[(($85)>>2)]=$69;
 $86=(+(__Z5b2AbsIfET_S0_($35)));
 $87=$86<=(0.004999999888241291);
 STACKTOP=sp;return (($87)|0);
}


function __ZNK12b2WheelJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+76)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK12b2WheelJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+84)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK12b2WheelJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=.0,$9=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(($this+108)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($this+180)|0);
 __ZmlfRK6b2Vec2($2,$5,$6);
 $7=(($this+116)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($this+172)|0);
 __ZmlfRK6b2Vec2($3,$8,$9);
 __ZplRK6b2Vec2S1_($1,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$1);
 STACKTOP=sp;return;
}


function __ZNK12b2WheelJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+112)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*($inv_dt);
 return (+($3));
}


function __ZN12b2WheelJoint13SetMotorSpeedEf($this,$speed){
 $this=($this)|0;
 $speed=+($speed);
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($2,1);
 $3=(($this+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($4,1);
 $5=(($this+124)|0);
 HEAPF32[(($5)>>2)]=$speed;
 return;
}


function __ZN12b2WheelJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=0,$32=0,$33=0,$34=.0,$35=.0,$36=0,$37=.0,$38=.0,$39=0,$40=.0;
 var $41=.0,$42=0,$43=.0,$44=.0,$45=0,$46=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(3024,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3536,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2712,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2320,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+76)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+80)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(1848,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+84)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+88)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1384,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+92)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 $27=(($this+96)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(1048,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$26,HEAPF64[(((tempVarArgs)+(8))>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+128)|0);
 $31=((HEAP8[($30)])|0);
 $32=($31&255);
 __Z5b2LogPKcz(680,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$32,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $33=(($this+124)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=$34;
 __Z5b2LogPKcz(384,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$35,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $36=(($this+120)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=$37;
 __Z5b2LogPKcz(104,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$38,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $39=(($this+68)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=$40;
 __Z5b2LogPKcz(4016,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$41,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $42=(($this+72)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=$43;
 __Z5b2LogPKcz(3808,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$44,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $45=(($this+56)|0);
 $46=((HEAP32[(($45)>>2)])|0);
 __Z5b2LogPKcz(3360,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$46,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN12b2WheelJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN12b2WheelJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN16b2PulleyJointDef10InitializeEP6b2BodyS1_RK6b2Vec2S4_S4_S4_f($this,$bA,$bB,$groundA,$groundB,$anchorA,$anchorB,$r){
 $this=($this)|0;
 $bA=($bA)|0;
 $bB=($bB)|0;
 $groundA=($groundA)|0;
 $groundB=($groundB)|0;
 $anchorA=($anchorA)|0;
 $anchorB=($anchorB)|0;
 $r=+($r);
 var $1=0,$tmpcast=0,$2=0,$tmpcast12=0,$dA=0,$dB=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0;
 var $ld$4$0=0,$12$0=0,$ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,$13=0,$14=0,$15=0,$ld$8$0=0,$16$0=0,$ld$9$1=0,$16$1=0,$st$10$0=0,$st$11$1=0,$17=0,$18=0,$19=0,$ld$12$0=0,$20$0=0;
 var $ld$13$1=0,$20$1=0,$st$14$0=0,$st$15$1=0,$21=.0,$22=0,$23=.0,$24=0,$25=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast12=$2;
 $dA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$bA;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$bB;
 $5=(($this+20)|0);
 $6=$groundA;
 $7=$5;
 $ld$0$0=(($6)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($6+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+28)|0);
 $10=$groundB;
 $11=$9;
 $ld$4$0=(($10)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($10+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 $13=(($this+36)|0);
 $14=((HEAP32[(($3)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast,$14,$anchorA);
 $15=$13;
 $ld$8$0=(($1)|0);
 $16$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($1+4)|0);
 $16$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($15)|0);
 HEAP32[(($st$10$0)>>2)]=$16$0;
 $st$11$1=(($15+4)|0);
 HEAP32[(($st$11$1)>>2)]=$16$1;
 $17=(($this+44)|0);
 $18=((HEAP32[(($4)>>2)])|0);
 __ZNK6b2Body13GetLocalPointERK6b2Vec2($tmpcast12,$18,$anchorB);
 $19=$17;
 $ld$12$0=(($2)|0);
 $20$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($2+4)|0);
 $20$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($19)|0);
 HEAP32[(($st$14$0)>>2)]=$20$0;
 $st$15$1=(($19+4)|0);
 HEAP32[(($st$15$1)>>2)]=$20$1;
 __ZmiRK6b2Vec2S1_($dA,$anchorA,$groundA);
 $21=(+(__ZNK6b2Vec26LengthEv($dA)));
 $22=(($this+52)|0);
 HEAPF32[(($22)>>2)]=$21;
 __ZmiRK6b2Vec2S1_($dB,$anchorB,$groundB);
 $23=(+(__ZNK6b2Vec26LengthEv($dB)));
 $24=(($this+56)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=(($this+60)|0);
 HEAPF32[(($25)>>2)]=$r;
 STACKTOP=sp;return;
}


function __ZN13b2PulleyJointC2EPK16b2PulleyJointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=0,$13=0,$14=0,$ld$4$0=0;
 var $15$0=0,$ld$5$1=0,$15$1=0,$st$6$0=0,$st$7$1=0,$16=0,$17=0,$18=0,$ld$8$0=0,$19$0=0,$ld$9$1=0,$19$1=0,$st$10$0=0,$st$11$1=0,$20=0,$21=0,$22=0,$ld$12$0=0,$23$0=0,$ld$13$1=0;
 var $23$1=0,$st$14$0=0,$st$15$1=0,$24=0,$25=.0,$26=0,$27=0,$28=.0,$29=0,$30=0,$31=.0,$32=0,$33=.0,$34=.0,$35=.0,$36=.0,$37=0,$38=0,label=0;

 $1=(($this)|0);
 $2=(($def)|0);
 __ZN7b2JointC2EPK10b2JointDef($1,$2);
 $3=(($this)|0);
 HEAP32[(($3)>>2)]=5432;
 $4=(($this+68)|0);
 $5=(($this+76)|0);
 $6=(($this+92)|0);
 $7=(($this+100)|0);
 $8=(($def+20)|0);
 $9=$8;
 $10=$4;
 $ld$0$0=(($9)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($9+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($10)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($10+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=(($def+28)|0);
 $13=$12;
 $14=$5;
 $ld$4$0=(($13)|0);
 $15$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($13+4)|0);
 $15$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($14)|0);
 HEAP32[(($st$6$0)>>2)]=$15$0;
 $st$7$1=(($14+4)|0);
 HEAP32[(($st$7$1)>>2)]=$15$1;
 $16=(($def+36)|0);
 $17=$16;
 $18=$6;
 $ld$8$0=(($17)|0);
 $19$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($17+4)|0);
 $19$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($18)|0);
 HEAP32[(($st$10$0)>>2)]=$19$0;
 $st$11$1=(($18+4)|0);
 HEAP32[(($st$11$1)>>2)]=$19$1;
 $20=(($def+44)|0);
 $21=$20;
 $22=$7;
 $ld$12$0=(($21)|0);
 $23$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($21+4)|0);
 $23$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($22)|0);
 HEAP32[(($st$14$0)>>2)]=$23$0;
 $st$15$1=(($22+4)|0);
 HEAP32[(($st$15$1)>>2)]=$23$1;
 $24=(($def+52)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=(($this+84)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=(($def+56)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=(($this+88)|0);
 HEAPF32[(($29)>>2)]=$28;
 $30=(($def+60)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+112)|0);
 HEAPF32[(($32)>>2)]=$31;
 $33=(+(HEAPF32[(($24)>>2)]));
 $34=(+(HEAPF32[(($27)>>2)]));
 $35=($31)*($34);
 $36=($33)+($35);
 $37=(($this+108)|0);
 HEAPF32[(($37)>>2)]=$36;
 $38=(($this+116)|0);
 HEAPF32[(($38)>>2)]=0.0;
 return;
}



function __ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$vA=0,$tmpcast21=0,$cB=0,$tmpcast22=0,$vB=0,$tmpcast23=0,$qA=0,$qB=0,$1=0,$tmpcast24=0,$2=0,$3=0,$tmpcast25=0,$4=0,$5=0,$tmpcast26=0,$6=0,$7=0;
 var $tmpcast27=0,$8=0,$PA=0,$PB=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0;
 var $25=0,$ld$0$0=0,$26$0=0,$ld$1$1=0,$26$1=0,$st$2$0=0,$st$3$1=0,$27=0,$28=0,$29=0,$30=0,$31=0,$ld$4$0=0,$32$0=0,$ld$5$1=0,$32$1=0,$st$6$0=0,$st$7$1=0,$33=0,$34=0;
 var $35=.0,$36=0,$37=0,$38=0,$39=.0,$40=0,$41=0,$42=0,$43=.0,$44=0,$45=0,$46=0,$47=.0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$ld$8$0=0;
 var $54$0=0,$ld$9$1=0,$54$1=0,$st$10$0=0,$st$11$1=0,$55=0,$56=0,$57=0,$58=.0,$59=0,$60=0,$61=0,$62=0,$ld$12$0=0,$63$0=0,$ld$13$1=0,$63$1=0,$st$14$0=0,$st$15$1=0,$64=0;
 var $65=0,$66=0,$67=.0,$68=0,$69=0,$70=0,$71=0,$ld$16$0=0,$72$0=0,$ld$17$1=0,$72$1=0,$st$18$0=0,$st$19$1=0,$73=0,$74=0,$75=0,$76=.0,$77=0,$78=0,$79=0;
 var $ld$20$0=0,$80$0=0,$ld$21$1=0,$80$1=0,$st$22$0=0,$st$23$1=0,$81=0,$82=0,$83=0,$84=.0,$85=0,$86=0,$87=0,$ld$24$0=0,$88$0=0,$ld$25$1=0,$88$1=0,$st$26$0=0,$st$27$1=0,$89=0;
 var $90=0,$91=0,$ld$28$0=0,$92$0=0,$ld$29$1=0,$92$1=0,$st$30$0=0,$st$31$1=0,$93=0,$94=0,$95=0,$ld$32$0=0,$96$0=0,$ld$33$1=0,$96$1=0,$st$34$0=0,$st$35$1=0,$97=0,$98=0,$99=0;
 var $ld$36$0=0,$100$0=0,$ld$37$1=0,$100$1=0,$st$38$0=0,$st$39$1=0,$101=.0,$102=.0,$103=0,$105=.0,$108=0,$110=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0;
 var $121=.0,$122=.0,$123=.0,$124=.0,$125=0,$126=.0,$127=.0,$128=.0,$129=.0,$130=0,$131=0,$133=.0,$storemerge=.0,$135=0,$136=0,$137=0,$139=0,$140=.0,$141=0,$142=.0;
 var $143=.0,$144=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=.0,$150=.0,$151=.0,$152=.0,$153=.0,$154=.0,$155=.0,$156=.0,$157=.0,$158=.0,$160=0,$wB_0=.0,$wA_0=.0,$162=0;
 var $163=0,$164=0,$165=0,$ld$40$0=0,$166$0=0,$ld$41$1=0,$166$1=0,$st$42$0=0,$st$43$1=0,$167=0,$168=0,$169=0,$170=0,$171=0,$172=0,$173=0,$ld$44$0=0,$174$0=0,$ld$45$1=0,$174$1=0;
 var $st$46$0=0,$st$47$1=0,$175=0,$176=0,$177=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast21=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast22=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast23=$vB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast24=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast25=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast26=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast27=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=(($this+48)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($12+8)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($this+120)|0);
 HEAP32[(($15)>>2)]=$14;
 $16=(($this+52)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=(($17+8)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($this+124)|0);
 HEAP32[(($20)>>2)]=$19;
 $21=(($this+160)|0);
 $22=((HEAP32[(($11)>>2)])|0);
 $23=(($22+44)|0);
 $24=$23;
 $25=$21;
 $ld$0$0=(($24)|0);
 $26$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($24+4)|0);
 $26$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($25)|0);
 HEAP32[(($st$2$0)>>2)]=$26$0;
 $st$3$1=(($25+4)|0);
 HEAP32[(($st$3$1)>>2)]=$26$1;
 $27=(($this+168)|0);
 $28=((HEAP32[(($16)>>2)])|0);
 $29=(($28+44)|0);
 $30=$29;
 $31=$27;
 $ld$4$0=(($30)|0);
 $32$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($30+4)|0);
 $32$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($31)|0);
 HEAP32[(($st$6$0)>>2)]=$32$0;
 $st$7$1=(($31+4)|0);
 HEAP32[(($st$7$1)>>2)]=$32$1;
 $33=((HEAP32[(($11)>>2)])|0);
 $34=(($33+136)|0);
 $35=(+(HEAPF32[(($34)>>2)]));
 $36=(($this+176)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=((HEAP32[(($16)>>2)])|0);
 $38=(($37+136)|0);
 $39=(+(HEAPF32[(($38)>>2)]));
 $40=(($this+180)|0);
 HEAPF32[(($40)>>2)]=$39;
 $41=((HEAP32[(($11)>>2)])|0);
 $42=(($41+144)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=(($this+184)|0);
 HEAPF32[(($44)>>2)]=$43;
 $45=((HEAP32[(($16)>>2)])|0);
 $46=(($45+144)|0);
 $47=(+(HEAPF32[(($46)>>2)]));
 $48=(($this+188)|0);
 HEAPF32[(($48)>>2)]=$47;
 $49=((HEAP32[(($15)>>2)])|0);
 $50=(($data+28)|0);
 $51=((HEAP32[(($50)>>2)])|0);
 $52=(($51+((($49)*(12))&-1))|0);
 $53=$52;
 $ld$8$0=(($53)|0);
 $54$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($53+4)|0);
 $54$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($cA)|0);
 HEAP32[(($st$10$0)>>2)]=$54$0;
 $st$11$1=(($cA+4)|0);
 HEAP32[(($st$11$1)>>2)]=$54$1;
 $55=((HEAP32[(($15)>>2)])|0);
 $56=((HEAP32[(($50)>>2)])|0);
 $57=(($56+((($55)*(12))&-1)+8)|0);
 $58=(+(HEAPF32[(($57)>>2)]));
 $59=(($data+32)|0);
 $60=((HEAP32[(($59)>>2)])|0);
 $61=(($60+((($55)*(12))&-1))|0);
 $62=$61;
 $ld$12$0=(($62)|0);
 $63$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($62+4)|0);
 $63$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($vA)|0);
 HEAP32[(($st$14$0)>>2)]=$63$0;
 $st$15$1=(($vA+4)|0);
 HEAP32[(($st$15$1)>>2)]=$63$1;
 $64=((HEAP32[(($15)>>2)])|0);
 $65=((HEAP32[(($59)>>2)])|0);
 $66=(($65+((($64)*(12))&-1)+8)|0);
 $67=(+(HEAPF32[(($66)>>2)]));
 $68=((HEAP32[(($20)>>2)])|0);
 $69=((HEAP32[(($50)>>2)])|0);
 $70=(($69+((($68)*(12))&-1))|0);
 $71=$70;
 $ld$16$0=(($71)|0);
 $72$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($71+4)|0);
 $72$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $st$18$0=(($cB)|0);
 HEAP32[(($st$18$0)>>2)]=$72$0;
 $st$19$1=(($cB+4)|0);
 HEAP32[(($st$19$1)>>2)]=$72$1;
 $73=((HEAP32[(($20)>>2)])|0);
 $74=((HEAP32[(($50)>>2)])|0);
 $75=(($74+((($73)*(12))&-1)+8)|0);
 $76=(+(HEAPF32[(($75)>>2)]));
 $77=((HEAP32[(($59)>>2)])|0);
 $78=(($77+((($73)*(12))&-1))|0);
 $79=$78;
 $ld$20$0=(($79)|0);
 $80$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($79+4)|0);
 $80$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $st$22$0=(($vB)|0);
 HEAP32[(($st$22$0)>>2)]=$80$0;
 $st$23$1=(($vB+4)|0);
 HEAP32[(($st$23$1)>>2)]=$80$1;
 $81=((HEAP32[(($20)>>2)])|0);
 $82=((HEAP32[(($59)>>2)])|0);
 $83=(($82+((($81)*(12))&-1)+8)|0);
 $84=(+(HEAPF32[(($83)>>2)]));
 __ZN5b2RotC1Ef($qA,$58);
 __ZN5b2RotC1Ef($qB,$76);
 $85=(($this+144)|0);
 $86=(($this+92)|0);
 __ZmiRK6b2Vec2S1_($2,$86,$21);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast24,$qA,$2);
 $87=$85;
 $ld$24$0=(($1)|0);
 $88$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($1+4)|0);
 $88$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($87)|0);
 HEAP32[(($st$26$0)>>2)]=$88$0;
 $st$27$1=(($87+4)|0);
 HEAP32[(($st$27$1)>>2)]=$88$1;
 $89=(($this+152)|0);
 $90=(($this+100)|0);
 __ZmiRK6b2Vec2S1_($4,$90,$27);
 __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast25,$qB,$4);
 $91=$89;
 $ld$28$0=(($3)|0);
 $92$0=((HEAP32[(($ld$28$0)>>2)])|0);
 $ld$29$1=(($3+4)|0);
 $92$1=((HEAP32[(($ld$29$1)>>2)])|0);
 $st$30$0=(($91)|0);
 HEAP32[(($st$30$0)>>2)]=$92$0;
 $st$31$1=(($91+4)|0);
 HEAP32[(($st$31$1)>>2)]=$92$1;
 $93=(($this+128)|0);
 __ZplRK6b2Vec2S1_($6,$tmpcast,$85);
 $94=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($tmpcast26,$6,$94);
 $95=$93;
 $ld$32$0=(($5)|0);
 $96$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($5+4)|0);
 $96$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($95)|0);
 HEAP32[(($st$34$0)>>2)]=$96$0;
 $st$35$1=(($95+4)|0);
 HEAP32[(($st$35$1)>>2)]=$96$1;
 $97=(($this+136)|0);
 __ZplRK6b2Vec2S1_($8,$tmpcast22,$89);
 $98=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($tmpcast27,$8,$98);
 $99=$97;
 $ld$36$0=(($7)|0);
 $100$0=((HEAP32[(($ld$36$0)>>2)])|0);
 $ld$37$1=(($7+4)|0);
 $100$1=((HEAP32[(($ld$37$1)>>2)])|0);
 $st$38$0=(($99)|0);
 HEAP32[(($st$38$0)>>2)]=$100$0;
 $st$39$1=(($99+4)|0);
 HEAP32[(($st$39$1)>>2)]=$100$1;
 $101=(+(__ZNK6b2Vec26LengthEv($93)));
 $102=(+(__ZNK6b2Vec26LengthEv($97)));
 $103=$101>(0.04999999701976776);
 if ($103) {
  $105=((1.0))/($101);
  __ZN6b2Vec2mLEf($93,$105);
 } else {
  __ZN6b2Vec27SetZeroEv($93);
 }
 $108=$102>(0.04999999701976776);
 if ($108) {
  $110=((1.0))/($102);
  __ZN6b2Vec2mLEf($97,$110);
 } else {
  __ZN6b2Vec27SetZeroEv($97);
 }
 $113=(+(__Z7b2CrossRK6b2Vec2S1_($85,$93)));
 $114=(+(__Z7b2CrossRK6b2Vec2S1_($89,$97)));
 $115=(+(HEAPF32[(($36)>>2)]));
 $116=(+(HEAPF32[(($44)>>2)]));
 $117=($113)*($116);
 $118=($113)*($117);
 $119=($115)+($118);
 $120=(+(HEAPF32[(($40)>>2)]));
 $121=(+(HEAPF32[(($48)>>2)]));
 $122=($114)*($121);
 $123=($114)*($122);
 $124=($120)+($123);
 $125=(($this+112)|0);
 $126=(+(HEAPF32[(($125)>>2)]));
 $127=($126)*($126);
 $128=($127)*($124);
 $129=($119)+($128);
 $130=(($this+192)|0);
 $131=$129>(0.0);
 if ($131) {
  $133=((1.0))/($129);
  $storemerge=$133;
 } else {
  $storemerge=$129;
 }

 HEAPF32[(($130)>>2)]=$storemerge;
 $135=(($data+24)|0);
 $136=((HEAP8[($135)])|0);
 $137=(($136<<24)>>24)==0;
 if ($137) {
  $160=(($this+116)|0);
  HEAPF32[(($160)>>2)]=0.0;
  $wA_0=$67;$wB_0=$84;


  $162=((HEAP32[(($15)>>2)])|0);
  $163=((HEAP32[(($59)>>2)])|0);
  $164=(($163+((($162)*(12))&-1))|0);
  $165=$164;
  $ld$40$0=(($vA)|0);
  $166$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vA+4)|0);
  $166$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($165)|0);
  HEAP32[(($st$42$0)>>2)]=$166$0;
  $st$43$1=(($165+4)|0);
  HEAP32[(($st$43$1)>>2)]=$166$1;
  $167=((HEAP32[(($15)>>2)])|0);
  $168=((HEAP32[(($59)>>2)])|0);
  $169=(($168+((($167)*(12))&-1)+8)|0);
  HEAPF32[(($169)>>2)]=$wA_0;
  $170=((HEAP32[(($20)>>2)])|0);
  $171=((HEAP32[(($59)>>2)])|0);
  $172=(($171+((($170)*(12))&-1))|0);
  $173=$172;
  $ld$44$0=(($vB)|0);
  $174$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($vB+4)|0);
  $174$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($173)|0);
  HEAP32[(($st$46$0)>>2)]=$174$0;
  $st$47$1=(($173+4)|0);
  HEAP32[(($st$47$1)>>2)]=$174$1;
  $175=((HEAP32[(($20)>>2)])|0);
  $176=((HEAP32[(($59)>>2)])|0);
  $177=(($176+((($175)*(12))&-1)+8)|0);
  HEAPF32[(($177)>>2)]=$wB_0;
  STACKTOP=sp;return;
 } else {
  $139=(($data+8)|0);
  $140=(+(HEAPF32[(($139)>>2)]));
  $141=(($this+116)|0);
  $142=(+(HEAPF32[(($141)>>2)]));
  $143=($140)*($142);
  HEAPF32[(($141)>>2)]=$143;
  $144=((-.0))-($143);
  __ZmlfRK6b2Vec2($PA,$144,$93);
  $145=(+(HEAPF32[(($125)>>2)]));
  $146=((-.0))-($145);
  $147=(+(HEAPF32[(($141)>>2)]));
  $148=($147)*($146);
  __ZmlfRK6b2Vec2($PB,$148,$97);
  $149=(+(HEAPF32[(($36)>>2)]));
  __ZmlfRK6b2Vec2($9,$149,$PA);
  __ZN6b2Vec2pLERKS_($tmpcast21,$9);
  $150=(+(HEAPF32[(($44)>>2)]));
  $151=(+(__Z7b2CrossRK6b2Vec2S1_($85,$PA)));
  $152=($150)*($151);
  $153=($67)+($152);
  $154=(+(HEAPF32[(($40)>>2)]));
  __ZmlfRK6b2Vec2($10,$154,$PB);
  __ZN6b2Vec2pLERKS_($tmpcast23,$10);
  $155=(+(HEAPF32[(($48)>>2)]));
  $156=(+(__Z7b2CrossRK6b2Vec2S1_($89,$PB)));
  $157=($155)*($156);
  $158=($84)+($157);
  $wA_0=$153;$wB_0=$158;


  $162=((HEAP32[(($15)>>2)])|0);
  $163=((HEAP32[(($59)>>2)])|0);
  $164=(($163+((($162)*(12))&-1))|0);
  $165=$164;
  $ld$40$0=(($vA)|0);
  $166$0=((HEAP32[(($ld$40$0)>>2)])|0);
  $ld$41$1=(($vA+4)|0);
  $166$1=((HEAP32[(($ld$41$1)>>2)])|0);
  $st$42$0=(($165)|0);
  HEAP32[(($st$42$0)>>2)]=$166$0;
  $st$43$1=(($165+4)|0);
  HEAP32[(($st$43$1)>>2)]=$166$1;
  $167=((HEAP32[(($15)>>2)])|0);
  $168=((HEAP32[(($59)>>2)])|0);
  $169=(($168+((($167)*(12))&-1)+8)|0);
  HEAPF32[(($169)>>2)]=$wA_0;
  $170=((HEAP32[(($20)>>2)])|0);
  $171=((HEAP32[(($59)>>2)])|0);
  $172=(($171+((($170)*(12))&-1))|0);
  $173=$172;
  $ld$44$0=(($vB)|0);
  $174$0=((HEAP32[(($ld$44$0)>>2)])|0);
  $ld$45$1=(($vB+4)|0);
  $174$1=((HEAP32[(($ld$45$1)>>2)])|0);
  $st$46$0=(($173)|0);
  HEAP32[(($st$46$0)>>2)]=$174$0;
  $st$47$1=(($173+4)|0);
  HEAP32[(($st$47$1)>>2)]=$174$1;
  $175=((HEAP32[(($20)>>2)])|0);
  $176=((HEAP32[(($59)>>2)])|0);
  $177=(($176+((($175)*(12))&-1)+8)|0);
  HEAPF32[(($177)>>2)]=$wB_0;
  STACKTOP=sp;return;
 }
}


function __ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast15=0,$vpA=0,$1=0,$vpB=0,$2=0,$PA=0,$PB=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$ld$0$0=0,$11$0=0;
 var $ld$1$1=0,$11$1=0,$st$2$0=0,$st$3$1=0,$12=0,$13=0,$14=0,$15=.0,$16=0,$17=0,$18=0,$19=0,$ld$4$0=0,$20$0=0,$ld$5$1=0,$20$1=0,$st$6$0=0,$st$7$1=0,$21=0,$22=0;
 var $23=0,$24=.0,$25=0,$26=0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=0,$33=.0,$34=.0,$35=.0,$36=0,$37=.0,$38=.0,$39=.0,$40=0,$41=.0,$42=.0;
 var $43=.0,$44=.0,$45=.0,$46=.0,$47=0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=.0,$54=0,$55=.0,$56=0,$57=.0,$58=.0,$59=.0,$60=.0,$61=0,$62=0;
 var $63=0,$64=0,$ld$8$0=0,$65$0=0,$ld$9$1=0,$65$1=0,$st$10$0=0,$st$11$1=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$ld$12$0=0,$73$0=0,$ld$13$1=0,$73$1=0,$st$14$0=0;
 var $st$15$1=0,$74=0,$75=0,$76=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$vB;
 $vpA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $vpB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+120)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($data+32)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+((($6)*(12))&-1))|0);
 $10=$9;
 $ld$0$0=(($10)|0);
 $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($10+4)|0);
 $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($vA)|0);
 HEAP32[(($st$2$0)>>2)]=$11$0;
 $st$3$1=(($vA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$11$1;
 $12=((HEAP32[(($5)>>2)])|0);
 $13=((HEAP32[(($7)>>2)])|0);
 $14=(($13+((($12)*(12))&-1)+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($this+124)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=(($13+((($17)*(12))&-1))|0);
 $19=$18;
 $ld$4$0=(($19)|0);
 $20$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($19+4)|0);
 $20$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($vB)|0);
 HEAP32[(($st$6$0)>>2)]=$20$0;
 $st$7$1=(($vB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$20$1;
 $21=((HEAP32[(($16)>>2)])|0);
 $22=((HEAP32[(($7)>>2)])|0);
 $23=(($22+((($21)*(12))&-1)+8)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(($this+144)|0);
 __Z7b2CrossfRK6b2Vec2($1,$15,$25);
 __ZplRK6b2Vec2S1_($vpA,$tmpcast,$1);
 $26=(($this+152)|0);
 __Z7b2CrossfRK6b2Vec2($2,$24,$26);
 __ZplRK6b2Vec2S1_($vpB,$tmpcast15,$2);
 $27=(($this+128)|0);
 $28=(+(__Z5b2DotRK6b2Vec2S1_($27,$vpA)));
 $29=((-.0))-($28);
 $30=(($this+112)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=(($this+136)|0);
 $33=(+(__Z5b2DotRK6b2Vec2S1_($32,$vpB)));
 $34=($31)*($33);
 $35=($29)-($34);
 $36=(($this+192)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=((-.0))-($37);
 $39=($35)*($38);
 $40=(($this+116)|0);
 $41=(+(HEAPF32[(($40)>>2)]));
 $42=($41)+($39);
 HEAPF32[(($40)>>2)]=$42;
 $43=((-.0))-($39);
 __ZmlfRK6b2Vec2($PA,$43,$27);
 $44=(+(HEAPF32[(($30)>>2)]));
 $45=((-.0))-($44);
 $46=($39)*($45);
 __ZmlfRK6b2Vec2($PB,$46,$32);
 $47=(($this+176)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 __ZmlfRK6b2Vec2($3,$48,$PA);
 __ZN6b2Vec2pLERKS_($tmpcast,$3);
 $49=(($this+184)|0);
 $50=(+(HEAPF32[(($49)>>2)]));
 $51=(+(__Z7b2CrossRK6b2Vec2S1_($25,$PA)));
 $52=($50)*($51);
 $53=($15)+($52);
 $54=(($this+180)|0);
 $55=(+(HEAPF32[(($54)>>2)]));
 __ZmlfRK6b2Vec2($4,$55,$PB);
 __ZN6b2Vec2pLERKS_($tmpcast15,$4);
 $56=(($this+188)|0);
 $57=(+(HEAPF32[(($56)>>2)]));
 $58=(+(__Z7b2CrossRK6b2Vec2S1_($26,$PB)));
 $59=($57)*($58);
 $60=($24)+($59);
 $61=((HEAP32[(($5)>>2)])|0);
 $62=((HEAP32[(($7)>>2)])|0);
 $63=(($62+((($61)*(12))&-1))|0);
 $64=$63;
 $ld$8$0=(($vA)|0);
 $65$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($vA+4)|0);
 $65$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($64)|0);
 HEAP32[(($st$10$0)>>2)]=$65$0;
 $st$11$1=(($64+4)|0);
 HEAP32[(($st$11$1)>>2)]=$65$1;
 $66=((HEAP32[(($5)>>2)])|0);
 $67=((HEAP32[(($7)>>2)])|0);
 $68=(($67+((($66)*(12))&-1)+8)|0);
 HEAPF32[(($68)>>2)]=$53;
 $69=((HEAP32[(($16)>>2)])|0);
 $70=((HEAP32[(($7)>>2)])|0);
 $71=(($70+((($69)*(12))&-1))|0);
 $72=$71;
 $ld$12$0=(($vB)|0);
 $73$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($vB+4)|0);
 $73$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($72)|0);
 HEAP32[(($st$14$0)>>2)]=$73$0;
 $st$15$1=(($72+4)|0);
 HEAP32[(($st$15$1)>>2)]=$73$1;
 $74=((HEAP32[(($16)>>2)])|0);
 $75=((HEAP32[(($7)>>2)])|0);
 $76=(($75+((($74)*(12))&-1)+8)|0);
 HEAPF32[(($76)>>2)]=$60;
 STACKTOP=sp;return;
}


function __ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData($this,$data){
 $this=($this)|0;
 $data=($data)|0;
 var $cA=0,$tmpcast=0,$cB=0,$tmpcast23=0,$qA=0,$qB=0,$rA=0,$1=0,$rB=0,$2=0,$uA=0,$3=0,$uB=0,$4=0,$PA=0,$PB=0,$5=0,$6=0,$7=0,$8=0;
 var $9=0,$10=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=0,$20=0,$21=0,$ld$4$0=0,$22$0=0;
 var $ld$5$1=0,$22$1=0,$st$6$0=0,$st$7$1=0,$23=0,$24=0,$25=0,$26=.0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=.0,$35=0,$37=.0,$40=0,$42=.0;
 var $45=.0,$46=.0,$47=0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$53=.0,$54=0,$55=.0,$56=0,$57=.0,$58=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0;
 var $65=.0,$66=0,$68=.0,$mass_0=.0,$70=0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0;
 var $86=.0,$87=.0,$88=.0,$89=.0,$90=.0,$91=.0,$92=.0,$93=0,$94=0,$95=0,$96=0,$ld$8$0=0,$97$0=0,$ld$9$1=0,$97$1=0,$st$10$0=0,$st$11$1=0,$98=0,$99=0,$100=0;
 var $101=0,$102=0,$103=0,$104=0,$ld$12$0=0,$105$0=0,$ld$13$1=0,$105$1=0,$st$14$0=0,$st$15$1=0,$106=0,$107=0,$108=0,$109=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $cA=((sp)|0);
 $tmpcast=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast23=$cB;
 $qA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $uA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $uB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $PB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=(($this+120)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($data+28)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+((($8)*(12))&-1))|0);
 $12=$11;
 $ld$0$0=(($12)|0);
 $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($12+4)|0);
 $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($cA)|0);
 HEAP32[(($st$2$0)>>2)]=$13$0;
 $st$3$1=(($cA+4)|0);
 HEAP32[(($st$3$1)>>2)]=$13$1;
 $14=((HEAP32[(($7)>>2)])|0);
 $15=((HEAP32[(($9)>>2)])|0);
 $16=(($15+((($14)*(12))&-1)+8)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+124)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=(($15+((($19)*(12))&-1))|0);
 $21=$20;
 $ld$4$0=(($21)|0);
 $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($21+4)|0);
 $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($cB)|0);
 HEAP32[(($st$6$0)>>2)]=$22$0;
 $st$7$1=(($cB+4)|0);
 HEAP32[(($st$7$1)>>2)]=$22$1;
 $23=((HEAP32[(($18)>>2)])|0);
 $24=((HEAP32[(($9)>>2)])|0);
 $25=(($24+((($23)*(12))&-1)+8)|0);
 $26=(+(HEAPF32[(($25)>>2)]));
 __ZN5b2RotC1Ef($qA,$17);
 __ZN5b2RotC1Ef($qB,$26);
 $27=(($this+92)|0);
 $28=(($this+160)|0);
 __ZmiRK6b2Vec2S1_($1,$27,$28);
 __Z5b2MulRK5b2RotRK6b2Vec2($rA,$qA,$1);
 $29=(($this+100)|0);
 $30=(($this+168)|0);
 __ZmiRK6b2Vec2S1_($2,$29,$30);
 __Z5b2MulRK5b2RotRK6b2Vec2($rB,$qB,$2);
 __ZplRK6b2Vec2S1_($3,$tmpcast,$rA);
 $31=(($this+68)|0);
 __ZmiRK6b2Vec2S1_($uA,$3,$31);
 __ZplRK6b2Vec2S1_($4,$tmpcast23,$rB);
 $32=(($this+76)|0);
 __ZmiRK6b2Vec2S1_($uB,$4,$32);
 $33=(+(__ZNK6b2Vec26LengthEv($uA)));
 $34=(+(__ZNK6b2Vec26LengthEv($uB)));
 $35=$33>(0.04999999701976776);
 if ($35) {
  $37=((1.0))/($33);
  __ZN6b2Vec2mLEf($uA,$37);
 } else {
  __ZN6b2Vec27SetZeroEv($uA);
 }
 $40=$34>(0.04999999701976776);
 if ($40) {
  $42=((1.0))/($34);
  __ZN6b2Vec2mLEf($uB,$42);
 } else {
  __ZN6b2Vec27SetZeroEv($uB);
 }
 $45=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$uA)));
 $46=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$uB)));
 $47=(($this+176)|0);
 $48=(+(HEAPF32[(($47)>>2)]));
 $49=(($this+184)|0);
 $50=(+(HEAPF32[(($49)>>2)]));
 $51=($45)*($50);
 $52=($45)*($51);
 $53=($48)+($52);
 $54=(($this+180)|0);
 $55=(+(HEAPF32[(($54)>>2)]));
 $56=(($this+188)|0);
 $57=(+(HEAPF32[(($56)>>2)]));
 $58=($46)*($57);
 $59=($46)*($58);
 $60=($55)+($59);
 $61=(($this+112)|0);
 $62=(+(HEAPF32[(($61)>>2)]));
 $63=($62)*($62);
 $64=($63)*($60);
 $65=($53)+($64);
 $66=$65>(0.0);
 if ($66) {
  $68=((1.0))/($65);
  $mass_0=$68;
 } else {
  $mass_0=$65;
 }

 $70=(($this+108)|0);
 $71=(+(HEAPF32[(($70)>>2)]));
 $72=($71)-($33);
 $73=(+(HEAPF32[(($61)>>2)]));
 $74=($34)*($73);
 $75=($72)-($74);
 $76=(+(__Z5b2AbsIfET_S0_($75)));
 $77=((-.0))-($mass_0);
 $78=($75)*($77);
 $79=((-.0))-($78);
 __ZmlfRK6b2Vec2($PA,$79,$uA);
 $80=(+(HEAPF32[(($61)>>2)]));
 $81=((-.0))-($80);
 $82=($78)*($81);
 __ZmlfRK6b2Vec2($PB,$82,$uB);
 $83=(+(HEAPF32[(($47)>>2)]));
 __ZmlfRK6b2Vec2($5,$83,$PA);
 __ZN6b2Vec2pLERKS_($tmpcast,$5);
 $84=(+(HEAPF32[(($49)>>2)]));
 $85=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$PA)));
 $86=($84)*($85);
 $87=($17)+($86);
 $88=(+(HEAPF32[(($54)>>2)]));
 __ZmlfRK6b2Vec2($6,$88,$PB);
 __ZN6b2Vec2pLERKS_($tmpcast23,$6);
 $89=(+(HEAPF32[(($56)>>2)]));
 $90=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$PB)));
 $91=($89)*($90);
 $92=($26)+($91);
 $93=((HEAP32[(($7)>>2)])|0);
 $94=((HEAP32[(($9)>>2)])|0);
 $95=(($94+((($93)*(12))&-1))|0);
 $96=$95;
 $ld$8$0=(($cA)|0);
 $97$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($cA+4)|0);
 $97$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($96)|0);
 HEAP32[(($st$10$0)>>2)]=$97$0;
 $st$11$1=(($96+4)|0);
 HEAP32[(($st$11$1)>>2)]=$97$1;
 $98=((HEAP32[(($7)>>2)])|0);
 $99=((HEAP32[(($9)>>2)])|0);
 $100=(($99+((($98)*(12))&-1)+8)|0);
 HEAPF32[(($100)>>2)]=$87;
 $101=((HEAP32[(($18)>>2)])|0);
 $102=((HEAP32[(($9)>>2)])|0);
 $103=(($102+((($101)*(12))&-1))|0);
 $104=$103;
 $ld$12$0=(($cB)|0);
 $105$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($cB+4)|0);
 $105$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($104)|0);
 HEAP32[(($st$14$0)>>2)]=$105$0;
 $st$15$1=(($104+4)|0);
 HEAP32[(($st$15$1)>>2)]=$105$1;
 $106=((HEAP32[(($18)>>2)])|0);
 $107=((HEAP32[(($9)>>2)])|0);
 $108=(($107+((($106)*(12))&-1)+8)|0);
 HEAPF32[(($108)>>2)]=$92;
 $109=$76<(0.004999999888241291);
 STACKTOP=sp;return (($109)|0);
}


function __ZNK13b2PulleyJoint10GetAnchorAEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+92)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK13b2PulleyJoint10GetAnchorBEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+100)|0);
 __ZNK6b2Body13GetWorldPointERK6b2Vec2($agg_result,$2,$3);
 return;
}


function __ZNK13b2PulleyJoint16GetReactionForceEf($agg_result,$this,$inv_dt){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var $P=0,$1=0,$2=.0,$3=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $P=((sp)|0);
 $1=(($this+116)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+136)|0);
 __ZmlfRK6b2Vec2($P,$2,$3);
 __ZmlfRK6b2Vec2($agg_result,$inv_dt,$P);
 STACKTOP=sp;return;
}


function __ZNK13b2PulleyJoint17GetReactionTorqueEf($this,$inv_dt){
 $this=($this)|0;
 $inv_dt=+($inv_dt);
 var label=0;

 return 0.0;
}


function __ZN13b2PulleyJoint4DumpEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0;
 var $21=0,$22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=.0,$35=.0,$36=0,$37=.0,$38=.0,$39=0,$40=.0;
 var $41=.0,$42=0,$43=.0,$44=.0,$45=0,$46=0,label=0;
 var tempVarArgs=0;
 var sp=0;sp=STACKTOP;
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+8)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __Z5b2LogPKcz(2904,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 1)|0,STACKTOP = (((STACKTOP)+7)&-8),HEAP32[((tempVarArgs)>>2)]=0,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(3440,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$4,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 __Z5b2LogPKcz(2680,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$8,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $9=(($this+61)|0);
 $10=((HEAP8[($9)])|0);
 $11=($10&255);
 __Z5b2LogPKcz(2280,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$11,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $12=(($this+68)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=$13;
 $15=(($this+72)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=$16;
 __Z5b2LogPKcz(1800,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$14,HEAPF64[(((tempVarArgs)+(8))>>3)]=$17,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $18=(($this+76)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=$19;
 $21=(($this+80)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=$22;
 __Z5b2LogPKcz(1336,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$20,HEAPF64[(((tempVarArgs)+(8))>>3)]=$23,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $24=(($this+92)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=$25;
 $27=(($this+96)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=$28;
 __Z5b2LogPKcz(1000,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$26,HEAPF64[(((tempVarArgs)+(8))>>3)]=$29,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $30=(($this+100)|0);
 $31=(+(HEAPF32[(($30)>>2)]));
 $32=$31;
 $33=(($this+104)|0);
 $34=(+(HEAPF32[(($33)>>2)]));
 $35=$34;
 __Z5b2LogPKcz(632,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 16)|0,HEAPF64[((tempVarArgs)>>3)]=$32,HEAPF64[(((tempVarArgs)+(8))>>3)]=$35,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $36=(($this+84)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=$37;
 __Z5b2LogPKcz(352,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$38,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $39=(($this+88)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=$40;
 __Z5b2LogPKcz(72,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$41,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $42=(($this+112)|0);
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=$43;
 __Z5b2LogPKcz(3992,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAPF64[((tempVarArgs)>>3)]=$44,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 $45=(($this+56)|0);
 $46=((HEAP32[(($45)>>2)])|0);
 __Z5b2LogPKcz(3728,(((tempVarArgs=STACKTOP,STACKTOP = (STACKTOP + 8)|0,HEAP32[((tempVarArgs)>>2)]=$46,tempVarArgs))|0)); STACKTOP=tempVarArgs;
 STACKTOP=sp;return;
}


function __ZN13b2PulleyJoint11ShiftOriginERK6b2Vec2($this,$newOrigin){
 $this=($this)|0;
 $newOrigin=($newOrigin)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+68)|0);
 __ZN6b2Vec2mIERKS_($1,$newOrigin);
 $2=(($this+76)|0);
 __ZN6b2Vec2mIERKS_($2,$newOrigin);
 return;
}


function __ZN13b2PulleyJointD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN13b2PulleyJointD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN24b2ChainAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$indexA,$fixtureB,$indexB,$allocator){
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,148))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;

  $7=(($6)|0);
  return (($7)|0);
 }
 $4=$1;
 __ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i($4,$fixtureA,$indexA,$fixtureB,$indexB);
 $6=$4;

 $7=(($6)|0);
 return (($7)|0);
}


function __ZN24b2ChainAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,148);
 return;
}


function __ZN24b2ChainAndPolygonContactC2EP9b2FixtureiS1_i($this,$fixtureA,$indexA,$fixtureB,$indexB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,$indexA,$fixtureB,$indexB);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4736;
 return;
}


function __ZN24b2ChainAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $edge=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $edge=((sp)|0);
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 __ZN11b2EdgeShapeC1Ev($edge);
 $5=(($this+56)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($4,$edge,$6);
 $7=(($this+52)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((__ZN9b2Fixture8GetShapeEv($8))|0);
 $10=$9;
 __Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_($manifold,$edge,$xfA,$10,$xfB);
 STACKTOP=sp;return;
}


function __ZN9b2Fixture8GetShapeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN24b2ChainAndPolygonContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN24b2ChainAndPolygonContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN9b2Contact19InitializeRegistersEv(){
 var label=0;

 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(10,2,0,0);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(14,32,2,0);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(2,52,2,2);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(8,100,1,0);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(24,122,1,2);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(18,38,3,0);
 __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_(4,66,3,2);
 return;
}


function __ZN9b2Contact7AddTypeEPFPS_P9b2FixtureiS2_iP16b2BlockAllocatorEPFvS0_S4_EN7b2Shape4TypeESA_($createFcn,$destoryFcn,$type1,$type2){
 $createFcn=($createFcn)|0;
 $destoryFcn=($destoryFcn)|0;
 $type1=($type1)|0;
 $type2=($type2)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,label=0;

 $1=((8768+((($type1)*(48))&-1)+((($type2)*(12))&-1))|0);
 HEAP32[(($1)>>2)]=$createFcn;
 $2=((8768+((($type1)*(48))&-1)+((($type2)*(12))&-1)+4)|0);
 HEAP32[(($2)>>2)]=$destoryFcn;
 $3=((8768+((($type1)*(48))&-1)+((($type2)*(12))&-1)+8)|0);
 HEAP8[($3)]=1;
 $4=($type1|0)==($type2|0);
 if ($4) {
  return;
 }
 $6=((8768+((($type2)*(48))&-1)+((($type1)*(12))&-1))|0);
 HEAP32[(($6)>>2)]=$createFcn;
 $7=((8768+((($type2)*(48))&-1)+((($type1)*(12))&-1)+4)|0);
 HEAP32[(($7)>>2)]=$destoryFcn;
 $8=((8768+((($type2)*(48))&-1)+((($type1)*(12))&-1)+8)|0);
 HEAP8[($8)]=0;
 return;
}


function __ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$indexA,$fixtureB,$indexB,$allocator){
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$5=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$15=0,$17=0,$_0=0,label=0;

 $1=((HEAP8[(8760)])|0);
 $2=(($1<<24)>>24)==0;
 if ($2) {
  __ZN9b2Contact19InitializeRegistersEv();
  HEAP8[(8760)]=1;
 }
 $5=((__ZNK9b2Fixture7GetTypeEv($fixtureA))|0);
 $6=((__ZNK9b2Fixture7GetTypeEv($fixtureB))|0);
 $7=((8768+((($5)*(48))&-1)+((($6)*(12))&-1))|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($8|0)==0;
 if ($9) {
  $_0=0;

  return (($_0)|0);
 }
 $11=((8768+((($5)*(48))&-1)+((($6)*(12))&-1)+8)|0);
 $12=((HEAP8[($11)])|0);
 $13=(($12<<24)>>24)==0;
 if ($13) {
  $17=((FUNCTION_TABLE_iiiiii[($8)&31]($fixtureB,$indexB,$fixtureA,$indexA,$allocator))|0);
  $_0=$17;

  return (($_0)|0);
 } else {
  $15=((FUNCTION_TABLE_iiiiii[($8)&31]($fixtureA,$indexA,$fixtureB,$indexB,$allocator))|0);
  $_0=$15;

  return (($_0)|0);
 }
  return 0;
}


function __ZNK9b2Fixture7GetTypeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2Shape7GetTypeEv($2))|0);
 return (($3)|0);
}


function __ZN9b2Contact7DestroyEPS_P16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$11=0,$13=0,$14=0,$16=0,$17=0,$18=0,$19=0,label=0;

 $1=(($contact+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($contact+52)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($contact+124)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 do {
  if ($7) {
   $9=((__ZNK9b2Fixture8IsSensorEv($2))|0);
   if ($9) {
    break;
   }
   $11=((__ZNK9b2Fixture8IsSensorEv($4))|0);
   if ($11) {
    break;
   }
   $13=((__ZN9b2Fixture7GetBodyEv($2))|0);
   __ZN6b2Body8SetAwakeEb($13,1);
   $14=((__ZN9b2Fixture7GetBodyEv($4))|0);
   __ZN6b2Body8SetAwakeEb($14,1);
  }
 } while(0);
 $16=((__ZNK9b2Fixture7GetTypeEv($2))|0);
 $17=((__ZNK9b2Fixture7GetTypeEv($4))|0);
 $18=((8768+((($16)*(48))&-1)+((($17)*(12))&-1)+4)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 FUNCTION_TABLE_vii[($19)&255]($contact,$allocator);
 return;
}


function __ZNK9b2Fixture8IsSensorEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+38)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)!=0;
 return (($3)|0);
}


function __ZN9b2Fixture7GetBodyEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2ContactC2EP9b2FixtureiS1_i($this,$fA,$indexA,$fB,$indexB){
 $this=($this)|0;
 $fA=($fA)|0;
 $indexA=($indexA)|0;
 $fB=($fB)|0;
 $indexB=($indexB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=0,$15=0,$16=.0,$17=.0,$18=0,$19=0,$20=0;
 var $21=.0,$22=0,$23=0,$24=.0,$25=.0,$26=0,$27=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=4552;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=4;
 $3=(($this+48)|0);
 HEAP32[(($3)>>2)]=$fA;
 $4=(($this+52)|0);
 HEAP32[(($4)>>2)]=$fB;
 $5=(($this+56)|0);
 HEAP32[(($5)>>2)]=$indexA;
 $6=(($this+60)|0);
 HEAP32[(($6)>>2)]=$indexB;
 $7=(($this+124)|0);
 HEAP32[(($7)>>2)]=0;
 $8=(($this+8)|0);
 $9=(($this+128)|0);
 HEAP32[(($9)>>2)]=0;
 $10=$8;
 _memset((((($10)|0))|0), ((((0)|0))|0), ((((40)|0))|0))|0;
 $11=((HEAP32[(($3)>>2)])|0);
 $12=(($11+16)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=((HEAP32[(($4)>>2)])|0);
 $15=(($14+16)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(+(__Z13b2MixFrictionff($13,$16)));
 $18=(($this+136)|0);
 HEAPF32[(($18)>>2)]=$17;
 $19=((HEAP32[(($3)>>2)])|0);
 $20=(($19+20)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=((HEAP32[(($4)>>2)])|0);
 $23=(($22+20)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(+(__Z16b2MixRestitutionff($21,$24)));
 $26=(($this+140)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=(($this+144)|0);
 HEAPF32[(($27)>>2)]=0.0;
 return;
}


function __Z13b2MixFrictionff($friction1,$friction2){
 $friction1=+($friction1);
 $friction2=+($friction2);
 var $1=.0,$2=.0,label=0;

 $1=($friction1)*($friction2);
 $2=(+(Math_sqrt($1)));
 return (+($2));
}


function __Z16b2MixRestitutionff($restitution1,$restitution2){
 $restitution1=+($restitution1);
 $restitution2=+($restitution2);
 var $1=0,$2=.0,label=0;

 $1=$restitution1>$restitution2;
 $2=($1?$restitution1:$restitution2);
 return (+($2));
}


function __ZN9b2Contact6UpdateEP17b2ContactListener($this,$listener){
 $this=($this)|0;
 $listener=($listener)|0;
 var $oldManifold=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$_=0,$14=0,$15=0,$16=0,$17=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$i_036=0,$38=0,$39=0,$id2_sroa_0_0__idx=0;
 var $id2_sroa_0_0_copyload=0,$j_0=0,$41=0,$43=0,$44=0,$45=0,$46=0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$touching_0_off0=0,$60=0,$61=0;
 var $62=0,$storemerge=0,$63=0,$64=0,$_not=0,$touching_0_off0_not=0,$brmerge=0,$65=0,$or_cond=0,$67=0,$68=0,$69=0,$70=0,$brmerge30=0,$or_cond31=0,$73=0,$74=0,$75=0,$76=0,$brmerge33=0;
 var $or_cond34=0,$79=0,$80=0,$81=0,$82=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $oldManifold=((sp)|0);
 $1=(($this+64)|0);
 $2=$oldManifold;
 $3=$1;
 (_memcpy((($2)|0), (($3)|0), 64)|0);
 $4=(($this+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=$5|4;
 HEAP32[(($4)>>2)]=$6;
 $7=$5>>>1;
 $8=(($this+48)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=((__ZNK9b2Fixture8IsSensorEv($9))|0);
 $11=(($this+52)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=((__ZNK9b2Fixture8IsSensorEv($12))|0);
 $_=$10|$13;
 $14=((__ZN9b2Fixture7GetBodyEv($9))|0);
 $15=((__ZN9b2Fixture7GetBodyEv($12))|0);
 $16=((__ZNK6b2Body12GetTransformEv($14))|0);
 $17=((__ZNK6b2Body12GetTransformEv($15))|0);
 do {
  if ($_) {
   $19=((__ZN9b2Fixture8GetShapeEv($9))|0);
   $20=((__ZN9b2Fixture8GetShapeEv($12))|0);
   $21=(($this+56)|0);
   $22=((HEAP32[(($21)>>2)])|0);
   $23=(($this+60)|0);
   $24=((HEAP32[(($23)>>2)])|0);
   $25=((__Z13b2TestOverlapPK7b2ShapeiS1_iRK11b2TransformS4_($19,$22,$20,$24,$16,$17))|0);
   $26=(($this+124)|0);
   HEAP32[(($26)>>2)]=0;
   $touching_0_off0=$25;
  } else {
   $28=$this;
   $29=((HEAP32[(($28)>>2)])|0);
   $30=((HEAP32[(($29)>>2)])|0);
   FUNCTION_TABLE_viiii[($30)&63]($this,$1,$16,$17);
   $31=(($this+124)|0);
   $32=((HEAP32[(($31)>>2)])|0);
   $33=($32|0)>0;
   $34=($32|0)>0;
   if ($34) {
    $35=(($oldManifold+60)|0);
    $36=((HEAP32[(($35)>>2)])|0);
    $i_036=0;
    while(1) {

     $38=(($this+64+((($i_036)*(20))&-1)+8)|0);
     HEAPF32[(($38)>>2)]=0.0;
     $39=(($this+64+((($i_036)*(20))&-1)+12)|0);
     HEAPF32[(($39)>>2)]=0.0;
     $id2_sroa_0_0__idx=(($this+64+((($i_036)*(20))&-1)+16)|0);
     $id2_sroa_0_0_copyload=((HEAP32[(($id2_sroa_0_0__idx)>>2)])|0);
     $j_0=0;
     while(1) {

      $41=($j_0|0)<($36|0);
      if (!($41)) {
       break;
      }
      $43=(($oldManifold+((($j_0)*(20))&-1)+16)|0);
      $44=((HEAP32[(($43)>>2)])|0);
      $45=($44|0)==($id2_sroa_0_0_copyload|0);
      $46=((($j_0)+(1))|0);
      if ($45) {
       label = 8;
       break;
      } else {
       $j_0=$46;
      }
     }
     if ((label|0) == 8) {
      label = 0;
      $48=(($oldManifold+((($j_0)*(20))&-1)+8)|0);
      $49=(+(HEAPF32[(($48)>>2)]));
      HEAPF32[(($38)>>2)]=$49;
      $50=(($oldManifold+((($j_0)*(20))&-1)+12)|0);
      $51=(+(HEAPF32[(($50)>>2)]));
      HEAPF32[(($39)>>2)]=$51;
     }
     $52=((($i_036)+(1))|0);
     $53=((HEAP32[(($31)>>2)])|0);
     $54=($52|0)<($53|0);
     if ($54) {
      $i_036=$52;
     } else {
      break;
     }
    }
   }
   $55=$7&1;
   $56=($55|0)!=0;
   $57=$33^$56;
   if (!($57)) {
    $touching_0_off0=$33;
    break;
   }
   __ZN6b2Body8SetAwakeEb($14,1);
   __ZN6b2Body8SetAwakeEb($15,1);
   $touching_0_off0=$33;
  }
 } while(0);

 $60=((HEAP32[(($4)>>2)])|0);
 $61=$60&-3;
 $62=$60|2;
 $storemerge=($touching_0_off0?$62:$61);
 HEAP32[(($4)>>2)]=$storemerge;
 $63=$7&1;
 $64=($63|0)==0;
 $_not=$64^1;
 $touching_0_off0_not=$touching_0_off0^1;
 $brmerge=$_not|$touching_0_off0_not;
 $65=($listener|0)==0;
 $or_cond=$brmerge|$65;
 if (!($or_cond)) {
  $67=$listener;
  $68=((HEAP32[(($67)>>2)])|0);
  $69=(($68+8)|0);
  $70=((HEAP32[(($69)>>2)])|0);
  FUNCTION_TABLE_vii[($70)&255]($listener,$this);
 }
 $brmerge30=$64|$touching_0_off0;
 $or_cond31=$brmerge30|$65;
 if (!($or_cond31)) {
  $73=$listener;
  $74=((HEAP32[(($73)>>2)])|0);
  $75=(($74+12)|0);
  $76=((HEAP32[(($75)>>2)])|0);
  FUNCTION_TABLE_vii[($76)&255]($listener,$this);
 }
 $brmerge33=$_|$touching_0_off0_not;
 $or_cond34=$brmerge33|$65;
 if ($or_cond34) {
  STACKTOP=sp;return;
 }
 $79=$listener;
 $80=((HEAP32[(($79)>>2)])|0);
 $81=(($80+32)|0);
 $82=((HEAP32[(($81)>>2)])|0);
 FUNCTION_TABLE_viii[($82)&31]($listener,$this,$oldManifold);
 STACKTOP=sp;return;
}


function __ZN9b2ContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN9b2ContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN25b2PolygonAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,148))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN25b2PolygonAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,148);
 return;
}


function __ZN25b2PolygonAndCircleContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4704;
 return;
}


function __ZN25b2PolygonAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z25b2CollidePolygonAndCircleP10b2ManifoldPK14b2PolygonShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN25b2PolygonAndCircleContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN25b2PolygonAndCircleContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN15b2CircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,148))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN15b2CircleContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN15b2CircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,148);
 return;
}


function __ZN15b2CircleContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=5344;
 return;
}


function __ZN15b2CircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z16b2CollideCirclesP10b2ManifoldPK13b2CircleShapeRK11b2TransformS3_S6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN15b2CircleContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2CircleContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN15b2ContactSolverC2EP18b2ContactSolverDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$i_079=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0;
 var $41=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=.0,$55=0,$56=0,$57=.0,$58=0,$59=0,$60=.0;
 var $61=0,$62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=.0,$70=0,$71=0,$72=.0,$73=0,$74=0,$75=.0,$76=0,$77=0,$78=.0,$79=0,$80=0;
 var $81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$93=0,$94=0,$95=0,$96=0,$ld$0$0=0,$97$0=0,$ld$1$1=0,$97$1=0;
 var $st$2$0=0,$st$3$1=0,$98=0,$99=0,$100=0,$101=0,$ld$4$0=0,$102$0=0,$ld$5$1=0,$102$1=0,$st$6$0=0,$st$7$1=0,$103=.0,$104=0,$105=.0,$106=0,$107=0,$108=0,$109=0,$110=0;
 var $ld$8$0=0,$111$0=0,$ld$9$1=0,$111$1=0,$st$10$0=0,$st$11$1=0,$112=0,$113=0,$114=0,$115=0,$ld$12$0=0,$116$0=0,$ld$13$1=0,$116$1=0,$st$14$0=0,$st$15$1=0,$117=0,$118=0,$119=0,$120=0;
 var $121=0,$122=0,$123=0,$j_078=0,$124=0,$125=0,$126=0,$128=.0,$129=0,$130=.0,$131=.0,$132=0,$133=.0,$134=0,$135=.0,$136=.0,$137=0,$139=0,$140=0,$142=0;
 var $143=0,$144=0,$145=0,$146=0,$147=0,$148=0,$149=0,$ld$16$0=0,$150$0=0,$ld$17$1=0,$150$1=0,$st$18$0=0,$st$19$1=0,$151=0,$152=0,$153=0,$154=0,$155=0,label=0;

 $1=$this;
 $2=$def;
 HEAP32[(($1)>>2)]=((HEAP32[(($2)>>2)])|0);HEAP32[((($1)+(4))>>2)]=((HEAP32[((($2)+(4))>>2)])|0);HEAP32[((($1)+(8))>>2)]=((HEAP32[((($2)+(8))>>2)])|0);HEAP32[((($1)+(12))>>2)]=((HEAP32[((($2)+(12))>>2)])|0);HEAP32[((($1)+(16))>>2)]=((HEAP32[((($2)+(16))>>2)])|0);HEAP32[((($1)+(20))>>2)]=((HEAP32[((($2)+(20))>>2)])|0);HEAP32[((($1)+(24))>>2)]=((HEAP32[((($2)+(24))>>2)])|0);
 $3=(($def+44)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+36)|0);
 HEAP32[(($5)>>2)]=$4;
 $6=(($def+32)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($this+52)|0);
 HEAP32[(($8)>>2)]=$7;
 $9=((HEAP32[(($5)>>2)])|0);
 $10=((($7)*(88))&-1);
 $11=((__ZN16b2StackAllocator8AllocateEi($9,$10))|0);
 $12=$11;
 $13=(($this+40)|0);
 HEAP32[(($13)>>2)]=$12;
 $14=((HEAP32[(($5)>>2)])|0);
 $15=((HEAP32[(($8)>>2)])|0);
 $16=((($15)*(156))&-1);
 $17=((__ZN16b2StackAllocator8AllocateEi($14,$16))|0);
 $18=$17;
 $19=(($this+44)|0);
 HEAP32[(($19)>>2)]=$18;
 $20=(($def+36)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=(($this+28)|0);
 HEAP32[(($22)>>2)]=$21;
 $23=(($def+40)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($this+32)|0);
 HEAP32[(($25)>>2)]=$24;
 $26=(($def+28)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($this+48)|0);
 HEAP32[(($28)>>2)]=$27;
 $29=((HEAP32[(($8)>>2)])|0);
 $30=($29|0)>0;
 if (!($30)) {
  return;
 }
 $31=(($this+24)|0);
 $32=(($this+8)|0);
 $i_079=0;
 while(1) {

  $34=((HEAP32[(($28)>>2)])|0);
  $35=(($34+($i_079<<2))|0);
  $36=((HEAP32[(($35)>>2)])|0);
  $37=(($36+48)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $39=(($36+52)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=((__ZN9b2Fixture8GetShapeEv($38))|0);
  $42=((__ZN9b2Fixture8GetShapeEv($40))|0);
  $43=(($41+8)|0);
  $44=(+(HEAPF32[(($43)>>2)]));
  $45=(($42+8)|0);
  $46=(+(HEAPF32[(($45)>>2)]));
  $47=((__ZN9b2Fixture7GetBodyEv($38))|0);
  $48=((__ZN9b2Fixture7GetBodyEv($40))|0);
  $49=((__ZN9b2Contact11GetManifoldEv($36))|0);
  $50=(($49+60)|0);
  $51=((HEAP32[(($50)>>2)])|0);
  $52=((HEAP32[(($19)>>2)])|0);
  $53=(($36+136)|0);
  $54=(+(HEAPF32[(($53)>>2)]));
  $55=(($52+((($i_079)*(156))&-1)+136)|0);
  HEAPF32[(($55)>>2)]=$54;
  $56=(($36+140)|0);
  $57=(+(HEAPF32[(($56)>>2)]));
  $58=(($52+((($i_079)*(156))&-1)+140)|0);
  HEAPF32[(($58)>>2)]=$57;
  $59=(($36+144)|0);
  $60=(+(HEAPF32[(($59)>>2)]));
  $61=(($52+((($i_079)*(156))&-1)+144)|0);
  HEAPF32[(($61)>>2)]=$60;
  $62=(($47+8)|0);
  $63=((HEAP32[(($62)>>2)])|0);
  $64=(($52+((($i_079)*(156))&-1)+112)|0);
  HEAP32[(($64)>>2)]=$63;
  $65=(($48+8)|0);
  $66=((HEAP32[(($65)>>2)])|0);
  $67=(($52+((($i_079)*(156))&-1)+116)|0);
  HEAP32[(($67)>>2)]=$66;
  $68=(($47+136)|0);
  $69=(+(HEAPF32[(($68)>>2)]));
  $70=(($52+((($i_079)*(156))&-1)+120)|0);
  HEAPF32[(($70)>>2)]=$69;
  $71=(($48+136)|0);
  $72=(+(HEAPF32[(($71)>>2)]));
  $73=(($52+((($i_079)*(156))&-1)+124)|0);
  HEAPF32[(($73)>>2)]=$72;
  $74=(($47+144)|0);
  $75=(+(HEAPF32[(($74)>>2)]));
  $76=(($52+((($i_079)*(156))&-1)+128)|0);
  HEAPF32[(($76)>>2)]=$75;
  $77=(($48+144)|0);
  $78=(+(HEAPF32[(($77)>>2)]));
  $79=(($52+((($i_079)*(156))&-1)+132)|0);
  HEAPF32[(($79)>>2)]=$78;
  $80=(($52+((($i_079)*(156))&-1)+152)|0);
  HEAP32[(($80)>>2)]=$i_079;
  $81=(($52+((($i_079)*(156))&-1)+148)|0);
  HEAP32[(($81)>>2)]=$51;
  $82=(($52+((($i_079)*(156))&-1)+96)|0);
  __ZN7b2Mat227SetZeroEv($82);
  $83=(($52+((($i_079)*(156))&-1)+80)|0);
  __ZN7b2Mat227SetZeroEv($83);
  $84=((HEAP32[(($13)>>2)])|0);
  $85=((HEAP32[(($62)>>2)])|0);
  $86=(($84+((($i_079)*(88))&-1)+32)|0);
  HEAP32[(($86)>>2)]=$85;
  $87=((HEAP32[(($65)>>2)])|0);
  $88=(($84+((($i_079)*(88))&-1)+36)|0);
  HEAP32[(($88)>>2)]=$87;
  $89=(+(HEAPF32[(($68)>>2)]));
  $90=(($84+((($i_079)*(88))&-1)+40)|0);
  HEAPF32[(($90)>>2)]=$89;
  $91=(+(HEAPF32[(($71)>>2)]));
  $92=(($84+((($i_079)*(88))&-1)+44)|0);
  HEAPF32[(($92)>>2)]=$91;
  $93=(($84+((($i_079)*(88))&-1)+48)|0);
  $94=(($47+44)|0);
  $95=$94;
  $96=$93;
  $ld$0$0=(($95)|0);
  $97$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($95+4)|0);
  $97$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($96)|0);
  HEAP32[(($st$2$0)>>2)]=$97$0;
  $st$3$1=(($96+4)|0);
  HEAP32[(($st$3$1)>>2)]=$97$1;
  $98=(($84+((($i_079)*(88))&-1)+56)|0);
  $99=(($48+44)|0);
  $100=$99;
  $101=$98;
  $ld$4$0=(($100)|0);
  $102$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($100+4)|0);
  $102$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($101)|0);
  HEAP32[(($st$6$0)>>2)]=$102$0;
  $st$7$1=(($101+4)|0);
  HEAP32[(($st$7$1)>>2)]=$102$1;
  $103=(+(HEAPF32[(($74)>>2)]));
  $104=(($84+((($i_079)*(88))&-1)+64)|0);
  HEAPF32[(($104)>>2)]=$103;
  $105=(+(HEAPF32[(($77)>>2)]));
  $106=(($84+((($i_079)*(88))&-1)+68)|0);
  HEAPF32[(($106)>>2)]=$105;
  $107=(($84+((($i_079)*(88))&-1)+16)|0);
  $108=(($49+40)|0);
  $109=$108;
  $110=$107;
  $ld$8$0=(($109)|0);
  $111$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($109+4)|0);
  $111$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($110)|0);
  HEAP32[(($st$10$0)>>2)]=$111$0;
  $st$11$1=(($110+4)|0);
  HEAP32[(($st$11$1)>>2)]=$111$1;
  $112=(($84+((($i_079)*(88))&-1)+24)|0);
  $113=(($49+48)|0);
  $114=$113;
  $115=$112;
  $ld$12$0=(($114)|0);
  $116$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($114+4)|0);
  $116$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($115)|0);
  HEAP32[(($st$14$0)>>2)]=$116$0;
  $st$15$1=(($115+4)|0);
  HEAP32[(($st$15$1)>>2)]=$116$1;
  $117=(($84+((($i_079)*(88))&-1)+84)|0);
  HEAP32[(($117)>>2)]=$51;
  $118=(($84+((($i_079)*(88))&-1)+76)|0);
  HEAPF32[(($118)>>2)]=$44;
  $119=(($84+((($i_079)*(88))&-1)+80)|0);
  HEAPF32[(($119)>>2)]=$46;
  $120=(($49+56)|0);
  $121=((HEAP32[(($120)>>2)])|0);
  $122=(($84+((($i_079)*(88))&-1)+72)|0);
  HEAP32[(($122)>>2)]=$121;
  $123=($51|0)>0;
  if ($123) {
   $j_078=0;
   while(1) {

    $124=(($49+((($j_078)*(20))&-1))|0);
    $125=((HEAP8[($31)])|0);
    $126=(($125<<24)>>24)==0;
    if ($126) {
     $139=(($52+((($i_079)*(156))&-1)+((($j_078)*(36))&-1)+16)|0);
     HEAPF32[(($139)>>2)]=0.0;
     $140=(($52+((($i_079)*(156))&-1)+((($j_078)*(36))&-1)+20)|0);
     HEAPF32[(($140)>>2)]=0.0;
    } else {
     $128=(+(HEAPF32[(($32)>>2)]));
     $129=(($49+((($j_078)*(20))&-1)+8)|0);
     $130=(+(HEAPF32[(($129)>>2)]));
     $131=($128)*($130);
     $132=(($52+((($i_079)*(156))&-1)+((($j_078)*(36))&-1)+16)|0);
     HEAPF32[(($132)>>2)]=$131;
     $133=(+(HEAPF32[(($32)>>2)]));
     $134=(($49+((($j_078)*(20))&-1)+12)|0);
     $135=(+(HEAPF32[(($134)>>2)]));
     $136=($133)*($135);
     $137=(($52+((($i_079)*(156))&-1)+((($j_078)*(36))&-1)+20)|0);
     HEAPF32[(($137)>>2)]=$136;
    }
    $142=(($52+((($i_079)*(156))&-1)+((($j_078)*(36))&-1))|0);
    __ZN6b2Vec27SetZeroEv($142);
    $143=(($52+((($i_079)*(156))&-1)+((($j_078)*(36))&-1)+8)|0);
    __ZN6b2Vec27SetZeroEv($143);
    $144=(($52+((($i_079)*(156))&-1)+((($j_078)*(36))&-1)+24)|0);
    HEAPF32[(($144)>>2)]=0.0;
    $145=(($52+((($i_079)*(156))&-1)+((($j_078)*(36))&-1)+28)|0);
    HEAPF32[(($145)>>2)]=0.0;
    $146=(($52+((($i_079)*(156))&-1)+((($j_078)*(36))&-1)+32)|0);
    HEAPF32[(($146)>>2)]=0.0;
    $147=(($84+((($i_079)*(88))&-1)+($j_078<<3))|0);
    $148=$124;
    $149=$147;
    $ld$16$0=(($148)|0);
    $150$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($148+4)|0);
    $150$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($149)|0);
    HEAP32[(($st$18$0)>>2)]=$150$0;
    $st$19$1=(($149+4)|0);
    HEAP32[(($st$19$1)>>2)]=$150$1;
    $151=((($j_078)+(1))|0);
    $152=($151|0)<($51|0);
    if ($152) {
     $j_078=$151;
    } else {
     break;
    }
   }
  }
  $153=((($i_079)+(1))|0);
  $154=((HEAP32[(($8)>>2)])|0);
  $155=($153|0)<($154|0);
  if ($155) {
   $i_079=$153;
  } else {
   break;
  }
 }
 return;
}


function __ZN7b2Mat227SetZeroEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 _memset((((($1)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 return;
}


function __ZN15b2ContactSolverD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=(($this+36)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+44)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$4;
 __ZN16b2StackAllocator4FreeEPv($2,$5);
 $6=((HEAP32[(($1)>>2)])|0);
 $7=(($this+40)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=$8;
 __ZN16b2StackAllocator4FreeEPv($6,$9);
 return;
}


function __ZN15b2ContactSolver29InitializeVelocityConstraintsEv($this){
 $this=($this)|0;
 var $localCenterA=0,$tmpcast=0,$localCenterB=0,$tmpcast92=0,$cA=0,$tmpcast93=0,$vA=0,$tmpcast94=0,$cB=0,$tmpcast95=0,$vB=0,$tmpcast96=0,$xfA98=0,$tmpcast97=0,$xfB101=0,$tmpcast100=0,$1=0,$2=0,$worldManifold104=0,$worldManifold104_sub=0;
 var $tmpcast103=0,$3=0,$tmpcast105=0,$4=0,$tmpcast106=0,$tangent=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$i_0108=0,$27=0,$28=0,$29=0,$30=.0,$31=0,$32=.0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0;
 var $39=0,$40=0,$41=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=0,$50=.0,$51=0,$52=0,$ld$0$0=0,$53$0=0,$ld$1$1=0,$53$1=0,$st$2$0=0,$st$3$1=0;
 var $54=0,$55=0,$ld$4$0=0,$56$0=0,$ld$5$1=0,$56$1=0,$st$6$0=0,$st$7$1=0,$57=0,$58=0,$59=0,$ld$8$0=0,$60$0=0,$ld$9$1=0,$60$1=0,$st$10$0=0,$st$11$1=0,$61=0,$62=0,$63=.0;
 var $64=0,$65=0,$66=0,$ld$12$0=0,$67$0=0,$ld$13$1=0,$67$1=0,$st$14$0=0,$st$15$1=0,$68=0,$69=0,$70=.0,$71=0,$72=0,$73=0,$ld$16$0=0,$74$0=0,$ld$17$1=0,$74$1=0,$st$18$0=0;
 var $st$19$1=0,$75=0,$76=0,$77=.0,$78=0,$79=0,$80=0,$ld$20$0=0,$81$0=0,$ld$21$1=0,$81$1=0,$st$22$0=0,$st$23$1=0,$82=0,$83=0,$84=.0,$xfA98112113=0,$xfB101114115=0,$85=0,$86=0;
 var $ld$24$0=0,$87$0=0,$ld$25$1=0,$87$1=0,$st$26$0=0,$st$27$1=0,$88=0,$89=0,$90=0,$91=.0,$92=0,$j_0107=0,$94=0,$95=0,$96=0,$97=0,$ld$28$0=0,$98$0=0,$ld$29$1=0,$98$1=0;
 var $st$30$0=0,$st$31$1=0,$99=0,$100=0,$ld$32$0=0,$101$0=0,$ld$33$1=0,$101$1=0,$st$34$0=0,$st$35$1=0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=0,$112=.0;
 var $114=.0,$115=0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=.0,$123=.0,$124=0,$126=.0,$128=.0,$129=0,$130=0,$131=.0,$132=0,$134=.0,$135=.0,$136=.0;
 var $138=0,$139=0,$_pr=0,$140=0,$142=0,$143=.0,$144=0,$145=.0,$146=0,$147=.0,$148=0,$149=.0,$150=.0,$151=.0,$152=.0,$153=.0,$154=.0,$155=.0,$156=.0,$157=.0;
 var $158=.0,$159=.0,$160=.0,$161=.0,$162=.0,$163=.0,$164=.0,$165=.0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0,$171=.0,$172=0,$174=0,$175=0,$176=0,$177=0,$178=0;
 var $180=0,$181=0,$182=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $localCenterA=((sp)|0);
 $tmpcast=$localCenterA;
 $localCenterB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast92=$localCenterB;
 $cA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast93=$cA;
 $vA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast94=$vA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast95=$cB;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast96=$vB;
 $xfA98=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast97=$xfA98;
 $xfB101=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast100=$xfB101;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $worldManifold104=STACKTOP;STACKTOP = (STACKTOP + 32)|0;
 $worldManifold104_sub=(($worldManifold104)|0);
 $tmpcast103=$worldManifold104;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast105=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast106=$4;
 $tangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $11=(($this+52)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($12|0)>0;
 if (!($13)) {
  STACKTOP=sp;return;
 }
 $14=(($this+44)|0);
 $15=(($this+40)|0);
 $16=(($this+48)|0);
 $17=(($this+28)|0);
 $18=(($this+32)|0);
 $19=(($xfA98+8)|0);
 $20=$19;
 $21=(($xfB101+8)|0);
 $22=$21;
 $23=$10;
 $24=(($worldManifold104+8)|0);
 $25=$24;
 $i_0108=0;
 while(1) {

  $27=((HEAP32[(($14)>>2)])|0);
  $28=((HEAP32[(($15)>>2)])|0);
  $29=(($28+((($i_0108)*(88))&-1)+76)|0);
  $30=(+(HEAPF32[(($29)>>2)]));
  $31=(($28+((($i_0108)*(88))&-1)+80)|0);
  $32=(+(HEAPF32[(($31)>>2)]));
  $33=(($27+((($i_0108)*(156))&-1)+152)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $35=((HEAP32[(($16)>>2)])|0);
  $36=(($35+($34<<2))|0);
  $37=((HEAP32[(($36)>>2)])|0);
  $38=((__ZN9b2Contact11GetManifoldEv($37))|0);
  $39=(($27+((($i_0108)*(156))&-1)+112)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=(($27+((($i_0108)*(156))&-1)+116)|0);
  $42=((HEAP32[(($41)>>2)])|0);
  $43=(($27+((($i_0108)*(156))&-1)+120)|0);
  $44=(+(HEAPF32[(($43)>>2)]));
  $45=(($27+((($i_0108)*(156))&-1)+124)|0);
  $46=(+(HEAPF32[(($45)>>2)]));
  $47=(($27+((($i_0108)*(156))&-1)+128)|0);
  $48=(+(HEAPF32[(($47)>>2)]));
  $49=(($27+((($i_0108)*(156))&-1)+132)|0);
  $50=(+(HEAPF32[(($49)>>2)]));
  $51=(($28+((($i_0108)*(88))&-1)+48)|0);
  $52=$51;
  $ld$0$0=(($52)|0);
  $53$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($52+4)|0);
  $53$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localCenterA)|0);
  HEAP32[(($st$2$0)>>2)]=$53$0;
  $st$3$1=(($localCenterA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$53$1;
  $54=(($28+((($i_0108)*(88))&-1)+56)|0);
  $55=$54;
  $ld$4$0=(($55)|0);
  $56$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($55+4)|0);
  $56$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localCenterB)|0);
  HEAP32[(($st$6$0)>>2)]=$56$0;
  $st$7$1=(($localCenterB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$56$1;
  $57=((HEAP32[(($17)>>2)])|0);
  $58=(($57+((($40)*(12))&-1))|0);
  $59=$58;
  $ld$8$0=(($59)|0);
  $60$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($59+4)|0);
  $60$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($cA)|0);
  HEAP32[(($st$10$0)>>2)]=$60$0;
  $st$11$1=(($cA+4)|0);
  HEAP32[(($st$11$1)>>2)]=$60$1;
  $61=((HEAP32[(($17)>>2)])|0);
  $62=(($61+((($40)*(12))&-1)+8)|0);
  $63=(+(HEAPF32[(($62)>>2)]));
  $64=((HEAP32[(($18)>>2)])|0);
  $65=(($64+((($40)*(12))&-1))|0);
  $66=$65;
  $ld$12$0=(($66)|0);
  $67$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($66+4)|0);
  $67$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($vA)|0);
  HEAP32[(($st$14$0)>>2)]=$67$0;
  $st$15$1=(($vA+4)|0);
  HEAP32[(($st$15$1)>>2)]=$67$1;
  $68=((HEAP32[(($18)>>2)])|0);
  $69=(($68+((($40)*(12))&-1)+8)|0);
  $70=(+(HEAPF32[(($69)>>2)]));
  $71=((HEAP32[(($17)>>2)])|0);
  $72=(($71+((($42)*(12))&-1))|0);
  $73=$72;
  $ld$16$0=(($73)|0);
  $74$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($73+4)|0);
  $74$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($cB)|0);
  HEAP32[(($st$18$0)>>2)]=$74$0;
  $st$19$1=(($cB+4)|0);
  HEAP32[(($st$19$1)>>2)]=$74$1;
  $75=((HEAP32[(($17)>>2)])|0);
  $76=(($75+((($42)*(12))&-1)+8)|0);
  $77=(+(HEAPF32[(($76)>>2)]));
  $78=((HEAP32[(($18)>>2)])|0);
  $79=(($78+((($42)*(12))&-1))|0);
  $80=$79;
  $ld$20$0=(($80)|0);
  $81$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($80+4)|0);
  $81$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($vB)|0);
  HEAP32[(($st$22$0)>>2)]=$81$0;
  $st$23$1=(($vB+4)|0);
  HEAP32[(($st$23$1)>>2)]=$81$1;
  $82=((HEAP32[(($18)>>2)])|0);
  $83=(($82+((($42)*(12))&-1)+8)|0);
  $84=(+(HEAPF32[(($83)>>2)]));
  __ZN5b2Rot3SetEf($20,$63);
  __ZN5b2Rot3SetEf($22,$77);
  __Z5b2MulRK5b2RotRK6b2Vec2($1,$20,$tmpcast);
  $xfA98112113=$xfA98;
  __ZmiRK6b2Vec2S1_($xfA98112113,$tmpcast93,$1);
  __Z5b2MulRK5b2RotRK6b2Vec2($2,$22,$tmpcast92);
  $xfB101114115=$xfB101;
  __ZmiRK6b2Vec2S1_($xfB101114115,$tmpcast95,$2);
  __ZN15b2WorldManifold10InitializeEPK10b2ManifoldRK11b2TransformfS5_f($tmpcast103,$38,$tmpcast97,$30,$tmpcast100,$32);
  $85=(($27+((($i_0108)*(156))&-1)+72)|0);
  $86=$85;
  $ld$24$0=(($worldManifold104_sub)|0);
  $87$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($worldManifold104_sub+4)|0);
  $87$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($86)|0);
  HEAP32[(($st$26$0)>>2)]=$87$0;
  $st$27$1=(($86+4)|0);
  HEAP32[(($st$27$1)>>2)]=$87$1;
  $88=(($27+((($i_0108)*(156))&-1)+148)|0);
  $89=((HEAP32[(($88)>>2)])|0);
  $90=($89|0)>0;
  do {
   if ($90) {
    $91=($44)+($46);
    $92=(($27+((($i_0108)*(156))&-1)+140)|0);
    $j_0107=0;
    while(1) {

     $94=(($27+((($i_0108)*(156))&-1)+((($j_0107)*(36))&-1))|0);
     $95=(($94)|0);
     $96=(($25+($j_0107<<3))|0);
     __ZmiRK6b2Vec2S1_($tmpcast105,$96,$tmpcast93);
     $97=$94;
     $ld$28$0=(($3)|0);
     $98$0=((HEAP32[(($ld$28$0)>>2)])|0);
     $ld$29$1=(($3+4)|0);
     $98$1=((HEAP32[(($ld$29$1)>>2)])|0);
     $st$30$0=(($97)|0);
     HEAP32[(($st$30$0)>>2)]=$98$0;
     $st$31$1=(($97+4)|0);
     HEAP32[(($st$31$1)>>2)]=$98$1;
     $99=(($27+((($i_0108)*(156))&-1)+((($j_0107)*(36))&-1)+8)|0);
     __ZmiRK6b2Vec2S1_($tmpcast106,$96,$tmpcast95);
     $100=$99;
     $ld$32$0=(($4)|0);
     $101$0=((HEAP32[(($ld$32$0)>>2)])|0);
     $ld$33$1=(($4+4)|0);
     $101$1=((HEAP32[(($ld$33$1)>>2)])|0);
     $st$34$0=(($100)|0);
     HEAP32[(($st$34$0)>>2)]=$101$0;
     $st$35$1=(($100+4)|0);
     HEAP32[(($st$35$1)>>2)]=$101$1;
     $102=(+(__Z7b2CrossRK6b2Vec2S1_($95,$85)));
     $103=(+(__Z7b2CrossRK6b2Vec2S1_($99,$85)));
     $104=($48)*($102);
     $105=($102)*($104);
     $106=($91)+($105);
     $107=($50)*($103);
     $108=($103)*($107);
     $109=($106)+($108);
     $110=$109>(0.0);
     if ($110) {
      $112=((1.0))/($109);
      $114=$112;
     } else {
      $114=0.0;
     }

     $115=(($27+((($i_0108)*(156))&-1)+((($j_0107)*(36))&-1)+24)|0);
     HEAPF32[(($115)>>2)]=$114;
     __Z7b2CrossRK6b2Vec2f($tangent,$85,1.0);
     $116=(+(__Z7b2CrossRK6b2Vec2S1_($95,$tangent)));
     $117=(+(__Z7b2CrossRK6b2Vec2S1_($99,$tangent)));
     $118=($48)*($116);
     $119=($116)*($118);
     $120=($91)+($119);
     $121=($50)*($117);
     $122=($117)*($121);
     $123=($120)+($122);
     $124=$123>(0.0);
     if ($124) {
      $126=((1.0))/($123);
      $128=$126;
     } else {
      $128=0.0;
     }

     $129=(($27+((($i_0108)*(156))&-1)+((($j_0107)*(36))&-1)+28)|0);
     HEAPF32[(($129)>>2)]=$128;
     $130=(($27+((($i_0108)*(156))&-1)+((($j_0107)*(36))&-1)+32)|0);
     HEAPF32[(($130)>>2)]=0.0;
     __Z7b2CrossfRK6b2Vec2($8,$84,$99);
     __ZplRK6b2Vec2S1_($7,$tmpcast96,$8);
     __ZmiRK6b2Vec2S1_($6,$7,$tmpcast94);
     __Z7b2CrossfRK6b2Vec2($9,$70,$95);
     __ZmiRK6b2Vec2S1_($5,$6,$9);
     $131=(+(__Z5b2DotRK6b2Vec2S1_($85,$5)));
     $132=$131<(-1.0);
     if ($132) {
      $134=(+(HEAPF32[(($92)>>2)]));
      $135=((-.0))-($134);
      $136=($131)*($135);
      HEAPF32[(($130)>>2)]=$136;
     }
     $138=((($j_0107)+(1))|0);
     $139=($138|0)<($89|0);
     if ($139) {
      $j_0107=$138;
     } else {
      break;
     }
    }
    $_pr=((HEAP32[(($88)>>2)])|0);
    $140=($_pr|0)==2;
    if (!($140)) {
     break;
    }
    $142=(($27+((($i_0108)*(156))&-1))|0);
    $143=(+(__Z7b2CrossRK6b2Vec2S1_($142,$85)));
    $144=(($27+((($i_0108)*(156))&-1)+8)|0);
    $145=(+(__Z7b2CrossRK6b2Vec2S1_($144,$85)));
    $146=(($27+((($i_0108)*(156))&-1)+36)|0);
    $147=(+(__Z7b2CrossRK6b2Vec2S1_($146,$85)));
    $148=(($27+((($i_0108)*(156))&-1)+44)|0);
    $149=(+(__Z7b2CrossRK6b2Vec2S1_($148,$85)));
    $150=($44)+($46);
    $151=($48)*($143);
    $152=($143)*($151);
    $153=($150)+($152);
    $154=($50)*($145);
    $155=($145)*($154);
    $156=($153)+($155);
    $157=($48)*($147);
    $158=($147)*($157);
    $159=($150)+($158);
    $160=($50)*($149);
    $161=($149)*($160);
    $162=($159)+($161);
    $163=($151)*($147);
    $164=($150)+($163);
    $165=($154)*($149);
    $166=($164)+($165);
    $167=($156)*($156);
    $168=($156)*($162);
    $169=($166)*($166);
    $170=($168)-($169);
    $171=($170)*((1000.0));
    $172=$167<$171;
    if ($172) {
     $174=(($27+((($i_0108)*(156))&-1)+96)|0);
     $175=(($174)|0);
     __ZN6b2Vec23SetEff($175,$156,$166);
     $176=(($27+((($i_0108)*(156))&-1)+104)|0);
     __ZN6b2Vec23SetEff($176,$166,$162);
     $177=(($27+((($i_0108)*(156))&-1)+80)|0);
     __ZNK7b2Mat2210GetInverseEv($10,$174);
     $178=$177;
     HEAP32[(($178)>>2)]=((HEAP32[(($23)>>2)])|0);HEAP32[((($178)+(4))>>2)]=((HEAP32[((($23)+(4))>>2)])|0);HEAP32[((($178)+(8))>>2)]=((HEAP32[((($23)+(8))>>2)])|0);HEAP32[((($178)+(12))>>2)]=((HEAP32[((($23)+(12))>>2)])|0);
     break;
    } else {
     HEAP32[(($88)>>2)]=1;
     break;
    }
   }
  } while(0);
  $180=((($i_0108)+(1))|0);
  $181=((HEAP32[(($11)>>2)])|0);
  $182=($180|0)<($181|0);
  if ($182) {
   $i_0108=$180;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN15b2ContactSolver9WarmStartEv($this){
 $this=($this)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast24=0,$normal=0,$tmpcast25=0,$tangent=0,$P=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$i_030=0,$11=0,$12=0;
 var $13=0,$14=0,$15=0,$16=0,$17=.0,$18=0,$19=.0,$20=0,$21=.0,$22=0,$23=.0,$24=0,$25=0,$26=0,$27=0,$28=0,$ld$0$0=0,$29$0=0,$ld$1$1=0,$29$1=0;
 var $st$2$0=0,$st$3$1=0,$30=0,$31=0,$32=.0,$33=0,$34=0,$ld$4$0=0,$35$0=0,$ld$5$1=0,$35$1=0,$st$6$0=0,$st$7$1=0,$36=0,$37=0,$38=.0,$39=0,$40=0,$ld$8$0=0,$41$0=0;
 var $ld$9$1=0,$41$1=0,$st$10$0=0,$st$11$1=0,$42=0,$j_028=0,$wB_027=.0,$wA_026=.0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0;
 var $55=0,$56=0,$wB_0_lcssa=.0,$wA_0_lcssa=.0,$57=0,$58=0,$59=0,$ld$12$0=0,$60$0=0,$ld$13$1=0,$60$1=0,$st$14$0=0,$st$15$1=0,$61=0,$62=0,$63=0,$64=0,$65=0,$ld$16$0=0,$66$0=0;
 var $ld$17$1=0,$66$1=0,$st$18$0=0,$st$19$1=0,$67=0,$68=0,$69=0,$70=0,$71=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast24=$vB;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast25=$normal;
 $tangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  STACKTOP=sp;return;
 }
 $8=(($this+44)|0);
 $9=(($this+32)|0);
 $i_030=0;
 while(1) {

  $11=((HEAP32[(($8)>>2)])|0);
  $12=(($11+((($i_030)*(156))&-1)+112)|0);
  $13=((HEAP32[(($12)>>2)])|0);
  $14=(($11+((($i_030)*(156))&-1)+116)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=(($11+((($i_030)*(156))&-1)+120)|0);
  $17=(+(HEAPF32[(($16)>>2)]));
  $18=(($11+((($i_030)*(156))&-1)+128)|0);
  $19=(+(HEAPF32[(($18)>>2)]));
  $20=(($11+((($i_030)*(156))&-1)+124)|0);
  $21=(+(HEAPF32[(($20)>>2)]));
  $22=(($11+((($i_030)*(156))&-1)+132)|0);
  $23=(+(HEAPF32[(($22)>>2)]));
  $24=(($11+((($i_030)*(156))&-1)+148)|0);
  $25=((HEAP32[(($24)>>2)])|0);
  $26=((HEAP32[(($9)>>2)])|0);
  $27=(($26+((($13)*(12))&-1))|0);
  $28=$27;
  $ld$0$0=(($28)|0);
  $29$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($28+4)|0);
  $29$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($vA)|0);
  HEAP32[(($st$2$0)>>2)]=$29$0;
  $st$3$1=(($vA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$29$1;
  $30=((HEAP32[(($9)>>2)])|0);
  $31=(($30+((($13)*(12))&-1)+8)|0);
  $32=(+(HEAPF32[(($31)>>2)]));
  $33=(($30+((($15)*(12))&-1))|0);
  $34=$33;
  $ld$4$0=(($34)|0);
  $35$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($34+4)|0);
  $35$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($vB)|0);
  HEAP32[(($st$6$0)>>2)]=$35$0;
  $st$7$1=(($vB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$35$1;
  $36=((HEAP32[(($9)>>2)])|0);
  $37=(($36+((($15)*(12))&-1)+8)|0);
  $38=(+(HEAPF32[(($37)>>2)]));
  $39=(($11+((($i_030)*(156))&-1)+72)|0);
  $40=$39;
  $ld$8$0=(($40)|0);
  $41$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($40+4)|0);
  $41$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($normal)|0);
  HEAP32[(($st$10$0)>>2)]=$41$0;
  $st$11$1=(($normal+4)|0);
  HEAP32[(($st$11$1)>>2)]=$41$1;
  __Z7b2CrossRK6b2Vec2f($tangent,$tmpcast25,1.0);
  $42=($25|0)>0;
  if ($42) {
   $wA_026=$32;$wB_027=$38;$j_028=0;
   while(1) {



    $43=(($11+((($i_030)*(156))&-1)+((($j_028)*(36))&-1)+16)|0);
    $44=(+(HEAPF32[(($43)>>2)]));
    __ZmlfRK6b2Vec2($1,$44,$tmpcast25);
    $45=(($11+((($i_030)*(156))&-1)+((($j_028)*(36))&-1)+20)|0);
    $46=(+(HEAPF32[(($45)>>2)]));
    __ZmlfRK6b2Vec2($2,$46,$tangent);
    __ZplRK6b2Vec2S1_($P,$1,$2);
    $47=(($11+((($i_030)*(156))&-1)+((($j_028)*(36))&-1))|0);
    $48=(+(__Z7b2CrossRK6b2Vec2S1_($47,$P)));
    $49=($19)*($48);
    $50=($wA_026)-($49);
    __ZmlfRK6b2Vec2($3,$17,$P);
    __ZN6b2Vec2mIERKS_($tmpcast,$3);
    $51=(($11+((($i_030)*(156))&-1)+((($j_028)*(36))&-1)+8)|0);
    $52=(+(__Z7b2CrossRK6b2Vec2S1_($51,$P)));
    $53=($23)*($52);
    $54=($wB_027)+($53);
    __ZmlfRK6b2Vec2($4,$21,$P);
    __ZN6b2Vec2pLERKS_($tmpcast24,$4);
    $55=((($j_028)+(1))|0);
    $56=($55|0)<($25|0);
    if ($56) {
     $wA_026=$50;$wB_027=$54;$j_028=$55;
    } else {
     $wA_0_lcssa=$50;$wB_0_lcssa=$54;
     break;
    }
   }
  } else {
   $wA_0_lcssa=$32;$wB_0_lcssa=$38;
  }


  $57=((HEAP32[(($9)>>2)])|0);
  $58=(($57+((($13)*(12))&-1))|0);
  $59=$58;
  $ld$12$0=(($vA)|0);
  $60$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($vA+4)|0);
  $60$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($59)|0);
  HEAP32[(($st$14$0)>>2)]=$60$0;
  $st$15$1=(($59+4)|0);
  HEAP32[(($st$15$1)>>2)]=$60$1;
  $61=((HEAP32[(($9)>>2)])|0);
  $62=(($61+((($13)*(12))&-1)+8)|0);
  HEAPF32[(($62)>>2)]=$wA_0_lcssa;
  $63=((HEAP32[(($9)>>2)])|0);
  $64=(($63+((($15)*(12))&-1))|0);
  $65=$64;
  $ld$16$0=(($vB)|0);
  $66$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($vB+4)|0);
  $66$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($65)|0);
  HEAP32[(($st$18$0)>>2)]=$66$0;
  $st$19$1=(($65+4)|0);
  HEAP32[(($st$19$1)>>2)]=$66$1;
  $67=((HEAP32[(($9)>>2)])|0);
  $68=(($67+((($15)*(12))&-1)+8)|0);
  HEAPF32[(($68)>>2)]=$wB_0_lcssa;
  $69=((($i_030)+(1))|0);
  $70=((HEAP32[(($5)>>2)])|0);
  $71=($69|0)<($70|0);
  if ($71) {
   $i_030=$69;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN15b2ContactSolver24SolveVelocityConstraintsEv($this){
 $this=($this)|0;
 var $vA=0,$tmpcast=0,$vB=0,$tmpcast124=0,$normal=0,$tmpcast125=0,$tangent=0,$dv=0,$1=0,$2=0,$3=0,$4=0,$P=0,$5=0,$6=0,$dv2=0,$7=0,$8=0,$9=0,$10=0;
 var $P5=0,$11=0,$12=0,$a=0,$dv1=0,$13=0,$14=0,$15=0,$16=0,$dv26=0,$17=0,$18=0,$19=0,$20=0,$b=0,$21=0,$x=0,$22=0,$d=0,$P1=0;
 var $P2=0,$23=0,$24=0,$25=0,$26=0,$d7=0,$P18=0,$P29=0,$27=0,$28=0,$29=0,$30=0,$d10=0,$P111=0,$P212=0,$31=0,$32=0,$33=0,$34=0,$d13=0;
 var $P114=0,$P215=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0;
 var $53=0,$54=0,$55=0,$56=0,$i_0130=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=.0,$66=0,$67=.0,$68=0,$69=.0,$70=0,$71=.0,$72=0;
 var $73=0,$74=0,$75=0,$76=0,$ld$0$0=0,$77$0=0,$ld$1$1=0,$77$1=0,$st$2$0=0,$st$3$1=0,$78=0,$79=0,$80=.0,$81=0,$82=0,$ld$4$0=0,$83$0=0,$ld$5$1=0,$83$1=0,$st$6$0=0;
 var $st$7$1=0,$84=0,$85=0,$86=.0,$87=0,$88=0,$ld$8$0=0,$89$0=0,$ld$9$1=0,$89$1=0,$st$10$0=0,$st$11$1=0,$90=0,$91=.0,$92=0,$93=0,$wA_0128=.0,$wB_0127=.0,$j_0126=0,$95=0;
 var $96=0,$97=.0,$98=.0,$99=.0,$100=0,$101=.0,$102=.0,$103=.0,$104=0,$105=.0,$106=.0,$107=0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=.0;
 var $116=.0,$117=.0,$118=.0,$119=0,$120=0,$wA_0_lcssa=.0,$wB_0_lcssa=.0,$121=0,$122=0,$124=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$130=0,$131=.0,$132=.0,$133=.0,$134=0;
 var $135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=.0,$143=.0,$144=.0,$146=0,$147=.0,$148=0,$149=.0,$150=0,$151=0,$152=0,$153=0,$154=.0,$155=.0;
 var $156=0,$157=.0,$158=.0,$159=0,$160=.0,$161=.0,$162=0,$163=0,$164=.0,$165=0,$167=.0,$168=0,$170=.0,$171=.0,$172=.0,$173=.0,$174=.0,$175=.0,$176=.0,$177=.0;
 var $178=.0,$179=.0,$180=.0,$181=.0,$182=.0,$183=.0,$185=0,$186=.0,$187=.0,$188=.0,$189=.0,$190=.0,$191=0,$193=0,$194=.0,$195=.0,$196=.0,$197=.0,$198=0,$200=.0;
 var $201=.0,$202=.0,$203=.0,$204=.0,$205=.0,$206=.0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$215=0,$216=.0,$217=.0,$218=.0,$219=.0,$220=0,$222=0;
 var $223=.0,$224=.0,$225=.0,$226=.0,$227=0,$229=.0,$230=.0,$231=.0,$232=.0,$233=.0,$234=.0,$235=.0,$236=.0,$237=.0,$238=.0,$239=.0,$240=.0,$241=.0,$242=.0,$244=.0;
 var $245=0,$247=.0,$248=0,$250=.0,$251=.0,$252=.0,$253=.0,$254=.0,$255=.0,$256=.0,$257=.0,$258=.0,$259=.0,$260=.0,$261=.0,$262=.0,$263=.0,$wB_1=.0,$wA_1=.0,$265=0;
 var $266=0,$267=0,$ld$12$0=0,$268$0=0,$ld$13$1=0,$268$1=0,$st$14$0=0,$st$15$1=0,$269=0,$270=0,$271=0,$272=0,$273=0,$ld$16$0=0,$274$0=0,$ld$17$1=0,$274$1=0,$st$18$0=0,$st$19$1=0,$275=0;
 var $276=0,$277=0,$278=0,$279=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $vA=((sp)|0);
 $tmpcast=$vA;
 $vB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast124=$vB;
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast125=$normal;
 $tangent=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dv=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dv2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $a=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dv1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $dv26=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $19=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $20=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $b=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $21=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $x=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $22=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $23=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $24=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $25=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $26=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P29=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $27=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $28=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $29=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $30=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P111=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P212=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $31=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $32=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $33=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $34=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P114=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P215=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $35=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $36=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $37=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $38=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $39=(($this+52)|0);
 $40=((HEAP32[(($39)>>2)])|0);
 $41=($40|0)>0;
 if (!($41)) {
  STACKTOP=sp;return;
 }
 $42=(($this+44)|0);
 $43=(($this+32)|0);
 $44=(($b)|0);
 $45=(($b+4)|0);
 $46=(($x)|0);
 $47=(($x+4)|0);
 $48=(($d13)|0);
 $49=(($d13+4)|0);
 $50=(($d10)|0);
 $51=(($d10+4)|0);
 $52=(($d7)|0);
 $53=(($d7+4)|0);
 $54=(($x+4)|0);
 $55=(($d)|0);
 $56=(($d+4)|0);
 $i_0130=0;
 while(1) {

  $58=((HEAP32[(($42)>>2)])|0);
  $59=(($58+((($i_0130)*(156))&-1))|0);
  $60=(($58+((($i_0130)*(156))&-1)+112)|0);
  $61=((HEAP32[(($60)>>2)])|0);
  $62=(($58+((($i_0130)*(156))&-1)+116)|0);
  $63=((HEAP32[(($62)>>2)])|0);
  $64=(($58+((($i_0130)*(156))&-1)+120)|0);
  $65=(+(HEAPF32[(($64)>>2)]));
  $66=(($58+((($i_0130)*(156))&-1)+128)|0);
  $67=(+(HEAPF32[(($66)>>2)]));
  $68=(($58+((($i_0130)*(156))&-1)+124)|0);
  $69=(+(HEAPF32[(($68)>>2)]));
  $70=(($58+((($i_0130)*(156))&-1)+132)|0);
  $71=(+(HEAPF32[(($70)>>2)]));
  $72=(($58+((($i_0130)*(156))&-1)+148)|0);
  $73=((HEAP32[(($72)>>2)])|0);
  $74=((HEAP32[(($43)>>2)])|0);
  $75=(($74+((($61)*(12))&-1))|0);
  $76=$75;
  $ld$0$0=(($76)|0);
  $77$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($76+4)|0);
  $77$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($vA)|0);
  HEAP32[(($st$2$0)>>2)]=$77$0;
  $st$3$1=(($vA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$77$1;
  $78=((HEAP32[(($43)>>2)])|0);
  $79=(($78+((($61)*(12))&-1)+8)|0);
  $80=(+(HEAPF32[(($79)>>2)]));
  $81=(($78+((($63)*(12))&-1))|0);
  $82=$81;
  $ld$4$0=(($82)|0);
  $83$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($82+4)|0);
  $83$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($vB)|0);
  HEAP32[(($st$6$0)>>2)]=$83$0;
  $st$7$1=(($vB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$83$1;
  $84=((HEAP32[(($43)>>2)])|0);
  $85=(($84+((($63)*(12))&-1)+8)|0);
  $86=(+(HEAPF32[(($85)>>2)]));
  $87=(($58+((($i_0130)*(156))&-1)+72)|0);
  $88=$87;
  $ld$8$0=(($88)|0);
  $89$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($88+4)|0);
  $89$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($normal)|0);
  HEAP32[(($st$10$0)>>2)]=$89$0;
  $st$11$1=(($normal+4)|0);
  HEAP32[(($st$11$1)>>2)]=$89$1;
  __Z7b2CrossRK6b2Vec2f($tangent,$tmpcast125,1.0);
  $90=(($58+((($i_0130)*(156))&-1)+136)|0);
  $91=(+(HEAPF32[(($90)>>2)]));
  $92=($73|0)>0;
  if ($92) {
   $93=(($58+((($i_0130)*(156))&-1)+144)|0);
   $j_0126=0;$wB_0127=$86;$wA_0128=$80;
   while(1) {



    $95=(($58+((($i_0130)*(156))&-1)+((($j_0126)*(36))&-1)+8)|0);
    __Z7b2CrossfRK6b2Vec2($3,$wB_0127,$95);
    __ZplRK6b2Vec2S1_($2,$tmpcast124,$3);
    __ZmiRK6b2Vec2S1_($1,$2,$tmpcast);
    $96=(($58+((($i_0130)*(156))&-1)+((($j_0126)*(36))&-1))|0);
    __Z7b2CrossfRK6b2Vec2($4,$wA_0128,$96);
    __ZmiRK6b2Vec2S1_($dv,$1,$4);
    $97=(+(__Z5b2DotRK6b2Vec2S1_($dv,$tangent)));
    $98=(+(HEAPF32[(($93)>>2)]));
    $99=($97)-($98);
    $100=(($58+((($i_0130)*(156))&-1)+((($j_0126)*(36))&-1)+28)|0);
    $101=(+(HEAPF32[(($100)>>2)]));
    $102=((-.0))-($99);
    $103=($101)*($102);
    $104=(($58+((($i_0130)*(156))&-1)+((($j_0126)*(36))&-1)+16)|0);
    $105=(+(HEAPF32[(($104)>>2)]));
    $106=($91)*($105);
    $107=(($58+((($i_0130)*(156))&-1)+((($j_0126)*(36))&-1)+20)|0);
    $108=(+(HEAPF32[(($107)>>2)]));
    $109=($108)+($103);
    $110=((-.0))-($106);
    $111=(+(__Z7b2ClampIfET_S0_S0_S0_($109,$110,$106)));
    $112=($111)-($108);
    HEAPF32[(($107)>>2)]=$111;
    __ZmlfRK6b2Vec2($P,$112,$tangent);
    __ZmlfRK6b2Vec2($5,$65,$P);
    __ZN6b2Vec2mIERKS_($tmpcast,$5);
    $113=(+(__Z7b2CrossRK6b2Vec2S1_($96,$P)));
    $114=($67)*($113);
    $115=($wA_0128)-($114);
    __ZmlfRK6b2Vec2($6,$69,$P);
    __ZN6b2Vec2pLERKS_($tmpcast124,$6);
    $116=(+(__Z7b2CrossRK6b2Vec2S1_($95,$P)));
    $117=($71)*($116);
    $118=($wB_0127)+($117);
    $119=((($j_0126)+(1))|0);
    $120=($119|0)<($73|0);
    if ($120) {
     $j_0126=$119;$wB_0127=$118;$wA_0128=$115;
    } else {
     $wB_0_lcssa=$118;$wA_0_lcssa=$115;
     break;
    }
   }
  } else {
   $wB_0_lcssa=$86;$wA_0_lcssa=$80;
  }


  $121=((HEAP32[(($72)>>2)])|0);
  $122=($121|0)==1;
  L11: do {
   if ($122) {
    $124=(($58+((($i_0130)*(156))&-1)+8)|0);
    __Z7b2CrossfRK6b2Vec2($9,$wB_0_lcssa,$124);
    __ZplRK6b2Vec2S1_($8,$tmpcast124,$9);
    __ZmiRK6b2Vec2S1_($7,$8,$tmpcast);
    $125=(($59)|0);
    __Z7b2CrossfRK6b2Vec2($10,$wA_0_lcssa,$125);
    __ZmiRK6b2Vec2S1_($dv2,$7,$10);
    $126=(+(__Z5b2DotRK6b2Vec2S1_($dv2,$tmpcast125)));
    $127=(($58+((($i_0130)*(156))&-1)+24)|0);
    $128=(+(HEAPF32[(($127)>>2)]));
    $129=((-.0))-($128);
    $130=(($58+((($i_0130)*(156))&-1)+32)|0);
    $131=(+(HEAPF32[(($130)>>2)]));
    $132=($126)-($131);
    $133=($132)*($129);
    $134=(($58+((($i_0130)*(156))&-1)+16)|0);
    $135=(+(HEAPF32[(($134)>>2)]));
    $136=($135)+($133);
    $137=(+(__Z5b2MaxIfET_S0_S0_($136,0.0)));
    $138=($137)-($135);
    HEAPF32[(($134)>>2)]=$137;
    __ZmlfRK6b2Vec2($P5,$138,$tmpcast125);
    __ZmlfRK6b2Vec2($11,$65,$P5);
    __ZN6b2Vec2mIERKS_($tmpcast,$11);
    $139=(+(__Z7b2CrossRK6b2Vec2S1_($125,$P5)));
    $140=($67)*($139);
    $141=($wA_0_lcssa)-($140);
    __ZmlfRK6b2Vec2($12,$69,$P5);
    __ZN6b2Vec2pLERKS_($tmpcast124,$12);
    $142=(+(__Z7b2CrossRK6b2Vec2S1_($124,$P5)));
    $143=($71)*($142);
    $144=($wB_0_lcssa)+($143);
    $wA_1=$141;$wB_1=$144;
   } else {
    $146=(($58+((($i_0130)*(156))&-1)+16)|0);
    $147=(+(HEAPF32[(($146)>>2)]));
    $148=(($58+((($i_0130)*(156))&-1)+52)|0);
    $149=(+(HEAPF32[(($148)>>2)]));
    __ZN6b2Vec2C1Eff($a,$147,$149);
    $150=(($58+((($i_0130)*(156))&-1)+8)|0);
    __Z7b2CrossfRK6b2Vec2($15,$wB_0_lcssa,$150);
    __ZplRK6b2Vec2S1_($14,$tmpcast124,$15);
    __ZmiRK6b2Vec2S1_($13,$14,$tmpcast);
    $151=(($59)|0);
    __Z7b2CrossfRK6b2Vec2($16,$wA_0_lcssa,$151);
    __ZmiRK6b2Vec2S1_($dv1,$13,$16);
    $152=(($58+((($i_0130)*(156))&-1)+44)|0);
    __Z7b2CrossfRK6b2Vec2($19,$wB_0_lcssa,$152);
    __ZplRK6b2Vec2S1_($18,$tmpcast124,$19);
    __ZmiRK6b2Vec2S1_($17,$18,$tmpcast);
    $153=(($58+((($i_0130)*(156))&-1)+36)|0);
    __Z7b2CrossfRK6b2Vec2($20,$wA_0_lcssa,$153);
    __ZmiRK6b2Vec2S1_($dv26,$17,$20);
    $154=(+(__Z5b2DotRK6b2Vec2S1_($dv1,$tmpcast125)));
    $155=(+(__Z5b2DotRK6b2Vec2S1_($dv26,$tmpcast125)));
    $156=(($58+((($i_0130)*(156))&-1)+32)|0);
    $157=(+(HEAPF32[(($156)>>2)]));
    $158=($154)-($157);
    HEAPF32[(($44)>>2)]=$158;
    $159=(($58+((($i_0130)*(156))&-1)+68)|0);
    $160=(+(HEAPF32[(($159)>>2)]));
    $161=($155)-($160);
    HEAPF32[(($45)>>2)]=$161;
    $162=(($58+((($i_0130)*(156))&-1)+96)|0);
    __Z5b2MulRK7b2Mat22RK6b2Vec2($21,$162,$a);
    __ZN6b2Vec2mIERKS_($b,$21);
    $163=(($58+((($i_0130)*(156))&-1)+80)|0);
    __Z5b2MulRK7b2Mat22RK6b2Vec2($22,$163,$b);
    __ZNK6b2Vec2ngEv($x,$22);
    $164=(+(HEAPF32[(($46)>>2)]));
    $165=$164<(0.0);
    do {
     if (!($165)) {
      $167=(+(HEAPF32[(($54)>>2)]));
      $168=$167<(0.0);
      if ($168) {
       break;
      }
      __ZmiRK6b2Vec2S1_($d,$x,$a);
      $170=(+(HEAPF32[(($55)>>2)]));
      __ZmlfRK6b2Vec2($P1,$170,$tmpcast125);
      $171=(+(HEAPF32[(($56)>>2)]));
      __ZmlfRK6b2Vec2($P2,$171,$tmpcast125);
      __ZplRK6b2Vec2S1_($24,$P1,$P2);
      __ZmlfRK6b2Vec2($23,$65,$24);
      __ZN6b2Vec2mIERKS_($tmpcast,$23);
      $172=(+(__Z7b2CrossRK6b2Vec2S1_($151,$P1)));
      $173=(+(__Z7b2CrossRK6b2Vec2S1_($153,$P2)));
      $174=($172)+($173);
      $175=($67)*($174);
      $176=($wA_0_lcssa)-($175);
      __ZplRK6b2Vec2S1_($26,$P1,$P2);
      __ZmlfRK6b2Vec2($25,$69,$26);
      __ZN6b2Vec2pLERKS_($tmpcast124,$25);
      $177=(+(__Z7b2CrossRK6b2Vec2S1_($150,$P1)));
      $178=(+(__Z7b2CrossRK6b2Vec2S1_($152,$P2)));
      $179=($177)+($178);
      $180=($71)*($179);
      $181=($wB_0_lcssa)+($180);
      $182=(+(HEAPF32[(($46)>>2)]));
      HEAPF32[(($146)>>2)]=$182;
      $183=(+(HEAPF32[(($54)>>2)]));
      HEAPF32[(($148)>>2)]=$183;
      $wA_1=$176;$wB_1=$181;
      break L11;
     }
    } while(0);
    $185=(($58+((($i_0130)*(156))&-1)+24)|0);
    $186=(+(HEAPF32[(($185)>>2)]));
    $187=((-.0))-($186);
    $188=(+(HEAPF32[(($44)>>2)]));
    $189=($188)*($187);
    HEAPF32[(($46)>>2)]=$189;
    HEAPF32[(($47)>>2)]=0.0;
    $190=(+(HEAPF32[(($46)>>2)]));
    $191=$190<(0.0);
    do {
     if (!($191)) {
      $193=(($58+((($i_0130)*(156))&-1)+100)|0);
      $194=(+(HEAPF32[(($193)>>2)]));
      $195=(+(HEAPF32[(($45)>>2)]));
      $196=($190)*($194);
      $197=($196)+($195);
      $198=$197<(0.0);
      if ($198) {
       break;
      }
      __ZmiRK6b2Vec2S1_($d7,$x,$a);
      $200=(+(HEAPF32[(($52)>>2)]));
      __ZmlfRK6b2Vec2($P18,$200,$tmpcast125);
      $201=(+(HEAPF32[(($53)>>2)]));
      __ZmlfRK6b2Vec2($P29,$201,$tmpcast125);
      __ZplRK6b2Vec2S1_($28,$P18,$P29);
      __ZmlfRK6b2Vec2($27,$65,$28);
      __ZN6b2Vec2mIERKS_($tmpcast,$27);
      $202=(+(__Z7b2CrossRK6b2Vec2S1_($151,$P18)));
      $203=(+(__Z7b2CrossRK6b2Vec2S1_($153,$P29)));
      $204=($202)+($203);
      $205=($67)*($204);
      $206=($wA_0_lcssa)-($205);
      __ZplRK6b2Vec2S1_($30,$P18,$P29);
      __ZmlfRK6b2Vec2($29,$69,$30);
      __ZN6b2Vec2pLERKS_($tmpcast124,$29);
      $207=(+(__Z7b2CrossRK6b2Vec2S1_($150,$P18)));
      $208=(+(__Z7b2CrossRK6b2Vec2S1_($152,$P29)));
      $209=($207)+($208);
      $210=($71)*($209);
      $211=($wB_0_lcssa)+($210);
      $212=(+(HEAPF32[(($46)>>2)]));
      HEAPF32[(($146)>>2)]=$212;
      $213=(+(HEAPF32[(($47)>>2)]));
      HEAPF32[(($148)>>2)]=$213;
      $wA_1=$206;$wB_1=$211;
      break L11;
     }
    } while(0);
    HEAPF32[(($46)>>2)]=0.0;
    $215=(($58+((($i_0130)*(156))&-1)+60)|0);
    $216=(+(HEAPF32[(($215)>>2)]));
    $217=((-.0))-($216);
    $218=(+(HEAPF32[(($45)>>2)]));
    $219=($218)*($217);
    HEAPF32[(($47)>>2)]=$219;
    $220=$219<(0.0);
    do {
     if (!($220)) {
      $222=(($58+((($i_0130)*(156))&-1)+104)|0);
      $223=(+(HEAPF32[(($222)>>2)]));
      $224=(+(HEAPF32[(($44)>>2)]));
      $225=($219)*($223);
      $226=($225)+($224);
      $227=$226<(0.0);
      if ($227) {
       break;
      }
      __ZmiRK6b2Vec2S1_($d10,$x,$a);
      $229=(+(HEAPF32[(($50)>>2)]));
      __ZmlfRK6b2Vec2($P111,$229,$tmpcast125);
      $230=(+(HEAPF32[(($51)>>2)]));
      __ZmlfRK6b2Vec2($P212,$230,$tmpcast125);
      __ZplRK6b2Vec2S1_($32,$P111,$P212);
      __ZmlfRK6b2Vec2($31,$65,$32);
      __ZN6b2Vec2mIERKS_($tmpcast,$31);
      $231=(+(__Z7b2CrossRK6b2Vec2S1_($151,$P111)));
      $232=(+(__Z7b2CrossRK6b2Vec2S1_($153,$P212)));
      $233=($231)+($232);
      $234=($67)*($233);
      $235=($wA_0_lcssa)-($234);
      __ZplRK6b2Vec2S1_($34,$P111,$P212);
      __ZmlfRK6b2Vec2($33,$69,$34);
      __ZN6b2Vec2pLERKS_($tmpcast124,$33);
      $236=(+(__Z7b2CrossRK6b2Vec2S1_($150,$P111)));
      $237=(+(__Z7b2CrossRK6b2Vec2S1_($152,$P212)));
      $238=($236)+($237);
      $239=($71)*($238);
      $240=($wB_0_lcssa)+($239);
      $241=(+(HEAPF32[(($46)>>2)]));
      HEAPF32[(($146)>>2)]=$241;
      $242=(+(HEAPF32[(($47)>>2)]));
      HEAPF32[(($148)>>2)]=$242;
      $wA_1=$235;$wB_1=$240;
      break L11;
     }
    } while(0);
    HEAPF32[(($46)>>2)]=0.0;
    HEAPF32[(($47)>>2)]=0.0;
    $244=(+(HEAPF32[(($44)>>2)]));
    $245=$244<(0.0);
    if ($245) {
     $wA_1=$wA_0_lcssa;$wB_1=$wB_0_lcssa;
     break;
    }
    $247=(+(HEAPF32[(($45)>>2)]));
    $248=$247<(0.0);
    if ($248) {
     $wA_1=$wA_0_lcssa;$wB_1=$wB_0_lcssa;
     break;
    }
    __ZmiRK6b2Vec2S1_($d13,$x,$a);
    $250=(+(HEAPF32[(($48)>>2)]));
    __ZmlfRK6b2Vec2($P114,$250,$tmpcast125);
    $251=(+(HEAPF32[(($49)>>2)]));
    __ZmlfRK6b2Vec2($P215,$251,$tmpcast125);
    __ZplRK6b2Vec2S1_($36,$P114,$P215);
    __ZmlfRK6b2Vec2($35,$65,$36);
    __ZN6b2Vec2mIERKS_($tmpcast,$35);
    $252=(+(__Z7b2CrossRK6b2Vec2S1_($151,$P114)));
    $253=(+(__Z7b2CrossRK6b2Vec2S1_($153,$P215)));
    $254=($252)+($253);
    $255=($67)*($254);
    $256=($wA_0_lcssa)-($255);
    __ZplRK6b2Vec2S1_($38,$P114,$P215);
    __ZmlfRK6b2Vec2($37,$69,$38);
    __ZN6b2Vec2pLERKS_($tmpcast124,$37);
    $257=(+(__Z7b2CrossRK6b2Vec2S1_($150,$P114)));
    $258=(+(__Z7b2CrossRK6b2Vec2S1_($152,$P215)));
    $259=($257)+($258);
    $260=($71)*($259);
    $261=($wB_0_lcssa)+($260);
    $262=(+(HEAPF32[(($46)>>2)]));
    HEAPF32[(($146)>>2)]=$262;
    $263=(+(HEAPF32[(($47)>>2)]));
    HEAPF32[(($148)>>2)]=$263;
    $wA_1=$256;$wB_1=$261;
   }
  } while(0);


  $265=((HEAP32[(($43)>>2)])|0);
  $266=(($265+((($61)*(12))&-1))|0);
  $267=$266;
  $ld$12$0=(($vA)|0);
  $268$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($vA+4)|0);
  $268$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($267)|0);
  HEAP32[(($st$14$0)>>2)]=$268$0;
  $st$15$1=(($267+4)|0);
  HEAP32[(($st$15$1)>>2)]=$268$1;
  $269=((HEAP32[(($43)>>2)])|0);
  $270=(($269+((($61)*(12))&-1)+8)|0);
  HEAPF32[(($270)>>2)]=$wA_1;
  $271=((HEAP32[(($43)>>2)])|0);
  $272=(($271+((($63)*(12))&-1))|0);
  $273=$272;
  $ld$16$0=(($vB)|0);
  $274$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($vB+4)|0);
  $274$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($273)|0);
  HEAP32[(($st$18$0)>>2)]=$274$0;
  $st$19$1=(($273+4)|0);
  HEAP32[(($st$19$1)>>2)]=$274$1;
  $275=((HEAP32[(($43)>>2)])|0);
  $276=(($275+((($63)*(12))&-1)+8)|0);
  HEAPF32[(($276)>>2)]=$wB_1;
  $277=((($i_0130)+(1))|0);
  $278=((HEAP32[(($39)>>2)])|0);
  $279=($277|0)<($278|0);
  if ($279) {
   $i_0130=$277;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN15b2ContactSolver13StoreImpulsesEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i_013=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$j_012=0,$17=0,$18=.0,$19=0;
 var $20=0,$21=.0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if (!($3)) {
  return;
 }
 $4=(($this+44)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($this+48)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $i_013=0;
 while(1) {

  $9=(($5+((($i_013)*(156))&-1)+152)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=(($7+($10<<2))|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=((__ZN9b2Contact11GetManifoldEv($12))|0);
  $14=(($5+((($i_013)*(156))&-1)+148)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=($15|0)>0;
  if ($16) {
   $j_012=0;
   while(1) {

    $17=(($5+((($i_013)*(156))&-1)+((($j_012)*(36))&-1)+16)|0);
    $18=(+(HEAPF32[(($17)>>2)]));
    $19=(($13+((($j_012)*(20))&-1)+8)|0);
    HEAPF32[(($19)>>2)]=$18;
    $20=(($5+((($i_013)*(156))&-1)+((($j_012)*(36))&-1)+20)|0);
    $21=(+(HEAPF32[(($20)>>2)]));
    $22=(($13+((($j_012)*(20))&-1)+12)|0);
    HEAPF32[(($22)>>2)]=$21;
    $23=((($j_012)+(1))|0);
    $24=((HEAP32[(($14)>>2)])|0);
    $25=($23|0)<($24|0);
    if ($25) {
     $j_012=$23;
    } else {
     break;
    }
   }
  }
  $26=((($i_013)+(1))|0);
  $27=((HEAP32[(($1)>>2)])|0);
  $28=($26|0)<($27|0);
  if ($28) {
   $i_013=$26;
  } else {
   break;
  }
 }
 return;
}


function __ZN15b2ContactSolver24SolvePositionConstraintsEv($this){
 $this=($this)|0;
 var $localCenterA=0,$tmpcast=0,$localCenterB=0,$tmpcast33=0,$cA=0,$tmpcast34=0,$cB=0,$tmpcast35=0,$xfA37=0,$tmpcast36=0,$xfB40=0,$tmpcast39=0,$1=0,$2=0,$psm=0,$normal=0,$tmpcast42=0,$point=0,$tmpcast43=0,$rA=0;
 var $rB=0,$P=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$minSeparation_051=.0,$i_050=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$ld$0$0=0,$27$0=0,$ld$1$1=0,$27$1=0,$st$2$0=0,$st$3$1=0,$28=0,$29=.0,$30=0,$31=.0,$32=0,$33=0,$ld$4$0=0;
 var $34$0=0,$ld$5$1=0,$34$1=0,$st$6$0=0,$st$7$1=0,$35=0,$36=.0,$37=0,$38=.0,$39=0,$40=0,$41=0,$42=0,$43=0,$ld$8$0=0,$44$0=0,$ld$9$1=0,$44$1=0,$st$10$0=0,$st$11$1=0;
 var $45=0,$46=0,$47=.0,$48=0,$49=0,$ld$12$0=0,$50$0=0,$ld$13$1=0,$50$1=0,$st$14$0=0,$st$15$1=0,$51=0,$52=0,$53=.0,$54=0,$55=.0,$minSeparation_147=.0,$aA_046=.0,$aB_045=.0,$j_044=0;
 var $xfA375859=0,$xfB406061=0,$ld$16$0=0,$57$0=0,$ld$17$1=0,$57$1=0,$st$18$0=0,$st$19$1=0,$ld$20$0=0,$58$0=0,$ld$21$1=0,$58$1=0,$st$22$0=0,$st$23$1=0,$59=.0,$60=.0,$61=.0,$62=.0,$63=.0,$64=.0;
 var $65=.0,$66=.0,$67=.0,$68=.0,$69=0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=0,$85=0,$minSeparation_1_lcssa=.0;
 var $aA_0_lcssa=.0,$aB_0_lcssa=.0,$86=0,$87=0,$88=0,$ld$24$0=0,$89$0=0,$ld$25$1=0,$89$1=0,$st$26$0=0,$st$27$1=0,$90=0,$91=0,$92=0,$93=0,$94=0,$ld$28$0=0,$95$0=0,$ld$29$1=0,$95$1=0;
 var $st$30$0=0,$st$31$1=0,$96=0,$97=0,$98=0,$99=0,$100=0,$minSeparation_0_lcssa=.0,$101=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $localCenterA=((sp)|0);
 $tmpcast=$localCenterA;
 $localCenterB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$localCenterB;
 $cA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast35=$cB;
 $xfA37=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast36=$xfA37;
 $xfB40=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast39=$xfB40;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $psm=STACKTOP;STACKTOP = (STACKTOP + 20)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast42=$normal;
 $point=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast43=$point;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  $minSeparation_0_lcssa=0.0;

  $101=$minSeparation_0_lcssa>=(-0.014999999664723873);
  STACKTOP=sp;return (($101)|0);
 }
 $8=(($this+40)|0);
 $9=(($this+28)|0);
 $10=(($xfA37+8)|0);
 $11=$10;
 $12=(($xfB40+8)|0);
 $13=$12;
 $14=$psm;
 $15=(($psm+8)|0);
 $16=$15;
 $17=(($psm+16)|0);
 $i_050=0;$minSeparation_051=0.0;
 while(1) {


  $19=((HEAP32[(($8)>>2)])|0);
  $20=(($19+((($i_050)*(88))&-1))|0);
  $21=(($19+((($i_050)*(88))&-1)+32)|0);
  $22=((HEAP32[(($21)>>2)])|0);
  $23=(($19+((($i_050)*(88))&-1)+36)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=(($19+((($i_050)*(88))&-1)+48)|0);
  $26=$25;
  $ld$0$0=(($26)|0);
  $27$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($26+4)|0);
  $27$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localCenterA)|0);
  HEAP32[(($st$2$0)>>2)]=$27$0;
  $st$3$1=(($localCenterA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$27$1;
  $28=(($19+((($i_050)*(88))&-1)+40)|0);
  $29=(+(HEAPF32[(($28)>>2)]));
  $30=(($19+((($i_050)*(88))&-1)+64)|0);
  $31=(+(HEAPF32[(($30)>>2)]));
  $32=(($19+((($i_050)*(88))&-1)+56)|0);
  $33=$32;
  $ld$4$0=(($33)|0);
  $34$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($33+4)|0);
  $34$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localCenterB)|0);
  HEAP32[(($st$6$0)>>2)]=$34$0;
  $st$7$1=(($localCenterB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$34$1;
  $35=(($19+((($i_050)*(88))&-1)+44)|0);
  $36=(+(HEAPF32[(($35)>>2)]));
  $37=(($19+((($i_050)*(88))&-1)+68)|0);
  $38=(+(HEAPF32[(($37)>>2)]));
  $39=(($19+((($i_050)*(88))&-1)+84)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=((HEAP32[(($9)>>2)])|0);
  $42=(($41+((($22)*(12))&-1))|0);
  $43=$42;
  $ld$8$0=(($43)|0);
  $44$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($43+4)|0);
  $44$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($cA)|0);
  HEAP32[(($st$10$0)>>2)]=$44$0;
  $st$11$1=(($cA+4)|0);
  HEAP32[(($st$11$1)>>2)]=$44$1;
  $45=((HEAP32[(($9)>>2)])|0);
  $46=(($45+((($22)*(12))&-1)+8)|0);
  $47=(+(HEAPF32[(($46)>>2)]));
  $48=(($45+((($24)*(12))&-1))|0);
  $49=$48;
  $ld$12$0=(($49)|0);
  $50$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($49+4)|0);
  $50$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($cB)|0);
  HEAP32[(($st$14$0)>>2)]=$50$0;
  $st$15$1=(($cB+4)|0);
  HEAP32[(($st$15$1)>>2)]=$50$1;
  $51=((HEAP32[(($9)>>2)])|0);
  $52=(($51+((($24)*(12))&-1)+8)|0);
  $53=(+(HEAPF32[(($52)>>2)]));
  $54=($40|0)>0;
  if ($54) {
   $55=($29)+($36);
   $j_044=0;$aB_045=$53;$aA_046=$47;$minSeparation_147=$minSeparation_051;
   while(1) {




    __ZN5b2Rot3SetEf($11,$aA_046);
    __ZN5b2Rot3SetEf($13,$aB_045);
    __Z5b2MulRK5b2RotRK6b2Vec2($1,$11,$tmpcast);
    $xfA375859=$xfA37;
    __ZmiRK6b2Vec2S1_($xfA375859,$tmpcast34,$1);
    __Z5b2MulRK5b2RotRK6b2Vec2($2,$13,$tmpcast33);
    $xfB406061=$xfB40;
    __ZmiRK6b2Vec2S1_($xfB406061,$tmpcast35,$2);
    __ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i($psm,$20,$tmpcast36,$tmpcast39,$j_044);
    $ld$16$0=(($14)|0);
    $57$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($14+4)|0);
    $57$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($normal)|0);
    HEAP32[(($st$18$0)>>2)]=$57$0;
    $st$19$1=(($normal+4)|0);
    HEAP32[(($st$19$1)>>2)]=$57$1;
    $ld$20$0=(($16)|0);
    $58$0=((HEAP32[(($ld$20$0)>>2)])|0);
    $ld$21$1=(($16+4)|0);
    $58$1=((HEAP32[(($ld$21$1)>>2)])|0);
    $st$22$0=(($point)|0);
    HEAP32[(($st$22$0)>>2)]=$58$0;
    $st$23$1=(($point+4)|0);
    HEAP32[(($st$23$1)>>2)]=$58$1;
    $59=(+(HEAPF32[(($17)>>2)]));
    __ZmiRK6b2Vec2S1_($rA,$tmpcast43,$tmpcast34);
    __ZmiRK6b2Vec2S1_($rB,$tmpcast43,$tmpcast35);
    $60=(+(__Z5b2MinIfET_S0_S0_($minSeparation_147,$59)));
    $61=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$tmpcast42)));
    $62=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$tmpcast42)));
    $63=($31)*($61);
    $64=($61)*($63);
    $65=($55)+($64);
    $66=($38)*($62);
    $67=($62)*($66);
    $68=($65)+($67);
    $69=$68>(0.0);
    if ($69) {
     $71=($59)+((0.004999999888241291));
     $72=($71)*((0.20000000298023224));
     $73=(+(__Z7b2ClampIfET_S0_S0_S0_($72,-0.20000000298023224,0.0)));
     $74=((-.0))-($73);
     $75=($74)/($68);
     $77=$75;
    } else {
     $77=0.0;
    }

    __ZmlfRK6b2Vec2($P,$77,$tmpcast42);
    __ZmlfRK6b2Vec2($3,$29,$P);
    __ZN6b2Vec2mIERKS_($tmpcast34,$3);
    $78=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
    $79=($31)*($78);
    $80=($aA_046)-($79);
    __ZmlfRK6b2Vec2($4,$36,$P);
    __ZN6b2Vec2pLERKS_($tmpcast35,$4);
    $81=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
    $82=($38)*($81);
    $83=($aB_045)+($82);
    $84=((($j_044)+(1))|0);
    $85=($84|0)<($40|0);
    if ($85) {
     $j_044=$84;$aB_045=$83;$aA_046=$80;$minSeparation_147=$60;
    } else {
     $aB_0_lcssa=$83;$aA_0_lcssa=$80;$minSeparation_1_lcssa=$60;
     break;
    }
   }
  } else {
   $aB_0_lcssa=$53;$aA_0_lcssa=$47;$minSeparation_1_lcssa=$minSeparation_051;
  }



  $86=((HEAP32[(($9)>>2)])|0);
  $87=(($86+((($22)*(12))&-1))|0);
  $88=$87;
  $ld$24$0=(($cA)|0);
  $89$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($cA+4)|0);
  $89$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($88)|0);
  HEAP32[(($st$26$0)>>2)]=$89$0;
  $st$27$1=(($88+4)|0);
  HEAP32[(($st$27$1)>>2)]=$89$1;
  $90=((HEAP32[(($9)>>2)])|0);
  $91=(($90+((($22)*(12))&-1)+8)|0);
  HEAPF32[(($91)>>2)]=$aA_0_lcssa;
  $92=((HEAP32[(($9)>>2)])|0);
  $93=(($92+((($24)*(12))&-1))|0);
  $94=$93;
  $ld$28$0=(($cB)|0);
  $95$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($cB+4)|0);
  $95$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($94)|0);
  HEAP32[(($st$30$0)>>2)]=$95$0;
  $st$31$1=(($94+4)|0);
  HEAP32[(($st$31$1)>>2)]=$95$1;
  $96=((HEAP32[(($9)>>2)])|0);
  $97=(($96+((($24)*(12))&-1)+8)|0);
  HEAPF32[(($97)>>2)]=$aB_0_lcssa;
  $98=((($i_050)+(1))|0);
  $99=((HEAP32[(($5)>>2)])|0);
  $100=($98|0)<($99|0);
  if ($100) {
   $i_050=$98;$minSeparation_051=$minSeparation_1_lcssa;
  } else {
   $minSeparation_0_lcssa=$minSeparation_1_lcssa;
   break;
  }
 }

 $101=$minSeparation_0_lcssa>=(-0.014999999664723873);
 STACKTOP=sp;return (($101)|0);
}


function __ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i($this,$pc,$xfA,$xfB,$index){
 $this=($this)|0;
 $pc=($pc)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 $index=($index)|0;
 var $pointA=0,$pointB=0,$1=0,$2=0,$3=0,$4=0,$5=0,$planePoint=0,$clipPoint=0,$tmpcast29=0,$6=0,$7=0,$planePoint1=0,$clipPoint2=0,$tmpcast26=0,$8=0,$9=0,$10=0,$11=0,$tmpcast31=0;
 var $tmpcast30=0,$13=0,$14=0,$15=0,$16=0,$ld$0$0=0,$17$0=0,$ld$1$1=0,$17$1=0,$st$2$0=0,$st$3$1=0,$18=.0,$19=0,$20=0,$ld$4$0=0,$21$0=0,$ld$5$1=0,$21$1=0,$st$6$0=0,$st$7$1=0;
 var $22=.0,$23=0,$24=.0,$25=.0,$26=0,$27=.0,$28=.0,$29=0,$tmpcast28=0,$31=0,$32=0,$33=0,$34=0,$ld$8$0=0,$35$0=0,$ld$9$1=0,$35$1=0,$st$10$0=0,$st$11$1=0,$36=0;
 var $37=0,$38=.0,$39=0,$40=.0,$41=.0,$42=0,$43=.0,$44=.0,$45=0,$46=0,$47=0,$ld$12$0=0,$48$0=0,$ld$13$1=0,$48$1=0,$st$14$0=0,$st$15$1=0,$tmpcast27=0,$tmpcast=0,$50=0;
 var $51=0,$52=0,$53=0,$ld$16$0=0,$54$0=0,$ld$17$1=0,$54$1=0,$st$18$0=0,$st$19$1=0,$55=0,$56=0,$57=.0,$58=0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=0,$65=0;
 var $66=0,$ld$20$0=0,$67$0=0,$ld$21$1=0,$67$1=0,$st$22$0=0,$st$23$1=0,$ld$24$0=0,$68$0=0,$ld$25$1=0,$68$1=0,$st$26$0=0,$st$27$1=0,$70=0,$71=0,$$etemp$28=0,$ld$29$0=0,$72$0=0,$ld$30$1=0,$72$1=0;
 var $st$31$0=0,$st$32$1=0,$73=0,$74=0,$$etemp$33=0,$ld$34$0=0,$75$0=0,$ld$35$1=0,$75$1=0,$st$36$0=0,$st$37$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $pointA=((sp)|0);
 $pointB=(((sp)+(8))|0);
 $1=(((sp)+(16))|0);
 $2=(((sp)+(24))|0);
 $3=(((sp)+(32))|0);
 $4=(((sp)+(40))|0);
 $5=(((sp)+(48))|0);
 $planePoint=(((sp)+(56))|0);
 $clipPoint=(((sp)+(64))|0);
 $tmpcast29=$clipPoint;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $planePoint1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $clipPoint2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast26=$clipPoint2;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=(($pc+72)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 if (((($11|0))|0)==((0)|0)) {
  $tmpcast31=$2;
  $tmpcast30=$1;
  $13=(($pc+24)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointA,$xfA,$13);
  $14=(($pc)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($pointB,$xfB,$14);
  $15=(($this)|0);
  __ZmiRK6b2Vec2S1_($tmpcast30,$pointB,$pointA);
  $16=$this;
  $ld$0$0=(($1)|0);
  $17$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($1+4)|0);
  $17$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($16)|0);
  HEAP32[(($st$2$0)>>2)]=$17$0;
  $st$3$1=(($16+4)|0);
  HEAP32[(($st$3$1)>>2)]=$17$1;
  $18=(+(__ZN6b2Vec29NormalizeEv($15)));
  $19=(($this+8)|0);
  __ZplRK6b2Vec2S1_($3,$pointA,$pointB);
  __ZmlfRK6b2Vec2($tmpcast31,0.5,$3);
  $20=$19;
  $ld$4$0=(($2)|0);
  $21$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($2+4)|0);
  $21$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($20)|0);
  HEAP32[(($st$6$0)>>2)]=$21$0;
  $st$7$1=(($20+4)|0);
  HEAP32[(($st$7$1)>>2)]=$21$1;
  __ZmiRK6b2Vec2S1_($4,$pointB,$pointA);
  $22=(+(__Z5b2DotRK6b2Vec2S1_($4,$15)));
  $23=(($pc+76)|0);
  $24=(+(HEAPF32[(($23)>>2)]));
  $25=($22)-($24);
  $26=(($pc+80)|0);
  $27=(+(HEAPF32[(($26)>>2)]));
  $28=($25)-($27);
  $29=(($this+16)|0);
  HEAPF32[(($29)>>2)]=$28;
  STACKTOP=sp;return;
 } else if (((($11|0))|0)==((1)|0)) {
  $tmpcast28=$5;
  $31=(($this)|0);
  $32=(($xfA+8)|0);
  $33=(($pc+16)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast28,$32,$33);
  $34=$this;
  $ld$8$0=(($5)|0);
  $35$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($5+4)|0);
  $35$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($34)|0);
  HEAP32[(($st$10$0)>>2)]=$35$0;
  $st$11$1=(($34+4)|0);
  HEAP32[(($st$11$1)>>2)]=$35$1;
  $36=(($pc+24)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint,$xfA,$36);
  $37=(($pc+($index<<3))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast29,$xfB,$37);
  __ZmiRK6b2Vec2S1_($6,$tmpcast29,$planePoint);
  $38=(+(__Z5b2DotRK6b2Vec2S1_($6,$31)));
  $39=(($pc+76)|0);
  $40=(+(HEAPF32[(($39)>>2)]));
  $41=($38)-($40);
  $42=(($pc+80)|0);
  $43=(+(HEAPF32[(($42)>>2)]));
  $44=($41)-($43);
  $45=(($this+16)|0);
  HEAPF32[(($45)>>2)]=$44;
  $46=(($this+8)|0);
  $47=$46;
  $ld$12$0=(($clipPoint)|0);
  $48$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($clipPoint+4)|0);
  $48$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($47)|0);
  HEAP32[(($st$14$0)>>2)]=$48$0;
  $st$15$1=(($47+4)|0);
  HEAP32[(($st$15$1)>>2)]=$48$1;
  STACKTOP=sp;return;
 } else if (((($11|0))|0)==((2)|0)) {
  $tmpcast27=$9;
  $tmpcast=$7;
  $50=(($this)|0);
  $51=(($xfB+8)|0);
  $52=(($pc+16)|0);
  __Z5b2MulRK5b2RotRK6b2Vec2($tmpcast,$51,$52);
  $53=$this;
  $ld$16$0=(($7)|0);
  $54$0=((HEAP32[(($ld$16$0)>>2)])|0);
  $ld$17$1=(($7+4)|0);
  $54$1=((HEAP32[(($ld$17$1)>>2)])|0);
  $st$18$0=(($53)|0);
  HEAP32[(($st$18$0)>>2)]=$54$0;
  $st$19$1=(($53+4)|0);
  HEAP32[(($st$19$1)>>2)]=$54$1;
  $55=(($pc+24)|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($planePoint1,$xfB,$55);
  $56=(($pc+($index<<3))|0);
  __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast26,$xfA,$56);
  __ZmiRK6b2Vec2S1_($8,$tmpcast26,$planePoint1);
  $57=(+(__Z5b2DotRK6b2Vec2S1_($8,$50)));
  $58=(($pc+76)|0);
  $59=(+(HEAPF32[(($58)>>2)]));
  $60=($57)-($59);
  $61=(($pc+80)|0);
  $62=(+(HEAPF32[(($61)>>2)]));
  $63=($60)-($62);
  $64=(($this+16)|0);
  HEAPF32[(($64)>>2)]=$63;
  $65=(($this+8)|0);
  $66=$65;
  $ld$20$0=(($clipPoint2)|0);
  $67$0=((HEAP32[(($ld$20$0)>>2)])|0);
  $ld$21$1=(($clipPoint2+4)|0);
  $67$1=((HEAP32[(($ld$21$1)>>2)])|0);
  $st$22$0=(($66)|0);
  HEAP32[(($st$22$0)>>2)]=$67$0;
  $st$23$1=(($66+4)|0);
  HEAP32[(($st$23$1)>>2)]=$67$1;
  __ZNK6b2Vec2ngEv($tmpcast27,$50);
  $ld$24$0=(($9)|0);
  $68$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($9+4)|0);
  $68$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($53)|0);
  HEAP32[(($st$26$0)>>2)]=$68$0;
  $st$27$1=(($53+4)|0);
  HEAP32[(($st$27$1)>>2)]=$68$1;
  STACKTOP=sp;return;
 } else {
  $70=(($this+16)|0);
  HEAPF32[(($70)>>2)]=0.0;
  $71=$this;
  $$etemp$28=8264;
  $ld$29$0=(($$etemp$28)|0);
  $72$0=((HEAP32[(($ld$29$0)>>2)])|0);
  $ld$30$1=(($$etemp$28+4)|0);
  $72$1=((HEAP32[(($ld$30$1)>>2)])|0);
  $st$31$0=(($71)|0);
  HEAP32[(($st$31$0)>>2)]=$72$0;
  $st$32$1=(($71+4)|0);
  HEAP32[(($st$32$1)>>2)]=$72$1;
  $73=(($this+8)|0);
  $74=$73;
  $$etemp$33=8264;
  $ld$34$0=(($$etemp$33)|0);
  $75$0=((HEAP32[(($ld$34$0)>>2)])|0);
  $ld$35$1=(($$etemp$33+4)|0);
  $75$1=((HEAP32[(($ld$35$1)>>2)])|0);
  $st$36$0=(($74)|0);
  HEAP32[(($st$36$0)>>2)]=$75$0;
  $st$37$1=(($74+4)|0);
  HEAP32[(($st$37$1)>>2)]=$75$1;
  STACKTOP=sp;return;
 }
}


function __ZN15b2ContactSolver27SolveTOIPositionConstraintsEii($this,$toiIndexA,$toiIndexB){
 $this=($this)|0;
 $toiIndexA=($toiIndexA)|0;
 $toiIndexB=($toiIndexB)|0;
 var $localCenterA=0,$tmpcast=0,$localCenterB=0,$tmpcast41=0,$cA=0,$tmpcast42=0,$cB=0,$tmpcast43=0,$xfA45=0,$tmpcast44=0,$xfB48=0,$tmpcast47=0,$1=0,$2=0,$psm=0,$normal=0,$tmpcast50=0,$point=0,$tmpcast51=0,$rA=0;
 var $rB=0,$P=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$minSeparation_060=.0,$i_059=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$ld$0$0=0,$27$0=0,$ld$1$1=0,$27$1=0,$st$2$0=0,$st$3$1=0,$28=0,$29=0,$ld$4$0=0,$30$0=0,$ld$5$1=0,$30$1=0,$st$6$0=0;
 var $st$7$1=0,$31=0,$32=0,$33=0,$34=0,$or_cond=0,$36=0,$37=.0,$38=0,$39=.0,$iA_0=.0,$mA_0=.0,$41=0,$42=0,$or_cond52=0,$44=0,$45=.0,$46=0,$47=.0,$iB_0=.0;
 var $mB_0=.0,$49=0,$50=0,$51=0,$ld$8$0=0,$52$0=0,$ld$9$1=0,$52$1=0,$st$10$0=0,$st$11$1=0,$53=0,$54=0,$55=.0,$56=0,$57=0,$ld$12$0=0,$58$0=0,$ld$13$1=0,$58$1=0,$st$14$0=0;
 var $st$15$1=0,$59=0,$60=0,$61=.0,$62=0,$63=.0,$minSeparation_156=.0,$j_055=0,$aB_054=.0,$aA_053=.0,$xfA456768=0,$xfB486970=0,$ld$16$0=0,$65$0=0,$ld$17$1=0,$65$1=0,$st$18$0=0,$st$19$1=0,$ld$20$0=0,$66$0=0;
 var $ld$21$1=0,$66$1=0,$st$22$0=0,$st$23$1=0,$67=.0,$68=.0,$69=.0,$70=.0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0;
 var $85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=.0,$91=.0,$92=0,$93=0,$minSeparation_1_lcssa=.0,$aB_0_lcssa=.0,$aA_0_lcssa=.0,$94=0,$95=0,$96=0,$ld$24$0=0,$97$0=0,$ld$25$1=0,$97$1=0,$st$26$0=0;
 var $st$27$1=0,$98=0,$99=0,$100=0,$101=0,$102=0,$ld$28$0=0,$103$0=0,$ld$29$1=0,$103$1=0,$st$30$0=0,$st$31$1=0,$104=0,$105=0,$106=0,$107=0,$108=0,$minSeparation_0_lcssa=.0,$109=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $localCenterA=((sp)|0);
 $tmpcast=$localCenterA;
 $localCenterB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast41=$localCenterB;
 $cA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast42=$cA;
 $cB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast43=$cB;
 $xfA45=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast44=$xfA45;
 $xfB48=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $tmpcast47=$xfB48;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $psm=STACKTOP;STACKTOP = (STACKTOP + 20)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast50=$normal;
 $point=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast51=$point;
 $rA=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rB=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $P=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  $minSeparation_0_lcssa=0.0;

  $109=$minSeparation_0_lcssa>=(-0.007499999832361937);
  STACKTOP=sp;return (($109)|0);
 }
 $8=(($this+40)|0);
 $9=(($this+28)|0);
 $10=(($xfA45+8)|0);
 $11=$10;
 $12=(($xfB48+8)|0);
 $13=$12;
 $14=$psm;
 $15=(($psm+8)|0);
 $16=$15;
 $17=(($psm+16)|0);
 $i_059=0;$minSeparation_060=0.0;
 while(1) {


  $19=((HEAP32[(($8)>>2)])|0);
  $20=(($19+((($i_059)*(88))&-1))|0);
  $21=(($19+((($i_059)*(88))&-1)+32)|0);
  $22=((HEAP32[(($21)>>2)])|0);
  $23=(($19+((($i_059)*(88))&-1)+36)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=(($19+((($i_059)*(88))&-1)+48)|0);
  $26=$25;
  $ld$0$0=(($26)|0);
  $27$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($26+4)|0);
  $27$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($localCenterA)|0);
  HEAP32[(($st$2$0)>>2)]=$27$0;
  $st$3$1=(($localCenterA+4)|0);
  HEAP32[(($st$3$1)>>2)]=$27$1;
  $28=(($19+((($i_059)*(88))&-1)+56)|0);
  $29=$28;
  $ld$4$0=(($29)|0);
  $30$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($29+4)|0);
  $30$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($localCenterB)|0);
  HEAP32[(($st$6$0)>>2)]=$30$0;
  $st$7$1=(($localCenterB+4)|0);
  HEAP32[(($st$7$1)>>2)]=$30$1;
  $31=(($19+((($i_059)*(88))&-1)+84)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  $33=($22|0)==($toiIndexA|0);
  $34=($22|0)==($toiIndexB|0);
  $or_cond=$33|$34;
  if ($or_cond) {
   $36=(($19+((($i_059)*(88))&-1)+40)|0);
   $37=(+(HEAPF32[(($36)>>2)]));
   $38=(($19+((($i_059)*(88))&-1)+64)|0);
   $39=(+(HEAPF32[(($38)>>2)]));
   $mA_0=$37;$iA_0=$39;
  } else {
   $mA_0=0.0;$iA_0=0.0;
  }


  $41=($24|0)==($toiIndexA|0);
  $42=($24|0)==($toiIndexB|0);
  $or_cond52=$41|$42;
  if ($or_cond52) {
   $44=(($19+((($i_059)*(88))&-1)+44)|0);
   $45=(+(HEAPF32[(($44)>>2)]));
   $46=(($19+((($i_059)*(88))&-1)+68)|0);
   $47=(+(HEAPF32[(($46)>>2)]));
   $mB_0=$45;$iB_0=$47;
  } else {
   $mB_0=0.0;$iB_0=0.0;
  }


  $49=((HEAP32[(($9)>>2)])|0);
  $50=(($49+((($22)*(12))&-1))|0);
  $51=$50;
  $ld$8$0=(($51)|0);
  $52$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($51+4)|0);
  $52$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($cA)|0);
  HEAP32[(($st$10$0)>>2)]=$52$0;
  $st$11$1=(($cA+4)|0);
  HEAP32[(($st$11$1)>>2)]=$52$1;
  $53=((HEAP32[(($9)>>2)])|0);
  $54=(($53+((($22)*(12))&-1)+8)|0);
  $55=(+(HEAPF32[(($54)>>2)]));
  $56=(($53+((($24)*(12))&-1))|0);
  $57=$56;
  $ld$12$0=(($57)|0);
  $58$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($57+4)|0);
  $58$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($cB)|0);
  HEAP32[(($st$14$0)>>2)]=$58$0;
  $st$15$1=(($cB+4)|0);
  HEAP32[(($st$15$1)>>2)]=$58$1;
  $59=((HEAP32[(($9)>>2)])|0);
  $60=(($59+((($24)*(12))&-1)+8)|0);
  $61=(+(HEAPF32[(($60)>>2)]));
  $62=($32|0)>0;
  if ($62) {
   $63=($mA_0)+($mB_0);
   $aA_053=$55;$aB_054=$61;$j_055=0;$minSeparation_156=$minSeparation_060;
   while(1) {




    __ZN5b2Rot3SetEf($11,$aA_053);
    __ZN5b2Rot3SetEf($13,$aB_054);
    __Z5b2MulRK5b2RotRK6b2Vec2($1,$11,$tmpcast);
    $xfA456768=$xfA45;
    __ZmiRK6b2Vec2S1_($xfA456768,$tmpcast42,$1);
    __Z5b2MulRK5b2RotRK6b2Vec2($2,$13,$tmpcast41);
    $xfB486970=$xfB48;
    __ZmiRK6b2Vec2S1_($xfB486970,$tmpcast43,$2);
    __ZN24b2PositionSolverManifold10InitializeEP27b2ContactPositionConstraintRK11b2TransformS4_i($psm,$20,$tmpcast44,$tmpcast47,$j_055);
    $ld$16$0=(($14)|0);
    $65$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($14+4)|0);
    $65$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($normal)|0);
    HEAP32[(($st$18$0)>>2)]=$65$0;
    $st$19$1=(($normal+4)|0);
    HEAP32[(($st$19$1)>>2)]=$65$1;
    $ld$20$0=(($16)|0);
    $66$0=((HEAP32[(($ld$20$0)>>2)])|0);
    $ld$21$1=(($16+4)|0);
    $66$1=((HEAP32[(($ld$21$1)>>2)])|0);
    $st$22$0=(($point)|0);
    HEAP32[(($st$22$0)>>2)]=$66$0;
    $st$23$1=(($point+4)|0);
    HEAP32[(($st$23$1)>>2)]=$66$1;
    $67=(+(HEAPF32[(($17)>>2)]));
    __ZmiRK6b2Vec2S1_($rA,$tmpcast51,$tmpcast42);
    __ZmiRK6b2Vec2S1_($rB,$tmpcast51,$tmpcast43);
    $68=(+(__Z5b2MinIfET_S0_S0_($minSeparation_156,$67)));
    $69=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$tmpcast50)));
    $70=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$tmpcast50)));
    $71=($iA_0)*($69);
    $72=($69)*($71);
    $73=($63)+($72);
    $74=($iB_0)*($70);
    $75=($70)*($74);
    $76=($73)+($75);
    $77=$76>(0.0);
    if ($77) {
     $79=($67)+((0.004999999888241291));
     $80=($79)*((0.75));
     $81=(+(__Z7b2ClampIfET_S0_S0_S0_($80,-0.20000000298023224,0.0)));
     $82=((-.0))-($81);
     $83=($82)/($76);
     $85=$83;
    } else {
     $85=0.0;
    }

    __ZmlfRK6b2Vec2($P,$85,$tmpcast50);
    __ZmlfRK6b2Vec2($3,$mA_0,$P);
    __ZN6b2Vec2mIERKS_($tmpcast42,$3);
    $86=(+(__Z7b2CrossRK6b2Vec2S1_($rA,$P)));
    $87=($iA_0)*($86);
    $88=($aA_053)-($87);
    __ZmlfRK6b2Vec2($4,$mB_0,$P);
    __ZN6b2Vec2pLERKS_($tmpcast43,$4);
    $89=(+(__Z7b2CrossRK6b2Vec2S1_($rB,$P)));
    $90=($iB_0)*($89);
    $91=($aB_054)+($90);
    $92=((($j_055)+(1))|0);
    $93=($92|0)<($32|0);
    if ($93) {
     $aA_053=$88;$aB_054=$91;$j_055=$92;$minSeparation_156=$68;
    } else {
     $aA_0_lcssa=$88;$aB_0_lcssa=$91;$minSeparation_1_lcssa=$68;
     break;
    }
   }
  } else {
   $aA_0_lcssa=$55;$aB_0_lcssa=$61;$minSeparation_1_lcssa=$minSeparation_060;
  }



  $94=((HEAP32[(($9)>>2)])|0);
  $95=(($94+((($22)*(12))&-1))|0);
  $96=$95;
  $ld$24$0=(($cA)|0);
  $97$0=((HEAP32[(($ld$24$0)>>2)])|0);
  $ld$25$1=(($cA+4)|0);
  $97$1=((HEAP32[(($ld$25$1)>>2)])|0);
  $st$26$0=(($96)|0);
  HEAP32[(($st$26$0)>>2)]=$97$0;
  $st$27$1=(($96+4)|0);
  HEAP32[(($st$27$1)>>2)]=$97$1;
  $98=((HEAP32[(($9)>>2)])|0);
  $99=(($98+((($22)*(12))&-1)+8)|0);
  HEAPF32[(($99)>>2)]=$aA_0_lcssa;
  $100=((HEAP32[(($9)>>2)])|0);
  $101=(($100+((($24)*(12))&-1))|0);
  $102=$101;
  $ld$28$0=(($cB)|0);
  $103$0=((HEAP32[(($ld$28$0)>>2)])|0);
  $ld$29$1=(($cB+4)|0);
  $103$1=((HEAP32[(($ld$29$1)>>2)])|0);
  $st$30$0=(($102)|0);
  HEAP32[(($st$30$0)>>2)]=$103$0;
  $st$31$1=(($102+4)|0);
  HEAP32[(($st$31$1)>>2)]=$103$1;
  $104=((HEAP32[(($9)>>2)])|0);
  $105=(($104+((($24)*(12))&-1)+8)|0);
  HEAPF32[(($105)>>2)]=$aB_0_lcssa;
  $106=((($i_059)+(1))|0);
  $107=((HEAP32[(($5)>>2)])|0);
  $108=($106|0)<($107|0);
  if ($108) {
   $i_059=$106;$minSeparation_060=$minSeparation_1_lcssa;
  } else {
   $minSeparation_0_lcssa=$minSeparation_1_lcssa;
   break;
  }
 }

 $109=$minSeparation_0_lcssa>=(-0.007499999832361937);
 STACKTOP=sp;return (($109)|0);
}


function __ZN22b2EdgeAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,148))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN22b2EdgeAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,148);
 return;
}


function __ZN22b2EdgeAndCircleContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4888;
 return;
}


function __ZN22b2EdgeAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN22b2EdgeAndCircleContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN22b2EdgeAndCircleContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN23b2ChainAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$indexA,$fixtureB,$indexB,$allocator){
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,label=0;

 $1=((__ZN16b2BlockAllocator8AllocateEi($allocator,148))|0);
 $2=($1|0)==0;
 if ($2) {
  $6=0;

  $7=(($6)|0);
  return (($7)|0);
 }
 $4=$1;
 __ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i($4,$fixtureA,$indexA,$fixtureB,$indexB);
 $6=$4;

 $7=(($6)|0);
 return (($7)|0);
}


function __ZN23b2ChainAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,148);
 return;
}


function __ZN23b2ChainAndCircleContactC2EP9b2FixtureiS1_i($this,$fixtureA,$indexA,$fixtureB,$indexB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $indexA=($indexA)|0;
 $fixtureB=($fixtureB)|0;
 $indexB=($indexB)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,$indexA,$fixtureB,$indexB);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4800;
 return;
}


function __ZN23b2ChainAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $edge=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $edge=((sp)|0);
 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 __ZN11b2EdgeShapeC1Ev($edge);
 $5=(($this+56)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($4,$edge,$6);
 $7=(($this+52)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((__ZN9b2Fixture8GetShapeEv($8))|0);
 $10=$9;
 __Z22b2CollideEdgeAndCircleP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK13b2CircleShapeS6_($manifold,$edge,$xfA,$10,$xfB);
 STACKTOP=sp;return;
}


function __ZN23b2ChainAndCircleContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN23b2ChainAndCircleContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN23b2EdgeAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,148))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN23b2EdgeAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,148);
 return;
}


function __ZN23b2EdgeAndPolygonContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4768;
 return;
}


function __ZN23b2EdgeAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z23b2CollideEdgeAndPolygonP10b2ManifoldPK11b2EdgeShapeRK11b2TransformPK14b2PolygonShapeS6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN23b2EdgeAndPolygonContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN23b2EdgeAndPolygonContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN16b2PolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($fixtureA,$0,$fixtureB,$1,$allocator){
 $fixtureA=($fixtureA)|0;
 $0=($0)|0;
 $fixtureB=($fixtureB)|0;
 $1=($1)|0;
 $allocator=($allocator)|0;
 var $3=0,$4=0,$6=0,$8=0,$9=0,label=0;

 $3=((__ZN16b2BlockAllocator8AllocateEi($allocator,148))|0);
 $4=($3|0)==0;
 if ($4) {
  $8=0;

  $9=(($8)|0);
  return (($9)|0);
 }
 $6=$3;
 __ZN16b2PolygonContactC2EP9b2FixtureS1_($6,$fixtureA,$fixtureB);
 $8=$6;

 $9=(($8)|0);
 return (($9)|0);
}


function __ZN16b2PolygonContact7DestroyEP9b2ContactP16b2BlockAllocator($contact,$allocator){
 $contact=($contact)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=$contact;
 $2=$contact;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 FUNCTION_TABLE_vi[($5)&255]($1);
 $6=$contact;
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$6,148);
 return;
}


function __ZN16b2PolygonContactC2EP9b2FixtureS1_($this,$fixtureA,$fixtureB){
 $this=($this)|0;
 $fixtureA=($fixtureA)|0;
 $fixtureB=($fixtureB)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN9b2ContactC2EP9b2FixtureiS1_i($1,$fixtureA,0,$fixtureB,0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=5040;
 return;
}


function __ZN16b2PolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_($this,$manifold,$xfA,$xfB){
 $this=($this)|0;
 $manifold=($manifold)|0;
 $xfA=($xfA)|0;
 $xfB=($xfB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN9b2Fixture8GetShapeEv($2))|0);
 $4=$3;
 $5=(($this+52)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZN9b2Fixture8GetShapeEv($6))|0);
 $8=$7;
 __Z17b2CollidePolygonsP10b2ManifoldPK14b2PolygonShapeRK11b2TransformS3_S6_($manifold,$4,$xfA,$8,$xfB);
 return;
}


function __ZN16b2PolygonContactD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN16b2PolygonContactD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN9b2FixtureC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+32)|0);
 __ZN8b2FilterC1Ev($1);
 $2=(($this+40)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+24)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+28)|0);
 HEAP32[(($4)>>2)]=0;
 $5=$this;
 _memset((((($5)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 return;
}


function __ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef($this,$allocator,$body,$def){
 $this=($this)|0;
 $allocator=($allocator)|0;
 $body=($body)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$8=.0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$i_015=0,$37=0,$38=0,$39=0;
 var $40=0,$41=0,$42=0,$43=0,$44=0,$45=.0,$46=0,label=0;

 $1=(($def+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+40)|0);
 HEAP32[(($3)>>2)]=$2;
 $4=(($def+8)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($this+16)|0);
 HEAPF32[(($6)>>2)]=$5;
 $7=(($def+12)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=(($this+20)|0);
 HEAPF32[(($9)>>2)]=$8;
 $10=(($this+8)|0);
 HEAP32[(($10)>>2)]=$body;
 $11=(($this+4)|0);
 HEAP32[(($11)>>2)]=0;
 $12=(($this+32)|0);
 $13=(($def+22)|0);
 $14=$12;
 $15=$13;
 HEAP16[(($14)>>1)]=((HEAP16[(($15)>>1)])|0);HEAP16[((($14)+(2))>>1)]=((HEAP16[((($15)+(2))>>1)])|0);HEAP16[((($14)+(4))>>1)]=((HEAP16[((($15)+(4))>>1)])|0);
 $16=(($def+20)|0);
 $17=((HEAP8[($16)])|0);
 $18=(($this+38)|0);
 HEAP8[($18)]=$17;
 $19=(($def)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=$20;
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($22+8)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=((FUNCTION_TABLE_iii[($24)&63]($20,$allocator))|0);
 $26=(($this+12)|0);
 HEAP32[(($26)>>2)]=$25;
 $27=$25;
 $28=((HEAP32[(($27)>>2)])|0);
 $29=(($28+12)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((FUNCTION_TABLE_ii[($30)&31]($25))|0);
 $32=((($31)*(28))&-1);
 $33=((__ZN16b2BlockAllocator8AllocateEi($allocator,$32))|0);
 $34=$33;
 $35=(($this+24)|0);
 HEAP32[(($35)>>2)]=$34;
 $36=($31|0)>0;
 if ($36) {
  $i_015=0;
 } else {
  $43=(($this+28)|0);
  HEAP32[(($43)>>2)]=0;
  $44=(($def+16)|0);
  $45=(+(HEAPF32[(($44)>>2)]));
  $46=(($this)|0);
  HEAPF32[(($46)>>2)]=$45;
  return;
 }
 while(1) {

  $37=((HEAP32[(($35)>>2)])|0);
  $38=(($37+((($i_015)*(28))&-1)+16)|0);
  HEAP32[(($38)>>2)]=0;
  $39=((HEAP32[(($35)>>2)])|0);
  $40=(($39+((($i_015)*(28))&-1)+24)|0);
  HEAP32[(($40)>>2)]=-1;
  $41=((($i_015)+(1))|0);
  $42=($41|0)<($31|0);
  if ($42) {
   $i_015=$41;
  } else {
   break;
  }
 }
 $43=(($this+28)|0);
 HEAP32[(($43)>>2)]=0;
 $44=(($def+16)|0);
 $45=(+(HEAPF32[(($44)>>2)]));
 $46=(($this)|0);
 HEAPF32[(($46)>>2)]=$45;
 return;
}


function __ZN9b2Fixture7DestroyEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$16=0,$17=0,$18=0,$19=0,$20=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$34=0,$35=0,$36=0,$37=0,$38=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+12)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((FUNCTION_TABLE_ii[($6)&31]($2))|0);
 $8=(($this+24)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=$9;
 $11=((($7)*(28))&-1);
 __ZN16b2BlockAllocator4FreeEPvi($allocator,$10,$11);
 HEAP32[(($8)>>2)]=0;
 $12=((HEAP32[(($1)>>2)])|0);
 $13=(($12+4)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 if (((($14|0))|0)==((0)|0)) {
  $16=$12;
  $17=$12;
  $18=((HEAP32[(($17)>>2)])|0);
  $19=((HEAP32[(($18)>>2)])|0);
  FUNCTION_TABLE_vi[($19)&255]($16);
  $20=$12;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$20,20);
  HEAP32[(($1)>>2)]=0;
  return;
 } else if (((($14|0))|0)==((1)|0)) {
  $22=$12;
  $23=$12;
  $24=((HEAP32[(($23)>>2)])|0);
  $25=((HEAP32[(($24)>>2)])|0);
  FUNCTION_TABLE_vi[($25)&255]($22);
  $26=$12;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$26,48);
  HEAP32[(($1)>>2)]=0;
  return;
 } else if (((($14|0))|0)==((3)|0)) {
  $34=$12;
  $35=$12;
  $36=((HEAP32[(($35)>>2)])|0);
  $37=((HEAP32[(($36)>>2)])|0);
  FUNCTION_TABLE_vi[($37)&255]($34);
  $38=$12;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$38,40);
  HEAP32[(($1)>>2)]=0;
  return;
 } else if (((($14|0))|0)==((2)|0)) {
  $28=$12;
  $29=$12;
  $30=((HEAP32[(($29)>>2)])|0);
  $31=((HEAP32[(($30)>>2)])|0);
  FUNCTION_TABLE_vi[($31)&255]($28);
  $32=$12;
  __ZN16b2BlockAllocator4FreeEPvi($allocator,$32,152);
  HEAP32[(($1)>>2)]=0;
  return;
 } else {
  HEAP32[(($1)>>2)]=0;
  return;
 }
}


function __ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform($this,$broadPhase,$xf){
 $this=($this)|0;
 $broadPhase=($broadPhase)|0;
 $xf=($xf)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$i_012=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+12)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((FUNCTION_TABLE_ii[($6)&31]($2))|0);
 $8=(($this+28)|0);
 HEAP32[(($8)>>2)]=$7;
 $9=($7|0)>0;
 if (!($9)) {
  return;
 }
 $10=(($this+24)|0);
 $i_012=0;
 while(1) {

  $12=((HEAP32[(($10)>>2)])|0);
  $13=(($12+((($i_012)*(28))&-1))|0);
  $14=((HEAP32[(($1)>>2)])|0);
  $15=$14;
  $16=((HEAP32[(($15)>>2)])|0);
  $17=(($16+28)|0);
  $18=((HEAP32[(($17)>>2)])|0);
  $19=(($13)|0);
  FUNCTION_TABLE_viiii[($18)&63]($14,$19,$xf,$i_012);
  $20=$13;
  $21=((__ZN12b2BroadPhase11CreateProxyERK6b2AABBPv($broadPhase,$19,$20))|0);
  $22=(($12+((($i_012)*(28))&-1)+24)|0);
  HEAP32[(($22)>>2)]=$21;
  $23=(($12+((($i_012)*(28))&-1)+16)|0);
  HEAP32[(($23)>>2)]=$this;
  $24=(($12+((($i_012)*(28))&-1)+20)|0);
  HEAP32[(($24)>>2)]=$i_012;
  $25=((($i_012)+(1))|0);
  $26=((HEAP32[(($8)>>2)])|0);
  $27=($25|0)<($26|0);
  if ($27) {
   $i_012=$25;
  } else {
   break;
  }
 }
 return;
}


function __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($this,$broadPhase){
 $this=($this)|0;
 $broadPhase=($broadPhase)|0;
 var $1=0,$2=0,$3=0,$4=0,$i_05=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if (!($3)) {
  HEAP32[(($1)>>2)]=0;
  return;
 }
 $4=(($this+24)|0);
 $i_05=0;
 while(1) {

  $6=((HEAP32[(($4)>>2)])|0);
  $7=(($6+((($i_05)*(28))&-1)+24)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  __ZN12b2BroadPhase12DestroyProxyEi($broadPhase,$8);
  HEAP32[(($7)>>2)]=-1;
  $9=((($i_05)+(1))|0);
  $10=((HEAP32[(($1)>>2)])|0);
  $11=($9|0)<($10|0);
  if ($11) {
   $i_05=$9;
  } else {
   break;
  }
 }
 HEAP32[(($1)>>2)]=0;
 return;
}


function __ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_($this,$broadPhase,$transform1,$transform2){
 $this=($this)|0;
 $broadPhase=($broadPhase)|0;
 $transform1=($transform1)|0;
 $transform2=($transform2)|0;
 var $aabb1=0,$aabb2=0,$displacement=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$i_012=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $aabb1=((sp)|0);
 $aabb2=(((sp)+(16))|0);
 $displacement=(((sp)+(32))|0);
 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  STACKTOP=sp;return;
 }
 $4=((HEAP32[(($1)>>2)])|0);
 $5=($4|0)>0;
 if (!($5)) {
  STACKTOP=sp;return;
 }
 $6=(($this+24)|0);
 $7=(($this+12)|0);
 $8=(($transform2)|0);
 $9=(($transform1)|0);
 $i_012=0;
 while(1) {

  $11=((HEAP32[(($6)>>2)])|0);
  $12=((HEAP32[(($7)>>2)])|0);
  $13=$12;
  $14=((HEAP32[(($13)>>2)])|0);
  $15=(($14+28)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  $17=(($11+((($i_012)*(28))&-1)+20)|0);
  $18=((HEAP32[(($17)>>2)])|0);
  FUNCTION_TABLE_viiii[($16)&63]($12,$aabb1,$transform1,$18);
  $19=((HEAP32[(($7)>>2)])|0);
  $20=$19;
  $21=((HEAP32[(($20)>>2)])|0);
  $22=(($21+28)|0);
  $23=((HEAP32[(($22)>>2)])|0);
  $24=((HEAP32[(($17)>>2)])|0);
  FUNCTION_TABLE_viiii[($23)&63]($19,$aabb2,$transform2,$24);
  $25=(($11+((($i_012)*(28))&-1))|0);
  __ZN6b2AABB7CombineERKS_S1_($25,$aabb1,$aabb2);
  __ZmiRK6b2Vec2S1_($displacement,$8,$9);
  $26=(($11+((($i_012)*(28))&-1)+24)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  __ZN12b2BroadPhase9MoveProxyEiRK6b2AABBRK6b2Vec2($broadPhase,$27,$25,$displacement);
  $28=((($i_012)+(1))|0);
  $29=((HEAP32[(($1)>>2)])|0);
  $30=($28|0)<($29|0);
  if ($30) {
   $i_012=$28;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN6b2Body14GetContactListEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+128)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2Contact11GetFixtureAEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+48)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2Contact11GetFixtureBEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+52)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN9b2Contact16FlagForFilteringEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2|8;
 HEAP32[(($1)>>2)]=$3;
 return;
}


function __ZN7b2WorldC2ERK6b2Vec2($this,$gravity){
 $this=($this)|0;
 $gravity=($gravity)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$ld$0$0=0,$18$0=0,$ld$1$1=0,$18$1=0,$st$2$0=0;
 var $st$3$1=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$29=0,$30=0,$33=0,$34=0,$_15=0,$_1=0,$37$0=0,$37$1=0,$38$0=0,$38$1=0,$28$0=0;
 var $28$1=0,$32$0=0,$32$1=0,$40$0=0,$40$1=0,label=0;

 $1=(($this)|0);
 __ZN16b2BlockAllocatorC2Ev($1);
 $2=(($this+76)|0);
 __ZN16b2StackAllocatorC2Ev($2);
 $4=(($this+102880)|0);
 __ZN16b2ContactManagerC2Ev($4);
 $6=(($this+102980)|0);
 $7=(($this+102992)|0);
 HEAP32[(($7)>>2)]=0;
 $8=(($this+102996)|0);
 HEAP32[(($8)>>2)]=0;
 $9=(($this+102960)|0);
 $10=(($this+103004)|0);
 $11=$9;
 _memset((((($11)|0))|0), ((((0)|0))|0), ((((20)|0))|0))|0;
 HEAP8[($10)]=1;
 $12=(($this+103005)|0);
 HEAP8[($12)]=1;
 $13=(($this+103006)|0);
 HEAP8[($13)]=0;
 $14=(($this+103007)|0);
 HEAP8[($14)]=1;
 $15=(($this+102988)|0);
 HEAP8[($15)]=1;
 $16=$gravity;
 $17=$6;
 $ld$0$0=(($16)|0);
 $18$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($16+4)|0);
 $18$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($17)|0);
 HEAP32[(($st$2$0)>>2)]=$18$0;
 $st$3$1=(($17+4)|0);
 HEAP32[(($st$3$1)>>2)]=$18$1;
 $19=(($this+102876)|0);
 HEAP32[(($19)>>2)]=4;
 $20=(($this+103000)|0);
 HEAPF32[(($20)>>2)]=0.0;
 $21=(($this+102956)|0);
 HEAP32[(($21)>>2)]=$1;
 $22=(($this+103040)|0);
 HEAP32[(($22)>>2)]=40;
 $23=((HEAP32[((32)>>2)])|0);
 $24=(($this+103044)|0);
 HEAP32[(($24)>>2)]=$23;
 $25=(($this+103008)|0);
 $26=$25;
 _memset((((($26)|0))|0), ((((0)|0))|0), ((((32)|0))|0))|0;
 return;
}


function __ZN16b2ContactManagerD1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ContactManagerD2Ev($this);
 return;
}


function __ZN7b2WorldD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$b_011=0,$8=0,$9=0,$10=0,$11=0,$f_0=0,$13=0,$15=0,$16=0,$17=0,$lpad_phi$0=0,$lpad_phi$1=0,$19=0,$20=0;
 var $21=0,$23=0,$24=0,$27=0,$29=0,$31=0,$34=0,$35=0,$38=0,$39=0,$_08=0,$_0=0,$41=0,$_19=0,$_1=0,$43=0,$45$0=0,$45$1=0,$46$0=0,$46$1=0;
 var $lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$33$0=0,$33$1=0,$37$0=0,$37$1=0,$48$0=0,$48$1=0,label=0;

 $1=(($this+102960)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  $4=(($this)|0);
  $b_011=$2;
  while(1) {

   $8=(($b_011+112)|0);
   $9=((HEAP32[(($8)>>2)])|0);
   $10=(($b_011+116)|0);
   $11=((HEAP32[(($10)>>2)])|0);
   $f_0=$11;
   while(1) {

    $13=($f_0|0)==0;
    if ($13) {
     break;
    }
    $15=(($f_0+4)|0);
    $16=((HEAP32[(($15)>>2)])|0);
    $17=(($f_0+28)|0);
    HEAP32[(($17)>>2)]=0;
    __ZN9b2Fixture7DestroyEP16b2BlockAllocator($f_0,$4);
    $f_0=$16;
   }
   $5=($9|0)==0;
   if ($5) {
    break;
   } else {
    $b_011=$9;
   }
  }
 }
 $6=(($this+102968)|0);
 while(1) {
  $23=((HEAP32[(($6)>>2)])|0);
  $24=($23|0)==0;
  if ($24) {
   break;
  }
  __ZN7b2World21DestroyParticleSystemEP16b2ParticleSystem($this,$23);
 }
 $27=(($this+102880)|0);
 __ZN16b2ContactManagerD1Ev($27);
 $29=(($this+76)|0);
 __ZN16b2StackAllocatorD2Ev($29);
 $31=(($this)|0);
 __ZN16b2BlockAllocatorD2Ev($31);
 return;
}


function __ZN7b2World21DestroyParticleSystemEP16b2ParticleSystem($this,$p){
 $this=($this)|0;
 $p=($p)|0;
 var $1=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$15=0,$16=0,$18=0,$19=0,$20=0,$22=0,$24=0,$25=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($1) {
  return;
 }
 $3=(($p+380)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==0;
 if (!($5)) {
  $7=(($p+384)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=(($4+384)|0);
  HEAP32[(($9)>>2)]=$8;
 }
 $11=(($p+384)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($12|0)==0;
 if (!($13)) {
  $15=((HEAP32[(($3)>>2)])|0);
  $16=(($12+380)|0);
  HEAP32[(($16)>>2)]=$15;
 }
 $18=(($this+102968)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=($19|0)==($p|0);
 if ($20) {
  $22=((HEAP32[(($11)>>2)])|0);
  HEAP32[(($18)>>2)]=$22;
 }
 __ZN16b2ParticleSystemD2Ev($p);
 $24=(($this)|0);
 $25=(($p)|0);
 __ZN16b2BlockAllocator4FreeEPvi($24,$25,392);
 return;
}


function __ZN7b2World18SetContactListenerEP17b2ContactListener($this,$listener){
 $this=($this)|0;
 $listener=($listener)|0;
 var $1=0,label=0;

 $1=(($this+102952)|0);
 HEAP32[(($1)>>2)]=$listener;
 return;
}


function __ZN7b2World10CreateBodyEPK9b2BodyDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$3=0,$4=0,$5=0,$7=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$19=0,$20=0,$21=0,$_0=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($1) {
  $_0=0;

  return (($_0)|0);
 }
 $3=(($this)|0);
 $4=((__ZN16b2BlockAllocator8AllocateEi($3,168))|0);
 $5=($4|0)==0;
 if ($5) {
  $9=0;
 } else {
  $7=$4;
  __ZN6b2BodyC2EPK9b2BodyDefP7b2World($7,$def,$this);
  $9=$7;
 }

 $10=(($9+108)|0);
 HEAP32[(($10)>>2)]=0;
 $11=(($this+102960)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($9+112)|0);
 HEAP32[(($13)>>2)]=$12;
 $14=((HEAP32[(($11)>>2)])|0);
 $15=($14|0)==0;
 if (!($15)) {
  $17=(($14+108)|0);
  HEAP32[(($17)>>2)]=$9;
 }
 HEAP32[(($11)>>2)]=$9;
 $19=(($this+102972)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($20)+(1))|0);
 HEAP32[(($19)>>2)]=$21;
 $_0=$9;

 return (($_0)|0);
}


function __ZNK7b2World8IsLockedEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+102876)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&2;
 $4=($3|0)!=0;
 return (($4)|0);
}


function __ZN7b2World11DestroyBodyEP6b2Body($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$je_039=0,$8=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$26=0,$ce_035=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$f_034=0,$41=0,$42=0,$43=0;
 var $44=0,$46=0,$47=0,$48=0,$49=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$60=0,$61=0,$62=0,$64=0,$65=0,$66=0,$68=0;
 var $69=0,$71=0,$72=0,$73=0,$75=0,$77=0,$78=0,$79=0,$80=0,$81=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($1) {
  return;
 }
 $3=(($b+124)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==0;
 if (!($5)) {
  $6=(($this+102992)|0);
  $je_039=$4;
  while(1) {

   $8=(($je_039+12)|0);
   $9=((HEAP32[(($8)>>2)])|0);
   $10=((HEAP32[(($6)>>2)])|0);
   $11=($10|0)==0;
   if (!($11)) {
    $13=$10;
    $14=((HEAP32[(($13)>>2)])|0);
    $15=(($14+8)|0);
    $16=((HEAP32[(($15)>>2)])|0);
    $17=(($je_039+4)|0);
    $18=((HEAP32[(($17)>>2)])|0);
    FUNCTION_TABLE_vii[($16)&255]($10,$18);
   }
   $20=(($je_039+4)|0);
   $21=((HEAP32[(($20)>>2)])|0);
   __ZN7b2World12DestroyJointEP7b2Joint($this,$21);
   HEAP32[(($3)>>2)]=$9;
   $22=($9|0)==0;
   if ($22) {
    break;
   } else {
    $je_039=$9;
   }
  }
 }
 HEAP32[(($3)>>2)]=0;
 $23=(($b+128)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=($24|0)==0;
 if (!($25)) {
  $26=(($this+102880)|0);
  $ce_035=$24;
  while(1) {

   $28=(($ce_035+12)|0);
   $29=((HEAP32[(($28)>>2)])|0);
   $30=(($ce_035+4)|0);
   $31=((HEAP32[(($30)>>2)])|0);
   __ZN16b2ContactManager7DestroyEP9b2Contact($26,$31);
   $32=($29|0)==0;
   if ($32) {
    break;
   } else {
    $ce_035=$29;
   }
  }
 }
 HEAP32[(($23)>>2)]=0;
 $33=(($b+116)|0);
 $34=((HEAP32[(($33)>>2)])|0);
 $35=($34|0)==0;
 if (!($35)) {
  $36=(($this+102992)|0);
  $37=(($this+102880)|0);
  $38=(($this)|0);
  $39=(($b+120)|0);
  $f_034=$34;
  while(1) {

   $41=(($f_034+4)|0);
   $42=((HEAP32[(($41)>>2)])|0);
   $43=((HEAP32[(($36)>>2)])|0);
   $44=($43|0)==0;
   if (!($44)) {
    $46=$43;
    $47=((HEAP32[(($46)>>2)])|0);
    $48=(($47+12)|0);
    $49=((HEAP32[(($48)>>2)])|0);
    FUNCTION_TABLE_vii[($49)&255]($43,$f_034);
   }
   __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($f_034,$37);
   __ZN9b2Fixture7DestroyEP16b2BlockAllocator($f_034,$38);
   $51=$f_034;
   __ZN16b2BlockAllocator4FreeEPvi($38,$51,44);
   HEAP32[(($33)>>2)]=$42;
   $52=((HEAP32[(($39)>>2)])|0);
   $53=((($52)-(1))|0);
   HEAP32[(($39)>>2)]=$53;
   $54=($42|0)==0;
   if ($54) {
    break;
   } else {
    $f_034=$42;
   }
  }
 }
 HEAP32[(($33)>>2)]=0;
 $55=(($b+120)|0);
 HEAP32[(($55)>>2)]=0;
 $56=(($b+108)|0);
 $57=((HEAP32[(($56)>>2)])|0);
 $58=($57|0)==0;
 if (!($58)) {
  $60=(($b+112)|0);
  $61=((HEAP32[(($60)>>2)])|0);
  $62=(($57+112)|0);
  HEAP32[(($62)>>2)]=$61;
 }
 $64=(($b+112)|0);
 $65=((HEAP32[(($64)>>2)])|0);
 $66=($65|0)==0;
 if (!($66)) {
  $68=((HEAP32[(($56)>>2)])|0);
  $69=(($65+108)|0);
  HEAP32[(($69)>>2)]=$68;
 }
 $71=(($this+102960)|0);
 $72=((HEAP32[(($71)>>2)])|0);
 $73=($72|0)==($b|0);
 if ($73) {
  $75=((HEAP32[(($64)>>2)])|0);
  HEAP32[(($71)>>2)]=$75;
 }
 $77=(($this+102972)|0);
 $78=((HEAP32[(($77)>>2)])|0);
 $79=((($78)-(1))|0);
 HEAP32[(($77)>>2)]=$79;
 __ZN6b2BodyD2Ev($b);
 $80=(($this)|0);
 $81=$b;
 __ZN16b2BlockAllocator4FreeEPvi($80,$81,168);
 return;
}


function __ZN7b2World12DestroyJointEP7b2Joint($this,$j){
 $this=($this)|0;
 $j=($j)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$17=0,$18=0,$20=0,$21=0,$22=0,$24=0,$26=0,$27=0;
 var $28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$35=0,$36=0,$37=0,$39=0,$40=0,$41=0,$43=0,$44=0,$46=0,$47=0,$48=0,$50=0,$52=0,$53=0;
 var $54=0,$55=0,$57=0,$58=0,$59=0,$61=0,$62=0,$63=0,$65=0,$66=0,$68=0,$69=0,$70=0,$72=0,$74=0,$75=0,$76=0,$77=0,$78=0,$80=0;
 var $81=0,$edge_042=0,$82=0,$83=0,$84=0,$86=0,$87=0,$89=0,$90=0,$91=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($1) {
  return;
 }
 $3=(($j+61)|0);
 $4=((HEAP8[($3)])|0);
 $5=(($j+8)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)==0;
 if (!($7)) {
  $9=(($j+12)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=(($6+12)|0);
  HEAP32[(($11)>>2)]=$10;
 }
 $13=(($j+12)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=($14|0)==0;
 if (!($15)) {
  $17=((HEAP32[(($5)>>2)])|0);
  $18=(($14+8)|0);
  HEAP32[(($18)>>2)]=$17;
 }
 $20=(($this+102964)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=($21|0)==($j|0);
 if ($22) {
  $24=((HEAP32[(($13)>>2)])|0);
  HEAP32[(($20)>>2)]=$24;
 }
 $26=(($j+48)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($j+52)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 __ZN6b2Body8SetAwakeEb($27,1);
 __ZN6b2Body8SetAwakeEb($29,1);
 $30=(($j+16)|0);
 $31=(($j+24)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 $33=($32|0)==0;
 if (!($33)) {
  $35=(($j+28)|0);
  $36=((HEAP32[(($35)>>2)])|0);
  $37=(($32+12)|0);
  HEAP32[(($37)>>2)]=$36;
 }
 $39=(($j+28)|0);
 $40=((HEAP32[(($39)>>2)])|0);
 $41=($40|0)==0;
 if (!($41)) {
  $43=((HEAP32[(($31)>>2)])|0);
  $44=(($40+8)|0);
  HEAP32[(($44)>>2)]=$43;
 }
 $46=(($27+124)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=($30|0)==($47|0);
 if ($48) {
  $50=((HEAP32[(($39)>>2)])|0);
  HEAP32[(($46)>>2)]=$50;
 }
 HEAP32[(($31)>>2)]=0;
 HEAP32[(($39)>>2)]=0;
 $52=(($j+32)|0);
 $53=(($j+40)|0);
 $54=((HEAP32[(($53)>>2)])|0);
 $55=($54|0)==0;
 if (!($55)) {
  $57=(($j+44)|0);
  $58=((HEAP32[(($57)>>2)])|0);
  $59=(($54+12)|0);
  HEAP32[(($59)>>2)]=$58;
 }
 $61=(($j+44)|0);
 $62=((HEAP32[(($61)>>2)])|0);
 $63=($62|0)==0;
 if (!($63)) {
  $65=((HEAP32[(($53)>>2)])|0);
  $66=(($62+8)|0);
  HEAP32[(($66)>>2)]=$65;
 }
 $68=(($29+124)|0);
 $69=((HEAP32[(($68)>>2)])|0);
 $70=($52|0)==($69|0);
 if ($70) {
  $72=((HEAP32[(($61)>>2)])|0);
  HEAP32[(($68)>>2)]=$72;
 }
 HEAP32[(($53)>>2)]=0;
 HEAP32[(($61)>>2)]=0;
 $74=(($this)|0);
 __ZN7b2Joint7DestroyEPS_P16b2BlockAllocator($j,$74);
 $75=(($this+102976)|0);
 $76=((HEAP32[(($75)>>2)])|0);
 $77=((($76)-(1))|0);
 HEAP32[(($75)>>2)]=$77;
 $78=(($4<<24)>>24)==0;
 if (!($78)) {
  return;
 }
 $80=((__ZN6b2Body14GetContactListEv($29))|0);
 $81=($80|0)==0;
 if ($81) {
  return;
 } else {
  $edge_042=$80;
 }
 while(1) {

  $82=(($edge_042)|0);
  $83=((HEAP32[(($82)>>2)])|0);
  $84=($83|0)==($27|0);
  if ($84) {
   $86=(($edge_042+4)|0);
   $87=((HEAP32[(($86)>>2)])|0);
   __ZN9b2Contact16FlagForFilteringEv($87);
  }
  $89=(($edge_042+12)|0);
  $90=((HEAP32[(($89)>>2)])|0);
  $91=($90|0)==0;
  if ($91) {
   break;
  } else {
   $edge_042=$90;
  }
 }
 return;
}


function __ZN7b2World11CreateJointEPK10b2JointDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$12=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$33=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0;
 var $46=0,$47=0,$48=0,$49=0,$51=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$61=0,$62=0,$63=0,$64=0,$edge_037=0,$65=0,$66=0,$67=0;
 var $69=0,$70=0,$72=0,$73=0,$74=0,$_0=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($1) {
  $_0=0;

  return (($_0)|0);
 }
 $3=(($this)|0);
 $4=((__ZN7b2Joint6CreateEPK10b2JointDefP16b2BlockAllocator($def,$3))|0);
 $5=(($4+8)|0);
 HEAP32[(($5)>>2)]=0;
 $6=(($this+102964)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($4+12)|0);
 HEAP32[(($8)>>2)]=$7;
 $9=((HEAP32[(($6)>>2)])|0);
 $10=($9|0)==0;
 if (!($10)) {
  $12=(($9+8)|0);
  HEAP32[(($12)>>2)]=$4;
 }
 HEAP32[(($6)>>2)]=$4;
 $14=(($this+102976)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=((($15)+(1))|0);
 HEAP32[(($14)>>2)]=$16;
 $17=(($4+16)|0);
 $18=(($4+20)|0);
 HEAP32[(($18)>>2)]=$4;
 $19=(($4+52)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($17)|0);
 HEAP32[(($21)>>2)]=$20;
 $22=(($4+24)|0);
 HEAP32[(($22)>>2)]=0;
 $23=(($4+48)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($24+124)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=(($4+28)|0);
 HEAP32[(($27)>>2)]=$26;
 $28=((HEAP32[(($23)>>2)])|0);
 $29=(($28+124)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=($30|0)==0;
 if (!($31)) {
  $33=(($30+8)|0);
  HEAP32[(($33)>>2)]=$17;
 }
 $35=((HEAP32[(($23)>>2)])|0);
 $36=(($35+124)|0);
 HEAP32[(($36)>>2)]=$17;
 $37=(($4+32)|0);
 $38=(($4+36)|0);
 HEAP32[(($38)>>2)]=$4;
 $39=((HEAP32[(($23)>>2)])|0);
 $40=(($37)|0);
 HEAP32[(($40)>>2)]=$39;
 $41=(($4+40)|0);
 HEAP32[(($41)>>2)]=0;
 $42=((HEAP32[(($19)>>2)])|0);
 $43=(($42+124)|0);
 $44=((HEAP32[(($43)>>2)])|0);
 $45=(($4+44)|0);
 HEAP32[(($45)>>2)]=$44;
 $46=((HEAP32[(($19)>>2)])|0);
 $47=(($46+124)|0);
 $48=((HEAP32[(($47)>>2)])|0);
 $49=($48|0)==0;
 if (!($49)) {
  $51=(($48+8)|0);
  HEAP32[(($51)>>2)]=$37;
 }
 $53=((HEAP32[(($19)>>2)])|0);
 $54=(($53+124)|0);
 HEAP32[(($54)>>2)]=$37;
 $55=(($def+8)|0);
 $56=((HEAP32[(($55)>>2)])|0);
 $57=(($def+16)|0);
 $58=((HEAP8[($57)])|0);
 $59=(($58<<24)>>24)==0;
 if (!($59)) {
  $_0=$4;

  return (($_0)|0);
 }
 $61=(($def+12)|0);
 $62=((HEAP32[(($61)>>2)])|0);
 $63=((__ZN6b2Body14GetContactListEv($62))|0);
 $64=($63|0)==0;
 if ($64) {
  $_0=$4;

  return (($_0)|0);
 } else {
  $edge_037=$63;
 }
 while(1) {

  $65=(($edge_037)|0);
  $66=((HEAP32[(($65)>>2)])|0);
  $67=($66|0)==($56|0);
  if ($67) {
   $69=(($edge_037+4)|0);
   $70=((HEAP32[(($69)>>2)])|0);
   __ZN9b2Contact16FlagForFilteringEv($70);
  }
  $72=(($edge_037+12)|0);
  $73=((HEAP32[(($72)>>2)])|0);
  $74=($73|0)==0;
  if ($74) {
   $_0=$4;
   break;
  } else {
   $edge_037=$73;
  }
 }

 return (($_0)|0);
}


function __ZN7b2World20CreateParticleSystemEPK19b2ParticleSystemDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$3=0,$4=0,$5=0,$7=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$_0=0,label=0;

 $1=((__ZNK7b2World8IsLockedEv($this))|0);
 if ($1) {
  $_0=0;

  return (($_0)|0);
 }
 $3=(($this)|0);
 $4=((__ZN16b2BlockAllocator8AllocateEi($3,392))|0);
 $5=($4|0)==0;
 if ($5) {
  $9=0;
 } else {
  $7=$4;
  __ZN16b2ParticleSystemC2EPK19b2ParticleSystemDefP7b2World($7,$def,$this);
  $9=$7;
 }

 $10=(($9+380)|0);
 HEAP32[(($10)>>2)]=0;
 $11=(($this+102968)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($9+384)|0);
 HEAP32[(($13)>>2)]=$12;
 $14=((HEAP32[(($11)>>2)])|0);
 $15=($14|0)==0;
 if (!($15)) {
  $17=(($14+380)|0);
  HEAP32[(($17)>>2)]=$9;
 }
 HEAP32[(($11)>>2)]=$9;
 $_0=$9;

 return (($_0)|0);
}


function __ZN7b2World5SolveERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $island=0,$profile=0,$timer=0,$1=0,$b_0100=0,$2=0,$b_0101=0,$3=0,$4=0,$5=0,$6=0,$7=0,$b_0=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0;
 var $15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$b1_095=0,$22=0,$b1_096=0,$23=0,$24=0,$25=0,$26=0,$b1_0=0,$27=0,$28=0,$c_090=0,$29=0,$c_091=0;
 var $30=0,$31=0,$32=0,$33=0,$c_0=0,$34=0,$35=0,$j_085=0,$36=0,$j_086=0,$37=0,$38=0,$j_0=0,$39=0,$40=0,$41=0,$42=0,$44=0,$seed_080=0,$45=0;
 var $46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$seed_081=0,$54=0,$55=0,$56=0,$57=0,$lpad_phi$0=0,$lpad_phi$1=0,$59=0,$61=0,$63=0,$64=0,$66=0,$67=0;
 var $stackCount_072=0,$69=0,$70=0,$71=0,$72=0,$73=0,$stackCount_0_be=0,$74=0,$76=0,$ce_059=0,$77=0,$ce_061=0,$stackCount_160=0,$78=0,$79=0,$80=0,$81=0,$82=0,$83=0,$85=0;
 var $87=0,$89=0,$90=0,$91=0,$92=0,$93=0,$95=0,$96=0,$97=0,$98=0,$99=0,$101=0,$102=0,$103=0,$104=0,$105=0,$106=0,$107=0,$108=0,$110=0;
 var $111=0,$112=0,$113=0,$stackCount_2=0,$115=0,$ce_0=0,$116=0,$stackCount_1_lcssa=0,$117=0,$je_066=0,$118=0,$je_068=0,$stackCount_367=0,$119=0,$120=0,$121=0,$122=0,$123=0,$125=0,$126=0;
 var $127=0,$129=0,$130=0,$131=0,$132=0,$133=0,$134=0,$136=0,$137=0,$138=0,$139=0,$stackCount_4=0,$141=0,$je_0=0,$142=0,$144=0,$145=0,$147=.0,$148=.0,$149=.0;
 var $150=.0,$151=.0,$152=.0,$153=.0,$154=.0,$155=.0,$156=0,$157=0,$i_074=0,$158=0,$159=0,$160=0,$161=0,$162=0,$164=0,$165=0,$166=0,$168=0,$169=0,$170=0;
 var $171=0,$seed_0=0,$172=0,$175=0,$176=0,$b5_058=0,$177=0,$178=0,$179=0,$180=0,$182=0,$183=0,$186=0,$187=0,$189=.0,$191=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_loopexit77$0=0,$lpad_loopexit77$1=0;
 var $lpad_nonloopexit78$0=0,$lpad_nonloopexit78$1=0,$194$0=0,$194$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+96)|0;
 $island=((sp)|0);
 $profile=(((sp)+(56))|0);
 $timer=(((sp)+(88))|0);
 $1=(($this+102960)|0);
 $b_0100=((HEAP32[(($1)>>2)])|0);
 $2=($b_0100|0)==0;
 if (!($2)) {
  $b_0101=$b_0100;
  while(1) {

   $3=(($b_0101+28)|0);
   $4=(($b_0101+12)|0);
   $5=$3;
   $6=$4;
   HEAP32[(($5)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);HEAP32[((($5)+(12))>>2)]=((HEAP32[((($6)+(12))>>2)])|0);
   $7=(($b_0101+112)|0);
   $b_0=((HEAP32[(($7)>>2)])|0);
   $8=($b_0|0)==0;
   if ($8) {
    break;
   } else {
    $b_0101=$b_0;
   }
  }
 }
 $9=(($this+103020)|0);
 HEAPF32[(($9)>>2)]=0.0;
 $10=(($this+103024)|0);
 HEAPF32[(($10)>>2)]=0.0;
 $11=(($this+103028)|0);
 HEAPF32[(($11)>>2)]=0.0;
 $12=(($this+102972)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($this+102880)|0);
 $15=(($this+102944)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($this+102976)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($this+76)|0);
 $20=(($this+102952)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 __ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener($island,$13,$16,$18,$19,$21);
 $b1_095=((HEAP32[(($1)>>2)])|0);
 $22=($b1_095|0)==0;
 if (!($22)) {
  $b1_096=$b1_095;
  while(1) {

   $23=(($b1_096+4)|0);
   $24=((HEAP16[(($23)>>1)])|0);
   $25=$24&-2;
   HEAP16[(($23)>>1)]=$25;
   $26=(($b1_096+112)|0);
   $b1_0=((HEAP32[(($26)>>2)])|0);
   $27=($b1_0|0)==0;
   if ($27) {
    break;
   } else {
    $b1_096=$b1_0;
   }
  }
 }
 $28=(($this+102940)|0);
 $c_090=((HEAP32[(($28)>>2)])|0);
 $29=($c_090|0)==0;
 if (!($29)) {
  $c_091=$c_090;
  while(1) {

   $30=(($c_091+4)|0);
   $31=((HEAP32[(($30)>>2)])|0);
   $32=$31&-2;
   HEAP32[(($30)>>2)]=$32;
   $33=(($c_091+12)|0);
   $c_0=((HEAP32[(($33)>>2)])|0);
   $34=($c_0|0)==0;
   if ($34) {
    break;
   } else {
    $c_091=$c_0;
   }
  }
 }
 $35=(($this+102964)|0);
 $j_085=((HEAP32[(($35)>>2)])|0);
 $36=($j_085|0)==0;
 if (!($36)) {
  $j_086=$j_085;
  while(1) {

   $37=(($j_086+60)|0);
   HEAP8[($37)]=0;
   $38=(($j_086+12)|0);
   $j_0=((HEAP32[(($38)>>2)])|0);
   $39=($j_0|0)==0;
   if ($39) {
    break;
   } else {
    $j_086=$j_0;
   }
  }
 }
 $40=((HEAP32[(($12)>>2)])|0);
 $41=$40<<2;
 $42=((__ZN16b2StackAllocator8AllocateEi($19,$41))|0);
 $44=$42;
 $seed_080=((HEAP32[(($1)>>2)])|0);
 $45=($seed_080|0)==0;
 if (!($45)) {
  $46=(($this+102980)|0);
  $47=(($this+102988)|0);
  $48=(($profile+12)|0);
  $49=(($profile+16)|0);
  $50=(($profile+20)|0);
  $51=(($island+28)|0);
  $52=(($island+8)|0);
  $seed_081=$seed_080;
  while(1) {

   $54=(($seed_081+4)|0);
   $55=((HEAP16[(($54)>>1)])|0);
   $56=$55&1;
   $57=(($56<<16)>>16)==0;
   do {
    if ($57) {
     $59=((__ZNK6b2Body7IsAwakeEv($seed_081))|0);
     if (!($59)) {
      break;
     }
     $61=((__ZNK6b2Body8IsActiveEv($seed_081))|0);
     if (!($61)) {
      break;
     }
     $63=((__ZNK6b2Body7GetTypeEv($seed_081))|0);
     $64=($63|0)==0;
     if ($64) {
      break;
     }
     __ZN8b2Island5ClearEv($island);
     HEAP32[(($44)>>2)]=$seed_081;
     $66=((HEAP16[(($54)>>1)])|0);
     $67=$66|1;
     HEAP16[(($54)>>1)]=$67;
     $stackCount_072=1;
     while(1) {

      $69=((($stackCount_072)-(1))|0);
      $70=(($44+($69<<2))|0);
      $71=((HEAP32[(($70)>>2)])|0);
      __ZN8b2Island3AddEP6b2Body($island,$71);
      __ZN6b2Body8SetAwakeEb($71,1);
      $72=((__ZNK6b2Body7GetTypeEv($71))|0);
      $73=($72|0)==0;
      do {
       if ($73) {
        $stackCount_0_be=$69;
       } else {
        $76=(($71+128)|0);
        $ce_059=((HEAP32[(($76)>>2)])|0);
        $77=($ce_059|0)==0;
        if ($77) {
         $stackCount_1_lcssa=$69;
        } else {
         $stackCount_160=$69;$ce_061=$ce_059;
         while(1) {


          $78=(($ce_061+4)|0);
          $79=((HEAP32[(($78)>>2)])|0);
          $80=(($79+4)|0);
          $81=((HEAP32[(($80)>>2)])|0);
          $82=$81&1;
          $83=($82|0)==0;
          do {
           if ($83) {
            $85=((__ZNK9b2Contact9IsEnabledEv($79))|0);
            if (!($85)) {
             $stackCount_2=$stackCount_160;
             break;
            }
            $87=((__ZNK9b2Contact10IsTouchingEv($79))|0);
            if (!($87)) {
             $stackCount_2=$stackCount_160;
             break;
            }
            $89=(($79+48)|0);
            $90=((HEAP32[(($89)>>2)])|0);
            $91=(($90+38)|0);
            $92=((HEAP8[($91)])|0);
            $93=(($92<<24)>>24)==0;
            if (!($93)) {
             $stackCount_2=$stackCount_160;
             break;
            }
            $95=(($79+52)|0);
            $96=((HEAP32[(($95)>>2)])|0);
            $97=(($96+38)|0);
            $98=((HEAP8[($97)])|0);
            $99=(($98<<24)>>24)==0;
            if (!($99)) {
             $stackCount_2=$stackCount_160;
             break;
            }
            __ZN8b2Island3AddEP9b2Contact($island,$79);
            $101=((HEAP32[(($80)>>2)])|0);
            $102=$101|1;
            HEAP32[(($80)>>2)]=$102;
            $103=(($ce_061)|0);
            $104=((HEAP32[(($103)>>2)])|0);
            $105=(($104+4)|0);
            $106=((HEAP16[(($105)>>1)])|0);
            $107=$106&1;
            $108=(($107<<16)>>16)==0;
            if (!($108)) {
             $stackCount_2=$stackCount_160;
             break;
            }
            $110=((($stackCount_160)+(1))|0);
            $111=(($44+($stackCount_160<<2))|0);
            HEAP32[(($111)>>2)]=$104;
            $112=((HEAP16[(($105)>>1)])|0);
            $113=$112|1;
            HEAP16[(($105)>>1)]=$113;
            $stackCount_2=$110;
           } else {
            $stackCount_2=$stackCount_160;
           }
          } while(0);

          $115=(($ce_061+12)|0);
          $ce_0=((HEAP32[(($115)>>2)])|0);
          $116=($ce_0|0)==0;
          if ($116) {
           $stackCount_1_lcssa=$stackCount_2;
           break;
          } else {
           $stackCount_160=$stackCount_2;$ce_061=$ce_0;
          }
         }
        }

        $117=(($71+124)|0);
        $je_066=((HEAP32[(($117)>>2)])|0);
        $118=($je_066|0)==0;
        if ($118) {
         $stackCount_0_be=$stackCount_1_lcssa;
         break;
        } else {
         $stackCount_367=$stackCount_1_lcssa;$je_068=$je_066;
        }
        while(1) {


         $119=(($je_068+4)|0);
         $120=((HEAP32[(($119)>>2)])|0);
         $121=(($120+60)|0);
         $122=((HEAP8[($121)])|0);
         $123=(($122<<24)>>24)==0;
         do {
          if ($123) {
           $125=(($je_068)|0);
           $126=((HEAP32[(($125)>>2)])|0);
           $127=((__ZNK6b2Body8IsActiveEv($126))|0);
           if (!($127)) {
            $stackCount_4=$stackCount_367;
            break;
           }
           __ZN8b2Island3AddEP7b2Joint($island,$120);
           $129=((HEAP32[(($119)>>2)])|0);
           $130=(($129+60)|0);
           HEAP8[($130)]=1;
           $131=(($126+4)|0);
           $132=((HEAP16[(($131)>>1)])|0);
           $133=$132&1;
           $134=(($133<<16)>>16)==0;
           if (!($134)) {
            $stackCount_4=$stackCount_367;
            break;
           }
           $136=((($stackCount_367)+(1))|0);
           $137=(($44+($stackCount_367<<2))|0);
           HEAP32[(($137)>>2)]=$126;
           $138=((HEAP16[(($131)>>1)])|0);
           $139=$138|1;
           HEAP16[(($131)>>1)]=$139;
           $stackCount_4=$136;
          } else {
           $stackCount_4=$stackCount_367;
          }
         } while(0);

         $141=(($je_068+12)|0);
         $je_0=((HEAP32[(($141)>>2)])|0);
         $142=($je_0|0)==0;
         if ($142) {
          $stackCount_0_be=$stackCount_4;
          break;
         } else {
          $stackCount_367=$stackCount_4;$je_068=$je_0;
         }
        }
       }
      } while(0);

      $74=($stackCount_0_be|0)>0;
      if ($74) {
       $stackCount_072=$stackCount_0_be;
      } else {
       break;
      }
     }
     $144=((HEAP8[($47)])|0);
     $145=(($144<<24)>>24)!=0;
     __ZN8b2Island5SolveEP9b2ProfileRK10b2TimeStepRK6b2Vec2b($island,$profile,$step,$46,$145);
     $147=(+(HEAPF32[(($48)>>2)]));
     $148=(+(HEAPF32[(($9)>>2)]));
     $149=($147)+($148);
     HEAPF32[(($9)>>2)]=$149;
     $150=(+(HEAPF32[(($49)>>2)]));
     $151=(+(HEAPF32[(($10)>>2)]));
     $152=($150)+($151);
     HEAPF32[(($10)>>2)]=$152;
     $153=(+(HEAPF32[(($50)>>2)]));
     $154=(+(HEAPF32[(($11)>>2)]));
     $155=($153)+($154);
     HEAPF32[(($11)>>2)]=$155;
     $156=((HEAP32[(($51)>>2)])|0);
     $157=($156|0)>0;
     if ($157) {
      $i_074=0;
     } else {
      break;
     }
     while(1) {

      $158=((HEAP32[(($52)>>2)])|0);
      $159=(($158+($i_074<<2))|0);
      $160=((HEAP32[(($159)>>2)])|0);
      $161=((__ZNK6b2Body7GetTypeEv($160))|0);
      $162=($161|0)==0;
      if ($162) {
       $164=(($160+4)|0);
       $165=((HEAP16[(($164)>>1)])|0);
       $166=$165&-2;
       HEAP16[(($164)>>1)]=$166;
      }
      $168=((($i_074)+(1))|0);
      $169=((HEAP32[(($51)>>2)])|0);
      $170=($168|0)<($169|0);
      if ($170) {
       $i_074=$168;
      } else {
       break;
      }
     }
    }
   } while(0);
   $171=(($seed_081+112)|0);
   $seed_0=((HEAP32[(($171)>>2)])|0);
   $172=($seed_0|0)==0;
   if ($172) {
    break;
   } else {
    $seed_081=$seed_0;
   }
  }
 }
 __ZN16b2StackAllocator4FreeEPv($19,$42);
 __ZN7b2TimerC2Ev($timer);
 $175=((HEAP32[(($1)>>2)])|0);
 $176=($175|0)==0;
 if (!($176)) {
  $b5_058=$175;
  while(1) {

   $177=(($b5_058+4)|0);
   $178=((HEAP16[(($177)>>1)])|0);
   $179=$178&1;
   $180=(($179<<16)>>16)==0;
   do {
    if (!($180)) {
     $182=((__ZNK6b2Body7GetTypeEv($b5_058))|0);
     $183=($182|0)==0;
     if ($183) {
      break;
     }
     __ZN6b2Body19SynchronizeFixturesEv($b5_058);
    }
   } while(0);
   $186=((__ZN6b2Body7GetNextEv($b5_058))|0);
   $187=($186|0)==0;
   if ($187) {
    break;
   } else {
    $b5_058=$186;
   }
  }
 }
 __ZN16b2ContactManager15FindNewContactsEv($14);
 $189=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $191=(($this+103032)|0);
 HEAPF32[(($191)>>2)]=$189;
 __ZN8b2IslandD2Ev($island);
 STACKTOP=sp;return;
}


function __ZN8b2Island5ClearEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+28)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+36)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+32)|0);
 HEAP32[(($3)>>2)]=0;
 return;
}


function __ZN8b2Island3AddEP6b2Body($this,$body){
 $this=($this)|0;
 $body=($body)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=(($this+28)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($body+8)|0);
 HEAP32[(($3)>>2)]=$2;
 $4=((HEAP32[(($1)>>2)])|0);
 $5=(($this+8)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+($4<<2))|0);
 HEAP32[(($7)>>2)]=$body;
 $8=((HEAP32[(($1)>>2)])|0);
 $9=((($8)+(1))|0);
 HEAP32[(($1)>>2)]=$9;
 return;
}


function __ZNK9b2Contact9IsEnabledEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&4;
 $4=($3|0)!=0;
 return (($4)|0);
}


function __ZNK9b2Contact10IsTouchingEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&2;
 $4=($3|0)!=0;
 return (($4)|0);
}


function __ZN8b2Island3AddEP9b2Contact($this,$contact){
 $this=($this)|0;
 $contact=($contact)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this+36)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)+(1))|0);
 HEAP32[(($1)>>2)]=$3;
 $4=(($this+12)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5+($2<<2))|0);
 HEAP32[(($6)>>2)]=$contact;
 return;
}


function __ZN8b2Island3AddEP7b2Joint($this,$joint){
 $this=($this)|0;
 $joint=($joint)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this+32)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)+(1))|0);
 HEAP32[(($1)>>2)]=$3;
 $4=(($this+16)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5+($2<<2))|0);
 HEAP32[(($6)>>2)]=$joint;
 return;
}


function __ZN6b2Body7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+112)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN7b2World8SolveTOIERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $island=0,$input=0,$output=0,$backup1=0,$backup2=0,$bodies=0,$backup=0,$subStep=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$b_0155=0,$10=0,$b_0156=0,$11=0;
 var $12=0,$13=0,$14=0,$15=0,$b_0=0,$16=0,$17=0,$c_0151=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0;
 var $30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0;
 var $50=0,$c_0152=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$c_0=0,$57=0,$c1_0123=0,$58=0,$c1_0128=0,$minContact_0126=0,$minAlpha_0124=.0,$59=0,$lpad_phi$0=0,$lpad_phi$1=0,$61=0,$62=0;
 var $63=0,$65=0,$66=0,$67=0,$68=0,$70=0,$71=.0,$73=0,$74=0,$75=0,$77=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$phitmp160=0,$not_162=0;
 var $86=0,$87=0,$phitmp120=0,$not_=0,$phitmp120_=0,$or_cond=0,$89=0,$91=0,$phitmp114=0,$93=0,$94=0,$96=0,$97=0,$or_cond117=0,$98=0,$99=0,$100=.0,$101=0,$102=0,$103=.0;
 var $104=0,$107=0,$alpha0_0=.0,$110=0,$111=0,$112=0,$114=0,$116=0,$117=0,$119=0,$120=0,$122=.0,$123=.0,$124=.0,$125=.0,$126=.0,$alpha_0=.0,$128=0,$129=0,$130=0;
 var $alpha_1=.0,$132=0,$minAlpha_1=.0,$minContact_1=0,$135=0,$c1_0=0,$136=0,$137=0,$138=0,$or_cond118=0,$140=0,$141=0,$142=0,$143=0,$144=0,$145=0,$146=0,$147=0,$148=0,$150=0;
 var $151=0,$152=0,$153=0,$154=0,$155=0,$156=0,$158=0,$161=0,$162=0,$163=0,$164=0,$165=0,$166=0,$167=0,$168=0,$i_0139=0,$170=0,$171=0,$172=0,$173=0;
 var $174=0,$176=0,$ce_0135=0,$177=0,$ce_0136=0,$178=0,$179=0,$180=0,$182=0,$183=0,$184=0,$186=0,$187=0,$188=0,$189=0,$190=0,$191=0,$193=0,$194=0,$195=0;
 var $196=0,$197=0,$199=0,$201=0,$203=0,$204=0,$205=0,$206=0,$207=0,$209=0,$210=0,$211=0,$212=0,$213=0,$215=0,$216=0,$217=0,$218=0,$219=0,$220=0;
 var $223=0,$225=0,$228=0,$231=0,$232=0,$233=0,$234=0,$235=0,$237=0,$238=0,$239=0,$243=0,$ce_0=0,$244=0,$245=0,$246=0,$248=.0,$249=.0,$250=.0,$251=.0;
 var $252=0,$253=0,$254=0,$255=0,$256=0,$257=0,$258=0,$259=0,$i6_0147=0,$260=0,$261=0,$262=0,$263=0,$264=0,$265=0,$266=0,$267=0,$268=0,$271=0,$ce8_0141=0;
 var $272=0,$ce8_0142=0,$273=0,$274=0,$275=0,$276=0,$277=0,$278=0,$ce8_0=0,$279=0,$280=0,$281=0,$282=0,$284=0,$285=0,$storemerge=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_loopexit132$0=0,$lpad_loopexit132$1=0;
 var $lpad_loopexit145$0=0,$lpad_loopexit145$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$288$0=0,$288$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+360)|0;
 $island=((sp)|0);
 $input=(((sp)+(56))|0);
 $output=(((sp)+(192))|0);
 $backup1=(((sp)+(200))|0);
 $backup2=(((sp)+(240))|0);
 $bodies=(((sp)+(280))|0);
 $backup=(((sp)+(288))|0);
 $subStep=(((sp)+(328))|0);
 $1=(($this+76)|0);
 $2=(($this+102880)|0);
 $3=(($this+102952)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 __ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener($island,64,32,0,$1,$4);
 $5=(($this+103007)|0);
 $6=((HEAP8[($5)])|0);
 $7=(($6<<24)>>24)==0;
 do {
  if (!($7)) {
   $9=(($this+102960)|0);
   $b_0155=((HEAP32[(($9)>>2)])|0);
   $10=($b_0155|0)==0;
   if (!($10)) {
    $b_0156=$b_0155;
    while(1) {

     $11=(($b_0156+4)|0);
     $12=((HEAP16[(($11)>>1)])|0);
     $13=$12&-2;
     HEAP16[(($11)>>1)]=$13;
     $14=(($b_0156+76)|0);
     HEAPF32[(($14)>>2)]=0.0;
     $15=(($b_0156+112)|0);
     $b_0=((HEAP32[(($15)>>2)])|0);
     $16=($b_0|0)==0;
     if ($16) {
      break;
     } else {
      $b_0156=$b_0;
     }
    }
   }
   $17=(($this+102940)|0);
   $c_0151=((HEAP32[(($17)>>2)])|0);
   $18=($c_0151|0)==0;
   if ($18) {
    break;
   } else {
    $c_0152=$c_0151;
   }
   while(1) {

    $51=(($c_0152+4)|0);
    $52=((HEAP32[(($51)>>2)])|0);
    $53=$52&-34;
    HEAP32[(($51)>>2)]=$53;
    $54=(($c_0152+128)|0);
    HEAP32[(($54)>>2)]=0;
    $55=(($c_0152+132)|0);
    HEAPF32[(($55)>>2)]=1.0;
    $56=(($c_0152+12)|0);
    $c_0=((HEAP32[(($56)>>2)])|0);
    $57=($c_0|0)==0;
    if ($57) {
     break;
    } else {
     $c_0152=$c_0;
    }
   }
  }
 } while(0);
 $19=(($this+102940)|0);
 $20=$backup1;
 $21=$backup2;
 $22=(($bodies)|0);
 $23=(($bodies+4)|0);
 $24=(($island+28)|0);
 $25=(($island+40)|0);
 $26=(($island+36)|0);
 $27=(($island+44)|0);
 $28=$backup;
 $29=(($step)|0);
 $30=(($subStep)|0);
 $31=(($subStep+4)|0);
 $32=(($subStep+8)|0);
 $33=(($subStep+16)|0);
 $34=(($step+12)|0);
 $35=(($subStep+12)|0);
 $36=(($step+20)|0);
 $37=(($subStep+20)|0);
 $38=(($subStep+24)|0);
 $39=(($island+28)|0);
 $40=(($this+103006)|0);
 $41=(($island+8)|0);
 $42=(($input)|0);
 $43=(($input+28)|0);
 $44=(($input+56)|0);
 $45=$44;
 $46=(($input+92)|0);
 $47=$46;
 $48=(($input+128)|0);
 $49=(($output)|0);
 $50=(($output+4)|0);
 L10: while(1) {
  $c1_0123=((HEAP32[(($19)>>2)])|0);
  $58=($c1_0123|0)==0;
  if ($58) {
   $storemerge=1;
   label = 75;
   break;
  } else {
   $minAlpha_0124=1.0;$minContact_0126=0;$c1_0128=$c1_0123;
  }
  while(1) {



   $59=((__ZNK9b2Contact9IsEnabledEv($c1_0128))|0);
   do {
    if ($59) {
     $61=(($c1_0128+128)|0);
     $62=((HEAP32[(($61)>>2)])|0);
     $63=($62|0)>8;
     if ($63) {
      $minContact_1=$minContact_0126;$minAlpha_1=$minAlpha_0124;
      break;
     }
     $65=(($c1_0128+4)|0);
     $66=((HEAP32[(($65)>>2)])|0);
     $67=$66&32;
     $68=($67|0)==0;
     if ($68) {
      $73=((__ZN9b2Contact11GetFixtureAEv($c1_0128))|0);
      $74=((__ZN9b2Contact11GetFixtureBEv($c1_0128))|0);
      $75=((__ZNK9b2Fixture8IsSensorEv($73))|0);
      if ($75) {
       $minContact_1=$minContact_0126;$minAlpha_1=$minAlpha_0124;
       break;
      }
      $77=((__ZNK9b2Fixture8IsSensorEv($74))|0);
      if ($77) {
       $minContact_1=$minContact_0126;$minAlpha_1=$minAlpha_0124;
       break;
      }
      $79=((__ZN9b2Fixture7GetBodyEv($73))|0);
      $80=((__ZN9b2Fixture7GetBodyEv($74))|0);
      $81=(($79)|0);
      $82=((HEAP32[(($81)>>2)])|0);
      $83=(($80)|0);
      $84=((HEAP32[(($83)>>2)])|0);
      $85=((__ZNK6b2Body7IsAwakeEv($79))|0);
      $phitmp160=($82|0)==0;
      $not_162=$85^1;
      $86=$phitmp160|$not_162;
      $87=((__ZNK6b2Body7IsAwakeEv($80))|0);
      $phitmp120=($84|0)==0;
      $not_=$87^1;
      $phitmp120_=$phitmp120|$not_;
      $or_cond=$86&$phitmp120_;
      if ($or_cond) {
       $minContact_1=$minContact_0126;$minAlpha_1=$minAlpha_0124;
       break;
      }
      $89=((__ZNK6b2Body8IsBulletEv($79))|0);
      if ($89) {
       $93=1;
      } else {
       $91=($82|0)!=2;
       $phitmp114=($91&1);
       $93=$phitmp114;
      }

      $94=((__ZNK6b2Body8IsBulletEv($80))|0);
      if (!($94)) {
       $96=($93|0)==0;
       $97=($84|0)==2;
       $or_cond117=$96&$97;
       if ($or_cond117) {
        $minContact_1=$minContact_0126;$minAlpha_1=$minAlpha_0124;
        break;
       }
      }
      $98=(($79+44)|0);
      $99=(($79+76)|0);
      $100=(+(HEAPF32[(($99)>>2)]));
      $101=(($80+44)|0);
      $102=(($80+76)|0);
      $103=(+(HEAPF32[(($102)>>2)]));
      $104=$100<$103;
      do {
       if ($104) {
        __ZN7b2Sweep7AdvanceEf($98,$103);
        $alpha0_0=$103;
       } else {
        $107=$103<$100;
        if (!($107)) {
         $alpha0_0=$100;
         break;
        }
        __ZN7b2Sweep7AdvanceEf($101,$100);
        $alpha0_0=$100;
       }
      } while(0);

      $110=((__ZNK9b2Contact14GetChildIndexAEv($c1_0128))|0);
      $111=((__ZNK9b2Contact14GetChildIndexBEv($c1_0128))|0);
      __ZN10b2TOIInputC1Ev($input);
      $112=((__ZN9b2Fixture8GetShapeEv($73))|0);
      __ZN15b2DistanceProxy3SetEPK7b2Shapei($42,$112,$110);
      $114=((__ZN9b2Fixture8GetShapeEv($74))|0);
      __ZN15b2DistanceProxy3SetEPK7b2Shapei($43,$114,$111);
      $116=$98;
      (_memcpy((($45)|0), (($116)|0), 36)|0);
      $117=$101;
      (_memcpy((($47)|0), (($117)|0), 36)|0);
      HEAPF32[(($48)>>2)]=1.0;
      __Z14b2TimeOfImpactP11b2TOIOutputPK10b2TOIInput($output,$input);
      $119=((HEAP32[(($49)>>2)])|0);
      $120=($119|0)==3;
      if ($120) {
       $122=(+(HEAPF32[(($50)>>2)]));
       $123=((1.0))-($alpha0_0);
       $124=($123)*($122);
       $125=($alpha0_0)+($124);
       $126=(+(__Z5b2MinIfET_S0_S0_($125,1.0)));
       $alpha_0=$126;
      } else {
       $alpha_0=1.0;
      }

      $128=(($c1_0128+132)|0);
      HEAPF32[(($128)>>2)]=$alpha_0;
      $129=((HEAP32[(($65)>>2)])|0);
      $130=$129|32;
      HEAP32[(($65)>>2)]=$130;
      $alpha_1=$alpha_0;
     } else {
      $70=(($c1_0128+132)|0);
      $71=(+(HEAPF32[(($70)>>2)]));
      $alpha_1=$71;
     }

     $132=$alpha_1<$minAlpha_0124;
     if (!($132)) {
      $minContact_1=$minContact_0126;$minAlpha_1=$minAlpha_0124;
      break;
     }
     $minContact_1=$c1_0128;$minAlpha_1=$alpha_1;
    } else {
     $minContact_1=$minContact_0126;$minAlpha_1=$minAlpha_0124;
    }
   } while(0);


   $135=(($c1_0128+12)|0);
   $c1_0=((HEAP32[(($135)>>2)])|0);
   $136=($c1_0|0)==0;
   if ($136) {
    break;
   } else {
    $minAlpha_0124=$minAlpha_1;$minContact_0126=$minContact_1;$c1_0128=$c1_0;
   }
  }
  $137=($minContact_1|0)==0;
  $138=$minAlpha_1>(0.9999988079071045);
  $or_cond118=$137|$138;
  if ($or_cond118) {
   $storemerge=1;
   label = 75;
   break;
  }
  $140=((__ZN9b2Contact11GetFixtureAEv($minContact_1))|0);
  $141=((__ZN9b2Contact11GetFixtureBEv($minContact_1))|0);
  $142=((__ZN9b2Fixture7GetBodyEv($140))|0);
  $143=((__ZN9b2Fixture7GetBodyEv($141))|0);
  $144=(($142+44)|0);
  $145=$144;
  (_memcpy((($20)|0), (($145)|0), 36)|0);
  $146=(($143+44)|0);
  $147=$146;
  (_memcpy((($21)|0), (($147)|0), 36)|0);
  __ZN6b2Body7AdvanceEf($142,$minAlpha_1);
  __ZN6b2Body7AdvanceEf($143,$minAlpha_1);
  $148=((HEAP32[(($3)>>2)])|0);
  __ZN9b2Contact6UpdateEP17b2ContactListener($minContact_1,$148);
  $150=(($minContact_1+4)|0);
  $151=((HEAP32[(($150)>>2)])|0);
  $152=$151&-33;
  HEAP32[(($150)>>2)]=$152;
  $153=(($minContact_1+128)|0);
  $154=((HEAP32[(($153)>>2)])|0);
  $155=((($154)+(1))|0);
  HEAP32[(($153)>>2)]=$155;
  $156=((__ZNK9b2Contact9IsEnabledEv($minContact_1))|0);
  do {
   if ($156) {
    $158=((__ZNK9b2Contact10IsTouchingEv($minContact_1))|0);
    if (!($158)) {
     break;
    }
    __ZN6b2Body8SetAwakeEb($142,1);
    __ZN6b2Body8SetAwakeEb($143,1);
    __ZN8b2Island5ClearEv($island);
    __ZN8b2Island3AddEP6b2Body($island,$142);
    __ZN8b2Island3AddEP6b2Body($island,$143);
    __ZN8b2Island3AddEP9b2Contact($island,$minContact_1);
    $161=(($142+4)|0);
    $162=((HEAP16[(($161)>>1)])|0);
    $163=$162|1;
    HEAP16[(($161)>>1)]=$163;
    $164=(($143+4)|0);
    $165=((HEAP16[(($164)>>1)])|0);
    $166=$165|1;
    HEAP16[(($164)>>1)]=$166;
    $167=((HEAP32[(($150)>>2)])|0);
    $168=$167|1;
    HEAP32[(($150)>>2)]=$168;
    HEAP32[(($22)>>2)]=$142;
    HEAP32[(($23)>>2)]=$143;
    $i_0139=0;
    while(1) {

     $170=(($bodies+($i_0139<<2))|0);
     $171=((HEAP32[(($170)>>2)])|0);
     $172=(($171)|0);
     $173=((HEAP32[(($172)>>2)])|0);
     $174=($173|0)==2;
     L51: do {
      if ($174) {
       $176=(($171+128)|0);
       $ce_0135=((HEAP32[(($176)>>2)])|0);
       $177=($ce_0135|0)==0;
       if ($177) {
        break;
       } else {
        $ce_0136=$ce_0135;
       }
       while(1) {

        $178=((HEAP32[(($24)>>2)])|0);
        $179=((HEAP32[(($25)>>2)])|0);
        $180=($178|0)==($179|0);
        if ($180) {
         break L51;
        }
        $182=((HEAP32[(($26)>>2)])|0);
        $183=((HEAP32[(($27)>>2)])|0);
        $184=($182|0)==($183|0);
        if ($184) {
         break L51;
        }
        $186=(($ce_0136+4)|0);
        $187=((HEAP32[(($186)>>2)])|0);
        $188=(($187+4)|0);
        $189=((HEAP32[(($188)>>2)])|0);
        $190=$189&1;
        $191=($190|0)==0;
        L57: do {
         if ($191) {
          $193=(($ce_0136)|0);
          $194=((HEAP32[(($193)>>2)])|0);
          $195=(($194)|0);
          $196=((HEAP32[(($195)>>2)])|0);
          $197=($196|0)==2;
          do {
           if ($197) {
            $199=((__ZNK6b2Body8IsBulletEv($171))|0);
            if ($199) {
             break;
            }
            $201=((__ZNK6b2Body8IsBulletEv($194))|0);
            if (!($201)) {
             break L57;
            }
           }
          } while(0);
          $203=(($187+48)|0);
          $204=((HEAP32[(($203)>>2)])|0);
          $205=(($204+38)|0);
          $206=((HEAP8[($205)])|0);
          $207=(($206<<24)>>24)==0;
          if (!($207)) {
           break;
          }
          $209=(($187+52)|0);
          $210=((HEAP32[(($209)>>2)])|0);
          $211=(($210+38)|0);
          $212=((HEAP8[($211)])|0);
          $213=(($212<<24)>>24)==0;
          if (!($213)) {
           break;
          }
          $215=(($194+44)|0);
          $216=$215;
          (_memcpy((($28)|0), (($216)|0), 36)|0);
          $217=(($194+4)|0);
          $218=((HEAP16[(($217)>>1)])|0);
          $219=$218&1;
          $220=(($219<<16)>>16)==0;
          if ($220) {
           __ZN6b2Body7AdvanceEf($194,$minAlpha_1);
          }
          $223=((HEAP32[(($3)>>2)])|0);
          __ZN9b2Contact6UpdateEP17b2ContactListener($187,$223);
          $225=((__ZNK9b2Contact9IsEnabledEv($187))|0);
          if (!($225)) {
           (_memcpy((($216)|0), (($28)|0), 36)|0);
           __ZN6b2Body20SynchronizeTransformEv($194);
           break;
          }
          $228=((__ZNK9b2Contact10IsTouchingEv($187))|0);
          if (!($228)) {
           (_memcpy((($216)|0), (($28)|0), 36)|0);
           __ZN6b2Body20SynchronizeTransformEv($194);
           break;
          }
          $231=((HEAP32[(($188)>>2)])|0);
          $232=$231|1;
          HEAP32[(($188)>>2)]=$232;
          __ZN8b2Island3AddEP9b2Contact($island,$187);
          $233=((HEAP16[(($217)>>1)])|0);
          $234=$233&1;
          $235=(($234<<16)>>16)==0;
          if (!($235)) {
           break;
          }
          $237=$233|1;
          HEAP16[(($217)>>1)]=$237;
          $238=((HEAP32[(($195)>>2)])|0);
          $239=($238|0)==0;
          if (!($239)) {
           __ZN6b2Body8SetAwakeEb($194,1);
          }
          __ZN8b2Island3AddEP6b2Body($island,$194);
         }
        } while(0);
        $243=(($ce_0136+12)|0);
        $ce_0=((HEAP32[(($243)>>2)])|0);
        $244=($ce_0|0)==0;
        if ($244) {
         break;
        } else {
         $ce_0136=$ce_0;
        }
       }
      }
     } while(0);
     $245=((($i_0139)+(1))|0);
     $246=($245|0)<2;
     if ($246) {
      $i_0139=$245;
     } else {
      break;
     }
    }
    $248=((1.0))-($minAlpha_1);
    $249=(+(HEAPF32[(($29)>>2)]));
    $250=($248)*($249);
    HEAPF32[(($30)>>2)]=$250;
    $251=((1.0))/($250);
    HEAPF32[(($31)>>2)]=$251;
    HEAPF32[(($32)>>2)]=1.0;
    HEAP32[(($33)>>2)]=20;
    $252=((HEAP32[(($34)>>2)])|0);
    HEAP32[(($35)>>2)]=$252;
    $253=((HEAP32[(($36)>>2)])|0);
    HEAP32[(($37)>>2)]=$253;
    HEAP8[($38)]=0;
    $254=(($142+8)|0);
    $255=((HEAP32[(($254)>>2)])|0);
    $256=(($143+8)|0);
    $257=((HEAP32[(($256)>>2)])|0);
    __ZN8b2Island8SolveTOIERK10b2TimeStepii($island,$subStep,$255,$257);
    $258=((HEAP32[(($39)>>2)])|0);
    $259=($258|0)>0;
    if ($259) {
     $i6_0147=0;
     while(1) {

      $260=((HEAP32[(($41)>>2)])|0);
      $261=(($260+($i6_0147<<2))|0);
      $262=((HEAP32[(($261)>>2)])|0);
      $263=(($262+4)|0);
      $264=((HEAP16[(($263)>>1)])|0);
      $265=$264&-2;
      HEAP16[(($263)>>1)]=$265;
      $266=(($262)|0);
      $267=((HEAP32[(($266)>>2)])|0);
      $268=($267|0)==2;
      do {
       if ($268) {
        __ZN6b2Body19SynchronizeFixturesEv($262);
        $271=(($262+128)|0);
        $ce8_0141=((HEAP32[(($271)>>2)])|0);
        $272=($ce8_0141|0)==0;
        if ($272) {
         break;
        } else {
         $ce8_0142=$ce8_0141;
        }
        while(1) {

         $273=(($ce8_0142+4)|0);
         $274=((HEAP32[(($273)>>2)])|0);
         $275=(($274+4)|0);
         $276=((HEAP32[(($275)>>2)])|0);
         $277=$276&-34;
         HEAP32[(($275)>>2)]=$277;
         $278=(($ce8_0142+12)|0);
         $ce8_0=((HEAP32[(($278)>>2)])|0);
         $279=($ce8_0|0)==0;
         if ($279) {
          break;
         } else {
          $ce8_0142=$ce8_0;
         }
        }
       }
      } while(0);
      $280=((($i6_0147)+(1))|0);
      $281=((HEAP32[(($39)>>2)])|0);
      $282=($280|0)<($281|0);
      if ($282) {
       $i6_0147=$280;
      } else {
       break;
      }
     }
    }
    __ZN16b2ContactManager15FindNewContactsEv($2);
    $284=((HEAP8[($40)])|0);
    $285=(($284<<24)>>24)==0;
    if ($285) {
     continue L10;
    } else {
     $storemerge=0;
     label = 75;
     break L10;
    }
   }
  } while(0);
  __ZN9b2Contact10SetEnabledEb($minContact_1,0);
  (_memcpy((($145)|0), (($20)|0), 36)|0);
  (_memcpy((($147)|0), (($21)|0), 36)|0);
  __ZN6b2Body20SynchronizeTransformEv($142);
  __ZN6b2Body20SynchronizeTransformEv($143);
 }
 if ((label|0) == 75) {

  HEAP8[($5)]=$storemerge;
  __ZN8b2IslandD2Ev($island);
  STACKTOP=sp;return;
 }
}


function __ZNK6b2Body8IsBulletEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP16[(($1)>>1)])|0);
 $3=$2&8;
 $4=(($3<<16)>>16)!=0;
 return (($4)|0);
}


function __ZN7b2Sweep7AdvanceEf($this,$alpha){
 $this=($this)|0;
 $alpha=+($alpha);
 var $1=0,$2=0,$3=0,$4=.0,$5=.0,$6=.0,$7=.0,$8=0,$9=0,$10=0,$11=.0,$12=0,$13=.0,$14=.0,$15=.0,$16=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(($this+32)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($alpha)-($4);
 $6=((1.0))-($4);
 $7=($5)/($6);
 $8=(($this+8)|0);
 $9=(($this+16)|0);
 __ZmiRK6b2Vec2S1_($2,$9,$8);
 __ZmlfRK6b2Vec2($1,$7,$2);
 __ZN6b2Vec2pLERKS_($8,$1);
 $10=(($this+28)|0);
 $11=(+(HEAPF32[(($10)>>2)]));
 $12=(($this+24)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($11)-($13);
 $15=($7)*($14);
 $16=($13)+($15);
 HEAPF32[(($12)>>2)]=$16;
 HEAPF32[(($3)>>2)]=$alpha;
 STACKTOP=sp;return;
}


function __ZNK9b2Contact14GetChildIndexAEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+56)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK9b2Contact14GetChildIndexBEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+60)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN10b2TOIInputC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN10b2TOIInputC2Ev($this);
 return;
}


function __ZN6b2Body7AdvanceEf($this,$alpha){
 $this=($this)|0;
 $alpha=+($alpha);
 var $1=0,$tmpcast=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=.0,$11=0,$12=0,$13=0,$14=0;
 var $15=0,$ld$4$0=0,$16$0=0,$ld$5$1=0,$16$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($this+44)|0);
 __ZN7b2Sweep7AdvanceEf($3,$alpha);
 $4=(($this+60)|0);
 $5=(($this+52)|0);
 $6=$5;
 $7=$4;
 $ld$0$0=(($6)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($6+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($this+68)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=(($this+72)|0);
 HEAPF32[(($11)>>2)]=$10;
 $12=(($this+20)|0);
 __ZN5b2Rot3SetEf($12,$10);
 $13=(($this+12)|0);
 $14=(($3)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($2,$12,$14);
 __ZmiRK6b2Vec2S1_($tmpcast,$4,$2);
 $15=$13;
 $ld$4$0=(($1)|0);
 $16$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($1+4)|0);
 $16$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($15)|0);
 HEAP32[(($st$6$0)>>2)]=$16$0;
 $st$7$1=(($15+4)|0);
 HEAP32[(($st$7$1)>>2)]=$16$1;
 STACKTOP=sp;return;
}


function __ZN9b2Contact10SetEnabledEb($this,$flag){
 $this=($this)|0;
 $flag=($flag)|0;
 var $1=0,$2=0,$3=0,$4=0,$storemerge=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&-5;
 $4=$2|4;
 $storemerge=($flag?$4:$3);
 HEAP32[(($1)>>2)]=$storemerge;
 return;
}


function __ZN7b2World4StepEfiii($this,$dt,$velocityIterations,$positionIterations,$particleIterations){
 $this=($this)|0;
 $dt=+($dt);
 $velocityIterations=($velocityIterations)|0;
 $positionIterations=($positionIterations)|0;
 $particleIterations=($particleIterations)|0;
 var $stepTimer=0,$step=0,$timer=0,$timer1=0,$timer2=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$18=.0;
 var $19=0,$21=0,$23=0,$24=.0,$25=.0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=.0,$32=0,$33=0,$34=0,$35=0,$37=.0,$38=0,$40=0,$41=0,$42=0;
 var $p_010=0,$43=0,$44=0,$45=.0,$46=0,$48=0,$49=0,$50=0,$52=.0,$53=0,$55=.0,$56=0,$_pr=.0,$58=.0,$59=0,$61=0,$62=.0,$64=0,$65=0,$66=0;
 var $69=0,$70=0,$71=.0,$72=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $stepTimer=((sp)|0);
 $step=(((sp)+(8))|0);
 $timer=(((sp)+(40))|0);
 $timer1=(((sp)+(48))|0);
 $timer2=(((sp)+(56))|0);
 __ZN7b2TimerC2Ev($stepTimer);
 $1=(($this+102876)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&1;
 $4=($3|0)==0;
 if (!($4)) {
  $6=(($this+102880)|0);
  __ZN16b2ContactManager15FindNewContactsEv($6);
  $7=((HEAP32[(($1)>>2)])|0);
  $8=$7&-2;
  HEAP32[(($1)>>2)]=$8;
 }
 $10=((HEAP32[(($1)>>2)])|0);
 $11=$10|2;
 HEAP32[(($1)>>2)]=$11;
 $12=(($step)|0);
 HEAPF32[(($12)>>2)]=$dt;
 $13=(($step+12)|0);
 HEAP32[(($13)>>2)]=$velocityIterations;
 $14=(($step+16)|0);
 HEAP32[(($14)>>2)]=$positionIterations;
 $15=(($step+20)|0);
 HEAP32[(($15)>>2)]=$particleIterations;
 $16=$dt>(0.0);
 if ($16) {
  $18=((1.0))/($dt);
  $19=(($step+4)|0);
  HEAPF32[(($19)>>2)]=$18;
 } else {
  $21=(($step+4)|0);
  HEAPF32[(($21)>>2)]=0.0;
 }
 $23=(($this+103000)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=($24)*($dt);
 $26=(($step+8)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=(($this+103004)|0);
 $28=((HEAP8[($27)])|0);
 $29=(($step+24)|0);
 HEAP8[($29)]=$28;
 __ZN7b2TimerC2Ev($timer);
 $30=(($this+102880)|0);
 __ZN16b2ContactManager7CollideEv($30);
 $31=(+(__ZNK7b2Timer15GetMillisecondsEv($timer)));
 $32=(($this+103012)|0);
 HEAPF32[(($32)>>2)]=$31;
 $33=(($this+103007)|0);
 $34=((HEAP8[($33)])|0);
 $35=(($34<<24)>>24)==0;
 do {
  if (!($35)) {
   $37=(+(HEAPF32[(($12)>>2)]));
   $38=$37>(0.0);
   if (!($38)) {
    break;
   }
   __ZN7b2TimerC2Ev($timer1);
   $40=(($this+102968)|0);
   $41=((HEAP32[(($40)>>2)])|0);
   $42=($41|0)==0;
   if (!($42)) {
    $p_010=$41;
    while(1) {

     __ZN16b2ParticleSystem5SolveERK10b2TimeStep($p_010,$step);
     $43=((__ZN16b2ParticleSystem7GetNextEv($p_010))|0);
     $44=($43|0)==0;
     if ($44) {
      break;
     } else {
      $p_010=$43;
     }
    }
   }
   __ZN7b2World5SolveERK10b2TimeStep($this,$step);
   $45=(+(__ZNK7b2Timer15GetMillisecondsEv($timer1)));
   $46=(($this+103016)|0);
   HEAPF32[(($46)>>2)]=$45;
  }
 } while(0);
 $48=(($this+103005)|0);
 $49=((HEAP8[($48)])|0);
 $50=(($49<<24)>>24)==0;
 do {
  if ($50) {
   label = 14;
  } else {
   $52=(+(HEAPF32[(($12)>>2)]));
   $53=$52>(0.0);
   if (!($53)) {
    $58=$52;
    break;
   }
   __ZN7b2TimerC2Ev($timer2);
   __ZN7b2World8SolveTOIERK10b2TimeStep($this,$step);
   $55=(+(__ZNK7b2Timer15GetMillisecondsEv($timer2)));
   $56=(($this+103036)|0);
   HEAPF32[(($56)>>2)]=$55;
   label = 14;
  }
 } while(0);
 if ((label|0) == 14) {
  $_pr=(+(HEAPF32[(($12)>>2)]));
  $58=$_pr;
 }

 $59=$58>(0.0);
 if ($59) {
  $61=(($step+4)|0);
  $62=(+(HEAPF32[(($61)>>2)]));
  HEAPF32[(($23)>>2)]=$62;
 }
 $64=((HEAP32[(($1)>>2)])|0);
 $65=$64&4;
 $66=($65|0)==0;
 if ($66) {
  $69=((HEAP32[(($1)>>2)])|0);
  $70=$69&-3;
  HEAP32[(($1)>>2)]=$70;
  $71=(+(__ZNK7b2Timer15GetMillisecondsEv($stepTimer)));
  $72=(($this+103008)|0);
  HEAPF32[(($72)>>2)]=$71;
  STACKTOP=sp;return;
 }
 __ZN7b2World11ClearForcesEv($this);
 $69=((HEAP32[(($1)>>2)])|0);
 $70=$69&-3;
 HEAP32[(($1)>>2)]=$70;
 $71=(+(__ZNK7b2Timer15GetMillisecondsEv($stepTimer)));
 $72=(($this+103008)|0);
 HEAPF32[(($72)>>2)]=$71;
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+384)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN7b2World11ClearForcesEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$body_04=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this+102960)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 } else {
  $body_04=$2;
 }
 while(1) {

  $4=(($body_04+92)|0);
  __ZN6b2Vec27SetZeroEv($4);
  $5=(($body_04+100)|0);
  HEAPF32[(($5)>>2)]=0.0;
  $6=((__ZN6b2Body7GetNextEv($body_04))|0);
  $7=($6|0)==0;
  if ($7) {
   break;
  } else {
   $body_04=$6;
  }
 }
 return;
}


function __ZNK7b2World9QueryAABBEP15b2QueryCallbackRK6b2AABB($this,$callback,$aabb){
 $this=($this)|0;
 $callback=($callback)|0;
 $aabb=($aabb)|0;
 var $wrapper=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$p_09=0,$9=0,$10=0,$11=0,$12=0,$15=0,$16=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $wrapper=((sp)|0);
 $1=(($this+102880)|0);
 $2=(($wrapper)|0);
 HEAP32[(($2)>>2)]=$1;
 $3=(($wrapper+4)|0);
 HEAP32[(($3)>>2)]=$callback;
 __ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($1,$wrapper,$aabb);
 $4=(($this+102968)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($5|0)==0;
 if ($6) {
  STACKTOP=sp;return;
 }
 $7=$callback;
 $p_09=$5;
 while(1) {

  $9=((HEAP32[(($7)>>2)])|0);
  $10=(($9+16)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=((FUNCTION_TABLE_iii[($11)&63]($callback,$p_09))|0);
  if ($12) {
   __ZNK16b2ParticleSystem9QueryAABBEP15b2QueryCallbackRK6b2AABB($p_09,$callback,$aabb);
  }
  $15=((__ZN16b2ParticleSystem7GetNextEv($p_09))|0);
  $16=($15|0)==0;
  if ($16) {
   break;
  } else {
   $p_09=$15;
  }
 }
 STACKTOP=sp;return;
}


function __ZNK12b2BroadPhase5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($this,$callback,$aabb){
 $this=($this)|0;
 $callback=($callback)|0;
 $aabb=($aabb)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($1,$callback,$aabb);
 return;
}


function __ZN9b2Contact7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN15b2GrowableStackIiLi256EEC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2GrowableStackIiLi256EEC2Ev($this);
 return;
}


function __ZN15b2GrowableStackIiLi256EE4PushERKi($this,$element){
 $this=($this)|0;
 $element=($element)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$20=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$26=0,label=0;

 $1=(($this+1028)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+1032)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 do {
  if ($5) {
   $7=(($this)|0);
   $8=((HEAP32[(($7)>>2)])|0);
   $9=$4<<1;
   HEAP32[(($3)>>2)]=$9;
   $10=$4<<3;
   $11=((__Z7b2Alloci($10))|0);
   $12=$11;
   HEAP32[(($7)>>2)]=$12;
   $13=$8;
   $14=((HEAP32[(($1)>>2)])|0);
   $15=$14<<2;
   (_memcpy((($11)|0), (($13)|0), $15)|0);
   $16=(($this+4)|0);
   $17=($8|0)==($16|0);
   if ($17) {
    break;
   }
   __Z6b2FreePv($13);
  }
 } while(0);
 $20=((HEAP32[(($element)>>2)])|0);
 $21=((HEAP32[(($1)>>2)])|0);
 $22=(($this)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=(($23+($21<<2))|0);
 HEAP32[(($24)>>2)]=$20;
 $25=((HEAP32[(($1)>>2)])|0);
 $26=((($25)+(1))|0);
 HEAP32[(($1)>>2)]=$26;
 return;
}


function __ZN15b2GrowableStackIiLi256EE8GetCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+1028)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN15b2GrowableStackIiLi256EE3PopEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this+1028)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)-(1))|0);
 HEAP32[(($1)>>2)]=$3;
 $4=(($this)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5+($3<<2))|0);
 $7=((HEAP32[(($6)>>2)])|0);
 return (($7)|0);
}


function __Z13b2TestOverlapRK6b2AABBS1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$tmpcast5=0,$2=0,$tmpcast7=0,$3=0,$4=0,$ld$0$0=0,$5$0=0,$ld$1$1=0,$5$1=0,$d1_sroa_0_0_extract_trunc$0=0,$d1_sroa_0_0_extract_trunc=0,$6=.0,$d1_sroa_1_4_extract_shift$0=0,$d1_sroa_1_4_extract_shift$1=0,$d1_sroa_1_4_extract_trunc$0=0,$d1_sroa_1_4_extract_trunc=0,$7=.0,$8=0,$9=0;
 var $ld$2$0=0,$10$0=0,$ld$3$1=0,$10$1=0,$d2_sroa_0_0_extract_trunc$0=0,$d2_sroa_0_0_extract_trunc=0,$11=.0,$d2_sroa_1_4_extract_shift$0=0,$d2_sroa_1_4_extract_shift$1=0,$d2_sroa_1_4_extract_trunc$0=0,$d2_sroa_1_4_extract_trunc=0,$12=.0,$13=0,$14=0,$or_cond=0,$15=0,$or_cond8=0,$16=0,$or_cond9=0,$not_or_cond9=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast5=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast7=$2;
 $3=(($b)|0);
 $4=(($a+8)|0);
 __ZmiRK6b2Vec2S1_($tmpcast5,$3,$4);
 $ld$0$0=(($1)|0);
 $5$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $5$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $d1_sroa_0_0_extract_trunc$0=$5$0;
 $d1_sroa_0_0_extract_trunc=$d1_sroa_0_0_extract_trunc$0;
 $6=(HEAP32[((tempDoublePtr)>>2)]=$d1_sroa_0_0_extract_trunc,(+(HEAPF32[((tempDoublePtr)>>2)])));
 $d1_sroa_1_4_extract_shift$0=$5$1;
 $d1_sroa_1_4_extract_shift$1=0;
 $d1_sroa_1_4_extract_trunc$0=$d1_sroa_1_4_extract_shift$0;
 $d1_sroa_1_4_extract_trunc=$d1_sroa_1_4_extract_trunc$0;
 $7=(HEAP32[((tempDoublePtr)>>2)]=$d1_sroa_1_4_extract_trunc,(+(HEAPF32[((tempDoublePtr)>>2)])));
 $8=(($a)|0);
 $9=(($b+8)|0);
 __ZmiRK6b2Vec2S1_($tmpcast7,$8,$9);
 $ld$2$0=(($2)|0);
 $10$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($2+4)|0);
 $10$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $d2_sroa_0_0_extract_trunc$0=$10$0;
 $d2_sroa_0_0_extract_trunc=$d2_sroa_0_0_extract_trunc$0;
 $11=(HEAP32[((tempDoublePtr)>>2)]=$d2_sroa_0_0_extract_trunc,(+(HEAPF32[((tempDoublePtr)>>2)])));
 $d2_sroa_1_4_extract_shift$0=$10$1;
 $d2_sroa_1_4_extract_shift$1=0;
 $d2_sroa_1_4_extract_trunc$0=$d2_sroa_1_4_extract_shift$0;
 $d2_sroa_1_4_extract_trunc=$d2_sroa_1_4_extract_trunc$0;
 $12=(HEAP32[((tempDoublePtr)>>2)]=$d2_sroa_1_4_extract_trunc,(+(HEAPF32[((tempDoublePtr)>>2)])));
 $13=$6>(0.0);
 $14=$7>(0.0);
 $or_cond=$13|$14;
 $15=$11>(0.0);
 $or_cond8=$or_cond|$15;
 $16=$12>(0.0);
 $or_cond9=$or_cond8|$16;
 $not_or_cond9=$or_cond9^1;
 STACKTOP=sp;return (($not_or_cond9)|0);
}


function __ZN15b2GrowableStackIiLi256EED1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2GrowableStackIiLi256EED2Ev($this);
 return;
}


function __ZN15b2GrowableStackIiLi256EED2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+4)|0);
 $4=($2|0)==($3|0);
 if ($4) {
  return;
 }
 $6=$2;
 __Z6b2FreePv($6);
 HEAP32[(($1)>>2)]=0;
 return;
}


function __ZNK12b2BroadPhase11GetUserDataEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK13b2DynamicTree11GetUserDataEi($1,$proxyId))|0);
 return (($2)|0);
}


function __ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi($this,$output,$input,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $childIndex=($childIndex)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+24)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((__ZNK6b2Body12GetTransformEv($8))|0);
 $10=((FUNCTION_TABLE_iiiiii[($6)&31]($2,$output,$input,$9,$childIndex))|0);
 return (($10)|0);
}


function __ZNK13b2DynamicTree11GetUserDataEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+((($proxyId)*(36))&-1)+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 return (($4)|0);
}


function __ZN15b2GrowableStackIiLi256EEC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+4)|0);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=$1;
 $3=(($this+1028)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+1032)|0);
 HEAP32[(($4)>>2)]=256;
 return;
}


function __ZNK13b2DynamicTree5QueryI19b2WorldQueryWrapperEEvPT_RK6b2AABB($this,$callback,$aabb){
 $this=($this)|0;
 $callback=($callback)|0;
 $aabb=($aabb)|0;
 var $stack=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$lpad_phi$0=0,$lpad_phi$1=0,$12=0,$13=0,$14=0,$15=0,$17=0,$19=0,$22=0,$24=0,$lpad_loopexit$0=0;
 var $lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$27$0=0,$27$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+1040)|0;
 $stack=((sp)|0);
 __ZN15b2GrowableStackIiLi256EEC1Ev($stack);
 $1=(($this)|0);
 __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$1);
 $2=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
 $3=($2|0)>0;
 if (!($3)) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
 $4=(($this+4)|0);
 L5: while(1) {
  $6=((__ZN15b2GrowableStackIiLi256EE3PopEv($stack))|0);
  $7=($6|0)==-1;
  do {
   if (!($7)) {
    $12=((HEAP32[(($4)>>2)])|0);
    $13=(($12+((($6)*(36))&-1))|0);
    $14=(($13)|0);
    $15=((__Z13b2TestOverlapRK6b2AABBS1_($14,$aabb))|0);
    if (!($15)) {
     break;
    }
    $17=((__ZNK10b2TreeNode6IsLeafEv($13))|0);
    if ($17) {
     $19=((__ZN19b2WorldQueryWrapper13QueryCallbackEi($callback,$6))|0);
     if ($19) {
      break;
     } else {
      label = 15;
      break L5;
     }
    } else {
     $22=(($12+((($6)*(36))&-1)+24)|0);
     __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$22);
     $24=(($12+((($6)*(36))&-1)+28)|0);
     __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$24);
     break;
    }
   }
  } while(0);
  $8=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
  $9=($8|0)>0;
  if (!($9)) {
   label = 15;
   break;
  }
 }
 if ((label|0) == 15) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
}


function __ZN19b2WorldQueryWrapper13QueryCallbackEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK12b2BroadPhase11GetUserDataEi($2,$proxyId))|0);
 $4=(($this+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=$5;
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+8)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($3+16)|0);
 $11=$10;
 $12=((HEAP32[(($11)>>2)])|0);
 $13=((FUNCTION_TABLE_iii[($9)&63]($5,$12))|0);
 return (($13)|0);
}


function __ZNK13b2DynamicTree10GetFatAABBEi($this,$proxyId){
 $this=($this)|0;
 $proxyId=($proxyId)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+((($proxyId)*(36))&-1))|0);
 return (($3)|0);
}


function __ZN10b2TOIInputC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN15b2DistanceProxyC1Ev($1);
 $2=(($this+28)|0);
 __ZN15b2DistanceProxyC1Ev($2);
 return;
}


function __ZN16b2ContactManagerD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN12b2BroadPhaseD2Ev($1);
 return;
}


function __ZN6b2BodyC2EPK9b2BodyDefP7b2World($this,$bd,$world){
 $this=($this)|0;
 $bd=($bd)|0;
 $world=($world)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$11=0,$12=0,$13=0,$15=0,$16=0,$18=0,$19=0,$20=0,$22=0,$23=0,$25=0,$26=0;
 var $27=0,$29=0,$30=0,$32=0,$33=0,$34=0,$36=0,$37=0,$39=0,$40=0,$41=0,$42=0,$ld$0$0=0,$43$0=0,$ld$1$1=0,$43$1=0,$st$2$0=0,$st$3$1=0,$44=0,$45=0;
 var $46=.0,$47=0,$48=0,$49=0,$50=0,$51=0,$ld$4$0=0,$52$0=0,$ld$5$1=0,$52$1=0,$st$6$0=0,$st$7$1=0,$53=0,$54=0,$ld$8$0=0,$55$0=0,$ld$9$1=0,$55$1=0,$st$10$0=0,$st$11$1=0;
 var $56=.0,$57=0,$58=.0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$ld$12$0=0,$68$0=0,$ld$13$1=0,$68$1=0,$st$14$0=0,$st$15$1=0,$69=0,$70=.0;
 var $71=0,$72=0,$73=.0,$74=0,$75=0,$76=.0,$77=0,$78=0,$79=.0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$89=0,$91=0,$93=0;
 var $94=0,$95=0,$96=0,$97=0,$98=0,$99=0,label=0;

 $1=(($this+12)|0);
 $2=(($this+28)|0);
 $3=(($this+80)|0);
 $4=(($this+92)|0);
 $5=(($this+4)|0);
 HEAP16[(($5)>>1)]=0;
 $6=(($bd+39)|0);
 $7=((HEAP8[($6)])|0);
 $8=(($7<<24)>>24)==0;
 if (!($8)) {
  HEAP16[(($5)>>1)]=8;
 }
 $11=(($bd+38)|0);
 $12=((HEAP8[($11)])|0);
 $13=(($12<<24)>>24)==0;
 if (!($13)) {
  $15=((HEAP16[(($5)>>1)])|0);
  $16=$15|16;
  HEAP16[(($5)>>1)]=$16;
 }
 $18=(($bd+36)|0);
 $19=((HEAP8[($18)])|0);
 $20=(($19<<24)>>24)==0;
 if (!($20)) {
  $22=((HEAP16[(($5)>>1)])|0);
  $23=$22|4;
  HEAP16[(($5)>>1)]=$23;
 }
 $25=(($bd+37)|0);
 $26=((HEAP8[($25)])|0);
 $27=(($26<<24)>>24)==0;
 if (!($27)) {
  $29=((HEAP16[(($5)>>1)])|0);
  $30=$29|2;
  HEAP16[(($5)>>1)]=$30;
 }
 $32=(($bd+40)|0);
 $33=((HEAP8[($32)])|0);
 $34=(($33<<24)>>24)==0;
 if (!($34)) {
  $36=((HEAP16[(($5)>>1)])|0);
  $37=$36|32;
  HEAP16[(($5)>>1)]=$37;
 }
 $39=(($this+104)|0);
 HEAP32[(($39)>>2)]=$world;
 $40=(($bd+4)|0);
 $41=$40;
 $42=$1;
 $ld$0$0=(($41)|0);
 $43$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($41+4)|0);
 $43$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($42)|0);
 HEAP32[(($st$2$0)>>2)]=$43$0;
 $st$3$1=(($42+4)|0);
 HEAP32[(($st$3$1)>>2)]=$43$1;
 $44=(($this+20)|0);
 $45=(($bd+12)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 __ZN5b2Rot3SetEf($44,$46);
 $47=$2;
 $48=$1;
 HEAP32[(($47)>>2)]=((HEAP32[(($48)>>2)])|0);HEAP32[((($47)+(4))>>2)]=((HEAP32[((($48)+(4))>>2)])|0);HEAP32[((($47)+(8))>>2)]=((HEAP32[((($48)+(8))>>2)])|0);HEAP32[((($47)+(12))>>2)]=((HEAP32[((($48)+(12))>>2)])|0);
 $49=(($this+44)|0);
 __ZN6b2Vec27SetZeroEv($49);
 $50=(($this+52)|0);
 $51=$50;
 $ld$4$0=(($42)|0);
 $52$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($42+4)|0);
 $52$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($51)|0);
 HEAP32[(($st$6$0)>>2)]=$52$0;
 $st$7$1=(($51+4)|0);
 HEAP32[(($st$7$1)>>2)]=$52$1;
 $53=(($this+60)|0);
 $54=$53;
 $ld$8$0=(($42)|0);
 $55$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($42+4)|0);
 $55$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($54)|0);
 HEAP32[(($st$10$0)>>2)]=$55$0;
 $st$11$1=(($54+4)|0);
 HEAP32[(($st$11$1)>>2)]=$55$1;
 $56=(+(HEAPF32[(($45)>>2)]));
 $57=(($this+68)|0);
 HEAPF32[(($57)>>2)]=$56;
 $58=(+(HEAPF32[(($45)>>2)]));
 $59=(($this+72)|0);
 HEAPF32[(($59)>>2)]=$58;
 $60=(($this+76)|0);
 HEAPF32[(($60)>>2)]=0.0;
 $61=(($this+124)|0);
 HEAP32[(($61)>>2)]=0;
 $62=(($this+128)|0);
 HEAP32[(($62)>>2)]=0;
 $63=(($this+108)|0);
 HEAP32[(($63)>>2)]=0;
 $64=(($this+112)|0);
 HEAP32[(($64)>>2)]=0;
 $65=(($bd+16)|0);
 $66=$65;
 $67=$3;
 $ld$12$0=(($66)|0);
 $68$0=((HEAP32[(($ld$12$0)>>2)])|0);
 $ld$13$1=(($66+4)|0);
 $68$1=((HEAP32[(($ld$13$1)>>2)])|0);
 $st$14$0=(($67)|0);
 HEAP32[(($st$14$0)>>2)]=$68$0;
 $st$15$1=(($67+4)|0);
 HEAP32[(($st$15$1)>>2)]=$68$1;
 $69=(($bd+24)|0);
 $70=(+(HEAPF32[(($69)>>2)]));
 $71=(($this+88)|0);
 HEAPF32[(($71)>>2)]=$70;
 $72=(($bd+28)|0);
 $73=(+(HEAPF32[(($72)>>2)]));
 $74=(($this+148)|0);
 HEAPF32[(($74)>>2)]=$73;
 $75=(($bd+32)|0);
 $76=(+(HEAPF32[(($75)>>2)]));
 $77=(($this+152)|0);
 HEAPF32[(($77)>>2)]=$76;
 $78=(($bd+48)|0);
 $79=(+(HEAPF32[(($78)>>2)]));
 $80=(($this+156)|0);
 HEAPF32[(($80)>>2)]=$79;
 __ZN6b2Vec27SetZeroEv($4);
 $81=(($this+100)|0);
 HEAPF32[(($81)>>2)]=0.0;
 $82=(($this+160)|0);
 HEAPF32[(($82)>>2)]=0.0;
 $83=(($bd)|0);
 $84=((HEAP32[(($83)>>2)])|0);
 $85=(($this)|0);
 HEAP32[(($85)>>2)]=$84;
 $86=($84|0)==2;
 $87=(($this+132)|0);
 if ($86) {
  HEAPF32[(($87)>>2)]=1.0;
  $89=(($this+136)|0);
  HEAPF32[(($89)>>2)]=1.0;
  $93=(($this+140)|0);
  HEAPF32[(($93)>>2)]=0.0;
  $94=(($this+144)|0);
  HEAPF32[(($94)>>2)]=0.0;
  $95=(($bd+44)|0);
  $96=((HEAP32[(($95)>>2)])|0);
  $97=(($this+164)|0);
  HEAP32[(($97)>>2)]=$96;
  $98=(($this+116)|0);
  HEAP32[(($98)>>2)]=0;
  $99=(($this+120)|0);
  HEAP32[(($99)>>2)]=0;
  return;
 } else {
  HEAPF32[(($87)>>2)]=0.0;
  $91=(($this+136)|0);
  HEAPF32[(($91)>>2)]=0.0;
  $93=(($this+140)|0);
  HEAPF32[(($93)>>2)]=0.0;
  $94=(($this+144)|0);
  HEAPF32[(($94)>>2)]=0.0;
  $95=(($bd+44)|0);
  $96=((HEAP32[(($95)>>2)])|0);
  $97=(($this+164)|0);
  HEAP32[(($97)>>2)]=$96;
  $98=(($this+116)|0);
  HEAP32[(($98)>>2)]=0;
  $99=(($this+120)|0);
  HEAP32[(($99)>>2)]=0;
  return;
 }
}


function __ZN6b2BodyD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN6b2Body7SetTypeE10b2BodyType($this,$type){
 $this=($this)|0;
 $type=($type)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$10=0,$12=0,$13=0,$14=0,$15=.0,$16=0,$17=0,$18=0,$19=0,$20=0,$ld$0$0=0,$21$0=0,$ld$1$1=0;
 var $21$1=0,$st$2$0=0,$st$3$1=0,$23=0,$24=0,$25=0,$26=0,$27=0,$ce_015=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$f_011=0;
 var $38=0,$f_012=0,$39=0,$40=0,$41=0,$42=0,$i_010=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$f_0=0,$50=0,label=0;

 $1=(($this+104)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  return;
 }
 $5=(($this)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)==($type|0);
 if ($7) {
  return;
 }
 HEAP32[(($5)>>2)]=$type;
 __ZN6b2Body13ResetMassDataEv($this);
 $9=((HEAP32[(($5)>>2)])|0);
 $10=($9|0)==0;
 if ($10) {
  $12=(($this+80)|0);
  __ZN6b2Vec27SetZeroEv($12);
  $13=(($this+88)|0);
  HEAPF32[(($13)>>2)]=0.0;
  $14=(($this+72)|0);
  $15=(+(HEAPF32[(($14)>>2)]));
  $16=(($this+68)|0);
  HEAPF32[(($16)>>2)]=$15;
  $17=(($this+52)|0);
  $18=(($this+60)|0);
  $19=$18;
  $20=$17;
  $ld$0$0=(($19)|0);
  $21$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($19+4)|0);
  $21$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($20)|0);
  HEAP32[(($st$2$0)>>2)]=$21$0;
  $st$3$1=(($20+4)|0);
  HEAP32[(($st$3$1)>>2)]=$21$1;
  __ZN6b2Body19SynchronizeFixturesEv($this);
 }
 __ZN6b2Body8SetAwakeEb($this,1);
 $23=(($this+92)|0);
 __ZN6b2Vec27SetZeroEv($23);
 $24=(($this+100)|0);
 HEAPF32[(($24)>>2)]=0.0;
 $25=(($this+128)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=($26|0)==0;
 if (!($27)) {
  $ce_015=$26;
  while(1) {

   $28=(($ce_015+12)|0);
   $29=((HEAP32[(($28)>>2)])|0);
   $30=((HEAP32[(($1)>>2)])|0);
   $31=(($30+102880)|0);
   $32=(($ce_015+4)|0);
   $33=((HEAP32[(($32)>>2)])|0);
   __ZN16b2ContactManager7DestroyEP9b2Contact($31,$33);
   $34=($29|0)==0;
   if ($34) {
    break;
   } else {
    $ce_015=$29;
   }
  }
 }
 HEAP32[(($25)>>2)]=0;
 $35=((HEAP32[(($1)>>2)])|0);
 $36=(($35+102880)|0);
 $37=(($this+116)|0);
 $f_011=((HEAP32[(($37)>>2)])|0);
 $38=($f_011|0)==0;
 if ($38) {
  return;
 } else {
  $f_012=$f_011;
 }
 while(1) {

  $39=(($f_012+28)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=($40|0)>0;
  if ($41) {
   $42=(($f_012+24)|0);
   $i_010=0;
   while(1) {

    $44=((HEAP32[(($42)>>2)])|0);
    $45=(($44+((($i_010)*(28))&-1)+24)|0);
    $46=((HEAP32[(($45)>>2)])|0);
    __ZN12b2BroadPhase10TouchProxyEi($36,$46);
    $47=((($i_010)+(1))|0);
    $48=($47|0)<($40|0);
    if ($48) {
     $i_010=$47;
    } else {
     break;
    }
   }
  }
  $49=(($f_012+4)|0);
  $f_0=((HEAP32[(($49)>>2)])|0);
  $50=($f_0|0)==0;
  if ($50) {
   break;
  } else {
   $f_012=$f_0;
  }
 }
 return;
}


function __ZN6b2Body13ResetMassDataEv($this){
 $this=($this)|0;
 var $localCenter=0,$tmpcast=0,$massData=0,$1=0,$oldCenter=0,$tmpcast4=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$switch=0;
 var $15=0,$16=0,$17=0,$18=0,$ld$0$0=0,$19$0=0,$ld$1$1=0,$19$1=0,$st$2$0=0,$st$3$1=0,$20=0,$21=0,$ld$4$0=0,$22$0=0,$ld$5$1=0,$22$1=0,$st$6$0=0,$st$7$1=0,$23=0,$24=.0;
 var $25=0,$$etemp$8=0,$ld$9$0=0,$27$0=0,$ld$10$1=0,$27$1=0,$st$11$0=0,$st$12$1=0,$28=0,$f_06=0,$29=0,$30=0,$31=0,$32=0,$f_07=0,$34=0,$35=.0,$36=0,$38=.0,$39=.0;
 var $40=.0,$41=.0,$42=.0,$43=.0,$44=.0,$46=0,$f_0=0,$47=0,$48=.0,$49=0,$51=.0,$54=.0,$55=0,$57=0,$58=0,$59=0,$60=0,$62=.0,$63=.0,$64=.0;
 var $65=.0,$66=.0,$storemerge=.0,$69=0,$70=0,$ld$13$0=0,$71$0=0,$ld$14$1=0,$71$1=0,$st$15$0=0,$st$16$1=0,$72=0,$ld$17$0=0,$73$0=0,$ld$18$1=0,$73$1=0,$st$19$0=0,$st$20$1=0,$74=0,$75=0;
 var $ld$21$0=0,$76$0=0,$ld$22$1=0,$76$1=0,$st$23$0=0,$st$24$1=0,$77=0,$st$25$0=0,$st$26$1=0,$78=0,$79=0,$80=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $localCenter=((sp)|0);
 $tmpcast=$localCenter;
 $massData=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $oldCenter=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast4=$oldCenter;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=(($this+132)|0);
 $6=(($this+136)|0);
 $7=(($this+140)|0);
 $8=(($this+144)|0);
 $9=(($this+44)|0);
 $10=(($9)|0);
 $11=$5;
 _memset((((($11)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 __ZN6b2Vec27SetZeroEv($10);
 $12=(($this)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $switch=($13>>>0)<((2)>>>0);
 if ($switch) {
  $15=(($this+52)|0);
  $16=(($this+12)|0);
  $17=$16;
  $18=$15;
  $ld$0$0=(($17)|0);
  $19$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($17+4)|0);
  $19$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($18)|0);
  HEAP32[(($st$2$0)>>2)]=$19$0;
  $st$3$1=(($18+4)|0);
  HEAP32[(($st$3$1)>>2)]=$19$1;
  $20=(($this+60)|0);
  $21=$20;
  $ld$4$0=(($17)|0);
  $22$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($17+4)|0);
  $22$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($21)|0);
  HEAP32[(($st$6$0)>>2)]=$22$0;
  $st$7$1=(($21+4)|0);
  HEAP32[(($st$7$1)>>2)]=$22$1;
  $23=(($this+72)|0);
  $24=(+(HEAPF32[(($23)>>2)]));
  $25=(($this+68)|0);
  HEAPF32[(($25)>>2)]=$24;
  STACKTOP=sp;return;
 }
 $$etemp$8=8264;
 $ld$9$0=(($$etemp$8)|0);
 $27$0=((HEAP32[(($ld$9$0)>>2)])|0);
 $ld$10$1=(($$etemp$8+4)|0);
 $27$1=((HEAP32[(($ld$10$1)>>2)])|0);
 $st$11$0=(($localCenter)|0);
 HEAP32[(($st$11$0)>>2)]=$27$0;
 $st$12$1=(($localCenter+4)|0);
 HEAP32[(($st$12$1)>>2)]=$27$1;
 $28=(($this+116)|0);
 $f_06=((HEAP32[(($28)>>2)])|0);
 $29=($f_06|0)==0;
 if (!($29)) {
  $30=(($massData)|0);
  $31=(($massData+4)|0);
  $32=(($massData+12)|0);
  $f_07=$f_06;
  while(1) {

   $34=(($f_07)|0);
   $35=(+(HEAPF32[(($34)>>2)]));
   $36=$35==(0.0);
   if (!($36)) {
    __ZNK9b2Fixture11GetMassDataEP10b2MassData($f_07,$massData);
    $38=(+(HEAPF32[(($30)>>2)]));
    $39=(+(HEAPF32[(($5)>>2)]));
    $40=($38)+($39);
    HEAPF32[(($5)>>2)]=$40;
    $41=(+(HEAPF32[(($30)>>2)]));
    __ZmlfRK6b2Vec2($1,$41,$31);
    __ZN6b2Vec2pLERKS_($tmpcast,$1);
    $42=(+(HEAPF32[(($32)>>2)]));
    $43=(+(HEAPF32[(($7)>>2)]));
    $44=($42)+($43);
    HEAPF32[(($7)>>2)]=$44;
   }
   $46=(($f_07+4)|0);
   $f_0=((HEAP32[(($46)>>2)])|0);
   $47=($f_0|0)==0;
   if ($47) {
    break;
   } else {
    $f_07=$f_0;
   }
  }
 }
 $48=(+(HEAPF32[(($5)>>2)]));
 $49=$48>(0.0);
 if ($49) {
  $51=((1.0))/($48);
  HEAPF32[(($6)>>2)]=$51;
  __ZN6b2Vec2mLEf($tmpcast,$51);
 } else {
  HEAPF32[(($5)>>2)]=1.0;
  HEAPF32[(($6)>>2)]=1.0;
 }
 $54=(+(HEAPF32[(($7)>>2)]));
 $55=$54>(0.0);
 do {
  if ($55) {
   $57=(($this+4)|0);
   $58=((HEAP16[(($57)>>1)])|0);
   $59=$58&16;
   $60=(($59<<16)>>16)==0;
   if (!($60)) {
    label = 14;
    break;
   }
   $62=(+(HEAPF32[(($5)>>2)]));
   $63=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast,$tmpcast)));
   $64=($62)*($63);
   $65=($54)-($64);
   HEAPF32[(($7)>>2)]=$65;
   $66=((1.0))/($65);
   $storemerge=$66;
  } else {
   label = 14;
  }
 } while(0);
 if ((label|0) == 14) {
  HEAPF32[(($7)>>2)]=0.0;
  $storemerge=0.0;
 }

 HEAPF32[(($8)>>2)]=$storemerge;
 $69=(($this+60)|0);
 $70=$69;
 $ld$13$0=(($70)|0);
 $71$0=((HEAP32[(($ld$13$0)>>2)])|0);
 $ld$14$1=(($70+4)|0);
 $71$1=((HEAP32[(($ld$14$1)>>2)])|0);
 $st$15$0=(($oldCenter)|0);
 HEAP32[(($st$15$0)>>2)]=$71$0;
 $st$16$1=(($oldCenter+4)|0);
 HEAP32[(($st$16$1)>>2)]=$71$1;
 $72=$9;
 $ld$17$0=(($localCenter)|0);
 $73$0=((HEAP32[(($ld$17$0)>>2)])|0);
 $ld$18$1=(($localCenter+4)|0);
 $73$1=((HEAP32[(($ld$18$1)>>2)])|0);
 $st$19$0=(($72)|0);
 HEAP32[(($st$19$0)>>2)]=$73$0;
 $st$20$1=(($72+4)|0);
 HEAP32[(($st$20$1)>>2)]=$73$1;
 $74=(($this+52)|0);
 $75=(($this+12)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast5,$75,$10);
 $ld$21$0=(($2)|0);
 $76$0=((HEAP32[(($ld$21$0)>>2)])|0);
 $ld$22$1=(($2+4)|0);
 $76$1=((HEAP32[(($ld$22$1)>>2)])|0);
 $st$23$0=(($70)|0);
 HEAP32[(($st$23$0)>>2)]=$76$0;
 $st$24$1=(($70+4)|0);
 HEAP32[(($st$24$1)>>2)]=$76$1;
 $77=$74;
 $st$25$0=(($77)|0);
 HEAP32[(($st$25$0)>>2)]=$76$0;
 $st$26$1=(($77+4)|0);
 HEAP32[(($st$26$1)>>2)]=$76$1;
 $78=(($this+80)|0);
 $79=(($this+88)|0);
 $80=(+(HEAPF32[(($79)>>2)]));
 __ZmiRK6b2Vec2S1_($4,$69,$tmpcast4);
 __Z7b2CrossfRK6b2Vec2($3,$80,$4);
 __ZN6b2Vec2pLERKS_($78,$3);
 STACKTOP=sp;return;
}


function __ZN6b2Body19SynchronizeFixturesEv($this){
 $this=($this)|0;
 var $xf13=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$7=0,$xf1378=0,$8=0,$9=0,$10=0,$11=0,$f_05=0,$12=0,$13=0,$f_06=0,$15=0,$f_0=0;
 var $16=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $xf13=((sp)|0);
 $tmpcast=$xf13;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=(($xf13+8)|0);
 $3=$2;
 $4=(($this+68)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 __ZN5b2Rot3SetEf($3,$5);
 $6=(($this+52)|0);
 $7=(($this+44)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($1,$3,$7);
 $xf1378=$xf13;
 __ZmiRK6b2Vec2S1_($xf1378,$6,$1);
 $8=(($this+104)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+102880)|0);
 $11=(($this+116)|0);
 $f_05=((HEAP32[(($11)>>2)])|0);
 $12=($f_05|0)==0;
 if ($12) {
  STACKTOP=sp;return;
 }
 $13=(($this+12)|0);
 $f_06=$f_05;
 while(1) {

  __ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_($f_06,$10,$tmpcast,$13);
  $15=(($f_06+4)|0);
  $f_0=((HEAP32[(($15)>>2)])|0);
  $16=($f_0|0)==0;
  if ($16) {
   break;
  } else {
   $f_06=$f_0;
  }
 }
 STACKTOP=sp;return;
}


function __ZN6b2Body13CreateFixtureEPK12b2FixtureDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0,$24=0,$25=0;
 var $26=0,$27=0,$28=0,$29=.0,$30=0,$33=0,$34=0,$35=0,$36=0,$_0=0,label=0;

 $1=(($this+104)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  $_0=0;

  return (($_0)|0);
 }
 $5=(($2)|0);
 $6=((__ZN16b2BlockAllocator8AllocateEi($5,44))|0);
 $7=($6|0)==0;
 if ($7) {
  $11=0;
 } else {
  $9=$6;
  __ZN9b2FixtureC2Ev($9);
  $11=$9;
 }

 __ZN9b2Fixture6CreateEP16b2BlockAllocatorP6b2BodyPK12b2FixtureDef($11,$5,$this,$def);
 $12=(($this+4)|0);
 $13=((HEAP16[(($12)>>1)])|0);
 $14=$13&32;
 $15=(($14<<16)>>16)==0;
 if (!($15)) {
  $17=((HEAP32[(($1)>>2)])|0);
  $18=(($17+102880)|0);
  $19=(($this+12)|0);
  __ZN9b2Fixture13CreateProxiesEP12b2BroadPhaseRK11b2Transform($11,$18,$19);
 }
 $21=(($this+116)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($11+4)|0);
 HEAP32[(($23)>>2)]=$22;
 HEAP32[(($21)>>2)]=$11;
 $24=(($this+120)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($25)+(1))|0);
 HEAP32[(($24)>>2)]=$26;
 $27=(($11+8)|0);
 HEAP32[(($27)>>2)]=$this;
 $28=(($11)|0);
 $29=(+(HEAPF32[(($28)>>2)]));
 $30=$29>(0.0);
 if ($30) {
  __ZN6b2Body13ResetMassDataEv($this);
 }
 $33=((HEAP32[(($1)>>2)])|0);
 $34=(($33+102876)|0);
 $35=((HEAP32[(($34)>>2)])|0);
 $36=$35|1;
 HEAP32[(($34)>>2)]=$36;
 $_0=$11;

 return (($_0)|0);
}


function __ZN6b2Body14DestroyFixtureEP9b2Fixture($this,$fixture){
 $this=($this)|0;
 $fixture=($fixture)|0;
 var $1=0,$2=0,$3=0,$5=0,$node_0=0,$7=0,$8=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=0,$edge_019=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,$or_cond=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$37=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0;
 var label=0;

 $1=(($this+104)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  return;
 }
 $5=(($this+116)|0);
 $node_0=$5;
 while(1) {

  $7=((HEAP32[(($node_0)>>2)])|0);
  $8=($7|0)==0;
  if ($8) {
   break;
  }
  $10=($7|0)==($fixture|0);
  $11=(($7+4)|0);
  if ($10) {
   label = 5;
   break;
  } else {
   $node_0=$11;
  }
 }
 if ((label|0) == 5) {
  $13=(($fixture+4)|0);
  $14=((HEAP32[(($13)>>2)])|0);
  HEAP32[(($node_0)>>2)]=$14;
 }
 $15=(($this+128)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=($16|0)==0;
 if (!($17)) {
  $edge_019=$16;
  while(1) {

   $18=(($edge_019+4)|0);
   $19=((HEAP32[(($18)>>2)])|0);
   $20=(($edge_019+12)|0);
   $21=((HEAP32[(($20)>>2)])|0);
   $22=((__ZN9b2Contact11GetFixtureAEv($19))|0);
   $23=((__ZN9b2Contact11GetFixtureBEv($19))|0);
   $24=($22|0)==($fixture|0);
   $25=($23|0)==($fixture|0);
   $or_cond=$24|$25;
   if ($or_cond) {
    $27=((HEAP32[(($1)>>2)])|0);
    $28=(($27+102880)|0);
    __ZN16b2ContactManager7DestroyEP9b2Contact($28,$19);
   }
   $29=($21|0)==0;
   if ($29) {
    break;
   } else {
    $edge_019=$21;
   }
  }
 }
 $30=((HEAP32[(($1)>>2)])|0);
 $31=(($30)|0);
 $32=(($this+4)|0);
 $33=((HEAP16[(($32)>>1)])|0);
 $34=$33&32;
 $35=(($34<<16)>>16)==0;
 if (!($35)) {
  $37=(($30+102880)|0);
  __ZN9b2Fixture14DestroyProxiesEP12b2BroadPhase($fixture,$37);
 }
 __ZN9b2Fixture7DestroyEP16b2BlockAllocator($fixture,$31);
 $39=(($fixture+8)|0);
 HEAP32[(($39)>>2)]=0;
 $40=(($fixture+4)|0);
 HEAP32[(($40)>>2)]=0;
 $41=$fixture;
 __ZN16b2BlockAllocator4FreeEPvi($31,$41,44);
 $42=(($this+120)|0);
 $43=((HEAP32[(($42)>>2)])|0);
 $44=((($43)-(1))|0);
 HEAP32[(($42)>>2)]=$44;
 __ZN6b2Body13ResetMassDataEv($this);
 return;
}


function __ZNK9b2Fixture11GetMassDataEP10b2MassData($this,$massData){
 $this=($this)|0;
 $massData=($massData)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+32)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 FUNCTION_TABLE_viif[($6)&63]($2,$massData,$8);
 return;
}


function __ZNK6b2Body13ShouldCollideEPKS_($this,$other){
 $this=($this)|0;
 $other=($other)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$jn_07=0,$10=0,$jn_08=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0,$21=0,$jn_0=0;
 var $22=0,$_0=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==2;
 do {
  if (!($3)) {
   $5=(($other)|0);
   $6=((HEAP32[(($5)>>2)])|0);
   $7=($6|0)==2;
   if ($7) {
    break;
   } else {
    $_0=0;
   }

   return (($_0)|0);
  }
 } while(0);
 $9=(($this+124)|0);
 $jn_07=((HEAP32[(($9)>>2)])|0);
 $10=($jn_07|0)==0;
 if ($10) {
  $_0=1;

  return (($_0)|0);
 } else {
  $jn_08=$jn_07;
 }
 while(1) {

  $11=(($jn_08)|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=($12|0)==($other|0);
  if ($13) {
   $15=(($jn_08+4)|0);
   $16=((HEAP32[(($15)>>2)])|0);
   $17=(($16+61)|0);
   $18=((HEAP8[($17)])|0);
   $19=(($18<<24)>>24)==0;
   if ($19) {
    $_0=0;
    label = 7;
    break;
   }
  }
  $21=(($jn_08+12)|0);
  $jn_0=((HEAP32[(($21)>>2)])|0);
  $22=($jn_0|0)==0;
  if ($22) {
   $_0=1;
   label = 7;
   break;
  } else {
   $jn_08=$jn_0;
  }
 }
 if ((label|0) == 7) {

  return (($_0)|0);
 }
  return 0;
}


function __ZN6b2Body12SetTransformERK6b2Vec2f($this,$position,$angle){
 $this=($this)|0;
 $position=($position)|0;
 $angle=+($angle);
 var $1=0,$2=0,$3=0,$4=0,$tmpcast=0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=0,$13=0,$14=0,$15=0;
 var $16=0,$ld$4$0=0,$17$0=0,$ld$5$1=0,$17$1=0,$st$6$0=0,$st$7$1=0,$18=0,$19=0,$20=0,$ld$8$0=0,$21$0=0,$ld$9$1=0,$21$1=0,$st$10$0=0,$st$11$1=0,$22=0,$23=0,$24=0,$25=0;
 var $f_07=0,$26=0,$f_08=0,$27=0,$f_0=0,$28=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this+104)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((__ZNK7b2World8IsLockedEv($3))|0);
 if ($4) {
  STACKTOP=sp;return;
 }
 $tmpcast=$1;
 $6=(($this+12)|0);
 $7=(($this+20)|0);
 __ZN5b2Rot3SetEf($7,$angle);
 $8=$position;
 $9=$6;
 $ld$0$0=(($8)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($8+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($this+28)|0);
 $12=$11;
 $13=$6;
 HEAP32[(($12)>>2)]=((HEAP32[(($13)>>2)])|0);HEAP32[((($12)+(4))>>2)]=((HEAP32[((($13)+(4))>>2)])|0);HEAP32[((($12)+(8))>>2)]=((HEAP32[((($13)+(8))>>2)])|0);HEAP32[((($12)+(12))>>2)]=((HEAP32[((($13)+(12))>>2)])|0);
 $14=(($this+60)|0);
 $15=(($this+44)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast,$6,$15);
 $16=$14;
 $ld$4$0=(($1)|0);
 $17$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($1+4)|0);
 $17$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($16)|0);
 HEAP32[(($st$6$0)>>2)]=$17$0;
 $st$7$1=(($16+4)|0);
 HEAP32[(($st$7$1)>>2)]=$17$1;
 $18=(($this+72)|0);
 HEAPF32[(($18)>>2)]=$angle;
 $19=(($this+52)|0);
 $20=$19;
 $ld$8$0=(($16)|0);
 $21$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($16+4)|0);
 $21$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($20)|0);
 HEAP32[(($st$10$0)>>2)]=$21$0;
 $st$11$1=(($20+4)|0);
 HEAP32[(($st$11$1)>>2)]=$21$1;
 $22=(($this+68)|0);
 HEAPF32[(($22)>>2)]=$angle;
 $23=((HEAP32[(($2)>>2)])|0);
 $24=(($23+102880)|0);
 $25=(($this+116)|0);
 $f_07=((HEAP32[(($25)>>2)])|0);
 $26=($f_07|0)==0;
 if ($26) {
  STACKTOP=sp;return;
 } else {
  $f_08=$f_07;
 }
 while(1) {

  __ZN9b2Fixture11SynchronizeEP12b2BroadPhaseRK11b2TransformS4_($f_08,$24,$6,$6);
  $27=(($f_08+4)|0);
  $f_0=((HEAP32[(($27)>>2)])|0);
  $28=($f_0|0)==0;
  if ($28) {
   break;
  } else {
   $f_08=$f_0;
  }
 }
 STACKTOP=sp;return;
}


function __ZN17b2ContactListenerD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN16b2ContactManagerC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN12b2BroadPhaseC2Ev($1);
 $2=(($this+60)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+64)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+68)|0);
 HEAP32[(($4)>>2)]=64;
 $5=(($this+72)|0);
 HEAP32[(($5)>>2)]=56;
 $6=(($this+76)|0);
 HEAP32[(($6)>>2)]=0;
 return;
}


function __ZN16b2ContactManager7DestroyEP9b2Contact($this,$c){
 $this=($this)|0;
 $c=($c)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$11=0,$12=0,$13=0,$14=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0,$24=0,$25=0;
 var $26=0,$28=0,$29=0,$31=0,$32=0,$33=0,$35=0,$37=0,$38=0,$39=0,$40=0,$42=0,$43=0,$44=0,$46=0,$47=0,$48=0,$50=0,$51=0,$53=0;
 var $54=0,$55=0,$57=0,$59=0,$60=0,$61=0,$62=0,$64=0,$65=0,$66=0,$68=0,$69=0,$70=0,$72=0,$73=0,$75=0,$76=0,$77=0,$79=0,$81=0;
 var $82=0,$83=0,$84=0,$85=0,label=0;

 $1=((__ZN9b2Contact11GetFixtureAEv($c))|0);
 $2=((__ZN9b2Contact11GetFixtureBEv($c))|0);
 $3=((__ZN9b2Fixture7GetBodyEv($1))|0);
 $4=((__ZN9b2Fixture7GetBodyEv($2))|0);
 $5=(($this+72)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)==0;
 do {
  if (!($7)) {
   $9=((__ZNK9b2Contact10IsTouchingEv($c))|0);
   if (!($9)) {
    break;
   }
   $11=$6;
   $12=((HEAP32[(($11)>>2)])|0);
   $13=(($12+12)|0);
   $14=((HEAP32[(($13)>>2)])|0);
   FUNCTION_TABLE_vii[($14)&255]($6,$c);
  }
 } while(0);
 $16=(($c+8)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=($17|0)==0;
 if (!($18)) {
  $20=(($c+12)|0);
  $21=((HEAP32[(($20)>>2)])|0);
  $22=(($17+12)|0);
  HEAP32[(($22)>>2)]=$21;
 }
 $24=(($c+12)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=($25|0)==0;
 if (!($26)) {
  $28=((HEAP32[(($16)>>2)])|0);
  $29=(($25+8)|0);
  HEAP32[(($29)>>2)]=$28;
 }
 $31=(($this+60)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 $33=($32|0)==($c|0);
 if ($33) {
  $35=((HEAP32[(($24)>>2)])|0);
  HEAP32[(($31)>>2)]=$35;
 }
 $37=(($c+16)|0);
 $38=(($c+24)|0);
 $39=((HEAP32[(($38)>>2)])|0);
 $40=($39|0)==0;
 if (!($40)) {
  $42=(($c+28)|0);
  $43=((HEAP32[(($42)>>2)])|0);
  $44=(($39+12)|0);
  HEAP32[(($44)>>2)]=$43;
 }
 $46=(($c+28)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=($47|0)==0;
 if (!($48)) {
  $50=((HEAP32[(($38)>>2)])|0);
  $51=(($47+8)|0);
  HEAP32[(($51)>>2)]=$50;
 }
 $53=(($3+128)|0);
 $54=((HEAP32[(($53)>>2)])|0);
 $55=($37|0)==($54|0);
 if ($55) {
  $57=((HEAP32[(($46)>>2)])|0);
  HEAP32[(($53)>>2)]=$57;
 }
 $59=(($c+32)|0);
 $60=(($c+40)|0);
 $61=((HEAP32[(($60)>>2)])|0);
 $62=($61|0)==0;
 if (!($62)) {
  $64=(($c+44)|0);
  $65=((HEAP32[(($64)>>2)])|0);
  $66=(($61+12)|0);
  HEAP32[(($66)>>2)]=$65;
 }
 $68=(($c+44)|0);
 $69=((HEAP32[(($68)>>2)])|0);
 $70=($69|0)==0;
 if (!($70)) {
  $72=((HEAP32[(($60)>>2)])|0);
  $73=(($69+8)|0);
  HEAP32[(($73)>>2)]=$72;
 }
 $75=(($4+128)|0);
 $76=((HEAP32[(($75)>>2)])|0);
 $77=($59|0)==($76|0);
 if (!($77)) {
  $81=(($this+76)|0);
  $82=((HEAP32[(($81)>>2)])|0);
  __ZN9b2Contact7DestroyEPS_P16b2BlockAllocator($c,$82);
  $83=(($this+64)|0);
  $84=((HEAP32[(($83)>>2)])|0);
  $85=((($84)-(1))|0);
  HEAP32[(($83)>>2)]=$85;
  return;
 }
 $79=((HEAP32[(($68)>>2)])|0);
 HEAP32[(($75)>>2)]=$79;
 $81=(($this+76)|0);
 $82=((HEAP32[(($81)>>2)])|0);
 __ZN9b2Contact7DestroyEPS_P16b2BlockAllocator($c,$82);
 $83=(($this+64)|0);
 $84=((HEAP32[(($83)>>2)])|0);
 $85=((($84)-(1))|0);
 HEAP32[(($83)>>2)]=$85;
 return;
}


function __ZN16b2ContactManager7CollideEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$c_025=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$19=0,$21=0,$c_0_be=0;
 var $22=0,$24=0,$25=0,$27=0,$28=0,$29=0,$30=0,$31=0,$33=0,$35=0,$36=0,$38=0,$40=0,$41=0,$42=0,$phitmp=0,$44=0,$45=0,$47=0,$48=0;
 var $phitmp24=0,$50=0,$51=0,$or_cond=0,$53=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$65=0,$67=0,$68=0,label=0;

 $1=(($this+60)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 }
 $4=(($this)|0);
 $5=(($this+72)|0);
 $6=(($this+68)|0);
 $c_025=$2;
 while(1) {

  $8=((__ZN9b2Contact11GetFixtureAEv($c_025))|0);
  $9=((__ZN9b2Contact11GetFixtureBEv($c_025))|0);
  $10=((__ZNK9b2Contact14GetChildIndexAEv($c_025))|0);
  $11=((__ZNK9b2Contact14GetChildIndexBEv($c_025))|0);
  $12=((__ZN9b2Fixture7GetBodyEv($8))|0);
  $13=((__ZN9b2Fixture7GetBodyEv($9))|0);
  $14=(($c_025+4)|0);
  $15=((HEAP32[(($14)>>2)])|0);
  $16=$15&8;
  $17=($16|0)==0;
  L6: do {
   if ($17) {
    label = 11;
   } else {
    $19=((__ZNK6b2Body13ShouldCollideEPKS_($13,$12))|0);
    if (!($19)) {
     $21=((__ZN9b2Contact7GetNextEv($c_025))|0);
     __ZN16b2ContactManager7DestroyEP9b2Contact($this,$c_025);
     $c_0_be=$21;
     break;
    }
    $24=((HEAP32[(($6)>>2)])|0);
    $25=($24|0)==0;
    do {
     if (!($25)) {
      $27=$24;
      $28=((HEAP32[(($27)>>2)])|0);
      $29=(($28+8)|0);
      $30=((HEAP32[(($29)>>2)])|0);
      $31=((FUNCTION_TABLE_iiii[($30)&31]($24,$8,$9))|0);
      if ($31) {
       break;
      }
      $33=((__ZN9b2Contact7GetNextEv($c_025))|0);
      __ZN16b2ContactManager7DestroyEP9b2Contact($this,$c_025);
      $c_0_be=$33;
      break L6;
     }
    } while(0);
    $35=((HEAP32[(($14)>>2)])|0);
    $36=$35&-9;
    HEAP32[(($14)>>2)]=$36;
    label = 11;
   }
  } while(0);
  do {
   if ((label|0) == 11) {
    label = 0;
    $38=((__ZNK6b2Body7IsAwakeEv($12))|0);
    if ($38) {
     $40=(($12)|0);
     $41=((HEAP32[(($40)>>2)])|0);
     $42=($41|0)!=0;
     $phitmp=($42&1);
     $44=$phitmp;
    } else {
     $44=0;
    }

    $45=((__ZNK6b2Body7IsAwakeEv($13))|0);
    if ($45) {
     $47=(($13)|0);
     $48=((HEAP32[(($47)>>2)])|0);
     $phitmp24=($48|0)==0;
     $50=$phitmp24;
    } else {
     $50=1;
    }

    $51=($44|0)==0;
    $or_cond=$51&$50;
    if ($or_cond) {
     $53=((__ZN9b2Contact7GetNextEv($c_025))|0);
     $c_0_be=$53;
     break;
    }
    $55=(($8+24)|0);
    $56=((HEAP32[(($55)>>2)])|0);
    $57=(($56+((($10)*(28))&-1)+24)|0);
    $58=((HEAP32[(($57)>>2)])|0);
    $59=(($9+24)|0);
    $60=((HEAP32[(($59)>>2)])|0);
    $61=(($60+((($11)*(28))&-1)+24)|0);
    $62=((HEAP32[(($61)>>2)])|0);
    $63=((__ZNK12b2BroadPhase11TestOverlapEii($4,$58,$62))|0);
    if ($63) {
     $67=((HEAP32[(($5)>>2)])|0);
     __ZN9b2Contact6UpdateEP17b2ContactListener($c_025,$67);
     $68=((__ZN9b2Contact7GetNextEv($c_025))|0);
     $c_0_be=$68;
     break;
    } else {
     $65=((__ZN9b2Contact7GetNextEv($c_025))|0);
     __ZN16b2ContactManager7DestroyEP9b2Contact($this,$c_025);
     $c_0_be=$65;
     break;
    }
   }
  } while(0);

  $22=($c_0_be|0)==0;
  if ($22) {
   break;
  } else {
   $c_025=$c_0_be;
  }
 }
 return;
}


function __ZNK12b2BroadPhase11TestOverlapEii($this,$proxyIdA,$proxyIdB){
 $this=($this)|0;
 $proxyIdA=($proxyIdA)|0;
 $proxyIdB=($proxyIdB)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK13b2DynamicTree10GetFatAABBEi($1,$proxyIdA))|0);
 $3=((__ZNK13b2DynamicTree10GetFatAABBEi($1,$proxyIdB))|0);
 $4=((__Z13b2TestOverlapRK6b2AABBS1_($2,$3))|0);
 return (($4)|0);
}


function __ZN16b2ContactManager15FindNewContactsEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_($1,$this);
 return;
}


function __ZN12b2BroadPhase11UpdatePairsI16b2ContactManagerEEvPT_($this,$callback){
 $this=($this)|0;
 $callback=($callback)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$i_014=0,$10=0,$11=0,$12=0,$13=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$i1_013=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$i1_1_in=0,$i1_1=0,$40=0,$42=0;
 var $43=0,$44=0,$45=0,$46=0,$48=0,$49=0,$50=0,$51=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this+52)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+40)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)>0;
 if ($5) {
  $6=(($this+32)|0);
  $7=(($this+56)|0);
  $8=(($this)|0);
  $i_014=0;
  while(1) {

   $10=((HEAP32[(($6)>>2)])|0);
   $11=(($10+($i_014<<2))|0);
   $12=((HEAP32[(($11)>>2)])|0);
   HEAP32[(($7)>>2)]=$12;
   $13=($12|0)==-1;
   if (!($13)) {
    $15=((__ZNK13b2DynamicTree10GetFatAABBEi($8,$12))|0);
    __ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB($8,$this,$15);
   }
   $17=((($i_014)+(1))|0);
   $18=((HEAP32[(($3)>>2)])|0);
   $19=($17|0)<($18|0);
   if ($19) {
    $i_014=$17;
   } else {
    break;
   }
  }
 }
 HEAP32[(($3)>>2)]=0;
 $20=(($this+44)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=((HEAP32[(($2)>>2)])|0);
 $23=(($21+($22<<3))|0);
 $24=$1;
 HEAP32[(($1)>>2)]=60;
 __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($21,$23,$1);
 $25=((HEAP32[(($2)>>2)])|0);
 $26=($25|0)>0;
 if (!($26)) {
  STACKTOP=sp;return;
 }
 $27=(($this)|0);
 $i1_013=0;
 while(1) {

  $31=((HEAP32[(($20)>>2)])|0);
  $32=(($31+($i1_013<<3))|0);
  $33=((HEAP32[(($32)>>2)])|0);
  $34=((__ZNK13b2DynamicTree11GetUserDataEi($27,$33))|0);
  $35=(($31+($i1_013<<3)+4)|0);
  $36=((HEAP32[(($35)>>2)])|0);
  $37=((__ZNK13b2DynamicTree11GetUserDataEi($27,$36))|0);
  __ZN16b2ContactManager7AddPairEPvS0_($callback,$34,$37);
  $38=((HEAP32[(($2)>>2)])|0);
  $i1_1_in=$i1_013;
  while(1) {

   $i1_1=((($i1_1_in)+(1))|0);
   $40=($i1_1|0)<($38|0);
   if (!($40)) {
    break;
   }
   $42=((HEAP32[(($20)>>2)])|0);
   $43=(($42+($i1_1<<3))|0);
   $44=((HEAP32[(($43)>>2)])|0);
   $45=((HEAP32[(($32)>>2)])|0);
   $46=($44|0)==($45|0);
   if (!($46)) {
    break;
   }
   $48=(($42+($i1_1<<3)+4)|0);
   $49=((HEAP32[(($48)>>2)])|0);
   $50=((HEAP32[(($35)>>2)])|0);
   $51=($49|0)==($50|0);
   if ($51) {
    $i1_1_in=$i1_1;
   } else {
    break;
   }
  }
  $28=((HEAP32[(($2)>>2)])|0);
  $29=($i1_1|0)<($28|0);
  if ($29) {
   $i1_013=$i1_1;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ContactManager7AddPairEPvS0_($this,$proxyUserDataA,$proxyUserDataB){
 $this=($this)|0;
 $proxyUserDataA=($proxyUserDataA)|0;
 $proxyUserDataB=($proxyUserDataB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$edge_072=0,$19=0,$20=0;
 var $21=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$or_cond=0,$31=0,$or_cond67=0,$32=0,$or_cond68=0,$34=0,$35=0,$or_cond69=0,$36=0,$or_cond70=0,$37=0;
 var $or_cond71=0,$39=0,$40=0,$41=0,$42=0,$44=0,$45=0,$46=0,$48=0,$49=0,$50=0,$51=0,$52=0,$54=0,$55=0,$56=0,$57=0,$59=0,$60=0,$61=0;
 var $62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$70=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$82=0,$84=0,$85=0;
 var $86=0,$87=0,$88=0,$89=0,$90=0,$91=0,$92=0,$94=0,$96=0,$98=0,$101=0,$102=0,$103=0,label=0;

 $1=(($proxyUserDataA+16)|0);
 $2=$1;
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($proxyUserDataB+16)|0);
 $5=$4;
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($proxyUserDataA+20)|0);
 $8=$7;
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($proxyUserDataB+20)|0);
 $11=$10;
 $12=((HEAP32[(($11)>>2)])|0);
 $13=((__ZN9b2Fixture7GetBodyEv($3))|0);
 $14=((__ZN9b2Fixture7GetBodyEv($6))|0);
 $15=($13|0)==($14|0);
 if ($15) {
  return;
 }
 $17=((__ZN6b2Body14GetContactListEv($14))|0);
 $18=($17|0)==0;
 L4: do {
  if (!($18)) {
   $edge_072=$17;
   while(1) {

    $19=(($edge_072)|0);
    $20=((HEAP32[(($19)>>2)])|0);
    $21=($20|0)==($13|0);
    if ($21) {
     $23=(($edge_072+4)|0);
     $24=((HEAP32[(($23)>>2)])|0);
     $25=((__ZN9b2Contact11GetFixtureAEv($24))|0);
     $26=((__ZN9b2Contact11GetFixtureBEv($24))|0);
     $27=((__ZNK9b2Contact14GetChildIndexAEv($24))|0);
     $28=((__ZNK9b2Contact14GetChildIndexBEv($24))|0);
     $29=($25|0)==($3|0);
     $30=($26|0)==($6|0);
     $or_cond=$29&$30;
     $31=($27|0)==($9|0);
     $or_cond67=$or_cond&$31;
     $32=($28|0)==($12|0);
     $or_cond68=$or_cond67&$32;
     if ($or_cond68) {
      label = 21;
      break;
     }
     $34=($25|0)==($6|0);
     $35=($26|0)==($3|0);
     $or_cond69=$34&$35;
     $36=($27|0)==($12|0);
     $or_cond70=$or_cond69&$36;
     $37=($28|0)==($9|0);
     $or_cond71=$or_cond70&$37;
     if ($or_cond71) {
      label = 21;
      break;
     }
    }
    $39=(($edge_072+12)|0);
    $40=((HEAP32[(($39)>>2)])|0);
    $41=($40|0)==0;
    if ($41) {
     break L4;
    } else {
     $edge_072=$40;
    }
   }
   if ((label|0) == 21) {
    return;
   }
  }
 } while(0);
 $42=((__ZNK6b2Body13ShouldCollideEPKS_($14,$13))|0);
 if (!($42)) {
  return;
 }
 $44=(($this+68)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=($45|0)==0;
 do {
  if (!($46)) {
   $48=$45;
   $49=((HEAP32[(($48)>>2)])|0);
   $50=(($49+8)|0);
   $51=((HEAP32[(($50)>>2)])|0);
   $52=((FUNCTION_TABLE_iiii[($51)&31]($45,$3,$6))|0);
   if ($52) {
    break;
   }
   return;
  }
 } while(0);
 $54=(($this+76)|0);
 $55=((HEAP32[(($54)>>2)])|0);
 $56=((__ZN9b2Contact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator($3,$9,$6,$12,$55))|0);
 $57=($56|0)==0;
 if ($57) {
  return;
 }
 $59=((__ZN9b2Contact11GetFixtureAEv($56))|0);
 $60=((__ZN9b2Contact11GetFixtureBEv($56))|0);
 $61=((__ZN9b2Fixture7GetBodyEv($59))|0);
 $62=((__ZN9b2Fixture7GetBodyEv($60))|0);
 $63=(($56+8)|0);
 HEAP32[(($63)>>2)]=0;
 $64=(($this+60)|0);
 $65=((HEAP32[(($64)>>2)])|0);
 $66=(($56+12)|0);
 HEAP32[(($66)>>2)]=$65;
 $67=((HEAP32[(($64)>>2)])|0);
 $68=($67|0)==0;
 if (!($68)) {
  $70=(($67+8)|0);
  HEAP32[(($70)>>2)]=$56;
 }
 HEAP32[(($64)>>2)]=$56;
 $72=(($56+16)|0);
 $73=(($56+20)|0);
 HEAP32[(($73)>>2)]=$56;
 $74=(($72)|0);
 HEAP32[(($74)>>2)]=$62;
 $75=(($56+24)|0);
 HEAP32[(($75)>>2)]=0;
 $76=(($61+128)|0);
 $77=((HEAP32[(($76)>>2)])|0);
 $78=(($56+28)|0);
 HEAP32[(($78)>>2)]=$77;
 $79=((HEAP32[(($76)>>2)])|0);
 $80=($79|0)==0;
 if (!($80)) {
  $82=(($79+8)|0);
  HEAP32[(($82)>>2)]=$72;
 }
 HEAP32[(($76)>>2)]=$72;
 $84=(($56+32)|0);
 $85=(($56+36)|0);
 HEAP32[(($85)>>2)]=$56;
 $86=(($84)|0);
 HEAP32[(($86)>>2)]=$61;
 $87=(($56+40)|0);
 HEAP32[(($87)>>2)]=0;
 $88=(($62+128)|0);
 $89=((HEAP32[(($88)>>2)])|0);
 $90=(($56+44)|0);
 HEAP32[(($90)>>2)]=$89;
 $91=((HEAP32[(($88)>>2)])|0);
 $92=($91|0)==0;
 if (!($92)) {
  $94=(($91+8)|0);
  HEAP32[(($94)>>2)]=$84;
 }
 HEAP32[(($88)>>2)]=$84;
 $96=((__ZNK9b2Fixture8IsSensorEv($59))|0);
 do {
  if (!($96)) {
   $98=((__ZNK9b2Fixture8IsSensorEv($60))|0);
   if ($98) {
    break;
   }
   __ZN6b2Body8SetAwakeEb($61,1);
   __ZN6b2Body8SetAwakeEb($62,1);
  }
 } while(0);
 $101=(($this+64)|0);
 $102=((HEAP32[(($101)>>2)])|0);
 $103=((($102)+(1))|0);
 HEAP32[(($101)>>2)]=$103;
 return;
}


function __ZNK13b2DynamicTree5QueryI12b2BroadPhaseEEvPT_RK6b2AABB($this,$callback,$aabb){
 $this=($this)|0;
 $callback=($callback)|0;
 $aabb=($aabb)|0;
 var $stack=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$lpad_phi$0=0,$lpad_phi$1=0,$12=0,$13=0,$14=0,$15=0,$17=0,$19=0,$22=0,$24=0,$lpad_loopexit$0=0;
 var $lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$27$0=0,$27$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+1040)|0;
 $stack=((sp)|0);
 __ZN15b2GrowableStackIiLi256EEC1Ev($stack);
 $1=(($this)|0);
 __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$1);
 $2=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
 $3=($2|0)>0;
 if (!($3)) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
 $4=(($this+4)|0);
 L5: while(1) {
  $6=((__ZN15b2GrowableStackIiLi256EE3PopEv($stack))|0);
  $7=($6|0)==-1;
  do {
   if (!($7)) {
    $12=((HEAP32[(($4)>>2)])|0);
    $13=(($12+((($6)*(36))&-1))|0);
    $14=(($13)|0);
    $15=((__Z13b2TestOverlapRK6b2AABBS1_($14,$aabb))|0);
    if (!($15)) {
     break;
    }
    $17=((__ZNK10b2TreeNode6IsLeafEv($13))|0);
    if ($17) {
     $19=((__ZN12b2BroadPhase13QueryCallbackEi($callback,$6))|0);
     if ($19) {
      break;
     } else {
      label = 15;
      break L5;
     }
    } else {
     $22=(($12+((($6)*(36))&-1)+24)|0);
     __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$22);
     $24=(($12+((($6)*(36))&-1)+28)|0);
     __ZN15b2GrowableStackIiLi256EE4PushERKi($stack,$24);
     break;
    }
   }
  } while(0);
  $8=((__ZN15b2GrowableStackIiLi256EE8GetCountEv($stack))|0);
  $9=($8|0)>0;
  if (!($9)) {
   label = 15;
   break;
  }
 }
 if ((label|0) == 15) {
  __ZN15b2GrowableStackIiLi256EED1Ev($stack);
  STACKTOP=sp;return;
 }
}


function __Z14b2PairLessThanRK6b2PairS1_($pair1,$pair2){
 $pair1=($pair1)|0;
 $pair2=($pair2)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$9=0,$10=0,$11=0,$12=0,$13=0,$_0=0,label=0;

 $1=(($pair1)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($pair2)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)<($4|0);
 if ($5) {
  $_0=1;

  return (($_0)|0);
 }
 $7=($2|0)==($4|0);
 if (!($7)) {
  $_0=0;

  return (($_0)|0);
 }
 $9=(($pair1+4)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($pair2+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($10|0)<($12|0);
 $_0=$13;

 return (($_0)|0);
}


function __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $_0129_ph=0,$_0_ph=0,$1=0,$2=0,$3=0,$_0=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$14=0,$ld$2$0=0,$15$0=0;
 var $ld$3$1=0,$15$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0,$24=0,$26=0,$27=0,$28=0,$29=0,$30=0,$32=0,$35=0;
 var $36=0,$37=0,$39=0,$40=0,$_sum=0,$41=0,$42=0,$44=0,$__n_swaps_0=0,$46=0,$47=0,$__j_0=0,$48=0,$49=0,$51=0,$52=0,$53=0,$__i_0=0,$54=0,$56=0;
 var $57=0,$58=0,$60=0,$ld$8$0=0,$61$0=0,$ld$9$1=0,$61$1=0,$ld$10$0=0,$62$0=0,$ld$11$1=0,$62$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$63=0,$__i_1=0,$65=0,$__i_2_ph=0,$__j_1_ph=0;
 var $__i_2=0,$67=0,$68=0,$69=0,$__j_2=0,$70=0,$71=0,$72=0,$74=0,$76=0,$ld$16$0=0,$77$0=0,$ld$17$1=0,$77$1=0,$78=0,$ld$18$0=0,$79$0=0,$ld$19$1=0,$79$1=0,$st$20$0=0;
 var $st$21$1=0,$st$22$0=0,$st$23$1=0,$80=0,$82=0,$83=0,$85=0,$ld$24$0=0,$86$0=0,$ld$25$1=0,$86$1=0,$87=0,$ld$26$0=0,$88$0=0,$ld$27$1=0,$88$1=0,$st$28$0=0,$st$29$1=0,$st$30$0=0,$st$31$1=0;
 var $89=0,$__n_swaps_3=0,$__j_3=0,$91=0,$92=0,$__m_0_ph=0,$__n_swaps_4_ph=0,$__i_3_ph=0,$__j_4_ph=0,$__i_3=0,$94=0,$95=0,$96=0,$__j_5=0,$97=0,$98=0,$99=0,$101=0,$103=0,$ld$32$0=0;
 var $104$0=0,$ld$33$1=0,$104$1=0,$105=0,$ld$34$0=0,$106$0=0,$ld$35$1=0,$106$1=0,$st$36$0=0,$st$37$1=0,$st$38$0=0,$st$39$1=0,$107=0,$108=0,$___m_0=0,$109=0,$__m_2=0,$__n_swaps_5=0,$__i_4=0,$110=0;
 var $112=0,$113=0,$115=0,$ld$40$0=0,$116$0=0,$ld$41$1=0,$116$1=0,$117=0,$ld$42$0=0,$118$0=0,$ld$43$1=0,$118$1=0,$st$44$0=0,$st$45$1=0,$st$46$0=0,$st$47$1=0,$119=0,$__n_swaps_6=0,$121=0,$123=0;
 var $124=0,$125=0,$129=0,$130=0,$131=0,$132=0,$134=0,$136=0,label=0;

 $_0_ph=$__first;$_0129_ph=$__last;
 L1: while(1) {


  $1=$_0129_ph;
  $2=((($_0129_ph)-(8))|0);
  $3=$2;
  $_0=$_0_ph;
  L3: while(1) {

   $4=$_0;
   $5=((($1)-($4))|0);
   $6=$5>>3;
   switch (($6|0)) {
   case 4: {
    label = 7;
    break L1;
    break;
   }
   case 5: {
    label = 8;
    break L1;
    break;
   }
   case 2: {
    label = 4;
    break L1;
    break;
   }
   case 3: {
    label = 6;
    break L1;
    break;
   }
   case 0:case 1: {
    label = 44;
    break L1;
    break;
   }
   default: {
   }
   }
   $32=($5|0)<248;
   if ($32) {
    label = 10;
    break L1;
   }
   $35=($5|0)>7992;
   $36=(((($6|0))/(2))&-1);
   $37=(($_0+($36<<3))|0);
   if ($35) {
    $39=(((($6|0))/(4))&-1);
    $40=(($_0+($39<<3))|0);
    $_sum=((($39)+($36))|0);
    $41=(($_0+($_sum<<3))|0);
    $42=((__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($_0,$40,$37,$41,$2,$__comp))|0);
    $__n_swaps_0=$42;
   } else {
    $44=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($_0,$37,$2,$__comp))|0);
    $__n_swaps_0=$44;
   }

   $46=((HEAP32[(($__comp)>>2)])|0);
   $47=((FUNCTION_TABLE_iii[($46)&63]($_0,$37))|0);
   do {
    if ($47) {
     $__j_3=$2;$__n_swaps_3=$__n_swaps_0;
    } else {
     $__j_0=$2;
     while(1) {

      $48=((($__j_0)-(8))|0);
      $49=($_0|0)==($48|0);
      if ($49) {
       break;
      }
      $82=((HEAP32[(($__comp)>>2)])|0);
      $83=((FUNCTION_TABLE_iii[($82)&63]($48,$37))|0);
      if ($83) {
       label = 27;
       break;
      } else {
       $__j_0=$48;
      }
     }
     if ((label|0) == 27) {
      label = 0;
      $85=$_0;
      $ld$24$0=(($85)|0);
      $86$0=((HEAP32[(($ld$24$0)>>2)])|0);
      $ld$25$1=(($85+4)|0);
      $86$1=((HEAP32[(($ld$25$1)>>2)])|0);
      $87=$48;
      $ld$26$0=(($87)|0);
      $88$0=((HEAP32[(($ld$26$0)>>2)])|0);
      $ld$27$1=(($87+4)|0);
      $88$1=((HEAP32[(($ld$27$1)>>2)])|0);
      $st$28$0=(($85)|0);
      HEAP32[(($st$28$0)>>2)]=$88$0;
      $st$29$1=(($85+4)|0);
      HEAP32[(($st$29$1)>>2)]=$88$1;
      $st$30$0=(($87)|0);
      HEAP32[(($st$30$0)>>2)]=$86$0;
      $st$31$1=(($87+4)|0);
      HEAP32[(($st$31$1)>>2)]=$86$1;
      $89=((($__n_swaps_0)+(1))|0);
      $__j_3=$48;$__n_swaps_3=$89;
      break;
     }
     $51=(($_0+8)|0);
     $52=((HEAP32[(($__comp)>>2)])|0);
     $53=((FUNCTION_TABLE_iii[($52)&63]($_0,$2))|0);
     if ($53) {
      $__i_1=$51;
     } else {
      $__i_0=$51;
      while(1) {

       $54=($__i_0|0)==($2|0);
       if ($54) {
        label = 44;
        break L1;
       }
       $56=((HEAP32[(($__comp)>>2)])|0);
       $57=((FUNCTION_TABLE_iii[($56)&63]($_0,$__i_0))|0);
       $58=(($__i_0+8)|0);
       if ($57) {
        break;
       } else {
        $__i_0=$58;
       }
      }
      $60=$__i_0;
      $ld$8$0=(($60)|0);
      $61$0=((HEAP32[(($ld$8$0)>>2)])|0);
      $ld$9$1=(($60+4)|0);
      $61$1=((HEAP32[(($ld$9$1)>>2)])|0);
      $ld$10$0=(($3)|0);
      $62$0=((HEAP32[(($ld$10$0)>>2)])|0);
      $ld$11$1=(($3+4)|0);
      $62$1=((HEAP32[(($ld$11$1)>>2)])|0);
      $st$12$0=(($60)|0);
      HEAP32[(($st$12$0)>>2)]=$62$0;
      $st$13$1=(($60+4)|0);
      HEAP32[(($st$13$1)>>2)]=$62$1;
      $st$14$0=(($3)|0);
      HEAP32[(($st$14$0)>>2)]=$61$0;
      $st$15$1=(($3+4)|0);
      HEAP32[(($st$15$1)>>2)]=$61$1;
      $63=(($__i_0+8)|0);
      $__i_1=$63;
     }

     $65=($__i_1|0)==($2|0);
     if ($65) {
      label = 44;
      break L1;
     } else {
      $__j_1_ph=$2;$__i_2_ph=$__i_1;
     }
     while(1) {


      $__i_2=$__i_2_ph;
      while(1) {

       $67=((HEAP32[(($__comp)>>2)])|0);
       $68=((FUNCTION_TABLE_iii[($67)&63]($_0,$__i_2))|0);
       $69=(($__i_2+8)|0);
       if ($68) {
        $__j_2=$__j_1_ph;
        break;
       } else {
        $__i_2=$69;
       }
      }
      while(1) {

       $70=((HEAP32[(($__comp)>>2)])|0);
       $71=((($__j_2)-(8))|0);
       $72=((FUNCTION_TABLE_iii[($70)&63]($_0,$71))|0);
       if ($72) {
        $__j_2=$71;
       } else {
        break;
       }
      }
      $74=($__i_2>>>0)<($71>>>0);
      if (!($74)) {
       $_0=$__i_2;
       continue L3;
      }
      $76=$__i_2;
      $ld$16$0=(($76)|0);
      $77$0=((HEAP32[(($ld$16$0)>>2)])|0);
      $ld$17$1=(($76+4)|0);
      $77$1=((HEAP32[(($ld$17$1)>>2)])|0);
      $78=$71;
      $ld$18$0=(($78)|0);
      $79$0=((HEAP32[(($ld$18$0)>>2)])|0);
      $ld$19$1=(($78+4)|0);
      $79$1=((HEAP32[(($ld$19$1)>>2)])|0);
      $st$20$0=(($76)|0);
      HEAP32[(($st$20$0)>>2)]=$79$0;
      $st$21$1=(($76+4)|0);
      HEAP32[(($st$21$1)>>2)]=$79$1;
      $st$22$0=(($78)|0);
      HEAP32[(($st$22$0)>>2)]=$77$0;
      $st$23$1=(($78+4)|0);
      HEAP32[(($st$23$1)>>2)]=$77$1;
      $80=(($__i_2+8)|0);
      $__j_1_ph=$71;$__i_2_ph=$80;
     }
    }
   } while(0);


   $91=(($_0+8)|0);
   $92=($91>>>0)<($__j_3>>>0);
   L33: do {
    if ($92) {
     $__j_4_ph=$__j_3;$__i_3_ph=$91;$__n_swaps_4_ph=$__n_swaps_3;$__m_0_ph=$37;
     while(1) {




      $__i_3=$__i_3_ph;
      while(1) {

       $94=((HEAP32[(($__comp)>>2)])|0);
       $95=((FUNCTION_TABLE_iii[($94)&63]($__i_3,$__m_0_ph))|0);
       $96=(($__i_3+8)|0);
       if ($95) {
        $__i_3=$96;
       } else {
        $__j_5=$__j_4_ph;
        break;
       }
      }
      while(1) {

       $97=((HEAP32[(($__comp)>>2)])|0);
       $98=((($__j_5)-(8))|0);
       $99=((FUNCTION_TABLE_iii[($97)&63]($98,$__m_0_ph))|0);
       if ($99) {
        break;
       } else {
        $__j_5=$98;
       }
      }
      $101=($__i_3>>>0)>($98>>>0);
      if ($101) {
       $__i_4=$__i_3;$__n_swaps_5=$__n_swaps_4_ph;$__m_2=$__m_0_ph;
       break L33;
      }
      $103=$__i_3;
      $ld$32$0=(($103)|0);
      $104$0=((HEAP32[(($ld$32$0)>>2)])|0);
      $ld$33$1=(($103+4)|0);
      $104$1=((HEAP32[(($ld$33$1)>>2)])|0);
      $105=$98;
      $ld$34$0=(($105)|0);
      $106$0=((HEAP32[(($ld$34$0)>>2)])|0);
      $ld$35$1=(($105+4)|0);
      $106$1=((HEAP32[(($ld$35$1)>>2)])|0);
      $st$36$0=(($103)|0);
      HEAP32[(($st$36$0)>>2)]=$106$0;
      $st$37$1=(($103+4)|0);
      HEAP32[(($st$37$1)>>2)]=$106$1;
      $st$38$0=(($105)|0);
      HEAP32[(($st$38$0)>>2)]=$104$0;
      $st$39$1=(($105+4)|0);
      HEAP32[(($st$39$1)>>2)]=$104$1;
      $107=((($__n_swaps_4_ph)+(1))|0);
      $108=($__m_0_ph|0)==($__i_3|0);
      $___m_0=($108?$98:$__m_0_ph);
      $109=(($__i_3+8)|0);
      $__j_4_ph=$98;$__i_3_ph=$109;$__n_swaps_4_ph=$107;$__m_0_ph=$___m_0;
     }
    } else {
     $__i_4=$91;$__n_swaps_5=$__n_swaps_3;$__m_2=$37;
    }
   } while(0);



   $110=($__i_4|0)==($__m_2|0);
   do {
    if ($110) {
     $__n_swaps_6=$__n_swaps_5;
    } else {
     $112=((HEAP32[(($__comp)>>2)])|0);
     $113=((FUNCTION_TABLE_iii[($112)&63]($__m_2,$__i_4))|0);
     if (!($113)) {
      $__n_swaps_6=$__n_swaps_5;
      break;
     }
     $115=$__i_4;
     $ld$40$0=(($115)|0);
     $116$0=((HEAP32[(($ld$40$0)>>2)])|0);
     $ld$41$1=(($115+4)|0);
     $116$1=((HEAP32[(($ld$41$1)>>2)])|0);
     $117=$__m_2;
     $ld$42$0=(($117)|0);
     $118$0=((HEAP32[(($ld$42$0)>>2)])|0);
     $ld$43$1=(($117+4)|0);
     $118$1=((HEAP32[(($ld$43$1)>>2)])|0);
     $st$44$0=(($115)|0);
     HEAP32[(($st$44$0)>>2)]=$118$0;
     $st$45$1=(($115+4)|0);
     HEAP32[(($st$45$1)>>2)]=$118$1;
     $st$46$0=(($117)|0);
     HEAP32[(($st$46$0)>>2)]=$116$0;
     $st$47$1=(($117+4)|0);
     HEAP32[(($st$47$1)>>2)]=$116$1;
     $119=((($__n_swaps_5)+(1))|0);
     $__n_swaps_6=$119;
    }
   } while(0);

   $121=($__n_swaps_6|0)==0;
   if ($121) {
    $123=((__ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_($_0,$__i_4,$__comp))|0);
    $124=(($__i_4+8)|0);
    $125=((__ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_($124,$_0129_ph,$__comp))|0);
    if ($125) {
     label = 39;
     break;
    }
    if ($123) {
     $_0=$124;
     continue;
    }
   }
   $129=$__i_4;
   $130=((($129)-($4))|0);
   $131=((($1)-($129))|0);
   $132=($130|0)<($131|0);
   if (!($132)) {
    label = 43;
    break;
   }
   __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($_0,$__i_4,$__comp);
   $134=(($__i_4+8)|0);
   $_0=$134;
  }
  if ((label|0) == 39) {
   label = 0;
   if ($123) {
    label = 44;
    break;
   } else {
    $_0_ph=$_0;$_0129_ph=$__i_4;
    continue;
   }
  }
  else if ((label|0) == 43) {
   label = 0;
   $136=(($__i_4+8)|0);
   __ZNSt3__16__sortIRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($136,$_0129_ph,$__comp);
   $_0_ph=$_0;$_0129_ph=$__i_4;
   continue;
  }
 }
 if ((label|0) == 4) {
  $8=((HEAP32[(($__comp)>>2)])|0);
  $9=((($_0129_ph)-(8))|0);
  $10=((FUNCTION_TABLE_iii[($8)&63]($9,$_0))|0);
  if (!($10)) {
   return;
  }
  $12=$_0;
  $ld$0$0=(($12)|0);
  $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($12+4)|0);
  $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $14=$9;
  $ld$2$0=(($14)|0);
  $15$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($14+4)|0);
  $15$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($12)|0);
  HEAP32[(($st$4$0)>>2)]=$15$0;
  $st$5$1=(($12+4)|0);
  HEAP32[(($st$5$1)>>2)]=$15$1;
  $st$6$0=(($14)|0);
  HEAP32[(($st$6$0)>>2)]=$13$0;
  $st$7$1=(($14+4)|0);
  HEAP32[(($st$7$1)>>2)]=$13$1;
  return;
 }
 else if ((label|0) == 6) {
  $17=(($_0+8)|0);
  $18=((($_0129_ph)-(8))|0);
  $19=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($_0,$17,$18,$__comp))|0);
  return;
 }
 else if ((label|0) == 7) {
  $21=(($_0+8)|0);
  $22=(($_0+16)|0);
  $23=((($_0129_ph)-(8))|0);
  $24=((__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($_0,$21,$22,$23,$__comp))|0);
  return;
 }
 else if ((label|0) == 8) {
  $26=(($_0+8)|0);
  $27=(($_0+16)|0);
  $28=(($_0+24)|0);
  $29=((($_0129_ph)-(8))|0);
  $30=((__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($_0,$26,$27,$28,$29,$__comp))|0);
  return;
 }
 else if ((label|0) == 10) {
  __ZNSt3__118__insertion_sort_3IRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($_0,$_0129_ph,$__comp);
  return;
 }
 else if ((label|0) == 44) {
  return;
 }
}


function __ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__x,$__y,$__z,$__c){
 $__x=($__x)|0;
 $__y=($__y)|0;
 $__z=($__z)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$4=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$9=0,$ld$2$0=0,$10$0=0,$ld$3$1=0,$10$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$11=0,$12=0;
 var $14=0,$ld$8$0=0,$15$0=0,$ld$9$1=0,$15$1=0,$ld$10$0=0,$16$0=0,$ld$11$1=0,$16$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$18=0,$ld$16$0=0,$19$0=0,$ld$17$1=0,$19$1=0,$21=0,$ld$18$0=0;
 var $22$0=0,$ld$19$1=0,$22$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$24=0,$ld$24$0=0,$25$0=0,$ld$25$1=0,$25$1=0,$st$26$0=0,$st$27$1=0,$st$28$0=0,$st$29$1=0,$26=0,$27=0,$ld$30$0=0,$29$0=0;
 var $ld$31$1=0,$29$1=0,$30=0,$ld$32$0=0,$31$0=0,$ld$33$1=0,$31$1=0,$st$34$0=0,$st$35$1=0,$st$36$0=0,$st$37$1=0,$_0=0,label=0;

 $1=((HEAP32[(($__c)>>2)])|0);
 $2=((FUNCTION_TABLE_iii[($1)&63]($__y,$__x))|0);
 $3=((HEAP32[(($__c)>>2)])|0);
 $4=((FUNCTION_TABLE_iii[($3)&63]($__z,$__y))|0);
 if (!($2)) {
  if (!($4)) {
   $_0=0;

   return (($_0)|0);
  }
  $7=$__y;
  $ld$0$0=(($7)|0);
  $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($7+4)|0);
  $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $9=$__z;
  $ld$2$0=(($9)|0);
  $10$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($9+4)|0);
  $10$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($7)|0);
  HEAP32[(($st$4$0)>>2)]=$10$0;
  $st$5$1=(($7+4)|0);
  HEAP32[(($st$5$1)>>2)]=$10$1;
  $st$6$0=(($9)|0);
  HEAP32[(($st$6$0)>>2)]=$8$0;
  $st$7$1=(($9+4)|0);
  HEAP32[(($st$7$1)>>2)]=$8$1;
  $11=((HEAP32[(($__c)>>2)])|0);
  $12=((FUNCTION_TABLE_iii[($11)&63]($__y,$__x))|0);
  if (!($12)) {
   $_0=1;

   return (($_0)|0);
  }
  $14=$__x;
  $ld$8$0=(($14)|0);
  $15$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($14+4)|0);
  $15$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $ld$10$0=(($7)|0);
  $16$0=((HEAP32[(($ld$10$0)>>2)])|0);
  $ld$11$1=(($7+4)|0);
  $16$1=((HEAP32[(($ld$11$1)>>2)])|0);
  $st$12$0=(($14)|0);
  HEAP32[(($st$12$0)>>2)]=$16$0;
  $st$13$1=(($14+4)|0);
  HEAP32[(($st$13$1)>>2)]=$16$1;
  $st$14$0=(($7)|0);
  HEAP32[(($st$14$0)>>2)]=$15$0;
  $st$15$1=(($7+4)|0);
  HEAP32[(($st$15$1)>>2)]=$15$1;
  $_0=2;

  return (($_0)|0);
 }
 $18=$__x;
 $ld$16$0=(($18)|0);
 $19$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($18+4)|0);
 $19$1=((HEAP32[(($ld$17$1)>>2)])|0);
 if ($4) {
  $21=$__z;
  $ld$18$0=(($21)|0);
  $22$0=((HEAP32[(($ld$18$0)>>2)])|0);
  $ld$19$1=(($21+4)|0);
  $22$1=((HEAP32[(($ld$19$1)>>2)])|0);
  $st$20$0=(($18)|0);
  HEAP32[(($st$20$0)>>2)]=$22$0;
  $st$21$1=(($18+4)|0);
  HEAP32[(($st$21$1)>>2)]=$22$1;
  $st$22$0=(($21)|0);
  HEAP32[(($st$22$0)>>2)]=$19$0;
  $st$23$1=(($21+4)|0);
  HEAP32[(($st$23$1)>>2)]=$19$1;
  $_0=1;

  return (($_0)|0);
 }
 $24=$__y;
 $ld$24$0=(($24)|0);
 $25$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($24+4)|0);
 $25$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($18)|0);
 HEAP32[(($st$26$0)>>2)]=$25$0;
 $st$27$1=(($18+4)|0);
 HEAP32[(($st$27$1)>>2)]=$25$1;
 $st$28$0=(($24)|0);
 HEAP32[(($st$28$0)>>2)]=$19$0;
 $st$29$1=(($24+4)|0);
 HEAP32[(($st$29$1)>>2)]=$19$1;
 $26=((HEAP32[(($__c)>>2)])|0);
 $27=((FUNCTION_TABLE_iii[($26)&63]($__z,$__y))|0);
 if (!($27)) {
  $_0=1;

  return (($_0)|0);
 }
 $ld$30$0=(($24)|0);
 $29$0=((HEAP32[(($ld$30$0)>>2)])|0);
 $ld$31$1=(($24+4)|0);
 $29$1=((HEAP32[(($ld$31$1)>>2)])|0);
 $30=$__z;
 $ld$32$0=(($30)|0);
 $31$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($30+4)|0);
 $31$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($24)|0);
 HEAP32[(($st$34$0)>>2)]=$31$0;
 $st$35$1=(($24+4)|0);
 HEAP32[(($st$35$1)>>2)]=$31$1;
 $st$36$0=(($30)|0);
 HEAP32[(($st$36$0)>>2)]=$29$0;
 $st$37$1=(($30+4)|0);
 HEAP32[(($st$37$1)>>2)]=$29$1;
 $_0=2;

 return (($_0)|0);
}


function __ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($__x1,$__x2,$__x3,$__x4,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$7=0,$ld$2$0=0,$8$0=0,$ld$3$1=0,$8$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$9=0,$10=0,$11=0;
 var $13=0,$ld$8$0=0,$14$0=0,$ld$9$1=0,$14$1=0,$ld$10$0=0,$15$0=0,$ld$11$1=0,$15$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$16=0,$17=0,$18=0,$20=0,$ld$16$0=0,$21$0=0,$ld$17$1=0;
 var $21$1=0,$ld$18$0=0,$22$0=0,$ld$19$1=0,$22$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$23=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__x1,$__x2,$__x3,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&63]($__x4,$__x3))|0);
 if (!($3)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 $5=$__x3;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $7=$__x4;
 $ld$2$0=(($7)|0);
 $8$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($7+4)|0);
 $8$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $st$4$0=(($5)|0);
 HEAP32[(($st$4$0)>>2)]=$8$0;
 $st$5$1=(($5+4)|0);
 HEAP32[(($st$5$1)>>2)]=$8$1;
 $st$6$0=(($7)|0);
 HEAP32[(($st$6$0)>>2)]=$6$0;
 $st$7$1=(($7+4)|0);
 HEAP32[(($st$7$1)>>2)]=$6$1;
 $9=((($1)+(1))|0);
 $10=((HEAP32[(($__c)>>2)])|0);
 $11=((FUNCTION_TABLE_iii[($10)&63]($__x3,$__x2))|0);
 if (!($11)) {
  $__r_0=$9;

  return (($__r_0)|0);
 }
 $13=$__x2;
 $ld$8$0=(($13)|0);
 $14$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $ld$10$0=(($5)|0);
 $15$0=((HEAP32[(($ld$10$0)>>2)])|0);
 $ld$11$1=(($5+4)|0);
 $15$1=((HEAP32[(($ld$11$1)>>2)])|0);
 $st$12$0=(($13)|0);
 HEAP32[(($st$12$0)>>2)]=$15$0;
 $st$13$1=(($13+4)|0);
 HEAP32[(($st$13$1)>>2)]=$15$1;
 $st$14$0=(($5)|0);
 HEAP32[(($st$14$0)>>2)]=$14$0;
 $st$15$1=(($5+4)|0);
 HEAP32[(($st$15$1)>>2)]=$14$1;
 $16=((($1)+(2))|0);
 $17=((HEAP32[(($__c)>>2)])|0);
 $18=((FUNCTION_TABLE_iii[($17)&63]($__x2,$__x1))|0);
 if (!($18)) {
  $__r_0=$16;

  return (($__r_0)|0);
 }
 $20=$__x1;
 $ld$16$0=(($20)|0);
 $21$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $ld$18$0=(($13)|0);
 $22$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($13+4)|0);
 $22$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $st$20$0=(($20)|0);
 HEAP32[(($st$20$0)>>2)]=$22$0;
 $st$21$1=(($20+4)|0);
 HEAP32[(($st$21$1)>>2)]=$22$1;
 $st$22$0=(($13)|0);
 HEAP32[(($st$22$0)>>2)]=$21$0;
 $st$23$1=(($13+4)|0);
 HEAP32[(($st$23$1)>>2)]=$21$1;
 $23=((($1)+(3))|0);
 $__r_0=$23;

 return (($__r_0)|0);
}


function __ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($__x1,$__x2,$__x3,$__x4,$__x5,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__x5=($__x5)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$7=0,$ld$2$0=0,$8$0=0,$ld$3$1=0,$8$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$9=0,$10=0,$11=0;
 var $13=0,$ld$8$0=0,$14$0=0,$ld$9$1=0,$14$1=0,$ld$10$0=0,$15$0=0,$ld$11$1=0,$15$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$16=0,$17=0,$18=0,$20=0,$ld$16$0=0,$21$0=0,$ld$17$1=0;
 var $21$1=0,$ld$18$0=0,$22$0=0,$ld$19$1=0,$22$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$23=0,$24=0,$25=0,$27=0,$ld$24$0=0,$28$0=0,$ld$25$1=0,$28$1=0,$ld$26$0=0,$29$0=0,$ld$27$1=0;
 var $29$1=0,$st$28$0=0,$st$29$1=0,$st$30$0=0,$st$31$1=0,$30=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($__x1,$__x2,$__x3,$__x4,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&63]($__x5,$__x4))|0);
 if (!($3)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 $5=$__x4;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $7=$__x5;
 $ld$2$0=(($7)|0);
 $8$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($7+4)|0);
 $8$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $st$4$0=(($5)|0);
 HEAP32[(($st$4$0)>>2)]=$8$0;
 $st$5$1=(($5+4)|0);
 HEAP32[(($st$5$1)>>2)]=$8$1;
 $st$6$0=(($7)|0);
 HEAP32[(($st$6$0)>>2)]=$6$0;
 $st$7$1=(($7+4)|0);
 HEAP32[(($st$7$1)>>2)]=$6$1;
 $9=((($1)+(1))|0);
 $10=((HEAP32[(($__c)>>2)])|0);
 $11=((FUNCTION_TABLE_iii[($10)&63]($__x4,$__x3))|0);
 if (!($11)) {
  $__r_0=$9;

  return (($__r_0)|0);
 }
 $13=$__x3;
 $ld$8$0=(($13)|0);
 $14$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $ld$10$0=(($5)|0);
 $15$0=((HEAP32[(($ld$10$0)>>2)])|0);
 $ld$11$1=(($5+4)|0);
 $15$1=((HEAP32[(($ld$11$1)>>2)])|0);
 $st$12$0=(($13)|0);
 HEAP32[(($st$12$0)>>2)]=$15$0;
 $st$13$1=(($13+4)|0);
 HEAP32[(($st$13$1)>>2)]=$15$1;
 $st$14$0=(($5)|0);
 HEAP32[(($st$14$0)>>2)]=$14$0;
 $st$15$1=(($5+4)|0);
 HEAP32[(($st$15$1)>>2)]=$14$1;
 $16=((($1)+(2))|0);
 $17=((HEAP32[(($__c)>>2)])|0);
 $18=((FUNCTION_TABLE_iii[($17)&63]($__x3,$__x2))|0);
 if (!($18)) {
  $__r_0=$16;

  return (($__r_0)|0);
 }
 $20=$__x2;
 $ld$16$0=(($20)|0);
 $21$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $ld$18$0=(($13)|0);
 $22$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($13+4)|0);
 $22$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $st$20$0=(($20)|0);
 HEAP32[(($st$20$0)>>2)]=$22$0;
 $st$21$1=(($20+4)|0);
 HEAP32[(($st$21$1)>>2)]=$22$1;
 $st$22$0=(($13)|0);
 HEAP32[(($st$22$0)>>2)]=$21$0;
 $st$23$1=(($13+4)|0);
 HEAP32[(($st$23$1)>>2)]=$21$1;
 $23=((($1)+(3))|0);
 $24=((HEAP32[(($__c)>>2)])|0);
 $25=((FUNCTION_TABLE_iii[($24)&63]($__x2,$__x1))|0);
 if (!($25)) {
  $__r_0=$23;

  return (($__r_0)|0);
 }
 $27=$__x1;
 $ld$24$0=(($27)|0);
 $28$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($27+4)|0);
 $28$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $ld$26$0=(($20)|0);
 $29$0=((HEAP32[(($ld$26$0)>>2)])|0);
 $ld$27$1=(($20+4)|0);
 $29$1=((HEAP32[(($ld$27$1)>>2)])|0);
 $st$28$0=(($27)|0);
 HEAP32[(($st$28$0)>>2)]=$29$0;
 $st$29$1=(($27+4)|0);
 HEAP32[(($st$29$1)>>2)]=$29$1;
 $st$30$0=(($20)|0);
 HEAP32[(($st$30$0)>>2)]=$28$0;
 $st$31$1=(($20+4)|0);
 HEAP32[(($st$31$1)>>2)]=$28$1;
 $30=((($1)+(4))|0);
 $__r_0=$30;

 return (($__r_0)|0);
}


function __ZNSt3__118__insertion_sort_3IRPFbRK6b2PairS3_EPS1_EEvT0_S8_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$5=0,$__i_022=0,$__j_021=0,$6=0,$7=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$__j_1=0,$__k_0=0;
 var $12=0,$13=0,$ld$4$0=0,$14$0=0,$ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$17=0,$18=0,$19=0,$ld$8$0=0,$20$0=0,$ld$9$1=0,$20$1=0,$st$10$0=0,$st$11$1=0,$22=0,$23=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $__t=((sp)|0);
 $tmpcast=$__t;
 $1=(($__first+16)|0);
 $2=(($__first+8)|0);
 $3=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__first,$2,$1,$__comp))|0);
 $4=(($__first+24)|0);
 $5=($4|0)==($__last|0);
 if ($5) {
  STACKTOP=sp;return;
 } else {
  $__j_021=$1;$__i_022=$4;
 }
 while(1) {


  $6=((HEAP32[(($__comp)>>2)])|0);
  $7=((FUNCTION_TABLE_iii[($6)&63]($__i_022,$__j_021))|0);
  if ($7) {
   $9=$__i_022;
   $ld$0$0=(($9)|0);
   $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($9+4)|0);
   $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($__t)|0);
   HEAP32[(($st$2$0)>>2)]=$10$0;
   $st$3$1=(($__t+4)|0);
   HEAP32[(($st$3$1)>>2)]=$10$1;
   $__k_0=$__j_021;$__j_1=$__i_022;
   while(1) {


    $12=$__k_0;
    $13=$__j_1;
    $ld$4$0=(($12)|0);
    $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
    $ld$5$1=(($12+4)|0);
    $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
    $st$6$0=(($13)|0);
    HEAP32[(($st$6$0)>>2)]=$14$0;
    $st$7$1=(($13+4)|0);
    HEAP32[(($st$7$1)>>2)]=$14$1;
    $15=($__k_0|0)==($__first|0);
    if ($15) {
     break;
    }
    $17=((HEAP32[(($__comp)>>2)])|0);
    $18=((($__k_0)-(8))|0);
    $19=((FUNCTION_TABLE_iii[($17)&63]($tmpcast,$18))|0);
    if ($19) {
     $__j_1=$__k_0;$__k_0=$18;
    } else {
     break;
    }
   }
   $ld$8$0=(($__t)|0);
   $20$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($__t+4)|0);
   $20$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($12)|0);
   HEAP32[(($st$10$0)>>2)]=$20$0;
   $st$11$1=(($12+4)|0);
   HEAP32[(($st$11$1)>>2)]=$20$1;
  }
  $22=(($__i_022+8)|0);
  $23=($22|0)==($__last|0);
  if ($23) {
   break;
  } else {
   $__j_021=$__i_022;$__i_022=$22;
  }
 }
 STACKTOP=sp;return;
}


function __ZNSt3__127__insertion_sort_incompleteIRPFbRK6b2PairS3_EPS1_EEbT0_S8_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$12=0,$ld$2$0=0,$13$0=0,$ld$3$1=0,$13$1=0,$st$4$0=0;
 var $st$5$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0,$24=0,$25=0,$26=0,$27=0,$28=0,$30=0,$31=0,$32=0,$33=0,$34=0;
 var $__i_049=0,$__count_048=0,$__j_047=0,$35=0,$36=0,$38=0,$ld$8$0=0,$39$0=0,$ld$9$1=0,$39$1=0,$st$10$0=0,$st$11$1=0,$__j_1=0,$__k_0=0,$41=0,$42=0,$ld$12$0=0,$43$0=0,$ld$13$1=0,$43$1=0;
 var $st$14$0=0,$st$15$1=0,$44=0,$46=0,$47=0,$48=0,$ld$16$0=0,$49$0=0,$ld$17$1=0,$49$1=0,$st$18$0=0,$st$19$1=0,$50=0,$51=0,$53=0,$54=0,$__count_1=0,$56=0,$57=0,$_0=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $__t=((sp)|0);
 $tmpcast=$__t;
 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>3;
 switch (($4|0)) {
 case 2: {
  $6=((HEAP32[(($__comp)>>2)])|0);
  $7=((($__last)-(8))|0);
  $8=((FUNCTION_TABLE_iii[($6)&63]($7,$__first))|0);
  if (!($8)) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $10=$__first;
  $ld$0$0=(($10)|0);
  $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($10+4)|0);
  $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $12=$7;
  $ld$2$0=(($12)|0);
  $13$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($12+4)|0);
  $13$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($10)|0);
  HEAP32[(($st$4$0)>>2)]=$13$0;
  $st$5$1=(($10+4)|0);
  HEAP32[(($st$5$1)>>2)]=$13$1;
  $st$6$0=(($12)|0);
  HEAP32[(($st$6$0)>>2)]=$11$0;
  $st$7$1=(($12+4)|0);
  HEAP32[(($st$7$1)>>2)]=$11$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 5: {
  $24=(($__first+8)|0);
  $25=(($__first+16)|0);
  $26=(($__first+24)|0);
  $27=((($__last)-(8))|0);
  $28=((__ZNSt3__17__sort5IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_S8_T_($__first,$24,$25,$26,$27,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 4: {
  $19=(($__first+8)|0);
  $20=(($__first+16)|0);
  $21=((($__last)-(8))|0);
  $22=((__ZNSt3__17__sort4IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_S8_T_($__first,$19,$20,$21,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 0:case 1: {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 3: {
  $15=(($__first+8)|0);
  $16=((($__last)-(8))|0);
  $17=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__first,$15,$16,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 default: {
  $30=(($__first+16)|0);
  $31=(($__first+8)|0);
  $32=((__ZNSt3__17__sort3IRPFbRK6b2PairS3_EPS1_EEjT0_S8_S8_T_($__first,$31,$30,$__comp))|0);
  $33=(($__first+24)|0);
  $34=($33|0)==($__last|0);
  if ($34) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  } else {
   $__j_047=$30;$__count_048=0;$__i_049=$33;
  }
  while(1) {



   $35=((HEAP32[(($__comp)>>2)])|0);
   $36=((FUNCTION_TABLE_iii[($35)&63]($__i_049,$__j_047))|0);
   if ($36) {
    $38=$__i_049;
    $ld$8$0=(($38)|0);
    $39$0=((HEAP32[(($ld$8$0)>>2)])|0);
    $ld$9$1=(($38+4)|0);
    $39$1=((HEAP32[(($ld$9$1)>>2)])|0);
    $st$10$0=(($__t)|0);
    HEAP32[(($st$10$0)>>2)]=$39$0;
    $st$11$1=(($__t+4)|0);
    HEAP32[(($st$11$1)>>2)]=$39$1;
    $__k_0=$__j_047;$__j_1=$__i_049;
    while(1) {


     $41=$__k_0;
     $42=$__j_1;
     $ld$12$0=(($41)|0);
     $43$0=((HEAP32[(($ld$12$0)>>2)])|0);
     $ld$13$1=(($41+4)|0);
     $43$1=((HEAP32[(($ld$13$1)>>2)])|0);
     $st$14$0=(($42)|0);
     HEAP32[(($st$14$0)>>2)]=$43$0;
     $st$15$1=(($42+4)|0);
     HEAP32[(($st$15$1)>>2)]=$43$1;
     $44=($__k_0|0)==($__first|0);
     if ($44) {
      break;
     }
     $46=((HEAP32[(($__comp)>>2)])|0);
     $47=((($__k_0)-(8))|0);
     $48=((FUNCTION_TABLE_iii[($46)&63]($tmpcast,$47))|0);
     if ($48) {
      $__j_1=$__k_0;$__k_0=$47;
     } else {
      break;
     }
    }
    $ld$16$0=(($__t)|0);
    $49$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($__t+4)|0);
    $49$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($41)|0);
    HEAP32[(($st$18$0)>>2)]=$49$0;
    $st$19$1=(($41+4)|0);
    HEAP32[(($st$19$1)>>2)]=$49$1;
    $50=((($__count_048)+(1))|0);
    $51=($50|0)==8;
    if ($51) {
     break;
    } else {
     $__count_1=$50;
    }
   } else {
    $__count_1=$__count_048;
   }

   $56=(($__i_049+8)|0);
   $57=($56|0)==($__last|0);
   if ($57) {
    $_0=1;
    label = 15;
    break;
   } else {
    $__j_047=$__i_049;$__count_048=$__count_1;$__i_049=$56;
   }
  }
  if ((label|0) == 15) {

   STACKTOP=sp;return (($_0)|0);
  }
  $53=(($__i_049+8)|0);
  $54=($53|0)==($__last|0);
  $_0=$54;

  STACKTOP=sp;return (($_0)|0);
 }
 }
  return 0;
}


function __ZN17b2ContactListenerD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN17b2ContactListener12BeginContactEP9b2Contact($this,$contact){
 $this=($this)|0;
 $contact=($contact)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListener10EndContactEP9b2Contact($this,$contact){
 $this=($this)|0;
 $contact=($contact)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold($this,$contact,$oldManifold){
 $this=($this)|0;
 $contact=($contact)|0;
 $oldManifold=($oldManifold)|0;
 var label=0;

 return;
}


function __ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse($this,$contact,$impulse){
 $this=($this)|0;
 $contact=($contact)|0;
 $impulse=($impulse)|0;
 var label=0;

 return;
}


function __ZN16b2VoronoiDiagramC2EP16b2StackAllocatori($this,$allocator,$generatorCapacity){
 $this=($this)|0;
 $allocator=($allocator)|0;
 $generatorCapacity=($generatorCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=$allocator;
 $2=$generatorCapacity<<4;
 $3=((__ZN16b2StackAllocator8AllocateEi($allocator,$2))|0);
 $4=$3;
 $5=(($this+4)|0);
 HEAP32[(($5)>>2)]=$4;
 $6=(($this+8)|0);
 HEAP32[(($6)>>2)]=$generatorCapacity;
 $7=(($this+12)|0);
 $8=$7;
 _memset((((($8)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 return;
}


function __ZN16b2VoronoiDiagramD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,$13=0,label=0;

 $1=(($this+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  $5=(($this)|0);
  $6=((HEAP32[(($5)>>2)])|0);
  $7=$2;
  __ZN16b2StackAllocator4FreeEPv($6,$7);
 }
 $9=(($this)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($this+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=$12;
 __ZN16b2StackAllocator4FreeEPv($10,$13);
 return;
}


function __ZN16b2VoronoiDiagram12AddGeneratorERK6b2Vec2ib($this,$center,$tag,$necessary){
 $this=($this)|0;
 $center=($center)|0;
 $tag=($tag)|0;
 $necessary=($necessary)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)+(1))|0);
 HEAP32[(($1)>>2)]=$3;
 $4=(($this+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5+($2<<4))|0);
 $7=$center;
 $8=$6;
 $ld$0$0=(($7)|0);
 $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($7+4)|0);
 $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($8)|0);
 HEAP32[(($st$2$0)>>2)]=$9$0;
 $st$3$1=(($8+4)|0);
 HEAP32[(($st$3$1)>>2)]=$9$1;
 $10=(($5+($2<<4)+8)|0);
 HEAP32[(($10)>>2)]=$tag;
 $11=(($5+($2<<4)+12)|0);
 $12=($necessary&1);
 HEAP8[($11)]=$12;
 return;
}


function __ZN16b2VoronoiDiagram8GenerateEff($this,$radius,$margin){
 $this=($this)|0;
 $radius=+($radius);
 $margin=+($margin);
 var $lower=0,$tmpcast108=0,$upper=0,$tmpcast110=0,$1=0,$tmpcast109=0,$2=0,$tmpcast111=0,$queue=0,$3=0,$tmpcast=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0;
 var $13=0,$14=0,$15=0,$16=0,$17=0,$18=.0,$19=0,$20=0,$21=0,$22=0,$k_0147=0,$24=0,$25=0,$26=0,$27=0,$29=0,$ld$0$0=0,$30$0=0,$ld$1$1=0,$30$1=0;
 var $st$2$0=0,$st$3$1=0,$ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$33=0,$34=0,$35=0,$36=0,$37=.0,$38=.0,$39=0,$40=.0,$41=.0,$42=0,$43=.0,$44=.0;
 var $45=0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=0,$53=0,$54=0,$55=.0,$56=.0,$57=.0,$58=.0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0;
 var $65=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$i_0141=0,$78=0,$79=0,$80=0,$81=0,$_lcssa140=0,$_lcssa=0,$82=0;
 var $83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$k1_0137=0,$90=0,$91=0,$92=0,$93=0,$ld$8$0=0,$94$0=0,$ld$9$1=0,$94$1=0,$st$10$0=0,$st$11$1=0,$95=0,$96=.0,$97=0;
 var $98=0,$99=.0,$100=0,$101=0,$102=0,$104=0,$105=0,$107=0,$108=0,$110=0,$111=0,$lpad_phi$0=0,$lpad_phi$1=0,$113=0,$114=0,$115=0,$116=0,$117=0,$118=0,$119=0;
 var $120=0,$121=0,$122=0,$123=0,$124=0,$125=0,$126=0,$127=0,$128=0,$129=0,$130=0,$132=0,$134=0,$135=0,$137=0,$139=0,$140=0,$141=0,$143=0,$144=0;
 var $145=0,$147=0,$148=0,$150=0,$151=0,$152=0,$153=0,$155=0,$156=0,$157=0,$y7_0129=0,$158=0,$159=0,$160=0,$161=0,$162=0,$163=0,$164=0,$x8_0125=0,$165=0;
 var $166=0,$167=0,$168=0,$169=0,$170=0,$171=0,$172=0,$173=0,$176=0,$178=0,$179=0,$180=0,$181=0,$182=0,$183=0,$184=0,$y10_0120=0,$185=0,$186=0,$187=0;
 var $188=0,$190=0,$x11_0116=0,$191=0,$192=0,$193=0,$194=0,$195=0,$196=0,$197=0,$198=0,$199=0,$202=0,$203=0,$205=0,$206=0,$207=0,$208=0,$209=0,$210=0;
 var $211=0,$212=0,$213=0,$214=0,$215=0,$216=0,$217=0,$218=0,$219=0,$220=0,$221=0,$222=0,$223=0,$224=0,$226=0,$227=.0,$228=.0,$229=.0,$230=0,$231=.0;
 var $232=.0,$233=.0,$234=0,$235=.0,$236=.0,$237=0,$238=.0,$239=.0,$240=.0,$241=.0,$242=.0,$243=.0,$244=.0,$245=.0,$246=0,$247=0,$249=0,$251=0,$252=0,$254=0;
 var $256=0,$257=0,$258=0,$260=0,$261=0,$262=0,$264=0,$265=0,$267=0,$268=0,$269=0,$271=0,$272=0,$273=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_loopexit113$0=0,$lpad_loopexit113$1=0,$lpad_loopexit123$0=0,$lpad_loopexit123$1=0;
 var $lpad_loopexit132$0=0,$lpad_loopexit132$1=0,$lpad_nonloopexit133$0=0,$lpad_nonloopexit133$1=0,$276$0=0,$276$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $lower=((sp)|0);
 $tmpcast108=$lower;
 $upper=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast110=$upper;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast109=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast111=$2;
 $queue=STACKTOP;STACKTOP = (STACKTOP + 20)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $17=STACKTOP;STACKTOP = (STACKTOP + 16)|0;
 $18=((1.0))/($radius);
 __ZN6b2Vec2C1Eff($tmpcast108,3.4028234663852886e+38,3.4028234663852886e+38);
 __ZN6b2Vec2C1Eff($tmpcast110,-3.4028234663852886e+38,-3.4028234663852886e+38);
 $19=(($this+12)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=($20|0)>0;
 if ($21) {
  $22=(($this+4)|0);
  $k_0147=0;
  while(1) {

   $24=((HEAP32[(($22)>>2)])|0);
   $25=(($24+($k_0147<<4)+12)|0);
   $26=((HEAP8[($25)])|0);
   $27=(($26<<24)>>24)==0;
   if (!($27)) {
    $29=(($24+($k_0147<<4))|0);
    __Z5b2MinRK6b2Vec2S1_($tmpcast109,$tmpcast108,$29);
    $ld$0$0=(($1)|0);
    $30$0=((HEAP32[(($ld$0$0)>>2)])|0);
    $ld$1$1=(($1+4)|0);
    $30$1=((HEAP32[(($ld$1$1)>>2)])|0);
    $st$2$0=(($lower)|0);
    HEAP32[(($st$2$0)>>2)]=$30$0;
    $st$3$1=(($lower+4)|0);
    HEAP32[(($st$3$1)>>2)]=$30$1;
    __Z5b2MaxRK6b2Vec2S1_($tmpcast111,$tmpcast110,$29);
    $ld$4$0=(($2)|0);
    $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
    $ld$5$1=(($2+4)|0);
    $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
    $st$6$0=(($upper)|0);
    HEAP32[(($st$6$0)>>2)]=$31$0;
    $st$7$1=(($upper+4)|0);
    HEAP32[(($st$7$1)>>2)]=$31$1;
   }
   $33=((($k_0147)+(1))|0);
   $34=((HEAP32[(($19)>>2)])|0);
   $35=($33|0)<($34|0);
   if ($35) {
    $k_0147=$33;
   } else {
    break;
   }
  }
 }
 $36=$lower;
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=($37)-($margin);
 HEAPF32[(($36)>>2)]=$38;
 $39=(($tmpcast108+4)|0);
 $40=(+(HEAPF32[(($39)>>2)]));
 $41=($40)-($margin);
 HEAPF32[(($39)>>2)]=$41;
 $42=$upper;
 $43=(+(HEAPF32[(($42)>>2)]));
 $44=($43)+($margin);
 HEAPF32[(($42)>>2)]=$44;
 $45=(($tmpcast110+4)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=($46)+($margin);
 HEAPF32[(($45)>>2)]=$47;
 $48=(+(HEAPF32[(($42)>>2)]));
 $49=(+(HEAPF32[(($36)>>2)]));
 $50=($48)-($49);
 $51=($18)*($50);
 $52=(~~($51));
 $53=((($52)+(1))|0);
 $54=(($this+16)|0);
 HEAP32[(($54)>>2)]=$53;
 $55=(+(HEAPF32[(($45)>>2)]));
 $56=(+(HEAPF32[(($39)>>2)]));
 $57=($55)-($56);
 $58=($18)*($57);
 $59=(~~($58));
 $60=((($59)+(1))|0);
 $61=(($this+20)|0);
 HEAP32[(($61)>>2)]=$60;
 $62=(($this)|0);
 $63=((HEAP32[(($62)>>2)])|0);
 $64=((HEAP32[(($54)>>2)])|0);
 $65=$64<<2;
 $66=(Math_imul($65,$60)|0);
 $67=((__ZN16b2StackAllocator8AllocateEi($63,$66))|0);
 $68=$67;
 $69=(($this+24)|0);
 HEAP32[(($69)>>2)]=$68;
 $70=((HEAP32[(($54)>>2)])|0);
 $71=((HEAP32[(($61)>>2)])|0);
 $72=(Math_imul($71,$70)|0);
 $73=($72|0)>0;
 if ($73) {
  $74=((HEAP32[(($54)>>2)])|0);
  $75=((HEAP32[(($61)>>2)])|0);
  $76=(Math_imul($75,$74)|0);
  $i_0141=0;
  while(1) {

   $78=((HEAP32[(($69)>>2)])|0);
   $79=(($78+($i_0141<<2))|0);
   HEAP32[(($79)>>2)]=0;
   $80=((($i_0141)+(1))|0);
   $81=($80|0)<($76|0);
   if ($81) {
    $i_0141=$80;
   } else {
    $_lcssa=$74;$_lcssa140=$75;
    break;
   }
  }
 } else {
  $_lcssa=$70;$_lcssa140=$71;
 }


 $82=((HEAP32[(($62)>>2)])|0);
 $83=$_lcssa<<2;
 $84=(Math_imul($83,$_lcssa140)|0);
 __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEEC1EP16b2StackAllocatori($queue,$82,$84);
 $85=((HEAP32[(($19)>>2)])|0);
 $86=($85|0)>0;
 if ($86) {
  $87=(($this+4)|0);
  $k1_0137=0;
  while(1) {

   $90=((HEAP32[(($87)>>2)])|0);
   $91=(($90+($k1_0137<<4))|0);
   $92=(($91)|0);
   __ZmiRK6b2Vec2S1_($4,$92,$tmpcast108);
   __ZmlfRK6b2Vec2($tmpcast,$18,$4);
   $93=$91;
   $ld$8$0=(($3)|0);
   $94$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($3+4)|0);
   $94$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($93)|0);
   HEAP32[(($st$10$0)>>2)]=$94$0;
   $st$11$1=(($93+4)|0);
   HEAP32[(($st$11$1)>>2)]=$94$1;
   $95=(($91)|0);
   $96=(+(HEAPF32[(($95)>>2)]));
   $97=(~~($96));
   $98=(($90+($k1_0137<<4)+4)|0);
   $99=(+(HEAPF32[(($98)>>2)]));
   $100=(~~($99));
   $101=$100|$97;
   $102=($101|0)>-1;
   do {
    if ($102) {
     $104=((HEAP32[(($54)>>2)])|0);
     $105=($97|0)<($104|0);
     if (!($105)) {
      break;
     }
     $107=((HEAP32[(($61)>>2)])|0);
     $108=($100|0)<($107|0);
     if (!($108)) {
      break;
     }
     $110=(Math_imul($104,$100)|0);
     $111=((($110)+($97))|0);
     __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($5,$97,$100,$111,$91);
     __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$5);
    }
   } while(0);
   $113=((($k1_0137)+(1))|0);
   $114=((HEAP32[(($19)>>2)])|0);
   $115=($113|0)<($114|0);
   if ($115) {
    $k1_0137=$113;
   } else {
    break;
   }
  }
 }
 $88=((__ZNK12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE5EmptyEv($queue))|0);
 if (!($88)) {
  while(1) {
   $118=((__ZNK12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE5FrontEv($queue))|0);
   $119=(($118)|0);
   $120=((HEAP32[(($119)>>2)])|0);
   $121=(($118+4)|0);
   $122=((HEAP32[(($121)>>2)])|0);
   $123=(($118+8)|0);
   $124=((HEAP32[(($123)>>2)])|0);
   $125=(($118+12)|0);
   $126=((HEAP32[(($125)>>2)])|0);
   __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE3PopEv($queue);
   $127=((HEAP32[(($69)>>2)])|0);
   $128=(($127+($124<<2))|0);
   $129=((HEAP32[(($128)>>2)])|0);
   $130=($129|0)==0;
   do {
    if ($130) {
     HEAP32[(($128)>>2)]=$126;
     $132=($120|0)>0;
     if ($132) {
      $134=((($120)-(1))|0);
      $135=((($124)-(1))|0);
      __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($6,$134,$122,$135,$126);
      __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$6);
     }
     $137=($122|0)>0;
     if ($137) {
      $139=((($122)-(1))|0);
      $140=((HEAP32[(($54)>>2)])|0);
      $141=((($124)-($140))|0);
      __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($7,$120,$139,$141,$126);
      __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$7);
     }
     $143=((HEAP32[(($54)>>2)])|0);
     $144=((($143)-(1))|0);
     $145=($120|0)<($144|0);
     if ($145) {
      $147=((($120)+(1))|0);
      $148=((($124)+(1))|0);
      __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($8,$147,$122,$148,$126);
      __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$8);
     }
     $150=((HEAP32[(($61)>>2)])|0);
     $151=((($150)-(1))|0);
     $152=($122|0)<($151|0);
     if (!($152)) {
      break;
     }
     $155=((($122)+(1))|0);
     $156=((HEAP32[(($54)>>2)])|0);
     $157=((($156)+($124))|0);
     __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($9,$120,$155,$157,$126);
     __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$9);
    }
   } while(0);
   $153=((__ZNK12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE5EmptyEv($queue))|0);
   if ($153) {
    break;
   }
  }
 }
 $116=((HEAP32[(($61)>>2)])|0);
 $117=($116|0)>0;
 if ($117) {
  $y7_0129=0;
  while(1) {

   $158=((HEAP32[(($54)>>2)])|0);
   $159=((($158)-(1))|0);
   $160=($159|0)>0;
   if ($160) {
    $x8_0125=0;$164=$158;
    while(1) {


     $165=(Math_imul($164,$y7_0129)|0);
     $166=((($165)+($x8_0125))|0);
     $167=((HEAP32[(($69)>>2)])|0);
     $168=(($167+($166<<2))|0);
     $169=((HEAP32[(($168)>>2)])|0);
     $170=((($166)+(1))|0);
     $171=(($167+($170<<2))|0);
     $172=((HEAP32[(($171)>>2)])|0);
     $173=($169|0)==($172|0);
     if (!($173)) {
      __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($10,$x8_0125,$y7_0129,$166,$172);
      __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$10);
      $176=((($x8_0125)+(1))|0);
      __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($11,$176,$y7_0129,$170,$169);
      __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$11);
     }
     $178=((($x8_0125)+(1))|0);
     $179=((HEAP32[(($54)>>2)])|0);
     $180=((($179)-(1))|0);
     $181=($178|0)<($180|0);
     if ($181) {
      $x8_0125=$178;$164=$179;
     } else {
      break;
     }
    }
   }
   $182=((($y7_0129)+(1))|0);
   $183=((HEAP32[(($61)>>2)])|0);
   $184=($182|0)<($183|0);
   if ($184) {
    $y7_0129=$182;
   } else {
    break;
   }
  }
 }
 $161=((HEAP32[(($61)>>2)])|0);
 $162=((($161)-(1))|0);
 $163=($162|0)>0;
 if ($163) {
  $y10_0120=0;
  while(1) {

   $185=((HEAP32[(($54)>>2)])|0);
   $186=($185|0)>0;
   if ($186) {
    $187=((($y10_0120)+(1))|0);
    $x11_0116=0;$190=$185;
    while(1) {


     $191=(Math_imul($190,$y10_0120)|0);
     $192=((($191)+($x11_0116))|0);
     $193=((HEAP32[(($69)>>2)])|0);
     $194=(($193+($192<<2))|0);
     $195=((HEAP32[(($194)>>2)])|0);
     $196=((($192)+($190))|0);
     $197=(($193+($196<<2))|0);
     $198=((HEAP32[(($197)>>2)])|0);
     $199=($195|0)==($198|0);
     if (!($199)) {
      __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($12,$x11_0116,$y10_0120,$192,$198);
      __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$12);
      $202=((HEAP32[(($54)>>2)])|0);
      $203=((($202)+($192))|0);
      __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($13,$x11_0116,$187,$203,$195);
      __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$13);
     }
     $205=((($x11_0116)+(1))|0);
     $206=((HEAP32[(($54)>>2)])|0);
     $207=($205|0)<($206|0);
     if ($207) {
      $x11_0116=$205;$190=$206;
     } else {
      break;
     }
    }
   }
   $208=((($y10_0120)+(1))|0);
   $209=((HEAP32[(($61)>>2)])|0);
   $210=((($209)-(1))|0);
   $211=($208|0)<($210|0);
   if ($211) {
    $y10_0120=$208;
   } else {
    break;
   }
  }
 }
 $188=((__ZNK12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE5EmptyEv($queue))|0);
 if ($188) {
  __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEED1Ev($queue);
  STACKTOP=sp;return;
 }
 while(1) {
  $212=((__ZNK12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE5FrontEv($queue))|0);
  $213=(($212)|0);
  $214=((HEAP32[(($213)>>2)])|0);
  $215=(($212+4)|0);
  $216=((HEAP32[(($215)>>2)])|0);
  $217=(($212+8)|0);
  $218=((HEAP32[(($217)>>2)])|0);
  $219=(($212+12)|0);
  $220=((HEAP32[(($219)>>2)])|0);
  __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE3PopEv($queue);
  $221=((HEAP32[(($69)>>2)])|0);
  $222=(($221+($218<<2))|0);
  $223=((HEAP32[(($222)>>2)])|0);
  $224=($223|0)==($220|0);
  do {
   if (!($224)) {
    $226=(($223)|0);
    $227=(+(HEAPF32[(($226)>>2)]));
    $228=(+((($214|0))|0));
    $229=($227)-($228);
    $230=(($223+4)|0);
    $231=(+(HEAPF32[(($230)>>2)]));
    $232=(+((($216|0))|0));
    $233=($231)-($232);
    $234=(($220)|0);
    $235=(+(HEAPF32[(($234)>>2)]));
    $236=($235)-($228);
    $237=(($220+4)|0);
    $238=(+(HEAPF32[(($237)>>2)]));
    $239=($238)-($232);
    $240=($229)*($229);
    $241=($233)*($233);
    $242=($240)+($241);
    $243=($236)*($236);
    $244=($239)*($239);
    $245=($243)+($244);
    $246=$242>$245;
    if (!($246)) {
     break;
    }
    HEAP32[(($222)>>2)]=$220;
    $249=($214|0)>0;
    if ($249) {
     $251=((($214)-(1))|0);
     $252=((($218)-(1))|0);
     __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($14,$251,$216,$252,$220);
     __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$14);
    }
    $254=($216|0)>0;
    if ($254) {
     $256=((($216)-(1))|0);
     $257=((HEAP32[(($54)>>2)])|0);
     $258=((($218)-($257))|0);
     __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($15,$214,$256,$258,$220);
     __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$15);
    }
    $260=((HEAP32[(($54)>>2)])|0);
    $261=((($260)-(1))|0);
    $262=($214|0)<($261|0);
    if ($262) {
     $264=((($214)+(1))|0);
     $265=((($218)+(1))|0);
     __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($16,$264,$216,$265,$220);
     __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$16);
    }
    $267=((HEAP32[(($61)>>2)])|0);
    $268=((($267)-(1))|0);
    $269=($216|0)<($268|0);
    if (!($269)) {
     break;
    }
    $271=((($216)+(1))|0);
    $272=((HEAP32[(($54)>>2)])|0);
    $273=((($272)+($218))|0);
    __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($17,$214,$271,$273,$220);
    __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($queue,$17);
   }
  } while(0);
  $247=((__ZNK12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE5EmptyEv($queue))|0);
  if ($247) {
   break;
  }
 }
 __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEED1Ev($queue);
 STACKTOP=sp;return;
}


function __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEEC1EP16b2StackAllocatori($this,$allocator,$capacity){
 $this=($this)|0;
 $allocator=($allocator)|0;
 $capacity=($capacity)|0;
 var label=0;

 __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEEC2EP16b2StackAllocatori($this,$allocator,$capacity);
 return;
}


function __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE4PushERKS1_($this,$item){
 $this=($this)|0;
 $item=($item)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,$i_06=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0;
 var $22=0,$23=0,$_lcssa5=0,$_lcssa=0,$24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$storemerge=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$40=0;
 var $41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+16)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)<($4|0);
 do {
  if (!($5)) {
   $7=(($this+8)|0);
   $8=((HEAP32[(($7)>>2)])|0);
   $9=((HEAP32[(($1)>>2)])|0);
   $10=($8|0)<($9|0);
   if ($10) {
    $11=(($this+4)|0);
    $i_06=$8;$13=$8;
    while(1) {


     $14=((($i_06)-($13))|0);
     $15=((HEAP32[(($11)>>2)])|0);
     $16=(($15+($14<<4))|0);
     $17=(($15+($i_06<<4))|0);
     $18=$16;
     $19=$17;
     HEAP32[(($18)>>2)]=((HEAP32[(($19)>>2)])|0);HEAP32[((($18)+(4))>>2)]=((HEAP32[((($19)+(4))>>2)])|0);HEAP32[((($18)+(8))>>2)]=((HEAP32[((($19)+(8))>>2)])|0);HEAP32[((($18)+(12))>>2)]=((HEAP32[((($19)+(12))>>2)])|0);
     $20=((($i_06)+(1))|0);
     $21=((HEAP32[(($1)>>2)])|0);
     $22=($20|0)<($21|0);
     $23=((HEAP32[(($7)>>2)])|0);
     if ($22) {
      $i_06=$20;$13=$23;
     } else {
      $_lcssa=$21;$_lcssa5=$23;
      break;
     }
    }
   } else {
    $_lcssa=$9;$_lcssa5=$8;
   }


   $24=((($_lcssa)-($_lcssa5))|0);
   HEAP32[(($1)>>2)]=$24;
   HEAP32[(($7)>>2)]=0;
   $25=((HEAP32[(($1)>>2)])|0);
   $26=((HEAP32[(($3)>>2)])|0);
   $27=($25|0)<($26|0);
   if ($27) {
    break;
   }
   $29=($26|0)>0;
   $30=$26<<1;
   $storemerge=($29?$30:1);
   HEAP32[(($3)>>2)]=$storemerge;
   $31=(($this)|0);
   $32=((HEAP32[(($31)>>2)])|0);
   $33=(($this+4)|0);
   $34=((HEAP32[(($33)>>2)])|0);
   $35=$34;
   $36=$storemerge<<4;
   $37=((__ZN16b2StackAllocator10ReallocateEPvi($32,$35,$36))|0);
   $38=$37;
   HEAP32[(($33)>>2)]=$38;
  }
 } while(0);
 $40=((HEAP32[(($1)>>2)])|0);
 $41=(($this+4)|0);
 $42=((HEAP32[(($41)>>2)])|0);
 $43=(($42+($40<<4))|0);
 $44=$43;
 $45=$item;
 HEAP32[(($44)>>2)]=((HEAP32[(($45)>>2)])|0);HEAP32[((($44)+(4))>>2)]=((HEAP32[((($45)+(4))>>2)])|0);HEAP32[((($44)+(8))>>2)]=((HEAP32[((($45)+(8))>>2)])|0);HEAP32[((($44)+(12))>>2)]=((HEAP32[((($45)+(12))>>2)])|0);
 $46=((HEAP32[(($1)>>2)])|0);
 $47=((($46)+(1))|0);
 HEAP32[(($1)>>2)]=$47;
 return;
}


function __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC1EiiiPNS_9GeneratorE($this,$x,$y,$i,$g){
 $this=($this)|0;
 $x=($x)|0;
 $y=($y)|0;
 $i=($i)|0;
 $g=($g)|0;
 var label=0;

 __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC2EiiiPNS_9GeneratorE($this,$x,$y,$i,$g);
 return;
}


function __ZNK12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE5EmptyEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 return (($5)|0);
}


function __ZNK12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE5FrontEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+($2<<4))|0);
 return (($5)|0);
}


function __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEE3PopEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)+(1))|0);
 HEAP32[(($1)>>2)]=$3;
 return;
}


function __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEED1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEED2Ev($this);
 return;
}


function __ZNK16b2VoronoiDiagram8GetNodesERNS_12NodeCallbackE($this,$callback){
 $this=($this)|0;
 $callback=($callback)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$y_030=0,$9=0,$10=0,$11=0,$12=0,$x_029=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$or_cond=0,$32=0,$33=0,$34=0,$36=0,$37=0,$38=0,$40=0,$41=0;
 var $42=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$54=0,$55=0,$or_cond28=0,$57=0,$58=0,$59=0,$61=0,$62=0,$63=0,$65=0;
 var $66=0,$67=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,label=0;

 $1=(($this+20)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)-(1))|0);
 $4=($3|0)>0;
 if (!($4)) {
  return;
 }
 $5=(($this+16)|0);
 $6=(($this+24)|0);
 $7=$callback;
 $8=$callback;
 $y_030=0;
 while(1) {

  $9=((HEAP32[(($5)>>2)])|0);
  $10=((($9)-(1))|0);
  $11=($10|0)>0;
  if ($11) {
   $x_029=0;$12=$9;
   while(1) {


    $13=(Math_imul($12,$y_030)|0);
    $14=((($13)+($x_029))|0);
    $15=((HEAP32[(($6)>>2)])|0);
    $16=(($15+($14<<2))|0);
    $17=((HEAP32[(($16)>>2)])|0);
    $18=((($14)+(1))|0);
    $19=(($15+($18<<2))|0);
    $20=((HEAP32[(($19)>>2)])|0);
    $21=((($14)+($12))|0);
    $22=(($15+($21<<2))|0);
    $23=((HEAP32[(($22)>>2)])|0);
    $24=((($18)+($12))|0);
    $25=(($15+($24<<2))|0);
    $26=((HEAP32[(($25)>>2)])|0);
    $27=($20|0)==($23|0);
    L9: do {
     if (!($27)) {
      $29=($17|0)==($20|0);
      $30=($17|0)==($23|0);
      $or_cond=$29|$30;
      L11: do {
       if (!($or_cond)) {
        $32=(($17+12)|0);
        $33=((HEAP8[($32)])|0);
        $34=(($33<<24)>>24)==0;
        do {
         if ($34) {
          $36=(($20+12)|0);
          $37=((HEAP8[($36)])|0);
          $38=(($37<<24)>>24)==0;
          if (!($38)) {
           break;
          }
          $40=(($23+12)|0);
          $41=((HEAP8[($40)])|0);
          $42=(($41<<24)>>24)==0;
          if ($42) {
           break L11;
          }
         }
        } while(0);
        $44=((HEAP32[(($8)>>2)])|0);
        $45=(($44+8)|0);
        $46=((HEAP32[(($45)>>2)])|0);
        $47=(($17+8)|0);
        $48=((HEAP32[(($47)>>2)])|0);
        $49=(($20+8)|0);
        $50=((HEAP32[(($49)>>2)])|0);
        $51=(($23+8)|0);
        $52=((HEAP32[(($51)>>2)])|0);
        FUNCTION_TABLE_viiii[($46)&63]($callback,$48,$50,$52);
       }
      } while(0);
      $54=($26|0)==($20|0);
      $55=($26|0)==($23|0);
      $or_cond28=$54|$55;
      if ($or_cond28) {
       break;
      }
      $57=(($20+12)|0);
      $58=((HEAP8[($57)])|0);
      $59=(($58<<24)>>24)==0;
      do {
       if ($59) {
        $61=(($26+12)|0);
        $62=((HEAP8[($61)])|0);
        $63=(($62<<24)>>24)==0;
        if (!($63)) {
         break;
        }
        $65=(($23+12)|0);
        $66=((HEAP8[($65)])|0);
        $67=(($66<<24)>>24)==0;
        if ($67) {
         break L9;
        }
       }
      } while(0);
      $69=((HEAP32[(($7)>>2)])|0);
      $70=(($69+8)|0);
      $71=((HEAP32[(($70)>>2)])|0);
      $72=(($20+8)|0);
      $73=((HEAP32[(($72)>>2)])|0);
      $74=(($26+8)|0);
      $75=((HEAP32[(($74)>>2)])|0);
      $76=(($23+8)|0);
      $77=((HEAP32[(($76)>>2)])|0);
      FUNCTION_TABLE_viiii[($71)&63]($callback,$73,$75,$77);
     }
    } while(0);
    $79=((($x_029)+(1))|0);
    $80=((HEAP32[(($5)>>2)])|0);
    $81=((($80)-(1))|0);
    $82=($79|0)<($81|0);
    if ($82) {
     $x_029=$79;$12=$80;
    } else {
     break;
    }
   }
  }
  $83=((($y_030)+(1))|0);
  $84=((HEAP32[(($1)>>2)])|0);
  $85=((($84)-(1))|0);
  $86=($83|0)<($85|0);
  if ($86) {
   $y_030=$83;
  } else {
   break;
  }
 }
 return;
}


function __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEED2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$4;
 __ZN16b2StackAllocator4FreeEPv($2,$5);
 return;
}


function __ZN12b2StackQueueIN16b2VoronoiDiagram20b2VoronoiDiagramTaskEEC2EP16b2StackAllocatori($this,$allocator,$capacity){
 $this=($this)|0;
 $allocator=($allocator)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=$allocator;
 $2=$capacity<<4;
 $3=((__ZN16b2StackAllocator8AllocateEi($allocator,$2))|0);
 $4=$3;
 $5=(($this+4)|0);
 HEAP32[(($5)>>2)]=$4;
 $6=(($this+8)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($this+12)|0);
 HEAP32[(($7)>>2)]=0;
 $8=(($this+16)|0);
 HEAP32[(($8)>>2)]=$capacity;
 return;
}


function __ZN16b2VoronoiDiagram20b2VoronoiDiagramTaskC2EiiiPNS_9GeneratorE($this,$x,$y,$i,$g){
 $this=($this)|0;
 $x=($x)|0;
 $y=($y)|0;
 $i=($i)|0;
 $g=($g)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=$x;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=$y;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=$i;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$g;
 return;
}


function __ZN15b2ParticleGroupC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$$etemp$0=0,$ld$1$0=0,$12$0=0,$ld$2$1=0,$12$1=0,$st$3$0=0,$st$4$1=0,$13=0,$$etemp$5=0;
 var $ld$6$0=0,$14$0=0,$ld$7$1=0,$14$1=0,$st$8$0=0,$st$9$1=0,$15=0,$16=0,label=0;

 $1=(($this+40)|0);
 $2=(($this+48)|0);
 $3=(($this+60)|0);
 $4=(($this+16)|0);
 $5=$this;
 _memset((((($5)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 HEAPF32[(($4)>>2)]=1.0;
 $6=(($this+20)|0);
 HEAP32[(($6)>>2)]=0;
 $7=(($this+24)|0);
 HEAP32[(($7)>>2)]=0;
 $8=(($this+28)|0);
 HEAP32[(($8)>>2)]=-1;
 $9=(($this+32)|0);
 HEAPF32[(($9)>>2)]=0.0;
 $10=(($this+36)|0);
 HEAPF32[(($10)>>2)]=0.0;
 $11=$1;
 $$etemp$0=8264;
 $ld$1$0=(($$etemp$0)|0);
 $12$0=((HEAP32[(($ld$1$0)>>2)])|0);
 $ld$2$1=(($$etemp$0+4)|0);
 $12$1=((HEAP32[(($ld$2$1)>>2)])|0);
 $st$3$0=(($11)|0);
 HEAP32[(($st$3$0)>>2)]=$12$0;
 $st$4$1=(($11+4)|0);
 HEAP32[(($st$4$1)>>2)]=$12$1;
 $13=$2;
 $$etemp$5=8264;
 $ld$6$0=(($$etemp$5)|0);
 $14$0=((HEAP32[(($ld$6$0)>>2)])|0);
 $ld$7$1=(($$etemp$5+4)|0);
 $14$1=((HEAP32[(($ld$7$1)>>2)])|0);
 $st$8$0=(($13)|0);
 HEAP32[(($st$8$0)>>2)]=$14$0;
 $st$9$1=(($13+4)|0);
 HEAP32[(($st$9$1)>>2)]=$14$1;
 $15=(($this+56)|0);
 HEAPF32[(($15)>>2)]=0.0;
 __ZN11b2Transform11SetIdentityEv($3);
 $16=(($this+76)|0);
 HEAP32[(($16)>>2)]=0;
 return;
}


function __ZN11b2Transform11SetIdentityEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN6b2Vec27SetZeroEv($1);
 $2=(($this+8)|0);
 __ZN5b2Rot11SetIdentityEv($2);
 return;
}


function __ZNK15b2ParticleGroup16UpdateStatisticsEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$p=0,$v=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$11=.0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $20=.0,$21=.0,$i_013=0,$22=.0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=.0,$_lcssa12=.0,$35=0,$37=.0,$38=.0;
 var $39=.0,$41=0,$42=0,$43=0,$44=0,$45=0,$i1_011=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=.0,$55=.0,$56=.0,$57=.0,$58=.0;
 var $59=.0,$60=.0,$61=.0,$62=0,$63=0,$64=0,$65=.0,$66=0,$68=.0,$69=.0,$70=.0,$72=0,$73=0,$74=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $p=(((sp)+(16))|0);
 $v=(((sp)+(24))|0);
 $3=(($this+28)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+4)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($4|0)==($8|0);
 if ($9) {
  STACKTOP=sp;return;
 }
 $11=(+(__ZNK16b2ParticleSystem15GetParticleMassEv($6)));
 $12=(($this+32)|0);
 HEAPF32[(($12)>>2)]=0.0;
 $13=(($this+40)|0);
 __ZN6b2Vec27SetZeroEv($13);
 $14=(($this+48)|0);
 __ZN6b2Vec27SetZeroEv($14);
 $15=(($this+4)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($this+8)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=($16|0)<($18|0);
 $20=(+(HEAPF32[(($12)>>2)]));
 if ($19) {
  $i_013=$16;$21=$20;
  while(1) {


   $22=($11)+($21);
   HEAPF32[(($12)>>2)]=$22;
   $23=((HEAP32[(($5)>>2)])|0);
   $24=(($23+112)|0);
   $25=((HEAP32[(($24)>>2)])|0);
   $26=(($25+($i_013<<3))|0);
   __ZmlfRK6b2Vec2($1,$11,$26);
   __ZN6b2Vec2pLERKS_($13,$1);
   $27=((HEAP32[(($5)>>2)])|0);
   $28=(($27+120)|0);
   $29=((HEAP32[(($28)>>2)])|0);
   $30=(($29+($i_013<<3))|0);
   __ZmlfRK6b2Vec2($2,$11,$30);
   __ZN6b2Vec2pLERKS_($14,$2);
   $31=((($i_013)+(1))|0);
   $32=((HEAP32[(($17)>>2)])|0);
   $33=($31|0)<($32|0);
   $34=(+(HEAPF32[(($12)>>2)]));
   if ($33) {
    $i_013=$31;$21=$34;
   } else {
    $_lcssa12=$34;
    break;
   }
  }
 } else {
  $_lcssa12=$20;
 }

 $35=$_lcssa12>(0.0);
 if ($35) {
  $37=((1.0))/($_lcssa12);
  __ZN6b2Vec2mLEf($13,$37);
  $38=(+(HEAPF32[(($12)>>2)]));
  $39=((1.0))/($38);
  __ZN6b2Vec2mLEf($14,$39);
 }
 $41=(($this+36)|0);
 HEAPF32[(($41)>>2)]=0.0;
 $42=(($this+56)|0);
 HEAPF32[(($42)>>2)]=0.0;
 $43=((HEAP32[(($15)>>2)])|0);
 $44=((HEAP32[(($17)>>2)])|0);
 $45=($43|0)<($44|0);
 if ($45) {
  $i1_011=$43;
  while(1) {

   $46=((HEAP32[(($5)>>2)])|0);
   $47=(($46+112)|0);
   $48=((HEAP32[(($47)>>2)])|0);
   $49=(($48+($i1_011<<3))|0);
   __ZmiRK6b2Vec2S1_($p,$49,$13);
   $50=((HEAP32[(($5)>>2)])|0);
   $51=(($50+120)|0);
   $52=((HEAP32[(($51)>>2)])|0);
   $53=(($52+($i1_011<<3))|0);
   __ZmiRK6b2Vec2S1_($v,$53,$14);
   $54=(+(__Z5b2DotRK6b2Vec2S1_($p,$p)));
   $55=($11)*($54);
   $56=(+(HEAPF32[(($41)>>2)]));
   $57=($56)+($55);
   HEAPF32[(($41)>>2)]=$57;
   $58=(+(__Z7b2CrossRK6b2Vec2S1_($p,$v)));
   $59=($11)*($58);
   $60=(+(HEAPF32[(($42)>>2)]));
   $61=($60)+($59);
   HEAPF32[(($42)>>2)]=$61;
   $62=((($i1_011)+(1))|0);
   $63=((HEAP32[(($17)>>2)])|0);
   $64=($62|0)<($63|0);
   if ($64) {
    $i1_011=$62;
   } else {
    break;
   }
  }
 }
 $65=(+(HEAPF32[(($41)>>2)]));
 $66=$65>(0.0);
 if ($66) {
  $68=((1.0))/($65);
  $69=(+(HEAPF32[(($42)>>2)]));
  $70=($68)*($69);
  HEAPF32[(($42)>>2)]=$70;
 }
 $72=((HEAP32[(($5)>>2)])|0);
 $73=(($72+4)|0);
 $74=((HEAP32[(($73)>>2)])|0);
 HEAP32[(($3)>>2)]=$74;
 STACKTOP=sp;return;
}


function __ZNK16b2ParticleSystem15GetParticleMassEv($this){
 $this=($this)|0;
 var $1=.0,$2=0,$3=.0,$4=.0,$5=.0,label=0;

 $1=(+(__ZNK16b2ParticleSystem17GetParticleStrideEv($this)));
 $2=(($this+28)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4=($1)*($3);
 $5=($1)*($4);
 return (+($5));
}


function __ZNK16b2ParticleSystem17GetParticleStrideEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,label=0;

 $1=(($this+40)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*((0.75));
 return (+($3));
}


function __ZN5b2Rot11SetIdentityEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAPF32[(($1)>>2)]=0.0;
 $2=(($this+4)|0);
 HEAPF32[(($2)>>2)]=1.0;
 return;
}


function __ZN16b2ParticleSystemC2EPK19b2ParticleSystemDefP7b2World($this,$def,$world){
 $this=($this)|0;
 $def=($def)|0;
 $world=($world)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0;
 var $41=0,$42=0,$43=0,$44=0,$45=0,$$etemp$0$0=0,$$etemp$0$1=0,$st$1$0=0,$st$2$1=0,$46=0,$47=0,$48=0,$49=0,$52$0=0,$52$1=0,$55$0=0,$55$1=0,label=0;

 $1=(($this+68)|0);
 __ZN15b2SlabAllocatorI16b2ParticleHandleEC1Ej($1,256);
 $2=(($this+96)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferIP16b2ParticleHandleEC1Ev($2);
 $3=(($this+104)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferIjEC1Ev($3);
 $4=(($this+112)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferI6b2Vec2EC1Ev($4);
 $5=(($this+120)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferI6b2Vec2EC1Ev($5);
 $6=(($this+152)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferI15b2ParticleColorEC1Ev($6);
 $7=(($this+164)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferIPvEC1Ev($7);
 $8=(($this+176)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferIiEC1Ev($8);
 $9=(($this+184)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferIiEC1Ev($9);
 $10=(($this+192)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferIiEC1Ev($10);
 $11=(($this+272)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferIiEC1Ev($11);
 $12=(($this+280)|0);
 __ZN16b2ParticleSystem21UserOverridableBufferIiEC1Ev($12);
 $13=(($this+308)|0);
 __ZN19b2ParticleSystemDefC1Ev($13);
 $14=(($this)|0);
 HEAP8[($14)]=0;
 $15=(($this+4)|0);
 HEAP32[(($15)>>2)]=0;
 $16=(($this+8)|0);
 HEAP32[(($16)>>2)]=0;
 $17=(($this+12)|0);
 HEAP8[($17)]=0;
 $18=(($this+16)|0);
 HEAP32[(($18)>>2)]=0;
 $19=(($this+20)|0);
 HEAP8[($19)]=0;
 $20=(($this+21)|0);
 HEAP8[($20)]=0;
 $21=(($this+24)|0);
 HEAP32[(($21)>>2)]=0;
 $22=(($this+52)|0);
 HEAP8[($22)]=0;
 $23=(($this+28)|0);
 HEAPF32[(($23)>>2)]=1.0;
 $24=(($this+32)|0);
 HEAPF32[(($24)>>2)]=1.0;
 $25=(($this+36)|0);
 HEAPF32[(($25)>>2)]=1.0;
 $26=(($def)|0);
 $27=(+(HEAPF32[(($26)>>2)]));
 __ZN16b2ParticleSystem9SetRadiusEf($this,$27);
 $28=(($this+56)|0);
 HEAP32[(($28)>>2)]=0;
 $29=(($this+60)|0);
 HEAP32[(($29)>>2)]=0;
 $30=(($this+64)|0);
 HEAP32[(($30)>>2)]=0;
 $31=(($this+128)|0);
 $32=(($this+160)|0);
 HEAP32[(($32)>>2)]=0;
 $33=(($this+212)|0);
 $34=(($this+300)|0);
 HEAP32[(($34)>>2)]=0;
 $35=(($this+304)|0);
 HEAP32[(($35)>>2)]=0;
 $36=$13;
 $37=$def;
 $38=$31;
 _memset((((($38)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $39=$33;
 _memset((((($39)|0))|0), ((((0)|0))|0), ((((60)|0))|0))|0;
 (_memcpy((($36)|0), (($37)|0), 68)|0);
 $40=(($this+376)|0);
 HEAP32[(($40)>>2)]=$world;
 $41=(($this+172)|0);
 HEAP32[(($41)>>2)]=0;
 $42=(($this+200)|0);
 HEAP32[(($42)>>2)]=0;
 $43=(($this+204)|0);
 HEAP32[(($43)>>2)]=0;
 $44=(($this+208)|0);
 HEAP32[(($44)>>2)]=0;
 $45=(($this+288)|0);
 $$etemp$0$0=0;
 $$etemp$0$1=0;
 $st$1$0=(($45)|0);
 HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
 $st$2$1=(($45+4)|0);
 HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
 $46=(($this+296)|0);
 HEAP8[($46)]=0;
 $47=(($this+368)|0);
 $48=((HEAP8[($47)])|0);
 $49=(($48<<24)>>24)!=0;
 __ZN16b2ParticleSystem19SetDestructionByAgeEb($this,$49);
 return;
}


function __ZN15b2SlabAllocatorI16b2ParticleHandleEC1Ej($this,$itemsPerSlab){
 $this=($this)|0;
 $itemsPerSlab=($itemsPerSlab)|0;
 var label=0;

 __ZN15b2SlabAllocatorI16b2ParticleHandleEC2Ej($this,$itemsPerSlab);
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferIP16b2ParticleHandleEC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ParticleSystem21UserOverridableBufferIP16b2ParticleHandleEC2Ev($this);
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferIjEC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ParticleSystem21UserOverridableBufferIjEC2Ev($this);
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferI6b2Vec2EC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ParticleSystem21UserOverridableBufferI6b2Vec2EC2Ev($this);
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferI15b2ParticleColorEC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ParticleSystem21UserOverridableBufferI15b2ParticleColorEC2Ev($this);
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferIPvEC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ParticleSystem21UserOverridableBufferIPvEC2Ev($this);
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferIiEC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ParticleSystem21UserOverridableBufferIiEC2Ev($this);
 return;
}


function __ZN16b2ParticleSystem19SetDestructionByAgeEb($this,$enable){
 $this=($this)|0;
 $enable=($enable)|0;
 var $2=0,$4=0,$5=0,label=0;

 if ($enable) {
  $2=((__ZN16b2ParticleSystem23GetExpirationTimeBufferEv($this))|0);
 }
 $4=(($this+368)|0);
 $5=($enable&1);
 HEAP8[($4)]=$5;
 return;
}


function __ZN15b2SlabAllocatorI16b2ParticleHandleED1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2SlabAllocatorI16b2ParticleHandleED2Ev($this);
 return;
}


function __ZN16b2ParticleSystemD2Ev($this){
 $this=($this)|0;
 var $1=0,$3=0,$4=0,$lpad_phi$0=0,$lpad_phi$1=0,$7=0,$9=0,$11=0,$13=0,$15=0,$17=0,$19=0,$21=0,$23=0,$25=0,$27=0,$29=0,$31=0,$32=0,$33=0;
 var $35=0,$36=0,$38=0,$39=0,$41=0,$42=0,$44=0,$45=0,$47=0,$48=0,$50=0,$51=0,$53=0,$54=0,$55=0,$57=0,$58=0,$59=0,$61=0,$62=0;
 var $63=0,$65=0,$66=0,$67=0,$69=0,$70=0,$71=0,$73=0,$74=0,$75=0,$77=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$80$0=0,$80$1=0,label=0;

 $1=(($this+304)|0);
 while(1) {
  $3=((HEAP32[(($1)>>2)])|0);
  $4=($3|0)==0;
  if ($4) {
   break;
  }
  __ZN16b2ParticleSystem20DestroyParticleGroupEP15b2ParticleGroup($this,$3);
 }
 $9=(($this+96)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferIP16b2ParticleHandleEEvPNS_21UserOverridableBufferIT_EE($this,$9);
 $11=(($this+104)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferIjEEvPNS_21UserOverridableBufferIT_EE($this,$11);
 $13=(($this+176)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferIiEEvPNS_21UserOverridableBufferIT_EE($this,$13);
 $15=(($this+184)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferIiEEvPNS_21UserOverridableBufferIT_EE($this,$15);
 $17=(($this+192)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferIiEEvPNS_21UserOverridableBufferIT_EE($this,$17);
 $19=(($this+112)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferI6b2Vec2EEvPNS_21UserOverridableBufferIT_EE($this,$19);
 $21=(($this+120)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferI6b2Vec2EEvPNS_21UserOverridableBufferIT_EE($this,$21);
 $23=(($this+152)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferI15b2ParticleColorEEvPNS_21UserOverridableBufferIT_EE($this,$23);
 $25=(($this+164)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferIPvEEvPNS_21UserOverridableBufferIT_EE($this,$25);
 $27=(($this+272)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferIiEEvPNS_21UserOverridableBufferIT_EE($this,$27);
 $29=(($this+280)|0);
 __ZN16b2ParticleSystem25FreeUserOverridableBufferIiEEvPNS_21UserOverridableBufferIT_EE($this,$29);
 $31=(($this+128)|0);
 $32=(($this+60)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferI6b2Vec2EEvPPT_i($this,$31,$33);
 $35=(($this+132)|0);
 $36=((HEAP32[(($32)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIfEEvPPT_i($this,$35,$36);
 $38=(($this+136)|0);
 $39=((HEAP32[(($32)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIfEEvPPT_i($this,$38,$39);
 $41=(($this+140)|0);
 $42=((HEAP32[(($32)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIfEEvPPT_i($this,$41,$42);
 $44=(($this+144)|0);
 $45=((HEAP32[(($32)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferI6b2Vec2EEvPPT_i($this,$44,$45);
 $47=(($this+148)|0);
 $48=((HEAP32[(($32)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIfEEvPPT_i($this,$47,$48);
 $50=(($this+160)|0);
 $51=((HEAP32[(($32)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIP15b2ParticleGroupEEvPPT_i($this,$50,$51);
 $53=(($this+220)|0);
 $54=(($this+216)|0);
 $55=((HEAP32[(($54)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferINS_5ProxyEEEvPPT_i($this,$53,$55);
 $57=(($this+232)|0);
 $58=(($this+228)|0);
 $59=((HEAP32[(($58)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferI17b2ParticleContactEEvPPT_i($this,$57,$59);
 $61=(($this+244)|0);
 $62=(($this+240)|0);
 $63=((HEAP32[(($62)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferI21b2ParticleBodyContactEEvPPT_i($this,$61,$63);
 $65=(($this+256)|0);
 $66=(($this+252)|0);
 $67=((HEAP32[(($66)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferINS_4PairEEEvPPT_i($this,$65,$67);
 $69=(($this+268)|0);
 $70=(($this+264)|0);
 $71=((HEAP32[(($70)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferINS_5TriadEEEvPPT_i($this,$69,$71);
 $73=(($this+208)|0);
 $74=(($this+204)|0);
 $75=((HEAP32[(($74)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIiEEvPPT_i($this,$73,$75);
 $77=(($this+68)|0);
 __ZN15b2SlabAllocatorI16b2ParticleHandleED1Ev($77);
 return;
}


function __ZN16b2ParticleSystem20DestroyParticleGroupEP15b2ParticleGroup($this,$group){
 $this=($this)|0;
 $group=($group)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$i_017=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$32=0,$33=0,$34=0,$36=0,$37=0,$39=0,$40=0,$41=0,$43=0,$45=0,$46=0,$47=0,$48=0;
 var $49=0,$50=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+102992)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==0;
 if (!($5)) {
  $7=$4;
  $8=((HEAP32[(($7)>>2)])|0);
  $9=(($8+16)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  FUNCTION_TABLE_vii[($10)&255]($4,$group);
 }
 __ZN16b2ParticleSystem13SetGroupFlagsEP15b2ParticleGroupj($this,$group,0);
 $12=(($group+4)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($group+8)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=($13|0)<($15|0);
 if ($16) {
  $17=(($this+160)|0);
  $18=((HEAP32[(($14)>>2)])|0);
  $i_017=$13;
  while(1) {

   $20=((HEAP32[(($17)>>2)])|0);
   $21=(($20+($i_017<<2))|0);
   HEAP32[(($21)>>2)]=0;
   $22=((($i_017)+(1))|0);
   $23=($22|0)<($18|0);
   if ($23) {
    $i_017=$22;
   } else {
    break;
   }
  }
 }
 $24=(($group+20)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=($25|0)==0;
 if (!($26)) {
  $28=(($group+24)|0);
  $29=((HEAP32[(($28)>>2)])|0);
  $30=(($25+24)|0);
  HEAP32[(($30)>>2)]=$29;
 }
 $32=(($group+24)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=($33|0)==0;
 if (!($34)) {
  $36=((HEAP32[(($24)>>2)])|0);
  $37=(($33+20)|0);
  HEAP32[(($37)>>2)]=$36;
 }
 $39=(($this+304)|0);
 $40=((HEAP32[(($39)>>2)])|0);
 $41=($40|0)==($group|0);
 if (!($41)) {
  $45=(($this+300)|0);
  $46=((HEAP32[(($45)>>2)])|0);
  $47=((($46)-(1))|0);
  HEAP32[(($45)>>2)]=$47;
  $48=((HEAP32[(($1)>>2)])|0);
  $49=(($48)|0);
  $50=$group;
  __ZN16b2BlockAllocator4FreeEPvi($49,$50,80);
  return;
 }
 $43=((HEAP32[(($32)>>2)])|0);
 HEAP32[(($39)>>2)]=$43;
 $45=(($this+300)|0);
 $46=((HEAP32[(($45)>>2)])|0);
 $47=((($46)-(1))|0);
 HEAP32[(($45)>>2)]=$47;
 $48=((HEAP32[(($1)>>2)])|0);
 $49=(($48)|0);
 $50=$group;
 __ZN16b2BlockAllocator4FreeEPvi($49,$50,80);
 return;
}


function __ZN16b2ParticleSystem25FreeUserOverridableBufferIP16b2ParticleHandleEEvPNS_21UserOverridableBufferIT_EE($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,label=0;

 $1=(($b+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  return;
 }
 $5=(($b)|0);
 $6=(($this+60)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIP16b2ParticleHandleEEvPPT_i($this,$5,$7);
 return;
}


function __ZN16b2ParticleSystem25FreeUserOverridableBufferIjEEvPNS_21UserOverridableBufferIT_EE($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,label=0;

 $1=(($b+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  return;
 }
 $5=(($b)|0);
 $6=(($this+60)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIjEEvPPT_i($this,$5,$7);
 return;
}


function __ZN16b2ParticleSystem25FreeUserOverridableBufferIiEEvPNS_21UserOverridableBufferIT_EE($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,label=0;

 $1=(($b+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  return;
 }
 $5=(($b)|0);
 $6=(($this+60)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIiEEvPPT_i($this,$5,$7);
 return;
}


function __ZN16b2ParticleSystem25FreeUserOverridableBufferI6b2Vec2EEvPNS_21UserOverridableBufferIT_EE($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,label=0;

 $1=(($b+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  return;
 }
 $5=(($b)|0);
 $6=(($this+60)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferI6b2Vec2EEvPPT_i($this,$5,$7);
 return;
}


function __ZN16b2ParticleSystem25FreeUserOverridableBufferI15b2ParticleColorEEvPNS_21UserOverridableBufferIT_EE($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,label=0;

 $1=(($b+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  return;
 }
 $5=(($b)|0);
 $6=(($this+60)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferI15b2ParticleColorEEvPPT_i($this,$5,$7);
 return;
}


function __ZN16b2ParticleSystem25FreeUserOverridableBufferIPvEEvPNS_21UserOverridableBufferIT_EE($this,$b){
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,label=0;

 $1=(($b+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if (!($3)) {
  return;
 }
 $5=(($b)|0);
 $6=(($this+60)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 __ZN16b2ParticleSystem10FreeBufferIPvEEvPPT_i($this,$5,$7);
 return;
}


function __ZN16b2ParticleSystem10FreeBufferI6b2Vec2EEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=$capacity<<3;
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferIfEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=$capacity<<2;
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferIP15b2ParticleGroupEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=$capacity<<2;
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferINS_5ProxyEEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=$capacity<<3;
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferI17b2ParticleContactEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=((($capacity)*(24))&-1);
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferI21b2ParticleBodyContactEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=((($capacity)*(28))&-1);
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferINS_4PairEEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=((($capacity)*(20))&-1);
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferINS_5TriadEEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=((($capacity)*(60))&-1);
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferIiEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=$capacity<<2;
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem23ReallocateHandleBuffersEi($this,$newCapacity){
 $this=($this)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+96)|0);
 $2=(($this+60)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((__ZN16b2ParticleSystem16ReallocateBufferIP16b2ParticleHandleEEPT_PNS_21UserOverridableBufferIS3_EEiib($this,$1,$3,$newCapacity,1))|0);
 $5=(($1)|0);
 HEAP32[(($5)>>2)]=$4;
 $6=(($this+68)|0);
 $7=((HEAP32[(($2)>>2)])|0);
 $8=((($newCapacity)-($7))|0);
 __ZN15b2SlabAllocatorI16b2ParticleHandleE15SetItemsPerSlabEj($6,$8);
 return;
}


function __ZN16b2ParticleSystem16ReallocateBufferIP16b2ParticleHandleEEPT_PNS_21UserOverridableBufferIS3_EEiib($this,$buffer,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($buffer)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($buffer+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZN16b2ParticleSystem16ReallocateBufferIP16b2ParticleHandleEEPT_S4_iiib($this,$2,$4,$oldCapacity,$newCapacity,$deferred))|0);
 return (($5)|0);
}


function __ZN15b2SlabAllocatorI16b2ParticleHandleE15SetItemsPerSlabEj($this,$itemsPerSlab){
 $this=($this)|0;
 $itemsPerSlab=($itemsPerSlab)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$itemsPerSlab;
 return;
}


function __ZN16b2ParticleSystem14GetColorBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+152)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN16b2ParticleSystem13RequestBufferI15b2ParticleColorEEPT_S3_($this,$2))|0);
 HEAP32[(($1)>>2)]=$3;
 return (($3)|0);
}


function __ZN16b2ParticleSystem13RequestBufferI15b2ParticleColorEEPT_S3_($this,$buffer){
 $this=($this)|0;
 $buffer=($buffer)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 if (!($1)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $3=(($this+60)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==0;
 if ($5) {
  __ZN16b2ParticleSystem34ReallocateInternalAllocatedBuffersEi($this,256);
 }
 $8=(($this+376)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9)|0);
 $11=((HEAP32[(($3)>>2)])|0);
 $12=$11<<2;
 $13=((__ZN16b2BlockAllocator8AllocateEi($10,$12))|0);
 $14=$13;
 $15=((HEAP32[(($3)>>2)])|0);
 $16=$15<<2;
 _memset((((($13)|0))|0), ((((0)|0))|0), (((($16)|0))|0))|0;
 $_0=$14;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem13RequestBufferIPvEEPT_S3_($this,$buffer){
 $this=($this)|0;
 $buffer=($buffer)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 if (!($1)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $3=(($this+60)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==0;
 if ($5) {
  __ZN16b2ParticleSystem34ReallocateInternalAllocatedBuffersEi($this,256);
 }
 $8=(($this+376)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9)|0);
 $11=((HEAP32[(($3)>>2)])|0);
 $12=$11<<2;
 $13=((__ZN16b2BlockAllocator8AllocateEi($10,$12))|0);
 $14=$13;
 $15=((HEAP32[(($3)>>2)])|0);
 $16=$15<<2;
 _memset((((($13)|0))|0), ((((0)|0))|0), (((($16)|0))|0))|0;
 $_0=$14;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem34ReallocateInternalAllocatedBuffersEi($this,$capacity){
 $this=($this)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0;
 var $42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0;
 var $62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$81=0;
 var $82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=0,$91=0,$92=0,$93=0,label=0;

 $1=(($this+64)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZL13LimitCapacityii($capacity,$2))|0);
 $4=(($this+104)|0);
 $5=(($this+108)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZL13LimitCapacityii($3,$6))|0);
 $8=(($this+112)|0);
 $9=(($this+116)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((__ZL13LimitCapacityii($7,$10))|0);
 $12=(($this+120)|0);
 $13=(($this+124)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=((__ZL13LimitCapacityii($11,$14))|0);
 $16=(($this+152)|0);
 $17=(($this+156)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=((__ZL13LimitCapacityii($15,$18))|0);
 $20=(($this+164)|0);
 $21=(($this+168)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((__ZL13LimitCapacityii($19,$22))|0);
 $24=(($this+60)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=($25|0)<($23|0);
 if (!($26)) {
  return;
 }
 __ZN16b2ParticleSystem23ReallocateHandleBuffersEi($this,$23);
 $28=((HEAP32[(($24)>>2)])|0);
 $29=((__ZN16b2ParticleSystem16ReallocateBufferIjEEPT_PNS_21UserOverridableBufferIS1_EEiib($this,$4,$28,$23,0))|0);
 $30=(($4)|0);
 HEAP32[(($30)>>2)]=$29;
 $31=(($this+172)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 $33=($32|0)>0;
 $34=(($this+176)|0);
 $35=((HEAP32[(($24)>>2)])|0);
 $36=((__ZN16b2ParticleSystem16ReallocateBufferIiEEPT_PNS_21UserOverridableBufferIS1_EEiib($this,$34,$35,$23,$33))|0);
 $37=(($34)|0);
 HEAP32[(($37)>>2)]=$36;
 $38=(($this+184)|0);
 $39=((HEAP32[(($24)>>2)])|0);
 $40=((__ZN16b2ParticleSystem16ReallocateBufferIiEEPT_PNS_21UserOverridableBufferIS1_EEiib($this,$38,$39,$23,$33))|0);
 $41=(($38)|0);
 HEAP32[(($41)>>2)]=$40;
 $42=(($this+192)|0);
 $43=((HEAP32[(($24)>>2)])|0);
 $44=((__ZN16b2ParticleSystem16ReallocateBufferIiEEPT_PNS_21UserOverridableBufferIS1_EEiib($this,$42,$43,$23,$33))|0);
 $45=(($42)|0);
 HEAP32[(($45)>>2)]=$44;
 $46=((HEAP32[(($24)>>2)])|0);
 $47=((__ZN16b2ParticleSystem16ReallocateBufferI6b2Vec2EEPT_PNS_21UserOverridableBufferIS2_EEiib($this,$8,$46,$23,0))|0);
 $48=(($8)|0);
 HEAP32[(($48)>>2)]=$47;
 $49=((HEAP32[(($24)>>2)])|0);
 $50=((__ZN16b2ParticleSystem16ReallocateBufferI6b2Vec2EEPT_PNS_21UserOverridableBufferIS2_EEiib($this,$12,$49,$23,0))|0);
 $51=(($12)|0);
 HEAP32[(($51)>>2)]=$50;
 $52=(($this+128)|0);
 $53=((HEAP32[(($52)>>2)])|0);
 $54=((HEAP32[(($24)>>2)])|0);
 $55=((__ZN16b2ParticleSystem16ReallocateBufferI6b2Vec2EEPT_S3_iiib($this,$53,0,$54,$23,0))|0);
 HEAP32[(($52)>>2)]=$55;
 $56=(($this+132)|0);
 $57=((HEAP32[(($56)>>2)])|0);
 $58=((HEAP32[(($24)>>2)])|0);
 $59=((__ZN16b2ParticleSystem16ReallocateBufferIfEEPT_S2_iiib($this,$57,0,$58,$23,0))|0);
 HEAP32[(($56)>>2)]=$59;
 $60=(($this+136)|0);
 $61=((HEAP32[(($60)>>2)])|0);
 $62=((HEAP32[(($24)>>2)])|0);
 $63=((__ZN16b2ParticleSystem16ReallocateBufferIfEEPT_S2_iiib($this,$61,0,$62,$23,1))|0);
 HEAP32[(($60)>>2)]=$63;
 $64=(($this+140)|0);
 $65=((HEAP32[(($64)>>2)])|0);
 $66=((HEAP32[(($24)>>2)])|0);
 $67=((__ZN16b2ParticleSystem16ReallocateBufferIfEEPT_S2_iiib($this,$65,0,$66,$23,0))|0);
 HEAP32[(($64)>>2)]=$67;
 $68=(($this+144)|0);
 $69=((HEAP32[(($68)>>2)])|0);
 $70=((HEAP32[(($24)>>2)])|0);
 $71=((__ZN16b2ParticleSystem16ReallocateBufferI6b2Vec2EEPT_S3_iiib($this,$69,0,$70,$23,1))|0);
 HEAP32[(($68)>>2)]=$71;
 $72=(($this+148)|0);
 $73=((HEAP32[(($72)>>2)])|0);
 $74=((HEAP32[(($24)>>2)])|0);
 $75=((__ZN16b2ParticleSystem16ReallocateBufferIfEEPT_S2_iiib($this,$73,0,$74,$23,1))|0);
 HEAP32[(($72)>>2)]=$75;
 $76=((HEAP32[(($24)>>2)])|0);
 $77=((__ZN16b2ParticleSystem16ReallocateBufferI15b2ParticleColorEEPT_PNS_21UserOverridableBufferIS2_EEiib($this,$16,$76,$23,1))|0);
 $78=(($16)|0);
 HEAP32[(($78)>>2)]=$77;
 $79=(($this+160)|0);
 $80=((HEAP32[(($79)>>2)])|0);
 $81=((HEAP32[(($24)>>2)])|0);
 $82=((__ZN16b2ParticleSystem16ReallocateBufferIP15b2ParticleGroupEEPT_S4_iiib($this,$80,0,$81,$23,0))|0);
 HEAP32[(($79)>>2)]=$82;
 $83=((HEAP32[(($24)>>2)])|0);
 $84=((__ZN16b2ParticleSystem16ReallocateBufferIPvEEPT_PNS_21UserOverridableBufferIS2_EEiib($this,$20,$83,$23,1))|0);
 $85=(($20)|0);
 HEAP32[(($85)>>2)]=$84;
 $86=(($this+272)|0);
 $87=((HEAP32[(($24)>>2)])|0);
 $88=((__ZN16b2ParticleSystem16ReallocateBufferIiEEPT_PNS_21UserOverridableBufferIS1_EEiib($this,$86,$87,$23,1))|0);
 $89=(($86)|0);
 HEAP32[(($89)>>2)]=$88;
 $90=(($this+280)|0);
 $91=((HEAP32[(($24)>>2)])|0);
 $92=((__ZN16b2ParticleSystem16ReallocateBufferIiEEPT_PNS_21UserOverridableBufferIS1_EEiib($this,$90,$91,$23,1))|0);
 $93=(($90)|0);
 HEAP32[(($93)>>2)]=$92;
 HEAP32[(($24)>>2)]=$23;
 return;
}


function __ZL13LimitCapacityii($capacity,$maxCount){
 $capacity=($capacity)|0;
 $maxCount=($maxCount)|0;
 var $1=0,$3=0,$phitmp=0,$5=0,label=0;

 $1=($maxCount|0)==0;
 if ($1) {
  $5=$capacity;

  return (($5)|0);
 }
 $3=($capacity|0)>($maxCount|0);
 $phitmp=($3?$maxCount:$capacity);
 $5=$phitmp;

 return (($5)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIjEEPT_PNS_21UserOverridableBufferIS1_EEiib($this,$buffer,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($buffer)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($buffer+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZN16b2ParticleSystem16ReallocateBufferIjEEPT_S2_iiib($this,$2,$4,$oldCapacity,$newCapacity,$deferred))|0);
 return (($5)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIiEEPT_PNS_21UserOverridableBufferIS1_EEiib($this,$buffer,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($buffer)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($buffer+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZN16b2ParticleSystem16ReallocateBufferIiEEPT_S2_iiib($this,$2,$4,$oldCapacity,$newCapacity,$deferred))|0);
 return (($5)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferI6b2Vec2EEPT_PNS_21UserOverridableBufferIS2_EEiib($this,$buffer,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($buffer)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($buffer+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZN16b2ParticleSystem16ReallocateBufferI6b2Vec2EEPT_S3_iiib($this,$2,$4,$oldCapacity,$newCapacity,$deferred))|0);
 return (($5)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferI6b2Vec2EEPT_S3_iiib($this,$buffer,$userSuppliedCapacity,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $userSuppliedCapacity=($userSuppliedCapacity)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$or_cond=0,$or_cond_not=0,$2=0,$or_cond8=0,$4=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 $or_cond=$1&$deferred;
 $or_cond_not=$or_cond^1;
 $2=($userSuppliedCapacity|0)==0;
 $or_cond8=$2&$or_cond_not;
 if (!($or_cond8)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=((__ZN16b2ParticleSystem16ReallocateBufferI6b2Vec2EEPT_S3_ii($this,$buffer,$oldCapacity,$newCapacity))|0);
 $_0=$4;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIfEEPT_S2_iiib($this,$buffer,$userSuppliedCapacity,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $userSuppliedCapacity=($userSuppliedCapacity)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$or_cond=0,$or_cond_not=0,$2=0,$or_cond8=0,$4=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 $or_cond=$1&$deferred;
 $or_cond_not=$or_cond^1;
 $2=($userSuppliedCapacity|0)==0;
 $or_cond8=$2&$or_cond_not;
 if (!($or_cond8)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=((__ZN16b2ParticleSystem16ReallocateBufferIfEEPT_S2_ii($this,$buffer,$oldCapacity,$newCapacity))|0);
 $_0=$4;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferI15b2ParticleColorEEPT_PNS_21UserOverridableBufferIS2_EEiib($this,$buffer,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($buffer)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($buffer+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZN16b2ParticleSystem16ReallocateBufferI15b2ParticleColorEEPT_S3_iiib($this,$2,$4,$oldCapacity,$newCapacity,$deferred))|0);
 return (($5)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIP15b2ParticleGroupEEPT_S4_iiib($this,$buffer,$userSuppliedCapacity,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $userSuppliedCapacity=($userSuppliedCapacity)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$or_cond=0,$or_cond_not=0,$2=0,$or_cond8=0,$4=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 $or_cond=$1&$deferred;
 $or_cond_not=$or_cond^1;
 $2=($userSuppliedCapacity|0)==0;
 $or_cond8=$2&$or_cond_not;
 if (!($or_cond8)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=((__ZN16b2ParticleSystem16ReallocateBufferIP15b2ParticleGroupEEPT_S4_ii($this,$buffer,$oldCapacity,$newCapacity))|0);
 $_0=$4;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIPvEEPT_PNS_21UserOverridableBufferIS2_EEiib($this,$buffer,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($buffer)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($buffer+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((__ZN16b2ParticleSystem16ReallocateBufferIPvEEPT_S3_iiib($this,$2,$4,$oldCapacity,$newCapacity,$deferred))|0);
 return (($5)|0);
}


function __ZN16b2ParticleSystem14CreateParticleERK13b2ParticleDef($this,$def){
 $this=($this)|0;
 $def=($def)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$_=0,$14=0,$15=0,$16=0,$18=0,$19=0,$20=0,$23=0,$24=0,$25=0;
 var $26=0,$27=0,$28=0,$29=0,$30=0,$32=0,$34=0,$35=0,$36=0,$38=0,$40=0,$41=0,$42=0,$44=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0;
 var $ld$0$0=0,$52$0=0,$ld$1$1=0,$52$1=0,$st$2$0=0,$st$3$1=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$ld$4$0=0,$59$0=0,$ld$5$1=0,$59$1=0,$st$6$0=0,$st$7$1=0,$60=0,$61=0;
 var $62=0,$63=0,$64=0,$65=0,$66=0,$$etemp$8=0,$ld$9$0=0,$67$0=0,$ld$10$1=0,$67$1=0,$st$11$0=0,$st$12$1=0,$68=0,$69=0,$70=0,$72=0,$74=0,$75=0,$76=0,$78=0;
 var $80=0,$81=0,$82=0,$84=0,$85=0,$87=0,$88=0,$89=0,$90=0,$91=0,$93=0,$94=0,$95=0,$97=0,$98=0,$99=0,$101=0,$102=0,$103=0,$104=0;
 var $105=0,$107=0,$108=0,$109=0,$111=0,$113=0,$114=0,$115=0,$116=0,$117=0,$118=0,$119=0,$120=.0,$121=0,$122=0,$123=0,$_not=0,$brmerge=0,$126=0,$127=0;
 var $128=.0,$130=.0,$131=0,$132=0,$133=0,$135=0,$136=0,$137=0,$138=0,$139=0,$140=0,$141=0,$142=0,$143=0,$144=0,$146=0,$147=0,$148=0,$149=0,$150=0;
 var $154=0,$155=0,$_0=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  $_0=0;

  return (($_0)|0);
 }
 $5=(($this+56)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this+60)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($6|0)<($8|0);
 if (!($9)) {
  $11=($6|0)==0;
  $12=$6<<1;
  $_=($11?256:$12);
  __ZN16b2ParticleSystem34ReallocateInternalAllocatedBuffersEi($this,$_);
 }
 $14=((HEAP32[(($5)>>2)])|0);
 $15=((HEAP32[(($7)>>2)])|0);
 $16=($14|0)<($15|0);
 do {
  if (!($16)) {
   $18=(($this+368)|0);
   $19=((HEAP8[($18)])|0);
   $20=(($19<<24)>>24)==0;
   if ($20) {
    $_0=-1;

    return (($_0)|0);
   } else {
    __ZN16b2ParticleSystem21DestroyOldestParticleEib($this,0,0);
    __ZN16b2ParticleSystem11SolveZombieEv($this);
    break;
   }
  }
 } while(0);
 $23=((HEAP32[(($5)>>2)])|0);
 $24=((($23)+(1))|0);
 HEAP32[(($5)>>2)]=$24;
 $25=(($this+104)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=(($26+($23<<2))|0);
 HEAP32[(($27)>>2)]=0;
 $28=(($this+176)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=($29|0)==0;
 if (!($30)) {
  $32=(($29+($23<<2))|0);
  HEAP32[(($32)>>2)]=0;
 }
 $34=(($this+184)|0);
 $35=((HEAP32[(($34)>>2)])|0);
 $36=($35|0)==0;
 if (!($36)) {
  $38=(($35+($23<<2))|0);
  HEAP32[(($38)>>2)]=0;
 }
 $40=(($this+192)|0);
 $41=((HEAP32[(($40)>>2)])|0);
 $42=($41|0)==0;
 if (!($42)) {
  $44=(($41+($23<<2))|0);
  HEAP32[(($44)>>2)]=0;
 }
 $46=(($this+112)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=(($47+($23<<3))|0);
 $49=(($def+4)|0);
 $50=$49;
 $51=$48;
 $ld$0$0=(($50)|0);
 $52$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($50+4)|0);
 $52$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($51)|0);
 HEAP32[(($st$2$0)>>2)]=$52$0;
 $st$3$1=(($51+4)|0);
 HEAP32[(($st$3$1)>>2)]=$52$1;
 $53=(($this+120)|0);
 $54=((HEAP32[(($53)>>2)])|0);
 $55=(($54+($23<<3))|0);
 $56=(($def+12)|0);
 $57=$56;
 $58=$55;
 $ld$4$0=(($57)|0);
 $59$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($57+4)|0);
 $59$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($58)|0);
 HEAP32[(($st$6$0)>>2)]=$59$0;
 $st$7$1=(($58+4)|0);
 HEAP32[(($st$7$1)>>2)]=$59$1;
 $60=(($this+132)|0);
 $61=((HEAP32[(($60)>>2)])|0);
 $62=(($61+($23<<2))|0);
 HEAPF32[(($62)>>2)]=0.0;
 $63=(($this+128)|0);
 $64=((HEAP32[(($63)>>2)])|0);
 $65=(($64+($23<<3))|0);
 $66=$65;
 $$etemp$8=8264;
 $ld$9$0=(($$etemp$8)|0);
 $67$0=((HEAP32[(($ld$9$0)>>2)])|0);
 $ld$10$1=(($$etemp$8+4)|0);
 $67$1=((HEAP32[(($ld$10$1)>>2)])|0);
 $st$11$0=(($66)|0);
 HEAP32[(($st$11$0)>>2)]=$67$0;
 $st$12$1=(($66+4)|0);
 HEAP32[(($st$12$1)>>2)]=$67$1;
 $68=(($this+136)|0);
 $69=((HEAP32[(($68)>>2)])|0);
 $70=($69|0)==0;
 if (!($70)) {
  $72=(($69+($23<<2))|0);
  HEAPF32[(($72)>>2)]=0.0;
 }
 $74=(($this+148)|0);
 $75=((HEAP32[(($74)>>2)])|0);
 $76=($75|0)==0;
 if (!($76)) {
  $78=(($75+($23<<2))|0);
  HEAPF32[(($78)>>2)]=0.0;
 }
 $80=(($this+152)|0);
 $81=((HEAP32[(($80)>>2)])|0);
 $82=($81|0)==0;
 if ($82) {
  $84=(($def+20)|0);
  $85=((__ZNK15b2ParticleColor6IsZeroEv($84))|0);
  if (!($85)) {
   label = 19;
  }
 } else {
  label = 19;
 }
 if ((label|0) == 19) {
  $87=((HEAP32[(($80)>>2)])|0);
  $88=((__ZN16b2ParticleSystem13RequestBufferI15b2ParticleColorEEPT_S3_($this,$87))|0);
  HEAP32[(($80)>>2)]=$88;
  $89=(($88+($23<<2))|0);
  $90=(($def+20)|0);
  $91=((__ZN15b2ParticleColoraSERKS_($89,$90))|0);
 }
 $93=(($this+164)|0);
 $94=((HEAP32[(($93)>>2)])|0);
 $95=($94|0)==0;
 if ($95) {
  $97=(($def+28)|0);
  $98=((HEAP32[(($97)>>2)])|0);
  $99=($98|0)==0;
  if (!($99)) {
   label = 22;
  }
 } else {
  label = 22;
 }
 if ((label|0) == 22) {
  $101=((HEAP32[(($93)>>2)])|0);
  $102=((__ZN16b2ParticleSystem13RequestBufferIPvEEPT_S3_($this,$101))|0);
  HEAP32[(($93)>>2)]=$102;
  $103=(($def+28)|0);
  $104=((HEAP32[(($103)>>2)])|0);
  $105=(($102+($23<<2))|0);
  HEAP32[(($105)>>2)]=$104;
 }
 $107=(($this+96)|0);
 $108=((HEAP32[(($107)>>2)])|0);
 $109=($108|0)==0;
 if (!($109)) {
  $111=(($108+($23<<2))|0);
  HEAP32[(($111)>>2)]=0;
 }
 $113=(($this+220)|0);
 $114=((HEAP32[(($113)>>2)])|0);
 $115=(($this+212)|0);
 $116=((HEAP32[(($115)>>2)])|0);
 $117=(($this+216)|0);
 $118=((__ZN16b2ParticleSystem21RequestGrowableBufferINS_5ProxyEEEPT_S3_iPi($this,$114,$116,$117))|0);
 HEAP32[(($113)>>2)]=$118;
 $119=(($def+24)|0);
 $120=(+(HEAPF32[(($119)>>2)]));
 $121=$120>(0.0);
 $122=(($this+272)|0);
 $123=((HEAP32[(($122)>>2)])|0);
 $_not=($123|0)!=0;
 $brmerge=$_not|$121;
 if ($brmerge) {
  if ($121) {
   $130=$120;
  } else {
   $126=((__ZNK16b2ParticleSystem23GetQuantizedTimeElapsedEv($this))|0);
   $127=(((-$126))|0);
   $128=(+(__ZNK16b2ParticleSystem24ExpirationTimeToLifetimeEi($this,$127)));
   $130=$128;
  }

  __ZN16b2ParticleSystem19SetParticleLifetimeEif($this,$23,$130);
  $131=(($this+280)|0);
  $132=((HEAP32[(($131)>>2)])|0);
  $133=(($132+($23<<2))|0);
  HEAP32[(($133)>>2)]=$23;
 }
 $135=((HEAP32[(($115)>>2)])|0);
 $136=((($135)+(1))|0);
 HEAP32[(($115)>>2)]=$136;
 $137=((HEAP32[(($113)>>2)])|0);
 $138=(($137+($135<<3))|0);
 HEAP32[(($138)>>2)]=$23;
 $139=(($def+32)|0);
 $140=((HEAP32[(($139)>>2)])|0);
 $141=(($this+160)|0);
 $142=((HEAP32[(($141)>>2)])|0);
 $143=(($142+($23<<2))|0);
 HEAP32[(($143)>>2)]=$140;
 $144=($140|0)==0;
 do {
  if (!($144)) {
   $146=(($140+4)|0);
   $147=((HEAP32[(($146)>>2)])|0);
   $148=(($140+8)|0);
   $149=((HEAP32[(($148)>>2)])|0);
   $150=($147|0)<($149|0);
   if ($150) {
    __ZN16b2ParticleSystem12RotateBufferEiii($this,$147,$149,$23);
    HEAP32[(($148)>>2)]=$24;
    break;
   } else {
    HEAP32[(($146)>>2)]=$23;
    HEAP32[(($148)>>2)]=$24;
    break;
   }
  }
 } while(0);
 $154=(($def)|0);
 $155=((HEAP32[(($154)>>2)])|0);
 __ZN16b2ParticleSystem16SetParticleFlagsEij($this,$23,$155);
 $_0=$23;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem21DestroyOldestParticleEib($this,$index,$callDestructionListener){
 $this=($this)|0;
 $index=($index)|0;
 $callDestructionListener=($callDestructionListener)|0;
 var $1=0,$_neg=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=0,$15=0,label=0;

 $1=((__ZNK16b2ParticleSystem16GetParticleCountEv($this))|0);
 $_neg=$index^-1;
 $2=((($1)+($_neg))|0);
 $3=(($this+280)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+($2<<2))|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($4+($index<<2))|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($this+272)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+($6<<2))|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(+((($12|0))|0));
 $14=$13>(0.0);
 $15=($14?$6:$8);
 __ZN16b2ParticleSystem15DestroyParticleEib($this,$15,$callDestructionListener);
 return;
}


function __ZN16b2ParticleSystem11SolveZombieEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$newCount_0_lcssa=0,$allParticleFlags_0_lcssa=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$newCount_0196=0,$allParticleFlags_0195=0,$i_0192=0,$35=0,$36=0;
 var $37=0,$38=0,$39=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$or_cond=0,$48=0,$49=0,$50=0,$51=0,$53=0,$54=0,$56=0,$57=0,$58=0,$60=0;
 var $61=0,$63=0,$65=0,$66=0,$68=0,$69=0,$71=0,$72=0,$73=0,$76=0,$77=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$86=0,$87=0,$88=0;
 var $90=0,$91=0,$93=0,$94=0,$95=0,$97=0,$98=0,$100=0,$101=0,$102=0,$104=0,$105=0,$106=0,$107=0,$108=0,$ld$0$0=0,$109$0=0,$ld$1$1=0,$109$1=0,$st$2$0=0;
 var $st$3$1=0,$110=0,$111=0,$112=0,$113=0,$114=0,$ld$4$0=0,$115$0=0,$ld$5$1=0,$115$1=0,$st$6$0=0,$st$7$1=0,$116=0,$117=0,$118=0,$119=0,$120=0,$121=0,$123=0,$124=0;
 var $125=0,$126=0,$127=0,$ld$8$0=0,$128$0=0,$ld$9$1=0,$128$1=0,$st$10$0=0,$st$11$1=0,$130=0,$131=0,$133=0,$134=.0,$135=0,$137=0,$138=0,$140=0,$141=.0,$142=0,$144=0;
 var $145=0,$147=0,$148=0,$149=0,$151=0,$152=0,$154=0,$155=0,$156=0,$158=0,$159=0,$161=0,$162=0,$163=0,$165=0,$166=0,$allParticleFlags_1=0,$newCount_1=0,$168=0,$169=0;
 var $170=0,$172=0,$k_0184=0,$173=0,$174=0,$175=0,$176=0,$177=0,$178=0,$179=0,$_lcssa183=0,$_lcssa181=0,$180=0,$181=0,$182=0,$183=0,$184=0,$185=0,$186=0,$187=0;
 var $188=0,$189=0,$190=0,$191=0,$192=0,$194=0,$k2_0171=0,$195=0,$196=0,$197=0,$198=0,$199=0,$200=0,$201=0,$202=0,$203=0,$204=0,$205=0,$_lcssa170=0,$_lcssa168=0;
 var $206=0,$207=0,$208=0,$209=0,$210=0,$211=0,$212=0,$213=0,$214=0,$215=0,$216=0,$217=0,$218=0,$220=0,$k3_0159=0,$221=0,$222=0,$223=0,$224=0,$225=0;
 var $226=0,$227=0,$_lcssa158=0,$_lcssa156=0,$228=0,$229=0,$230=0,$231=0,$232=0,$233=0,$234=0,$235=0,$236=0,$237=0,$238=0,$239=0,$240=0,$242=0,$k5_0147=0,$243=0;
 var $244=0,$245=0,$246=0,$247=0,$248=0,$249=0,$250=0,$251=0,$252=0,$253=0,$_lcssa146=0,$_lcssa144=0,$254=0,$255=0,$256=0,$257=0,$258=0,$259=0,$260=0,$261=0;
 var $262=0,$263=0,$264=0,$265=0,$266=0,$268=0,$k6_0135=0,$269=0,$270=0,$271=0,$272=0,$273=0,$274=0,$275=0,$276=0,$277=0,$278=0,$279=0,$280=0,$281=0;
 var $282=0,$283=0,$_lcssa134=0,$_lcssa132=0,$284=0,$285=0,$286=0,$287=0,$288=0,$289=0,$290=0,$291=0,$292=0,$293=0,$294=0,$295=0,$296=0,$readOffset_0129=0,$writeOffset_0128=0,$298=0;
 var $299=0,$300=0,$301=0,$302=0,$304=0,$305=0,$writeOffset_1=0,$307=0,$308=0,$309=0,$310=0,$311=0,$312=0,$group_0124=0,$313=0,$314=0,$315=0,$316=0,$317=0,$318=0;
 var $i7_0117=0,$modified_0_off0116=0,$lastIndex_0115=0,$firstIndex_0114=0,$320=0,$321=0,$322=0,$324=0,$325=0,$326=0,$firstIndex_1=0,$lastIndex_1=0,$modified_1_off0=0,$328=0,$329=0,$modified_0_off0_lcssa=0,$lastIndex_0_lcssa=0,$firstIndex_0_lcssa=0,$330=0,$333=0;
 var $334=0,$335=0,$336=0,$338=0,$340=0,$341=0,$342=0,$343=0,$345=0,$347=0,$348=0,$349=0,$350=0,$351=0,$352=0,$353=0,$354=0,$group8_0113=0,$355=0,$356=0;
 var $357=0,$358=0,$359=0,$360=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+76)|0);
 $4=(($this+56)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=$5<<2;
 $7=((__ZN16b2StackAllocator8AllocateEi($3,$6))|0);
 $8=$7;
 $9=((HEAP32[(($4)>>2)])|0);
 $10=($9|0)>0;
 if ($10) {
  $11=(($this+104)|0);
  $12=(($this+96)|0);
  $13=(($this+176)|0);
  $14=(($this+184)|0);
  $15=(($this+192)|0);
  $16=(($this+112)|0);
  $17=(($this+120)|0);
  $18=(($this+160)|0);
  $19=(($this+21)|0);
  $20=(($this+136)|0);
  $21=(($this+148)|0);
  $22=(($this+152)|0);
  $23=(($this+164)|0);
  $24=(($this+272)|0);
  $25=(($this+128)|0);
  $26=(($this+96)|0);
  $27=(($this+68)|0);
  $i_0192=0;$allParticleFlags_0195=0;$newCount_0196=0;
  while(1) {



   $35=((HEAP32[(($11)>>2)])|0);
   $36=(($35+($i_0192<<2))|0);
   $37=((HEAP32[(($36)>>2)])|0);
   $38=$37&2;
   $39=($38|0)==0;
   if ($39) {
    $65=(($8+($i_0192<<2))|0);
    HEAP32[(($65)>>2)]=$newCount_0196;
    $66=($i_0192|0)==($newCount_0196|0);
    do {
     if (!($66)) {
      $68=((HEAP32[(($12)>>2)])|0);
      $69=($68|0)==0;
      if (!($69)) {
       $71=(($68+($i_0192<<2))|0);
       $72=((HEAP32[(($71)>>2)])|0);
       $73=($72|0)==0;
       if (!($73)) {
        __ZN16b2ParticleHandle8SetIndexEi($72,$newCount_0196);
       }
       $76=((HEAP32[(($12)>>2)])|0);
       $77=(($76+($newCount_0196<<2))|0);
       HEAP32[(($77)>>2)]=$72;
      }
      $79=((HEAP32[(($11)>>2)])|0);
      $80=(($79+($i_0192<<2))|0);
      $81=((HEAP32[(($80)>>2)])|0);
      $82=(($79+($newCount_0196<<2))|0);
      HEAP32[(($82)>>2)]=$81;
      $83=((HEAP32[(($13)>>2)])|0);
      $84=($83|0)==0;
      if (!($84)) {
       $86=(($83+($i_0192<<2))|0);
       $87=((HEAP32[(($86)>>2)])|0);
       $88=(($83+($newCount_0196<<2))|0);
       HEAP32[(($88)>>2)]=$87;
      }
      $90=((HEAP32[(($14)>>2)])|0);
      $91=($90|0)==0;
      if (!($91)) {
       $93=(($90+($i_0192<<2))|0);
       $94=((HEAP32[(($93)>>2)])|0);
       $95=(($90+($newCount_0196<<2))|0);
       HEAP32[(($95)>>2)]=$94;
      }
      $97=((HEAP32[(($15)>>2)])|0);
      $98=($97|0)==0;
      if (!($98)) {
       $100=(($97+($i_0192<<2))|0);
       $101=((HEAP32[(($100)>>2)])|0);
       $102=(($97+($newCount_0196<<2))|0);
       HEAP32[(($102)>>2)]=$101;
      }
      $104=((HEAP32[(($16)>>2)])|0);
      $105=(($104+($newCount_0196<<3))|0);
      $106=(($104+($i_0192<<3))|0);
      $107=$106;
      $108=$105;
      $ld$0$0=(($107)|0);
      $109$0=((HEAP32[(($ld$0$0)>>2)])|0);
      $ld$1$1=(($107+4)|0);
      $109$1=((HEAP32[(($ld$1$1)>>2)])|0);
      $st$2$0=(($108)|0);
      HEAP32[(($st$2$0)>>2)]=$109$0;
      $st$3$1=(($108+4)|0);
      HEAP32[(($st$3$1)>>2)]=$109$1;
      $110=((HEAP32[(($17)>>2)])|0);
      $111=(($110+($newCount_0196<<3))|0);
      $112=(($110+($i_0192<<3))|0);
      $113=$112;
      $114=$111;
      $ld$4$0=(($113)|0);
      $115$0=((HEAP32[(($ld$4$0)>>2)])|0);
      $ld$5$1=(($113+4)|0);
      $115$1=((HEAP32[(($ld$5$1)>>2)])|0);
      $st$6$0=(($114)|0);
      HEAP32[(($st$6$0)>>2)]=$115$0;
      $st$7$1=(($114+4)|0);
      HEAP32[(($st$7$1)>>2)]=$115$1;
      $116=((HEAP32[(($18)>>2)])|0);
      $117=(($116+($i_0192<<2))|0);
      $118=((HEAP32[(($117)>>2)])|0);
      $119=(($116+($newCount_0196<<2))|0);
      HEAP32[(($119)>>2)]=$118;
      $120=((HEAP8[($19)])|0);
      $121=(($120<<24)>>24)==0;
      if (!($121)) {
       $123=((HEAP32[(($25)>>2)])|0);
       $124=(($123+($newCount_0196<<3))|0);
       $125=(($123+($i_0192<<3))|0);
       $126=$125;
       $127=$124;
       $ld$8$0=(($126)|0);
       $128$0=((HEAP32[(($ld$8$0)>>2)])|0);
       $ld$9$1=(($126+4)|0);
       $128$1=((HEAP32[(($ld$9$1)>>2)])|0);
       $st$10$0=(($127)|0);
       HEAP32[(($st$10$0)>>2)]=$128$0;
       $st$11$1=(($127+4)|0);
       HEAP32[(($st$11$1)>>2)]=$128$1;
      }
      $130=((HEAP32[(($20)>>2)])|0);
      $131=($130|0)==0;
      if (!($131)) {
       $133=(($130+($i_0192<<2))|0);
       $134=(+(HEAPF32[(($133)>>2)]));
       $135=(($130+($newCount_0196<<2))|0);
       HEAPF32[(($135)>>2)]=$134;
      }
      $137=((HEAP32[(($21)>>2)])|0);
      $138=($137|0)==0;
      if (!($138)) {
       $140=(($137+($i_0192<<2))|0);
       $141=(+(HEAPF32[(($140)>>2)]));
       $142=(($137+($newCount_0196<<2))|0);
       HEAPF32[(($142)>>2)]=$141;
      }
      $144=((HEAP32[(($22)>>2)])|0);
      $145=($144|0)==0;
      if (!($145)) {
       $147=(($144+($newCount_0196<<2))|0);
       $148=(($144+($i_0192<<2))|0);
       $149=((__ZN15b2ParticleColoraSERKS_($147,$148))|0);
      }
      $151=((HEAP32[(($23)>>2)])|0);
      $152=($151|0)==0;
      if (!($152)) {
       $154=(($151+($i_0192<<2))|0);
       $155=((HEAP32[(($154)>>2)])|0);
       $156=(($151+($newCount_0196<<2))|0);
       HEAP32[(($156)>>2)]=$155;
      }
      $158=((HEAP32[(($24)>>2)])|0);
      $159=($158|0)==0;
      if ($159) {
       break;
      }
      $161=(($158+($i_0192<<2))|0);
      $162=((HEAP32[(($161)>>2)])|0);
      $163=(($158+($newCount_0196<<2))|0);
      HEAP32[(($163)>>2)]=$162;
     }
    } while(0);
    $165=((($newCount_0196)+(1))|0);
    $166=$37|$allParticleFlags_0195;
    $newCount_1=$165;$allParticleFlags_1=$166;
   } else {
    $41=((HEAP32[(($1)>>2)])|0);
    $42=(($41+102992)|0);
    $43=((HEAP32[(($42)>>2)])|0);
    $44=$37&512;
    $45=($44|0)==0;
    $46=($43|0)==0;
    $or_cond=$45|$46;
    if (!($or_cond)) {
     $48=$43;
     $49=((HEAP32[(($48)>>2)])|0);
     $50=(($49+20)|0);
     $51=((HEAP32[(($50)>>2)])|0);
     FUNCTION_TABLE_viii[($51)&31]($43,$this,$i_0192);
    }
    $53=((HEAP32[(($26)>>2)])|0);
    $54=($53|0)==0;
    do {
     if (!($54)) {
      $56=(($53+($i_0192<<2))|0);
      $57=((HEAP32[(($56)>>2)])|0);
      $58=($57|0)==0;
      if ($58) {
       break;
      }
      __ZN16b2ParticleHandle8SetIndexEi($57,-1);
      $60=((HEAP32[(($26)>>2)])|0);
      $61=(($60+($i_0192<<2))|0);
      HEAP32[(($61)>>2)]=0;
      __ZN15b2SlabAllocatorI16b2ParticleHandleE4FreeEPS0_($27,$57);
     }
    } while(0);
    $63=(($8+($i_0192<<2))|0);
    HEAP32[(($63)>>2)]=-1;
    $newCount_1=$newCount_0196;$allParticleFlags_1=$allParticleFlags_0195;
   }


   $168=((($i_0192)+(1))|0);
   $169=((HEAP32[(($4)>>2)])|0);
   $170=($168|0)<($169|0);
   if ($170) {
    $i_0192=$168;$allParticleFlags_0195=$allParticleFlags_1;$newCount_0196=$newCount_1;
   } else {
    $allParticleFlags_0_lcssa=$allParticleFlags_1;$newCount_0_lcssa=$newCount_1;
    break;
   }
  }
 } else {
  $allParticleFlags_0_lcssa=0;$newCount_0_lcssa=0;
 }


 $28=(($this+212)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=($29|0)>0;
 $31=(($this+220)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 if ($30) {
  $33=((HEAP32[(($31)>>2)])|0);
  $k_0184=0;$172=$32;
  while(1) {


   $173=(($172+($k_0184<<3))|0);
   $174=((HEAP32[(($173)>>2)])|0);
   $175=(($8+($174<<2))|0);
   $176=((HEAP32[(($175)>>2)])|0);
   HEAP32[(($173)>>2)]=$176;
   $177=((($k_0184)+(1))|0);
   $178=((HEAP32[(($28)>>2)])|0);
   $179=($177|0)<($178|0);
   if ($179) {
    $k_0184=$177;$172=$33;
   } else {
    $_lcssa181=$178;$_lcssa183=$33;
    break;
   }
  }
 } else {
  $_lcssa181=$29;$_lcssa183=$32;
 }


 $180=(($_lcssa183+($_lcssa181<<3))|0);
 $181=((__ZNSt3__19remove_ifIPN16b2ParticleSystem5ProxyEPFbRKS2_EEET_S8_S8_T0_($_lcssa183,$180,14))|0);
 $182=((HEAP32[(($31)>>2)])|0);
 $183=$181;
 $184=$182;
 $185=((($183)-($184))|0);
 $186=$185>>3;
 HEAP32[(($28)>>2)]=$186;
 $187=(($this+224)|0);
 $188=((HEAP32[(($187)>>2)])|0);
 $189=($188|0)>0;
 $190=(($this+232)|0);
 $191=((HEAP32[(($190)>>2)])|0);
 if ($189) {
  $192=((HEAP32[(($190)>>2)])|0);
  $k2_0171=0;$194=$191;
  while(1) {


   $195=(($194+((($k2_0171)*(24))&-1))|0);
   $196=((HEAP32[(($195)>>2)])|0);
   $197=(($8+($196<<2))|0);
   $198=((HEAP32[(($197)>>2)])|0);
   HEAP32[(($195)>>2)]=$198;
   $199=(($194+((($k2_0171)*(24))&-1)+4)|0);
   $200=((HEAP32[(($199)>>2)])|0);
   $201=(($8+($200<<2))|0);
   $202=((HEAP32[(($201)>>2)])|0);
   HEAP32[(($199)>>2)]=$202;
   $203=((($k2_0171)+(1))|0);
   $204=((HEAP32[(($187)>>2)])|0);
   $205=($203|0)<($204|0);
   if ($205) {
    $k2_0171=$203;$194=$192;
   } else {
    $_lcssa168=$204;$_lcssa170=$192;
    break;
   }
  }
 } else {
  $_lcssa168=$188;$_lcssa170=$191;
 }


 $206=(($_lcssa170+((($_lcssa168)*(24))&-1))|0);
 $207=((__ZNSt3__19remove_ifIP17b2ParticleContactPFbRKS1_EEET_S7_S7_T0_($_lcssa170,$206,16))|0);
 $208=((HEAP32[(($190)>>2)])|0);
 $209=$207;
 $210=$208;
 $211=((($209)-($210))|0);
 $212=(((($211|0))/(24))&-1);
 HEAP32[(($187)>>2)]=$212;
 $213=(($this+236)|0);
 $214=((HEAP32[(($213)>>2)])|0);
 $215=($214|0)>0;
 $216=(($this+244)|0);
 $217=((HEAP32[(($216)>>2)])|0);
 if ($215) {
  $218=((HEAP32[(($216)>>2)])|0);
  $k3_0159=0;$220=$217;
  while(1) {


   $221=(($220+((($k3_0159)*(28))&-1))|0);
   $222=((HEAP32[(($221)>>2)])|0);
   $223=(($8+($222<<2))|0);
   $224=((HEAP32[(($223)>>2)])|0);
   HEAP32[(($221)>>2)]=$224;
   $225=((($k3_0159)+(1))|0);
   $226=((HEAP32[(($213)>>2)])|0);
   $227=($225|0)<($226|0);
   if ($227) {
    $k3_0159=$225;$220=$218;
   } else {
    $_lcssa156=$226;$_lcssa158=$218;
    break;
   }
  }
 } else {
  $_lcssa156=$214;$_lcssa158=$217;
 }


 $228=(($_lcssa158+((($_lcssa156)*(28))&-1))|0);
 $229=((__ZNSt3__19remove_ifIP21b2ParticleBodyContactPFbRKS1_EEET_S7_S7_T0_($_lcssa158,$228,18))|0);
 $230=((HEAP32[(($216)>>2)])|0);
 $231=$229;
 $232=$230;
 $233=((($231)-($232))|0);
 $234=(((($233|0))/(28))&-1);
 HEAP32[(($213)>>2)]=$234;
 $235=(($this+248)|0);
 $236=((HEAP32[(($235)>>2)])|0);
 $237=($236|0)>0;
 $238=(($this+256)|0);
 $239=((HEAP32[(($238)>>2)])|0);
 if ($237) {
  $240=((HEAP32[(($238)>>2)])|0);
  $k5_0147=0;$242=$239;
  while(1) {


   $243=(($242+((($k5_0147)*(20))&-1))|0);
   $244=((HEAP32[(($243)>>2)])|0);
   $245=(($8+($244<<2))|0);
   $246=((HEAP32[(($245)>>2)])|0);
   HEAP32[(($243)>>2)]=$246;
   $247=(($242+((($k5_0147)*(20))&-1)+4)|0);
   $248=((HEAP32[(($247)>>2)])|0);
   $249=(($8+($248<<2))|0);
   $250=((HEAP32[(($249)>>2)])|0);
   HEAP32[(($247)>>2)]=$250;
   $251=((($k5_0147)+(1))|0);
   $252=((HEAP32[(($235)>>2)])|0);
   $253=($251|0)<($252|0);
   if ($253) {
    $k5_0147=$251;$242=$240;
   } else {
    $_lcssa144=$252;$_lcssa146=$240;
    break;
   }
  }
 } else {
  $_lcssa144=$236;$_lcssa146=$239;
 }


 $254=(($_lcssa146+((($_lcssa144)*(20))&-1))|0);
 $255=((__ZNSt3__19remove_ifIPN16b2ParticleSystem4PairEPFbRKS2_EEET_S8_S8_T0_($_lcssa146,$254,24))|0);
 $256=((HEAP32[(($238)>>2)])|0);
 $257=$255;
 $258=$256;
 $259=((($257)-($258))|0);
 $260=(((($259|0))/(20))&-1);
 HEAP32[(($235)>>2)]=$260;
 $261=(($this+260)|0);
 $262=((HEAP32[(($261)>>2)])|0);
 $263=($262|0)>0;
 $264=(($this+268)|0);
 $265=((HEAP32[(($264)>>2)])|0);
 if ($263) {
  $266=((HEAP32[(($264)>>2)])|0);
  $k6_0135=0;$268=$265;
  while(1) {


   $269=(($268+((($k6_0135)*(60))&-1))|0);
   $270=((HEAP32[(($269)>>2)])|0);
   $271=(($8+($270<<2))|0);
   $272=((HEAP32[(($271)>>2)])|0);
   HEAP32[(($269)>>2)]=$272;
   $273=(($268+((($k6_0135)*(60))&-1)+4)|0);
   $274=((HEAP32[(($273)>>2)])|0);
   $275=(($8+($274<<2))|0);
   $276=((HEAP32[(($275)>>2)])|0);
   HEAP32[(($273)>>2)]=$276;
   $277=(($268+((($k6_0135)*(60))&-1)+8)|0);
   $278=((HEAP32[(($277)>>2)])|0);
   $279=(($8+($278<<2))|0);
   $280=((HEAP32[(($279)>>2)])|0);
   HEAP32[(($277)>>2)]=$280;
   $281=((($k6_0135)+(1))|0);
   $282=((HEAP32[(($261)>>2)])|0);
   $283=($281|0)<($282|0);
   if ($283) {
    $k6_0135=$281;$268=$266;
   } else {
    $_lcssa132=$282;$_lcssa134=$266;
    break;
   }
  }
 } else {
  $_lcssa132=$262;$_lcssa134=$265;
 }


 $284=(($_lcssa134+((($_lcssa132)*(60))&-1))|0);
 $285=((__ZNSt3__19remove_ifIPN16b2ParticleSystem5TriadEPFbRKS2_EEET_S8_S8_T0_($_lcssa134,$284,8))|0);
 $286=((HEAP32[(($264)>>2)])|0);
 $287=$285;
 $288=$286;
 $289=((($287)-($288))|0);
 $290=(((($289|0))/(60))&-1);
 HEAP32[(($261)>>2)]=$290;
 $291=(($this+280)|0);
 $292=((HEAP32[(($291)>>2)])|0);
 $293=($292|0)==0;
 do {
  if (!($293)) {
   $294=((HEAP32[(($4)>>2)])|0);
   $295=($294|0)>0;
   if (!($295)) {
    break;
   }
   $296=((HEAP32[(($291)>>2)])|0);
   $writeOffset_0128=0;$readOffset_0129=0;
   while(1) {


    $298=(($296+($readOffset_0129<<2))|0);
    $299=((HEAP32[(($298)>>2)])|0);
    $300=(($8+($299<<2))|0);
    $301=((HEAP32[(($300)>>2)])|0);
    $302=($301|0)==-1;
    if ($302) {
     $writeOffset_1=$writeOffset_0128;
    } else {
     $304=((($writeOffset_0128)+(1))|0);
     $305=(($296+($writeOffset_0128<<2))|0);
     HEAP32[(($305)>>2)]=$301;
     $writeOffset_1=$304;
    }

    $307=((($readOffset_0129)+(1))|0);
    $308=((HEAP32[(($4)>>2)])|0);
    $309=($307|0)<($308|0);
    if ($309) {
     $writeOffset_0128=$writeOffset_1;$readOffset_0129=$307;
    } else {
     break;
    }
   }
  }
 } while(0);
 $310=(($this+304)|0);
 $311=((HEAP32[(($310)>>2)])|0);
 $312=($311|0)==0;
 if (!($312)) {
  $group_0124=$311;
  while(1) {

   $313=(($group_0124+4)|0);
   $314=((HEAP32[(($313)>>2)])|0);
   $315=(($group_0124+8)|0);
   $316=((HEAP32[(($315)>>2)])|0);
   $317=($314|0)<($316|0);
   if ($317) {
    $318=((HEAP32[(($315)>>2)])|0);
    $firstIndex_0114=$newCount_0_lcssa;$lastIndex_0115=0;$modified_0_off0116=0;$i7_0117=$314;
    while(1) {




     $320=(($8+($i7_0117<<2))|0);
     $321=((HEAP32[(($320)>>2)])|0);
     $322=($321|0)>-1;
     if ($322) {
      $324=((__Z5b2MinIiET_S0_S0_($firstIndex_0114,$321))|0);
      $325=((($321)+(1))|0);
      $326=((__Z5b2MaxIiET_S0_S0_($lastIndex_0115,$325))|0);
      $modified_1_off0=$modified_0_off0116;$lastIndex_1=$326;$firstIndex_1=$324;
     } else {
      $modified_1_off0=1;$lastIndex_1=$lastIndex_0115;$firstIndex_1=$firstIndex_0114;
     }



     $328=((($i7_0117)+(1))|0);
     $329=($328|0)<($318|0);
     if ($329) {
      $firstIndex_0114=$firstIndex_1;$lastIndex_0115=$lastIndex_1;$modified_0_off0116=$modified_1_off0;$i7_0117=$328;
     } else {
      $firstIndex_0_lcssa=$firstIndex_1;$lastIndex_0_lcssa=$lastIndex_1;$modified_0_off0_lcssa=$modified_1_off0;
      break;
     }
    }
   } else {
    $firstIndex_0_lcssa=$newCount_0_lcssa;$lastIndex_0_lcssa=0;$modified_0_off0_lcssa=0;
   }



   $330=($firstIndex_0_lcssa|0)<($lastIndex_0_lcssa|0);
   do {
    if ($330) {
     HEAP32[(($313)>>2)]=$firstIndex_0_lcssa;
     HEAP32[(($315)>>2)]=$lastIndex_0_lcssa;
     if (!($modified_0_off0_lcssa)) {
      break;
     }
     $333=(($group_0124+12)|0);
     $334=((HEAP32[(($333)>>2)])|0);
     $335=$334&1;
     $336=($335|0)==0;
     if ($336) {
      break;
     }
     $338=$334|16;
     __ZN16b2ParticleSystem13SetGroupFlagsEP15b2ParticleGroupj($this,$group_0124,$338);
    } else {
     HEAP32[(($313)>>2)]=0;
     HEAP32[(($315)>>2)]=0;
     $340=(($group_0124+12)|0);
     $341=((HEAP32[(($340)>>2)])|0);
     $342=$341&4;
     $343=($342|0)==0;
     if (!($343)) {
      break;
     }
     $345=$341|8;
     __ZN16b2ParticleSystem13SetGroupFlagsEP15b2ParticleGroupj($this,$group_0124,$345);
    }
   } while(0);
   $347=((__ZN15b2ParticleGroup7GetNextEv($group_0124))|0);
   $348=($347|0)==0;
   if ($348) {
    break;
   } else {
    $group_0124=$347;
   }
  }
 }
 HEAP32[(($4)>>2)]=$newCount_0_lcssa;
 $349=((HEAP32[(($1)>>2)])|0);
 $350=(($349+76)|0);
 __ZN16b2StackAllocator4FreeEPv($350,$7);
 $351=(($this+8)|0);
 HEAP32[(($351)>>2)]=$allParticleFlags_0_lcssa;
 $352=(($this+12)|0);
 HEAP8[($352)]=0;
 $353=((HEAP32[(($310)>>2)])|0);
 $354=($353|0)==0;
 if ($354) {
  return;
 } else {
  $group8_0113=$353;
 }
 while(1) {

  $355=((__ZN15b2ParticleGroup7GetNextEv($group8_0113))|0);
  $356=(($group8_0113+12)|0);
  $357=((HEAP32[(($356)>>2)])|0);
  $358=$357&8;
  $359=($358|0)==0;
  if (!($359)) {
   __ZN16b2ParticleSystem20DestroyParticleGroupEP15b2ParticleGroup($this,$group8_0113);
  }
  $360=($355|0)==0;
  if ($360) {
   break;
  } else {
   $group8_0113=$355;
  }
 }
 return;
}


function __ZNK15b2ParticleColor6IsZeroEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$17=0,label=0;

 $1=(($this)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)==0;
 do {
  if ($3) {
   $5=(($this+1)|0);
   $6=((HEAP8[($5)])|0);
   $7=(($6<<24)>>24)==0;
   if (!($7)) {
    $17=0;
    break;
   }
   $9=(($this+2)|0);
   $10=((HEAP8[($9)])|0);
   $11=(($10<<24)>>24)==0;
   if (!($11)) {
    $17=0;
    break;
   }
   $13=(($this+3)|0);
   $14=((HEAP8[($13)])|0);
   $15=(($14<<24)>>24)==0;
   $17=$15;
  } else {
   $17=0;
  }
 } while(0);

 return (($17)|0);
}


function __ZN16b2ParticleSystem21RequestGrowableBufferINS_5ProxyEEEPT_S3_iPi($this,$buffer,$count,$capacity){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $count=($count)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$_=0,$6=0,$_0=0,label=0;

 $1=((HEAP32[(($capacity)>>2)])|0);
 $2=($1|0)>($count|0);
 if ($2) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=($count|0)==0;
 $5=$count<<1;
 $_=($4?256:$5);
 $6=((__ZN16b2ParticleSystem16ReallocateBufferINS_5ProxyEEEPT_S3_ii($this,$buffer,$1,$_))|0);
 HEAP32[(($capacity)>>2)]=$_;
 $_0=$6;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem19SetParticleLifetimeEif($this,$index,$lifetime){
 $this=($this)|0;
 $index=($index)|0;
 $lifetime=+($lifetime);
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$11=0,$12=0,$i_010=0,$14=0,$15=0,$16=0,$17=0,$18=.0,$19=.0,$20=0,$21=0;
 var $23=0,$24=0,$26=0,$27=0,$28=0,$29=0,$30=0,$32=0,label=0;

 $1=(($this+280)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 $4=(($this+272)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=((__ZN16b2ParticleSystem13RequestBufferIiEEPT_S2_($this,$5))|0);
 HEAP32[(($4)>>2)]=$6;
 $7=((HEAP32[(($1)>>2)])|0);
 $8=((__ZN16b2ParticleSystem13RequestBufferIiEEPT_S2_($this,$7))|0);
 HEAP32[(($1)>>2)]=$8;
 do {
  if ($3) {
   $10=((__ZNK16b2ParticleSystem16GetParticleCountEv($this))|0);
   $11=($10|0)>0;
   if (!($11)) {
    break;
   }
   $12=((HEAP32[(($1)>>2)])|0);
   $i_010=0;
   while(1) {

    $14=(($12+($i_010<<2))|0);
    HEAP32[(($14)>>2)]=$i_010;
    $15=((($i_010)+(1))|0);
    $16=($15|0)<($10|0);
    if ($16) {
     $i_010=$15;
    } else {
     break;
    }
   }
  }
 } while(0);
 $17=(($this+372)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=($lifetime)/($18);
 $20=(~~($19));
 $21=($20|0)>0;
 if ($21) {
  $23=((__ZNK16b2ParticleSystem23GetQuantizedTimeElapsedEv($this))|0);
  $24=((($23)+($20))|0);
  $26=$24;
 } else {
  $26=$20;
 }

 $27=((HEAP32[(($4)>>2)])|0);
 $28=(($27+($index<<2))|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=($26|0)==($29|0);
 if ($30) {
  return;
 }
 HEAP32[(($28)>>2)]=$26;
 $32=(($this+296)|0);
 HEAP8[($32)]=1;
 return;
}


function __ZNK16b2ParticleSystem24ExpirationTimeToLifetimeEi($this,$expirationTime){
 $this=($this)|0;
 $expirationTime=($expirationTime)|0;
 var $1=0,$3=0,$4=0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,label=0;

 $1=($expirationTime|0)>0;
 if ($1) {
  $3=((__ZNK16b2ParticleSystem23GetQuantizedTimeElapsedEv($this))|0);
  $4=((($expirationTime)-($3))|0);
  $6=$4;
 } else {
  $6=$expirationTime;
 }

 $7=(+((($6|0))|0));
 $8=(($this+372)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 return (+($10));
}


function __ZNK16b2ParticleSystem23GetQuantizedTimeElapsedEv($this){
 $this=($this)|0;
 var $1=0,$ld$0$0=0,$2$0=0,$ld$1$1=0,$2$1=0,$3$0=0,$3$1=0,$4$0=0,$4=0,label=0;

 $1=(($this+288)|0);
 $ld$0$0=(($1)|0);
 $2$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $2$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $3$0=$2$1;
 $3$1=0;
 $4$0=$3$0;
 $4=$4$0;
 return (($4)|0);
}


function __ZN16b2ParticleSystem12RotateBufferEiii($this,$start,$mid,$end){
 $this=($this)|0;
 $start=($start)|0;
 $mid=($mid)|0;
 $end=($end)|0;
 var $newIndices=0,$1=0,$2=0,$or_cond=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$or_cond107=0,$_sum=0,$15=0,$17=0,$_sum121=0,$19=0;
 var $21=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$or_cond108=0,$_sum122=0,$34=0,$36=0,$_sum123=0,$38=0,$40=0,$42=0,$43=0,$44=0;
 var $45=0,$47=0,$48=0,$49=0,$50=0,$51=0,$or_cond109=0,$_sum124=0,$53=0,$55=0,$_sum125=0,$57=0,$59=0,$61=0,$62=0,$63=0,$64=0,$66=0,$67=0,$68=0;
 var $69=0,$70=0,$or_cond110=0,$_sum126=0,$72=0,$74=0,$_sum127=0,$76=0,$78=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$or_cond111=0,$_sum128=0,$89=0;
 var $91=0,$_sum129=0,$93=0,$95=0,$97=0,$98=0,$99=0,$100=0,$101=0,$102=0,$103=0,$104=0,$or_cond112=0,$_sum130=0,$106=0,$108=0,$_sum131=0,$110=0,$112=0,$114=0;
 var $115=0,$116=0,$117=0,$118=0,$119=0,$120=0,$121=0,$or_cond113=0,$_sum132=0,$123=0,$125=0,$_sum133=0,$127=0,$129=0,$131=0,$132=0,$133=0,$134=0,$136=0,$137=0;
 var $138=0,$139=0,$140=0,$141=0,$142=0,$or_cond114=0,$_sum134=0,$144=0,$146=0,$_sum135=0,$148=0,$150=0,$152=0,$153=0,$154=0,$155=0,$157=0,$158=0,$159=0,$160=0;
 var $161=0,$or_cond115=0,$_sum136=0,$163=0,$165=0,$_sum137=0,$167=0,$169=0,$171=0,$172=0,$173=0,$174=0,$176=0,$177=0,$178=0,$179=0,$180=0,$or_cond116=0,$_sum138=0,$182=0;
 var $184=0,$_sum139=0,$186=0,$188=0,$190=0,$191=0,$192=0,$193=0,$195=0,$196=0,$or_cond117=0,$198=0,$199=0,$200=0,$201=0,$202=0,$203=0,$204=0,$206=0,$207=0;
 var $208=0,$209=0,$210=0,$or_cond118=0,$_sum140=0,$212=0,$214=0,$_sum141=0,$216=0,$218=0,$220=0,$221=0,$222=0,$223=0,$225=0,$226=0,$227=0,$228=0,$229=0,$or_cond119=0;
 var $_sum142=0,$231=0,$233=0,$_sum143=0,$235=0,$237=0,$239=0,$240=0,$i_0164=0,$241=0,$242=0,$243=0,$244=0,$246=0,$247=0,$248=0,$249=0,$250=0,$251=0,$252=0;
 var $254=0,$255=0,$256=0,$257=0,$258=0,$or_cond120=0,$_sum144=0,$260=0,$262=0,$_sum145=0,$264=0,$266=0,$268=0,$269=0,$270=0,$271=0,$272=0,$273=0,$274=0,$275=0;
 var $276=0,$i1_0161=0,$277=0,$278=0,$279=0,$280=0,$281=0,$282=0,$283=0,$284=0,$285=0,$k_0159=0,$287=0,$288=0,$289=0,$290=0,$291=0,$292=0,$293=0,$294=0;
 var $295=0,$296=0,$297=0,$k2_0156=0,$299=0,$300=0,$301=0,$302=0,$303=0,$304=0,$305=0,$306=0,$307=0,$308=0,$309=0,$310=0,$311=0,$312=0,$k3_0153=0,$314=0;
 var $315=0,$316=0,$317=0,$318=0,$319=0,$320=0,$321=0,$322=0,$323=0,$324=0,$k5_0150=0,$326=0,$327=0,$328=0,$329=0,$330=0,$331=0,$332=0,$333=0,$334=0;
 var $335=0,$k6_0147=0,$337=0,$338=0,$339=0,$340=0,$341=0,$342=0,$343=0,$344=0,$345=0,$346=0,$347=0,$348=0,$349=0,$350=0,$351=0,$352=0,$group_0146=0,$353=0;
 var $354=0,$355=0,$356=0,$357=0,$358=0,$359=0,$360=0,$361=0,$362=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $newIndices=((sp)|0);
 $1=($start|0)==($mid|0);
 $2=($mid|0)==($end|0);
 $or_cond=$1|$2;
 if ($or_cond) {
  STACKTOP=sp;return;
 }
 $4=(($newIndices)|0);
 HEAP32[(($4)>>2)]=$start;
 $5=(($newIndices+4)|0);
 HEAP32[(($5)>>2)]=$mid;
 $6=(($newIndices+8)|0);
 HEAP32[(($6)>>2)]=$end;
 $7=(($this+104)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+($start<<2))|0);
 $10=(($8+($mid<<2))|0);
 $11=(($8+($end<<2))|0);
 $12=($start|0)==($mid|0);
 $13=($mid|0)==($end|0);
 $or_cond107=$12|$13;
 do {
  if (!($or_cond107)) {
   $_sum=((($start)+(1))|0);
   $15=($_sum|0)==($mid|0);
   if ($15) {
    $17=((__ZNSt3__113__rotate_leftIPjEET_S2_S2_($9,$11))|0);
    break;
   }
   $_sum121=((($mid)+(1))|0);
   $19=($_sum121|0)==($end|0);
   if ($19) {
    $21=((__ZNSt3__114__rotate_rightIPjEET_S2_S2_($9,$11))|0);
    break;
   } else {
    $23=((__ZNSt3__112__rotate_gcdIPjEET_S2_S2_S2_($9,$10,$11))|0);
    break;
   }
  }
 } while(0);
 $24=(($this+176)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=($25|0)==0;
 do {
  if (!($26)) {
   $28=(($25+($start<<2))|0);
   $29=(($25+($mid<<2))|0);
   $30=(($25+($end<<2))|0);
   $31=($start|0)==($mid|0);
   $32=($mid|0)==($end|0);
   $or_cond108=$31|$32;
   if ($or_cond108) {
    break;
   }
   $_sum122=((($start)+(1))|0);
   $34=($_sum122|0)==($mid|0);
   if ($34) {
    $36=((__ZNSt3__113__rotate_leftIPiEET_S2_S2_($28,$30))|0);
    break;
   }
   $_sum123=((($mid)+(1))|0);
   $38=($_sum123|0)==($end|0);
   if ($38) {
    $40=((__ZNSt3__114__rotate_rightIPiEET_S2_S2_($28,$30))|0);
    break;
   } else {
    $42=((__ZNSt3__112__rotate_gcdIPiEET_S2_S2_S2_($28,$29,$30))|0);
    break;
   }
  }
 } while(0);
 $43=(($this+184)|0);
 $44=((HEAP32[(($43)>>2)])|0);
 $45=($44|0)==0;
 do {
  if (!($45)) {
   $47=(($44+($start<<2))|0);
   $48=(($44+($mid<<2))|0);
   $49=(($44+($end<<2))|0);
   $50=($start|0)==($mid|0);
   $51=($mid|0)==($end|0);
   $or_cond109=$50|$51;
   if ($or_cond109) {
    break;
   }
   $_sum124=((($start)+(1))|0);
   $53=($_sum124|0)==($mid|0);
   if ($53) {
    $55=((__ZNSt3__113__rotate_leftIPiEET_S2_S2_($47,$49))|0);
    break;
   }
   $_sum125=((($mid)+(1))|0);
   $57=($_sum125|0)==($end|0);
   if ($57) {
    $59=((__ZNSt3__114__rotate_rightIPiEET_S2_S2_($47,$49))|0);
    break;
   } else {
    $61=((__ZNSt3__112__rotate_gcdIPiEET_S2_S2_S2_($47,$48,$49))|0);
    break;
   }
  }
 } while(0);
 $62=(($this+192)|0);
 $63=((HEAP32[(($62)>>2)])|0);
 $64=($63|0)==0;
 do {
  if (!($64)) {
   $66=(($63+($start<<2))|0);
   $67=(($63+($mid<<2))|0);
   $68=(($63+($end<<2))|0);
   $69=($start|0)==($mid|0);
   $70=($mid|0)==($end|0);
   $or_cond110=$69|$70;
   if ($or_cond110) {
    break;
   }
   $_sum126=((($start)+(1))|0);
   $72=($_sum126|0)==($mid|0);
   if ($72) {
    $74=((__ZNSt3__113__rotate_leftIPiEET_S2_S2_($66,$68))|0);
    break;
   }
   $_sum127=((($mid)+(1))|0);
   $76=($_sum127|0)==($end|0);
   if ($76) {
    $78=((__ZNSt3__114__rotate_rightIPiEET_S2_S2_($66,$68))|0);
    break;
   } else {
    $80=((__ZNSt3__112__rotate_gcdIPiEET_S2_S2_S2_($66,$67,$68))|0);
    break;
   }
  }
 } while(0);
 $81=(($this+112)|0);
 $82=((HEAP32[(($81)>>2)])|0);
 $83=(($82+($start<<3))|0);
 $84=(($82+($mid<<3))|0);
 $85=(($82+($end<<3))|0);
 $86=($start|0)==($mid|0);
 $87=($mid|0)==($end|0);
 $or_cond111=$86|$87;
 do {
  if (!($or_cond111)) {
   $_sum128=((($start)+(1))|0);
   $89=($_sum128|0)==($mid|0);
   if ($89) {
    $91=((__ZNSt3__113__rotate_leftIP6b2Vec2EET_S3_S3_($83,$85))|0);
    break;
   }
   $_sum129=((($mid)+(1))|0);
   $93=($_sum129|0)==($end|0);
   if ($93) {
    $95=((__ZNSt3__114__rotate_rightIP6b2Vec2EET_S3_S3_($83,$85))|0);
    break;
   } else {
    $97=((__ZNSt3__112__rotate_gcdIP6b2Vec2EET_S3_S3_S3_($83,$84,$85))|0);
    break;
   }
  }
 } while(0);
 $98=(($this+120)|0);
 $99=((HEAP32[(($98)>>2)])|0);
 $100=(($99+($start<<3))|0);
 $101=(($99+($mid<<3))|0);
 $102=(($99+($end<<3))|0);
 $103=($start|0)==($mid|0);
 $104=($mid|0)==($end|0);
 $or_cond112=$103|$104;
 do {
  if (!($or_cond112)) {
   $_sum130=((($start)+(1))|0);
   $106=($_sum130|0)==($mid|0);
   if ($106) {
    $108=((__ZNSt3__113__rotate_leftIP6b2Vec2EET_S3_S3_($100,$102))|0);
    break;
   }
   $_sum131=((($mid)+(1))|0);
   $110=($_sum131|0)==($end|0);
   if ($110) {
    $112=((__ZNSt3__114__rotate_rightIP6b2Vec2EET_S3_S3_($100,$102))|0);
    break;
   } else {
    $114=((__ZNSt3__112__rotate_gcdIP6b2Vec2EET_S3_S3_S3_($100,$101,$102))|0);
    break;
   }
  }
 } while(0);
 $115=(($this+160)|0);
 $116=((HEAP32[(($115)>>2)])|0);
 $117=(($116+($start<<2))|0);
 $118=(($116+($mid<<2))|0);
 $119=(($116+($end<<2))|0);
 $120=($start|0)==($mid|0);
 $121=($mid|0)==($end|0);
 $or_cond113=$120|$121;
 do {
  if (!($or_cond113)) {
   $_sum132=((($start)+(1))|0);
   $123=($_sum132|0)==($mid|0);
   if ($123) {
    $125=((__ZNSt3__113__rotate_leftIPP15b2ParticleGroupEET_S4_S4_($117,$119))|0);
    break;
   }
   $_sum133=((($mid)+(1))|0);
   $127=($_sum133|0)==($end|0);
   if ($127) {
    $129=((__ZNSt3__114__rotate_rightIPP15b2ParticleGroupEET_S4_S4_($117,$119))|0);
    break;
   } else {
    $131=((__ZNSt3__112__rotate_gcdIPP15b2ParticleGroupEET_S4_S4_S4_($117,$118,$119))|0);
    break;
   }
  }
 } while(0);
 $132=(($this+21)|0);
 $133=((HEAP8[($132)])|0);
 $134=(($133<<24)>>24)==0;
 do {
  if (!($134)) {
   $136=(($this+128)|0);
   $137=((HEAP32[(($136)>>2)])|0);
   $138=(($137+($start<<3))|0);
   $139=(($137+($mid<<3))|0);
   $140=(($137+($end<<3))|0);
   $141=($start|0)==($mid|0);
   $142=($mid|0)==($end|0);
   $or_cond114=$141|$142;
   if ($or_cond114) {
    break;
   }
   $_sum134=((($start)+(1))|0);
   $144=($_sum134|0)==($mid|0);
   if ($144) {
    $146=((__ZNSt3__113__rotate_leftIP6b2Vec2EET_S3_S3_($138,$140))|0);
    break;
   }
   $_sum135=((($mid)+(1))|0);
   $148=($_sum135|0)==($end|0);
   if ($148) {
    $150=((__ZNSt3__114__rotate_rightIP6b2Vec2EET_S3_S3_($138,$140))|0);
    break;
   } else {
    $152=((__ZNSt3__112__rotate_gcdIP6b2Vec2EET_S3_S3_S3_($138,$139,$140))|0);
    break;
   }
  }
 } while(0);
 $153=(($this+136)|0);
 $154=((HEAP32[(($153)>>2)])|0);
 $155=($154|0)==0;
 do {
  if (!($155)) {
   $157=(($154+($start<<2))|0);
   $158=(($154+($mid<<2))|0);
   $159=(($154+($end<<2))|0);
   $160=($start|0)==($mid|0);
   $161=($mid|0)==($end|0);
   $or_cond115=$160|$161;
   if ($or_cond115) {
    break;
   }
   $_sum136=((($start)+(1))|0);
   $163=($_sum136|0)==($mid|0);
   if ($163) {
    $165=((__ZNSt3__113__rotate_leftIPfEET_S2_S2_($157,$159))|0);
    break;
   }
   $_sum137=((($mid)+(1))|0);
   $167=($_sum137|0)==($end|0);
   if ($167) {
    $169=((__ZNSt3__114__rotate_rightIPfEET_S2_S2_($157,$159))|0);
    break;
   } else {
    $171=((__ZNSt3__112__rotate_gcdIPfEET_S2_S2_S2_($157,$158,$159))|0);
    break;
   }
  }
 } while(0);
 $172=(($this+148)|0);
 $173=((HEAP32[(($172)>>2)])|0);
 $174=($173|0)==0;
 do {
  if (!($174)) {
   $176=(($173+($start<<2))|0);
   $177=(($173+($mid<<2))|0);
   $178=(($173+($end<<2))|0);
   $179=($start|0)==($mid|0);
   $180=($mid|0)==($end|0);
   $or_cond116=$179|$180;
   if ($or_cond116) {
    break;
   }
   $_sum138=((($start)+(1))|0);
   $182=($_sum138|0)==($mid|0);
   if ($182) {
    $184=((__ZNSt3__113__rotate_leftIPfEET_S2_S2_($176,$178))|0);
    break;
   }
   $_sum139=((($mid)+(1))|0);
   $186=($_sum139|0)==($end|0);
   if ($186) {
    $188=((__ZNSt3__114__rotate_rightIPfEET_S2_S2_($176,$178))|0);
    break;
   } else {
    $190=((__ZNSt3__112__rotate_gcdIPfEET_S2_S2_S2_($176,$177,$178))|0);
    break;
   }
  }
 } while(0);
 $191=(($this+152)|0);
 $192=((HEAP32[(($191)>>2)])|0);
 $193=($192|0)==0;
 do {
  if (!($193)) {
   $195=($start|0)==($mid|0);
   $196=($mid|0)==($end|0);
   $or_cond117=$195|$196;
   if ($or_cond117) {
    break;
   }
   $198=(($192+($mid<<2))|0);
   $199=(($192+($end<<2))|0);
   $200=(($192+($start<<2))|0);
   $201=((__ZNSt3__116__rotate_forwardIP15b2ParticleColorEET_S3_S3_S3_($200,$198,$199))|0);
  }
 } while(0);
 $202=(($this+164)|0);
 $203=((HEAP32[(($202)>>2)])|0);
 $204=($203|0)==0;
 do {
  if (!($204)) {
   $206=(($203+($start<<2))|0);
   $207=(($203+($mid<<2))|0);
   $208=(($203+($end<<2))|0);
   $209=($start|0)==($mid|0);
   $210=($mid|0)==($end|0);
   $or_cond118=$209|$210;
   if ($or_cond118) {
    break;
   }
   $_sum140=((($start)+(1))|0);
   $212=($_sum140|0)==($mid|0);
   if ($212) {
    $214=((__ZNSt3__113__rotate_leftIPPvEET_S3_S3_($206,$208))|0);
    break;
   }
   $_sum141=((($mid)+(1))|0);
   $216=($_sum141|0)==($end|0);
   if ($216) {
    $218=((__ZNSt3__114__rotate_rightIPPvEET_S3_S3_($206,$208))|0);
    break;
   } else {
    $220=((__ZNSt3__112__rotate_gcdIPPvEET_S3_S3_S3_($206,$207,$208))|0);
    break;
   }
  }
 } while(0);
 $221=(($this+96)|0);
 $222=((HEAP32[(($221)>>2)])|0);
 $223=($222|0)==0;
 do {
  if (!($223)) {
   $225=(($222+($start<<2))|0);
   $226=(($222+($mid<<2))|0);
   $227=(($222+($end<<2))|0);
   $228=($start|0)==($mid|0);
   $229=($mid|0)==($end|0);
   $or_cond119=$228|$229;
   do {
    if (!($or_cond119)) {
     $_sum142=((($start)+(1))|0);
     $231=($_sum142|0)==($mid|0);
     if ($231) {
      $233=((__ZNSt3__113__rotate_leftIPP16b2ParticleHandleEET_S4_S4_($225,$227))|0);
      break;
     }
     $_sum143=((($mid)+(1))|0);
     $235=($_sum143|0)==($end|0);
     if ($235) {
      $237=((__ZNSt3__114__rotate_rightIPP16b2ParticleHandleEET_S4_S4_($225,$227))|0);
      break;
     } else {
      $239=((__ZNSt3__112__rotate_gcdIPP16b2ParticleHandleEET_S4_S4_S4_($225,$226,$227))|0);
      break;
     }
    }
   } while(0);
   $240=($start|0)<($end|0);
   if ($240) {
    $i_0164=$start;
   } else {
    break;
   }
   while(1) {

    $241=((HEAP32[(($221)>>2)])|0);
    $242=(($241+($i_0164<<2))|0);
    $243=((HEAP32[(($242)>>2)])|0);
    $244=($243|0)==0;
    if (!($244)) {
     $246=((__ZNK16b2ParticleHandle8GetIndexEv($243))|0);
     $247=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$246))|0);
     __ZN16b2ParticleHandle8SetIndexEi($243,$247);
    }
    $248=((($i_0164)+(1))|0);
    $249=($248|0)<($end|0);
    if ($249) {
     $i_0164=$248;
    } else {
     break;
    }
   }
  }
 } while(0);
 $250=(($this+272)|0);
 $251=((HEAP32[(($250)>>2)])|0);
 $252=($251|0)==0;
 do {
  if (!($252)) {
   $254=(($251+($start<<2))|0);
   $255=(($251+($mid<<2))|0);
   $256=(($251+($end<<2))|0);
   $257=($start|0)==($mid|0);
   $258=($mid|0)==($end|0);
   $or_cond120=$257|$258;
   do {
    if (!($or_cond120)) {
     $_sum144=((($start)+(1))|0);
     $260=($_sum144|0)==($mid|0);
     if ($260) {
      $262=((__ZNSt3__113__rotate_leftIPiEET_S2_S2_($254,$256))|0);
      break;
     }
     $_sum145=((($mid)+(1))|0);
     $264=($_sum145|0)==($end|0);
     if ($264) {
      $266=((__ZNSt3__114__rotate_rightIPiEET_S2_S2_($254,$256))|0);
      break;
     } else {
      $268=((__ZNSt3__112__rotate_gcdIPiEET_S2_S2_S2_($254,$255,$256))|0);
      break;
     }
    }
   } while(0);
   $269=((__ZNK16b2ParticleSystem16GetParticleCountEv($this))|0);
   $270=(($this+280)|0);
   $271=((HEAP32[(($270)>>2)])|0);
   $272=($269|0)>0;
   if ($272) {
    $i1_0161=0;
   } else {
    break;
   }
   while(1) {

    $277=(($271+($i1_0161<<2))|0);
    $278=((HEAP32[(($277)>>2)])|0);
    $279=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$278))|0);
    HEAP32[(($277)>>2)]=$279;
    $280=((($i1_0161)+(1))|0);
    $281=($280|0)<($269|0);
    if ($281) {
     $i1_0161=$280;
    } else {
     break;
    }
   }
  }
 } while(0);
 $273=(($this+212)|0);
 $274=((HEAP32[(($273)>>2)])|0);
 $275=($274|0)>0;
 if ($275) {
  $276=(($this+220)|0);
  $k_0159=0;
  while(1) {

   $287=((HEAP32[(($276)>>2)])|0);
   $288=(($287+($k_0159<<3))|0);
   $289=((HEAP32[(($288)>>2)])|0);
   $290=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$289))|0);
   HEAP32[(($288)>>2)]=$290;
   $291=((($k_0159)+(1))|0);
   $292=((HEAP32[(($273)>>2)])|0);
   $293=($291|0)<($292|0);
   if ($293) {
    $k_0159=$291;
   } else {
    break;
   }
  }
 }
 $282=(($this+224)|0);
 $283=((HEAP32[(($282)>>2)])|0);
 $284=($283|0)>0;
 if ($284) {
  $285=(($this+232)|0);
  $k2_0156=0;
  while(1) {

   $299=((HEAP32[(($285)>>2)])|0);
   $300=(($299+((($k2_0156)*(24))&-1))|0);
   $301=((HEAP32[(($300)>>2)])|0);
   $302=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$301))|0);
   HEAP32[(($300)>>2)]=$302;
   $303=(($299+((($k2_0156)*(24))&-1)+4)|0);
   $304=((HEAP32[(($303)>>2)])|0);
   $305=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$304))|0);
   HEAP32[(($303)>>2)]=$305;
   $306=((($k2_0156)+(1))|0);
   $307=((HEAP32[(($282)>>2)])|0);
   $308=($306|0)<($307|0);
   if ($308) {
    $k2_0156=$306;
   } else {
    break;
   }
  }
 }
 $294=(($this+236)|0);
 $295=((HEAP32[(($294)>>2)])|0);
 $296=($295|0)>0;
 if ($296) {
  $297=(($this+244)|0);
  $k3_0153=0;
  while(1) {

   $314=((HEAP32[(($297)>>2)])|0);
   $315=(($314+((($k3_0153)*(28))&-1))|0);
   $316=((HEAP32[(($315)>>2)])|0);
   $317=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$316))|0);
   HEAP32[(($315)>>2)]=$317;
   $318=((($k3_0153)+(1))|0);
   $319=((HEAP32[(($294)>>2)])|0);
   $320=($318|0)<($319|0);
   if ($320) {
    $k3_0153=$318;
   } else {
    break;
   }
  }
 }
 $309=(($this+248)|0);
 $310=((HEAP32[(($309)>>2)])|0);
 $311=($310|0)>0;
 if ($311) {
  $312=(($this+256)|0);
  $k5_0150=0;
  while(1) {

   $326=((HEAP32[(($312)>>2)])|0);
   $327=(($326+((($k5_0150)*(20))&-1))|0);
   $328=((HEAP32[(($327)>>2)])|0);
   $329=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$328))|0);
   HEAP32[(($327)>>2)]=$329;
   $330=(($326+((($k5_0150)*(20))&-1)+4)|0);
   $331=((HEAP32[(($330)>>2)])|0);
   $332=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$331))|0);
   HEAP32[(($330)>>2)]=$332;
   $333=((($k5_0150)+(1))|0);
   $334=((HEAP32[(($309)>>2)])|0);
   $335=($333|0)<($334|0);
   if ($335) {
    $k5_0150=$333;
   } else {
    break;
   }
  }
 }
 $321=(($this+260)|0);
 $322=((HEAP32[(($321)>>2)])|0);
 $323=($322|0)>0;
 if ($323) {
  $324=(($this+268)|0);
  $k6_0147=0;
  while(1) {

   $337=((HEAP32[(($324)>>2)])|0);
   $338=(($337+((($k6_0147)*(60))&-1))|0);
   $339=((HEAP32[(($338)>>2)])|0);
   $340=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$339))|0);
   HEAP32[(($338)>>2)]=$340;
   $341=(($337+((($k6_0147)*(60))&-1)+4)|0);
   $342=((HEAP32[(($341)>>2)])|0);
   $343=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$342))|0);
   HEAP32[(($341)>>2)]=$343;
   $344=(($337+((($k6_0147)*(60))&-1)+8)|0);
   $345=((HEAP32[(($344)>>2)])|0);
   $346=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$345))|0);
   HEAP32[(($344)>>2)]=$346;
   $347=((($k6_0147)+(1))|0);
   $348=((HEAP32[(($321)>>2)])|0);
   $349=($347|0)<($348|0);
   if ($349) {
    $k6_0147=$347;
   } else {
    break;
   }
  }
 }
 $350=(($this+304)|0);
 $351=((HEAP32[(($350)>>2)])|0);
 $352=($351|0)==0;
 if ($352) {
  STACKTOP=sp;return;
 } else {
  $group_0146=$351;
 }
 while(1) {

  $353=(($group_0146+4)|0);
  $354=((HEAP32[(($353)>>2)])|0);
  $355=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$354))|0);
  HEAP32[(($353)>>2)]=$355;
  $356=(($group_0146+8)|0);
  $357=((HEAP32[(($356)>>2)])|0);
  $358=((($357)-(1))|0);
  $359=((__ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($newIndices,$358))|0);
  $360=((($359)+(1))|0);
  HEAP32[(($356)>>2)]=$360;
  $361=((__ZN15b2ParticleGroup7GetNextEv($group_0146))|0);
  $362=($361|0)==0;
  if ($362) {
   break;
  } else {
   $group_0146=$361;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem16SetParticleFlagsEij($this,$index,$newFlags){
 $this=($this)|0;
 $index=($index)|0;
 $newFlags=($newFlags)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$20=0,$21=0,$22=0,$24=0,$25=0;
 var $27=0,$28=0,$29=0,$31=0,$32=0,label=0;

 $1=(($this+104)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+($index<<2))|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$newFlags^-1;
 $6=$4&$5;
 $7=($6|0)==0;
 if (!($7)) {
  $9=(($this+12)|0);
  HEAP8[($9)]=1;
 }
 $11=(($this+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=$12^-1;
 $14=$13&$newFlags;
 $15=($14|0)==0;
 if ($15) {
  HEAP32[(($3)>>2)]=$newFlags;
  return;
 }
 $17=$newFlags&128;
 $18=($17|0)==0;
 if (!($18)) {
  $20=(($this+144)|0);
  $21=((HEAP32[(($20)>>2)])|0);
  $22=((__ZN16b2ParticleSystem13RequestBufferI6b2Vec2EEPT_S3_($this,$21))|0);
  HEAP32[(($20)>>2)]=$22;
 }
 $24=$newFlags&256;
 $25=($24|0)==0;
 if (!($25)) {
  $27=(($this+152)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  $29=((__ZN16b2ParticleSystem13RequestBufferI15b2ParticleColorEEPT_S3_($this,$28))|0);
  HEAP32[(($27)>>2)]=$29;
 }
 $31=((HEAP32[(($11)>>2)])|0);
 $32=$31|$newFlags;
 HEAP32[(($11)>>2)]=$32;
 HEAP32[(($3)>>2)]=$newFlags;
 return;
}


function __ZN16b2ParticleHandle8SetIndexEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$index;
 return;
}


function __ZN16b2ParticleSystem15DestroyParticleEib($this,$index,$callDestructionListener){
 $this=($this)|0;
 $index=($index)|0;
 $callDestructionListener=($callDestructionListener)|0;
 var $_=0,$1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $_=($callDestructionListener?514:2);
 $1=(($this+104)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+($index<<2))|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$4|$_;
 __ZN16b2ParticleSystem16SetParticleFlagsEij($this,$index,$5);
 return;
}


function __ZN16b2ParticleSystem22CreateParticleForGroupERK18b2ParticleGroupDefRK11b2TransformRK6b2Vec2($this,$groupDef,$xf,$p){
 $this=($this)|0;
 $groupDef=($groupDef)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 var $particleDef=0,$1=0,$tmpcast=0,$2=0,$tmpcast10=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$11=0,$12=0;
 var $13=0,$14=.0,$15=0,$16=0,$ld$4$0=0,$17$0=0,$ld$5$1=0,$17$1=0,$st$6$0=0,$st$7$1=0,$18=0,$19=0,$20=0,$21=0,$22=.0,$23=0,$24=0,$25=0,$26=0,$27=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $particleDef=((sp)|0);
 $1=(((sp)+(40))|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast10=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 __ZN13b2ParticleDefC1Ev($particleDef);
 $5=(($groupDef)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($particleDef)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=(($particleDef+4)|0);
 __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast,$xf,$p);
 $9=$8;
 $ld$0$0=(($1)|0);
 $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($9)|0);
 HEAP32[(($st$2$0)>>2)]=$10$0;
 $st$3$1=(($9+4)|0);
 HEAP32[(($st$3$1)>>2)]=$10$1;
 $11=(($particleDef+12)|0);
 $12=(($groupDef+20)|0);
 $13=(($groupDef+28)|0);
 $14=(+(HEAPF32[(($13)>>2)]));
 $15=(($groupDef+8)|0);
 __ZmiRK6b2Vec2S1_($4,$8,$15);
 __Z7b2CrossfRK6b2Vec2($3,$14,$4);
 __ZplRK6b2Vec2S1_($tmpcast10,$12,$3);
 $16=$11;
 $ld$4$0=(($2)|0);
 $17$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $17$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($16)|0);
 HEAP32[(($st$6$0)>>2)]=$17$0;
 $st$7$1=(($16+4)|0);
 HEAP32[(($st$7$1)>>2)]=$17$1;
 $18=(($particleDef+20)|0);
 $19=(($groupDef+32)|0);
 $20=((__ZN15b2ParticleColoraSERKS_($18,$19))|0);
 $21=(($groupDef+64)|0);
 $22=(+(HEAPF32[(($21)>>2)]));
 $23=(($particleDef+24)|0);
 HEAPF32[(($23)>>2)]=$22;
 $24=(($groupDef+68)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=(($particleDef+28)|0);
 HEAP32[(($26)>>2)]=$25;
 $27=((__ZN16b2ParticleSystem14CreateParticleERK13b2ParticleDef($this,$particleDef))|0);
 STACKTOP=sp;return (($27)|0);
}


function __ZN16b2ParticleSystem34CreateParticlesStrokeShapeForGroupEPK7b2ShapeRK18b2ParticleGroupDefRK11b2Transform($this,$shape,$groupDef,$xf){
 $this=($this)|0;
 $shape=($shape)|0;
 $groupDef=($groupDef)|0;
 $xf=($xf)|0;
 var $edge=0,$d=0,$p=0,$1=0,$2=0,$3=.0,$4=0,$6=.0,$stride_0=.0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$positionOnEdge_019=.0;
 var $childIndex_018=0,$19=0,$20=0,$22=0,$25=.0,$26=0,$positionOnEdge_117=.0,$27=.0,$28=0,$29=.0,$30=0,$positionOnEdge_1_lcssa=.0,$31=.0,$32=0,$33=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $edge=((sp)|0);
 $d=(((sp)+(48))|0);
 $p=(((sp)+(56))|0);
 $1=(((sp)+(64))|0);
 $2=(($groupDef+52)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4=$3==(0.0);
 if ($4) {
  $6=(+(__ZNK16b2ParticleSystem17GetParticleStrideEv($this)));
  $stride_0=$6;
 } else {
  $stride_0=$3;
 }

 $8=$shape;
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+12)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=((FUNCTION_TABLE_ii[($11)&31]($shape))|0);
 $13=($12|0)>0;
 if (!($13)) {
  STACKTOP=sp;return;
 }
 $14=$shape;
 $15=(($edge+20)|0);
 $16=(($edge+12)|0);
 $17=$shape;
 $childIndex_018=0;$positionOnEdge_019=0.0;
 while(1) {


  __ZN11b2EdgeShapeC1Ev($edge);
  $19=((__ZNK7b2Shape7GetTypeEv($shape))|0);
  $20=($19|0)==1;
  if ($20) {
   $22=((__ZN11b2EdgeShapeaSERKS_($edge,$14))|0);
  } else {
   __ZNK12b2ChainShape12GetChildEdgeEP11b2EdgeShapei($17,$edge,$childIndex_018);
  }
  __ZmiRK6b2Vec2S1_($d,$15,$16);
  $25=(+(__ZNK6b2Vec26LengthEv($d)));
  $26=$positionOnEdge_019<$25;
  if ($26) {
   $positionOnEdge_117=$positionOnEdge_019;
   while(1) {

    $27=($positionOnEdge_117)/($25);
    __ZmlfRK6b2Vec2($1,$27,$d);
    __ZplRK6b2Vec2S1_($p,$16,$1);
    $28=((__ZN16b2ParticleSystem22CreateParticleForGroupERK18b2ParticleGroupDefRK11b2TransformRK6b2Vec2($this,$groupDef,$xf,$p))|0);
    $29=($stride_0)+($positionOnEdge_117);
    $30=$29<$25;
    if ($30) {
     $positionOnEdge_117=$29;
    } else {
     $positionOnEdge_1_lcssa=$29;
     break;
    }
   }
  } else {
   $positionOnEdge_1_lcssa=$positionOnEdge_019;
  }

  $31=($positionOnEdge_1_lcssa)-($25);
  $32=((($childIndex_018)+(1))|0);
  $33=($32|0)<($12|0);
  if ($33) {
   $childIndex_018=$32;$positionOnEdge_019=$31;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem32CreateParticlesFillShapeForGroupEPK7b2ShapeRK18b2ParticleGroupDefRK11b2Transform($this,$shape,$groupDef,$xf){
 $this=($this)|0;
 $shape=($shape)|0;
 $groupDef=($groupDef)|0;
 $xf=($xf)|0;
 var $identity=0,$aabb=0,$p=0,$1=0,$2=.0,$3=0,$5=.0,$stride_0=.0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=.0,$13=.0,$14=.0,$15=.0,$16=0,$17=.0,$18=0;
 var $19=0,$20=0,$21=0,$y_017=.0,$23=.0,$24=.0,$25=.0,$26=.0,$27=.0,$28=0,$x_016=.0,$29=0,$30=0,$31=0,$32=0,$34=0,$36=.0,$37=.0,$38=0,$39=.0;
 var $40=.0,$41=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $identity=((sp)|0);
 $aabb=(((sp)+(16))|0);
 $p=(((sp)+(32))|0);
 $1=(($groupDef+52)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=$2==(0.0);
 if ($3) {
  $5=(+(__ZNK16b2ParticleSystem17GetParticleStrideEv($this)));
  $stride_0=$5;
 } else {
  $stride_0=$2;
 }

 __ZN11b2Transform11SetIdentityEv($identity);
 $7=$shape;
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($8+28)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 FUNCTION_TABLE_viiii[($10)&63]($shape,$aabb,$identity,0);
 $11=(($aabb+4)|0);
 $12=(+(HEAPF32[(($11)>>2)]));
 $13=($12)/($stride_0);
 $14=(+(Math_floor($13)));
 $15=($stride_0)*($14);
 $16=(($aabb+12)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=$15<$17;
 if (!($18)) {
  STACKTOP=sp;return;
 }
 $19=(($aabb)|0);
 $20=(($aabb+8)|0);
 $21=$shape;
 $y_017=$15;
 while(1) {

  $23=(+(HEAPF32[(($19)>>2)]));
  $24=($23)/($stride_0);
  $25=(+(Math_floor($24)));
  $26=($stride_0)*($25);
  $27=(+(HEAPF32[(($20)>>2)]));
  $28=$26<$27;
  if ($28) {
   $x_016=$26;
   while(1) {

    __ZN6b2Vec2C1Eff($p,$x_016,$y_017);
    $29=((HEAP32[(($21)>>2)])|0);
    $30=(($29+16)|0);
    $31=((HEAP32[(($30)>>2)])|0);
    $32=((FUNCTION_TABLE_iiii[($31)&31]($shape,$identity,$p))|0);
    if ($32) {
     $34=((__ZN16b2ParticleSystem22CreateParticleForGroupERK18b2ParticleGroupDefRK11b2TransformRK6b2Vec2($this,$groupDef,$xf,$p))|0);
    }
    $36=($stride_0)+($x_016);
    $37=(+(HEAPF32[(($20)>>2)]));
    $38=$36<$37;
    if ($38) {
     $x_016=$36;
    } else {
     break;
    }
   }
  }
  $39=($stride_0)+($y_017);
  $40=(+(HEAPF32[(($16)>>2)]));
  $41=$39<$40;
  if ($41) {
   $y_017=$39;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem32CreateParticlesWithShapeForGroupEPK7b2ShapeRK18b2ParticleGroupDefRK11b2Transform($this,$shape,$groupDef,$xf){
 $this=($this)|0;
 $shape=($shape)|0;
 $groupDef=($groupDef)|0;
 $xf=($xf)|0;
 var $1=0,label=0;

 $1=((__ZNK7b2Shape7GetTypeEv($shape))|0);
 if (((($1|0))|0)==((2)|0)|((($1|0))|0)==((0)|0)) {
  __ZN16b2ParticleSystem32CreateParticlesFillShapeForGroupEPK7b2ShapeRK18b2ParticleGroupDefRK11b2Transform($this,$shape,$groupDef,$xf);
  return;
 } else if (((($1|0))|0)==((1)|0)|((($1|0))|0)==((3)|0)) {
  __ZN16b2ParticleSystem34CreateParticlesStrokeShapeForGroupEPK7b2ShapeRK18b2ParticleGroupDefRK11b2Transform($this,$shape,$groupDef,$xf);
  return;
 } else {
  return;
 }
}


function __ZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2Transform($this,$shapes,$shapeCount,$groupDef,$xf){
 $this=($this)|0;
 $shapes=($shapes)|0;
 $shapeCount=($shapeCount)|0;
 $groupDef=($groupDef)|0;
 $xf=($xf)|0;
 var $compositeShape=0,$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $compositeShape=((sp)|0);
 __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformEN14CompositeShapeC2ES4_i($compositeShape,$shapes,$shapeCount);
 $1=(($compositeShape)|0);
 __ZN16b2ParticleSystem32CreateParticlesFillShapeForGroupEPK7b2ShapeRK18b2ParticleGroupDefRK11b2Transform($this,$1,$groupDef,$xf);
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem19CreateParticleGroupERK18b2ParticleGroupDef($this,$groupDef){
 $this=($this)|0;
 $groupDef=($groupDef)|0;
 var $transform=0,$p=0,$tmpcast=0,$filter=0,$1=0,$2=0,$3=0,$5=0,$6=0,$7=.0,$8=0,$9=0,$10=0,$11=0,$12=0,$15=0,$16=0,$17=0,$19=0,$20=0;
 var $22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$i_044=0,$29=0,$30=0,$31=0,$ld$0$0=0,$32$0=0,$ld$1$1=0,$32$1=0,$st$2$0=0,$st$3$1=0,$33=0,$34=0,$35=0,$36=0;
 var $37=0,$38=0,$39=0,$40=0,$41=0,$43=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=.0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0;
 var $59=0,$60=0,$61=0,$62=0,$63=0,$65=0,$67=0,$68=0,$69=0,$70=0,$71=0,$i1_043=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0;
 var $81=0,$83=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $transform=((sp)|0);
 $p=(((sp)+(16))|0);
 $tmpcast=$p;
 $filter=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $5=(($groupDef+8)|0);
 $6=(($groupDef+16)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 __ZN11b2Transform3SetERK6b2Vec2f($transform,$5,$7);
 $8=(($this+56)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($groupDef+40)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=($11|0)==0;
 if (!($12)) {
  __ZN16b2ParticleSystem32CreateParticlesWithShapeForGroupEPK7b2ShapeRK18b2ParticleGroupDefRK11b2Transform($this,$11,$groupDef,$transform);
 }
 $15=(($groupDef+44)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=($16|0)==0;
 if (!($17)) {
  $19=(($groupDef+48)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  __ZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2Transform($this,$16,$20,$groupDef,$transform);
 }
 $22=(($groupDef+56)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=($23|0)==0;
 do {
  if (!($24)) {
   $25=((HEAP32[(($22)>>2)])|0);
   $26=($25|0)>0;
   if (!($26)) {
    break;
   }
   $27=(($groupDef+60)|0);
   $i_044=0;
   while(1) {

    $29=((HEAP32[(($27)>>2)])|0);
    $30=(($29+($i_044<<3))|0);
    $31=$30;
    $ld$0$0=(($31)|0);
    $32$0=((HEAP32[(($ld$0$0)>>2)])|0);
    $ld$1$1=(($31+4)|0);
    $32$1=((HEAP32[(($ld$1$1)>>2)])|0);
    $st$2$0=(($p)|0);
    HEAP32[(($st$2$0)>>2)]=$32$0;
    $st$3$1=(($p+4)|0);
    HEAP32[(($st$3$1)>>2)]=$32$1;
    $33=((__ZN16b2ParticleSystem22CreateParticleForGroupERK18b2ParticleGroupDefRK11b2TransformRK6b2Vec2($this,$groupDef,$transform,$tmpcast))|0);
    $34=((($i_044)+(1))|0);
    $35=((HEAP32[(($22)>>2)])|0);
    $36=($34|0)<($35|0);
    if ($36) {
     $i_044=$34;
    } else {
     break;
    }
   }
  }
 } while(0);
 $37=((HEAP32[(($8)>>2)])|0);
 $38=((HEAP32[(($1)>>2)])|0);
 $39=(($38)|0);
 $40=((__ZN16b2BlockAllocator8AllocateEi($39,80))|0);
 $41=($40|0)==0;
 if ($41) {
  $45=0;
 } else {
  $43=$40;
  __ZN15b2ParticleGroupC2Ev($43);
  $45=$43;
 }

 $46=(($45)|0);
 HEAP32[(($46)>>2)]=$this;
 $47=(($45+4)|0);
 HEAP32[(($47)>>2)]=$9;
 $48=(($45+8)|0);
 HEAP32[(($48)>>2)]=$37;
 $49=(($groupDef+36)|0);
 $50=(+(HEAPF32[(($49)>>2)]));
 $51=(($45+16)|0);
 HEAPF32[(($51)>>2)]=$50;
 $52=(($groupDef+68)|0);
 $53=((HEAP32[(($52)>>2)])|0);
 $54=(($45+76)|0);
 HEAP32[(($54)>>2)]=$53;
 $55=(($45+60)|0);
 $56=$55;
 $57=$transform;
 HEAP32[(($56)>>2)]=((HEAP32[(($57)>>2)])|0);HEAP32[((($56)+(4))>>2)]=((HEAP32[((($57)+(4))>>2)])|0);HEAP32[((($56)+(8))>>2)]=((HEAP32[((($57)+(8))>>2)])|0);HEAP32[((($56)+(12))>>2)]=((HEAP32[((($57)+(12))>>2)])|0);
 $58=(($45+20)|0);
 HEAP32[(($58)>>2)]=0;
 $59=(($this+304)|0);
 $60=((HEAP32[(($59)>>2)])|0);
 $61=(($45+24)|0);
 HEAP32[(($61)>>2)]=$60;
 $62=((HEAP32[(($59)>>2)])|0);
 $63=($62|0)==0;
 if (!($63)) {
  $65=(($62+20)|0);
  HEAP32[(($65)>>2)]=$45;
 }
 HEAP32[(($59)>>2)]=$45;
 $67=(($this+300)|0);
 $68=((HEAP32[(($67)>>2)])|0);
 $69=((($68)+(1))|0);
 HEAP32[(($67)>>2)]=$69;
 $70=($9|0)<($37|0);
 if ($70) {
  $71=(($this+160)|0);
  $i1_043=$9;
  while(1) {

   $73=((HEAP32[(($71)>>2)])|0);
   $74=(($73+($i1_043<<2))|0);
   HEAP32[(($74)>>2)]=$45;
   $75=((($i1_043)+(1))|0);
   $76=($75|0)<($37|0);
   if ($76) {
    $i1_043=$75;
   } else {
    break;
   }
  }
 }
 $77=(($groupDef+4)|0);
 $78=((HEAP32[(($77)>>2)])|0);
 __ZN16b2ParticleSystem13SetGroupFlagsEP15b2ParticleGroupj($this,$45,$78);
 __ZN16b2ParticleSystem16ConnectionFilterC1Ev($filter);
 __ZN16b2ParticleSystem14UpdateContactsEb($this,1);
 __ZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterE($this,$9,$37,$filter);
 $79=(($groupDef+72)|0);
 $80=((HEAP32[(($79)>>2)])|0);
 $81=($80|0)==0;
 if ($81) {
  $_0=$45;

  STACKTOP=sp;return (($_0)|0);
 }
 __ZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_($this,$80,$45);
 $83=((HEAP32[(($79)>>2)])|0);
 $_0=$83;

 STACKTOP=sp;return (($_0)|0);
}


function __ZN11b2Transform3SetERK6b2Vec2f($this,$position,$angle){
 $this=($this)|0;
 $position=($position)|0;
 $angle=+($angle);
 var $1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,$4=0,label=0;

 $1=$position;
 $2=$this;
 $ld$0$0=(($1)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($2)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($2+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 $4=(($this+8)|0);
 __ZN5b2Rot3SetEf($4,$angle);
 return;
}


function __ZN16b2ParticleSystem13SetGroupFlagsEP15b2ParticleGroupj($this,$group,$newFlags){
 $this=($this)|0;
 $group=($group)|0;
 $newFlags=($newFlags)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$newFlags_=0,$7=0,$8=0,$9=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=0,$19=0,$20=0,$22=0,$23=0;
 var $24=0,$26=0,$27=0,label=0;

 $1=(($group+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2^$newFlags;
 $4=$3&1;
 $5=($4|0)==0;
 $6=$newFlags|16;
 $newFlags_=($5?$newFlags:$6);
 $7=$newFlags_^-1;
 $8=$2&$7;
 $9=($8|0)==0;
 if (!($9)) {
  $11=(($this+20)|0);
  HEAP8[($11)]=1;
 }
 $13=(($this+16)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=$14^-1;
 $16=$newFlags_&$15;
 $17=($16|0)==0;
 if ($17) {
  HEAP32[(($1)>>2)]=$newFlags_;
  return;
 }
 $19=$newFlags_&1;
 $20=($19|0)==0;
 if (!($20)) {
  $22=(($this+148)|0);
  $23=((HEAP32[(($22)>>2)])|0);
  $24=((__ZN16b2ParticleSystem13RequestBufferIfEEPT_S2_($this,$23))|0);
  HEAP32[(($22)>>2)]=$24;
 }
 $26=((HEAP32[(($13)>>2)])|0);
 $27=$26|$newFlags_;
 HEAP32[(($13)>>2)]=$27;
 HEAP32[(($1)>>2)]=$newFlags_;
 return;
}


function __ZN16b2ParticleSystem16ConnectionFilterC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ParticleSystem16ConnectionFilterC2Ev($this);
 return;
}


function __ZN16b2ParticleSystem14UpdateContactsEb($this,$exceptZombie){
 $this=($this)|0;
 $exceptZombie=($exceptZombie)|0;
 var $1=0,$particlePairs=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$proxy_061=0,$11=0,$12=0,$13=0,$p_sroa_0_0__idx=0,$p_sroa_0_0_copyload=.0,$p_sroa_1_4__idx28=0,$p_sroa_1_4_copyload=.0,$14=.0,$15=.0;
 var $16=.0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$lpad_phi$0=0,$lpad_phi$1=0,$34=0,$35=0;
 var $36=0,$37=0,$a_057=0,$c_056=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$b_048=0,$45=0,$46=0,$47=0,$49=0,$50=0,$51=0,$53=0,$54=0,$55=0;
 var $56=0,$c_1=0,$58=0,$60=0,$61=0,$62=0,$63=0,$65=0,$66=0,$67=0,$68=0,$b1_053=0,$70=0,$71=0,$72=0,$74=0,$75=0,$76=0,$78=0,$79=0;
 var $81=0,$82=0,$83=0,$84=0,$85=0,$87=0,$88=0,$89=0,$90=0,$91=0,$94=0,$95=0,$96=0,$97=0,$98=0,$99=0,$100=0,$i2_044=0,$102=0,$103=0;
 var $104=0,$106=0,$107=0,$108=0,$109=0,$110=0,$111=0,$112=0,$114=0,$115=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_loopexit45$0=0,$lpad_loopexit45$1=0,$lpad_loopexit51$0=0,$lpad_loopexit51$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$118$0=0,$118$1=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $particlePairs=(((sp)+(8))|0);
 $2=(($this+220)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($this+212)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($3+($5<<3))|0);
 $7=($5|0)>0;
 if ($7) {
  $8=(($this+112)|0);
  $9=(($this+44)|0);
  $proxy_061=$3;
  while(1) {

   $11=(($proxy_061)|0);
   $12=((HEAP32[(($11)>>2)])|0);
   $13=((HEAP32[(($8)>>2)])|0);
   $p_sroa_0_0__idx=(($13+($12<<3))|0);
   $p_sroa_0_0_copyload=(+(HEAPF32[(($p_sroa_0_0__idx)>>2)]));
   $p_sroa_1_4__idx28=(($13+($12<<3)+4)|0);
   $p_sroa_1_4_copyload=(+(HEAPF32[(($p_sroa_1_4__idx28)>>2)]));
   $14=(+(HEAPF32[(($9)>>2)]));
   $15=($p_sroa_0_0_copyload)*($14);
   $16=($p_sroa_1_4_copyload)*($14);
   $17=((__ZL10computeTagff($15,$16))|0);
   $18=(($proxy_061+4)|0);
   HEAP32[(($18)>>2)]=$17;
   $19=(($proxy_061+8)|0);
   $20=($19>>>0)<($6>>>0);
   if ($20) {
    $proxy_061=$19;
   } else {
    break;
   }
  }
 }
 $21=(($1)|0);
 __ZNSt3__16__sortIRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEvT0_S7_T_($3,$6,$1);
 $22=((__ZNK16b2ParticleSystem26GetParticleContactListenerEv($this))|0);
 $23=(($this+376)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($24+76)|0);
 __ZN17b2ParticlePairSetC1EP16b2StackAllocator($particlePairs,$25);
 $26=($22|0)!=0;
 if ($26) {
  $28=(($this+232)|0);
  $29=((HEAP32[(($28)>>2)])|0);
  $30=(($this+224)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=((__ZNK16b2ParticleSystem14GetFlagsBufferEv($this))|0);
  __ZN17b2ParticlePairSet10InitializeEPK17b2ParticleContactiPKj($particlePairs,$29,$31,$32);
 }
 $34=(($this+224)|0);
 HEAP32[(($34)>>2)]=0;
 $35=((__ZNK16b2ParticleSystem24GetParticleContactFilterEv($this))|0);
 $36=($5|0)>0;
 if ($36) {
  $c_056=$3;$a_057=$3;
  while(1) {


   $38=(($a_057+4)|0);
   $39=((HEAP32[(($38)>>2)])|0);
   $40=((__ZL18computeRelativeTagjii($39,1,0))|0);
   $41=(($a_057+8)|0);
   $42=($41>>>0)<($6>>>0);
   L12: do {
    if ($42) {
     $43=(($a_057)|0);
     $b_048=$41;
     while(1) {

      $45=(($b_048+4)|0);
      $46=((HEAP32[(($45)>>2)])|0);
      $47=($40>>>0)<($46>>>0);
      if ($47) {
       break L12;
      }
      $49=((HEAP32[(($43)>>2)])|0);
      $50=(($b_048)|0);
      $51=((HEAP32[(($50)>>2)])|0);
      __ZN16b2ParticleSystem10AddContactEiiP15b2ContactFilterP17b2ContactListenerP17b2ParticlePairSet($this,$49,$51,$35,$22,$particlePairs);
      $53=(($b_048+8)|0);
      $54=($53>>>0)<($6>>>0);
      if ($54) {
       $b_048=$53;
      } else {
       break;
      }
     }
    }
   } while(0);
   $55=((HEAP32[(($38)>>2)])|0);
   $56=((__ZL18computeRelativeTagjii($55,-1,1))|0);
   $c_1=$c_056;
   while(1) {

    $58=($c_1>>>0)<($6>>>0);
    if (!($58)) {
     break;
    }
    $60=(($c_1+4)|0);
    $61=((HEAP32[(($60)>>2)])|0);
    $62=($56>>>0)>($61>>>0);
    $63=(($c_1+8)|0);
    if ($62) {
     $c_1=$63;
    } else {
     break;
    }
   }
   $65=((HEAP32[(($38)>>2)])|0);
   $66=((__ZL18computeRelativeTagjii($65,1,1))|0);
   $67=($c_1>>>0)<($6>>>0);
   L23: do {
    if ($67) {
     $68=(($a_057)|0);
     $b1_053=$c_1;
     while(1) {

      $70=(($b1_053+4)|0);
      $71=((HEAP32[(($70)>>2)])|0);
      $72=($66>>>0)<($71>>>0);
      if ($72) {
       break L23;
      }
      $74=((HEAP32[(($68)>>2)])|0);
      $75=(($b1_053)|0);
      $76=((HEAP32[(($75)>>2)])|0);
      __ZN16b2ParticleSystem10AddContactEiiP15b2ContactFilterP17b2ContactListenerP17b2ParticlePairSet($this,$74,$76,$35,$22,$particlePairs);
      $78=(($b1_053+8)|0);
      $79=($78>>>0)<($6>>>0);
      if ($79) {
       $b1_053=$78;
      } else {
       break;
      }
     }
    }
   } while(0);
   $37=($41>>>0)<($6>>>0);
   if ($37) {
    $c_056=$c_1;$a_057=$41;
   } else {
    break;
   }
  }
 }
 if ($exceptZombie) {
  $81=(($this+232)|0);
  $82=((HEAP32[(($81)>>2)])|0);
  $83=((HEAP32[(($34)>>2)])|0);
  $84=(($82+((($83)*(24))&-1))|0);
  $85=((__ZNSt3__19remove_ifIP17b2ParticleContactPFbRKS1_EEET_S7_S7_T0_($82,$84,12))|0);
  $87=((HEAP32[(($81)>>2)])|0);
  $88=$85;
  $89=$87;
  $90=((($88)-($89))|0);
  $91=(((($90|0))/(24))&-1);
  HEAP32[(($34)>>2)]=$91;
 }
 if (!($26)) {
  __ZN17b2ParticlePairSetD1Ev($particlePairs);
  STACKTOP=sp;return;
 }
 $94=(($particlePairs)|0);
 $95=((__ZNK12_GLOBAL__N_117FixedSetAllocator8GetCountEv($94))|0);
 $96=(($particlePairs)|0);
 $97=((__ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE9GetBufferEv($96))|0);
 $98=((__ZNK12_GLOBAL__N_117FixedSetAllocator14GetValidBufferEv($94))|0);
 $99=($95|0)>0;
 if (!($99)) {
  __ZN17b2ParticlePairSetD1Ev($particlePairs);
  STACKTOP=sp;return;
 }
 $100=$22;
 $i2_044=0;
 while(1) {

  $102=(($98+$i2_044)|0);
  $103=((HEAP8[($102)])|0);
  $104=(($103<<24)>>24)==0;
  if (!($104)) {
   $106=((HEAP32[(($100)>>2)])|0);
   $107=(($106+28)|0);
   $108=((HEAP32[(($107)>>2)])|0);
   $109=(($97+($i2_044<<3))|0);
   $110=((HEAP32[(($109)>>2)])|0);
   $111=(($97+($i2_044<<3)+4)|0);
   $112=((HEAP32[(($111)>>2)])|0);
   FUNCTION_TABLE_viiii[($108)&63]($22,$this,$110,$112);
  }
  $114=((($i2_044)+(1))|0);
  $115=($114|0)<($95|0);
  if ($115) {
   $i2_044=$114;
  } else {
   break;
  }
 }
 __ZN17b2ParticlePairSetD1Ev($particlePairs);
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterE($this,$firstIndex,$lastIndex,$filter){
 $this=($this)|0;
 $firstIndex=($firstIndex)|0;
 $lastIndex=($lastIndex)|0;
 $filter=($filter)|0;
 var $1=0,$2=0,$3=0,$4=0,$diagram=0,$callback=0,$5=0,$6=0,$7=0,$particleFlags_074=0,$i_073=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$k_069=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0;
 var $38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$notlhs=0,$notrhs=0,$or_cond_not=0,$44=0,$or_cond61=0,$or_cond61_not=0,$45=0,$or_cond62=0,$47=0,$48=0,$49=0,$50=0,$51=0,$or_cond64=0;
 var $53=0,$54=0,$55=0,$56=0,$58=0,$59=0,$60=0,$61=0,$63=0,$65=0,$67=0,$68=0,$69=0,$70=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0;
 var $78=0,$79=0,$80=0,$81=0,$83=0,$84=.0,$86=.0,$87=0,$89=0,$90=.0,$92=.0,$93=.0,$94=0,$95=0,$96=0,$97=0,$98=.0,$99=0,$100=0,$101=0;
 var $103=0,$104=0,$105=0,$106=0,$107=0,$108=0,$109=0,$110=0,$111=0,$112=0,$_idx=0,$113=0,$114=0,$115=0,$116=0,$117=0,$118=0,$121=0,$123=0,$__buf_sroa_1_4_load14_i=0;
 var $__h_sroa_0_0_load1013_i=0,$126=0,$128=0,$129=0,$130=0,$131=0,$132=0,$133=0,$134=0,$135=0,$136=0,$137=0,$139=0,$140=0,$142=0,$143=0,$144=0,$145=0,$146=0,$147=0;
 var $148=0,$149=0,$150=0,$i1_068=0,$152=0,$153=0,$154=0,$155=0,$156=0,$158=0,$159=0,$160=0,$161=0,$163=0,$164=0,$165=0,$166=0,$167=0,$169=0,$lpad_phi$0=0;
 var $lpad_phi$1=0,$171=0,$173=0,$174=0,$175=.0,$176=.0,$177=.0,$179=0,$181=0,$182=0,$183=0,$184=0,$185=0,$186=0,$187=0,$_idx67=0,$188=0,$189=0,$190=0,$191=0;
 var $192=0,$193=0,$196=0,$198=0,$__buf_sroa_1_4_load14_i65=0,$__h_sroa_0_0_load1013_i66=0,$201=0,$203=0,$205=0,$206=0,$207=0,$208=0,$210=0,$211=0,$212=0,$213=0,$214=0,$eh_lpad_body$0=0,$eh_lpad_body$1=0,$217=0;
 var $_sink$0=0,$_sink$1=0,$_060=0,$220=0,$221$0=0,$221$1=0,$222$0=0,$222$1=0,$120$0=0,$120$1=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$195$0=0,$195$1=0,$216$0=0,$216$1=0,$224$0=0,$224$1=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+80)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(((sp)+(24))|0);
 $diagram=(((sp)+(32))|0);
 $callback=(((sp)+(64))|0);
 $5=($firstIndex|0)<($lastIndex|0);
 if (!($5)) {
  STACKTOP=sp;return;
 }
 $6=(($this+104)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $i_073=$firstIndex;$particleFlags_074=0;
 while(1) {


  $9=(($7+($i_073<<2))|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=$10|$particleFlags_074;
  $12=((($i_073)+(1))|0);
  $13=($12|0)<($lastIndex|0);
  if ($13) {
   $i_073=$12;$particleFlags_074=$11;
  } else {
   break;
  }
 }
 $14=$11&1032;
 $15=($14|0)==0;
 if (!($15)) {
  $16=(($this+224)|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $18=($17|0)>0;
  if ($18) {
   $19=(($this+232)|0);
   $20=(($this+104)|0);
   $21=(($this+160)|0);
   $22=$filter;
   $23=$filter;
   $24=(($this+256)|0);
   $25=(($this+248)|0);
   $26=(($this+252)|0);
   $27=(($this+112)|0);
   $k_069=0;
   while(1) {

    $29=((HEAP32[(($19)>>2)])|0);
    $30=(($29+((($k_069)*(24))&-1))|0);
    $31=((HEAP32[(($30)>>2)])|0);
    $32=(($29+((($k_069)*(24))&-1)+4)|0);
    $33=((HEAP32[(($32)>>2)])|0);
    $34=((HEAP32[(($20)>>2)])|0);
    $35=(($34+($31<<2))|0);
    $36=((HEAP32[(($35)>>2)])|0);
    $37=(($34+($33<<2))|0);
    $38=((HEAP32[(($37)>>2)])|0);
    $39=((HEAP32[(($21)>>2)])|0);
    $40=(($39+($31<<2))|0);
    $41=((HEAP32[(($40)>>2)])|0);
    $42=(($39+($33<<2))|0);
    $43=((HEAP32[(($42)>>2)])|0);
    $notlhs=($31|0)<($firstIndex|0);
    $notrhs=($31|0)>=($lastIndex|0);
    $or_cond_not=$notrhs|$notlhs;
    $44=($33|0)<($firstIndex|0);
    $or_cond61=$or_cond_not|$44;
    $or_cond61_not=$or_cond61^1;
    $45=($33|0)<($lastIndex|0);
    $or_cond62=$45&$or_cond61_not;
    do {
     if ($or_cond62) {
      $47=$38|$36;
      $48=$47&2;
      $49=($48|0)!=0;
      $50=$47&1032;
      $51=($50|0)==0;
      $or_cond64=$49|$51;
      if ($or_cond64) {
       break;
      }
      $53=((HEAP32[(($22)>>2)])|0);
      $54=(($53+8)|0);
      $55=((HEAP32[(($54)>>2)])|0);
      $56=((FUNCTION_TABLE_iii[($55)&63]($filter,$31))|0);
      if (!($56)) {
       $58=((HEAP32[(($22)>>2)])|0);
       $59=(($58+8)|0);
       $60=((HEAP32[(($59)>>2)])|0);
       $61=((FUNCTION_TABLE_iii[($60)&63]($filter,$33))|0);
       if (!($61)) {
        break;
       }
      }
      $63=((__ZL22ParticleCanBeConnectedjP15b2ParticleGroup($36,$41))|0);
      if (!($63)) {
       break;
      }
      $65=((__ZL22ParticleCanBeConnectedjP15b2ParticleGroup($38,$43))|0);
      if (!($65)) {
       break;
      }
      $67=((HEAP32[(($23)>>2)])|0);
      $68=(($67+12)|0);
      $69=((HEAP32[(($68)>>2)])|0);
      $70=((FUNCTION_TABLE_iiii[($69)&31]($filter,$31,$33))|0);
      if (!($70)) {
       break;
      }
      $72=((HEAP32[(($24)>>2)])|0);
      $73=((HEAP32[(($25)>>2)])|0);
      $74=((__ZN16b2ParticleSystem21RequestGrowableBufferINS_4PairEEEPT_S3_iPi($this,$72,$73,$26))|0);
      HEAP32[(($24)>>2)]=$74;
      $75=((HEAP32[(($25)>>2)])|0);
      $76=(($74+((($75)*(20))&-1))|0);
      HEAP32[(($76)>>2)]=$31;
      $77=(($74+((($75)*(20))&-1)+4)|0);
      HEAP32[(($77)>>2)]=$33;
      $78=(($29+((($k_069)*(24))&-1)+8)|0);
      $79=((HEAP32[(($78)>>2)])|0);
      $80=(($74+((($75)*(20))&-1)+8)|0);
      HEAP32[(($80)>>2)]=$79;
      $81=($41|0)==0;
      if ($81) {
       $86=1.0;
      } else {
       $83=(($41+16)|0);
       $84=(+(HEAPF32[(($83)>>2)]));
       $86=$84;
      }

      $87=($43|0)==0;
      if ($87) {
       $92=1.0;
      } else {
       $89=(($43+16)|0);
       $90=(+(HEAPF32[(($89)>>2)]));
       $92=$90;
      }

      $93=(+(__Z5b2MinIfET_S0_S0_($86,$92)));
      $94=(($74+((($75)*(20))&-1)+12)|0);
      HEAPF32[(($94)>>2)]=$93;
      $95=((HEAP32[(($27)>>2)])|0);
      $96=(($95+($31<<3))|0);
      $97=(($95+($33<<3))|0);
      $98=(+(__Z10b2DistanceRK6b2Vec2S1_($96,$97)));
      $99=(($74+((($75)*(20))&-1)+16)|0);
      HEAPF32[(($99)>>2)]=$98;
      $100=((HEAP32[(($25)>>2)])|0);
      $101=((($100)+(1))|0);
      HEAP32[(($25)>>2)]=$101;
     }
    } while(0);
    $103=((($k_069)+(1))|0);
    $104=((HEAP32[(($16)>>2)])|0);
    $105=($103|0)<($104|0);
    if ($105) {
     $k_069=$103;
    } else {
     break;
    }
   }
  }
  $106=(($this+256)|0);
  $107=((HEAP32[(($106)>>2)])|0);
  $108=(($this+248)|0);
  $109=((HEAP32[(($108)>>2)])|0);
  $110=(($107+((($109)*(20))&-1))|0);
  $111=$3;
  $112=$4;
  HEAP32[(($3)>>2)]=16;
  $_idx=((($109)*(20))&-1);
  $113=(((($_idx|0))/(20))&-1);
  $114=($_idx|0)>2560;
  if ($114) {
   __ZNSt3__120get_temporary_bufferIN16b2ParticleSystem4PairEEENS_4pairIPT_iEEi($4,$113);
   $115=(($4)|0);
   $116=((HEAP32[(($115)>>2)])|0);
   $117=(($4+4)|0);
   $118=((HEAP32[(($117)>>2)])|0);
   $__h_sroa_0_0_load1013_i=$116;$__buf_sroa_1_4_load14_i=$118;
  } else {
   $__h_sroa_0_0_load1013_i=0;$__buf_sroa_1_4_load14_i=0;
  }


  __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($107,$110,$3,$113,$__h_sroa_0_0_load1013_i,$__buf_sroa_1_4_load14_i);
  $126=($__h_sroa_0_0_load1013_i|0)==0;
  if (!($126)) {
   $128=$__h_sroa_0_0_load1013_i;
   __ZdlPv($128);
  }
  $129=((HEAP32[(($106)>>2)])|0);
  $130=((HEAP32[(($108)>>2)])|0);
  $131=(($129+((($130)*(20))&-1))|0);
  $132=((__ZNSt3__16uniqueIPN16b2ParticleSystem4PairEPFbRKS2_S5_EEET_S8_S8_T0_($129,$131,12))|0);
  $133=((HEAP32[(($106)>>2)])|0);
  $134=$132;
  $135=$133;
  $136=((($134)-($135))|0);
  $137=(((($136|0))/(20))&-1);
  HEAP32[(($108)>>2)]=$137;
 }
 $139=$11&16;
 $140=($139|0)==0;
 if ($140) {
  STACKTOP=sp;return;
 }
 $142=(($this+376)|0);
 $143=((HEAP32[(($142)>>2)])|0);
 $144=(($143+76)|0);
 $145=((($lastIndex)-($firstIndex))|0);
 __ZN16b2VoronoiDiagramC2EP16b2StackAllocatori($diagram,$144,$145);
 $146=($firstIndex|0)<($lastIndex|0);
 if ($146) {
  $147=(($this+104)|0);
  $148=(($this+160)|0);
  $149=(($this+112)|0);
  $150=$filter;
  $i1_068=$firstIndex;
  while(1) {

   $152=((HEAP32[(($147)>>2)])|0);
   $153=(($152+($i1_068<<2))|0);
   $154=((HEAP32[(($153)>>2)])|0);
   $155=$154&2;
   $156=($155|0)==0;
   do {
    if ($156) {
     $158=((HEAP32[(($148)>>2)])|0);
     $159=(($158+($i1_068<<2))|0);
     $160=((HEAP32[(($159)>>2)])|0);
     $161=((__ZL22ParticleCanBeConnectedjP15b2ParticleGroup($154,$160))|0);
     if (!($161)) {
      break;
     }
     $163=((HEAP32[(($149)>>2)])|0);
     $164=((HEAP32[(($150)>>2)])|0);
     $165=(($164+8)|0);
     $166=((HEAP32[(($165)>>2)])|0);
     $167=((FUNCTION_TABLE_iii[($166)&63]($filter,$i1_068))|0);
     $169=(($163+($i1_068<<3))|0);
     __ZN16b2VoronoiDiagram12AddGeneratorERK6b2Vec2ib($diagram,$169,$i1_068,$167);
    }
   } while(0);
   $173=((($i1_068)+(1))|0);
   $174=($173|0)<($lastIndex|0);
   if ($174) {
    $i1_068=$173;
   } else {
    break;
   }
  }
 }
 $175=(+(__ZNK16b2ParticleSystem17GetParticleStrideEv($this)));
 $176=($175)*((0.5));
 $177=($175)*((2.0));
 __ZN16b2VoronoiDiagram8GenerateEff($diagram,$176,$177);
 __ZZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterEEN20UpdateTriadsCallbackC2EPS_PS1_($callback,$this,$filter);
 $179=(($callback)|0);
 __ZNK16b2VoronoiDiagram8GetNodesERNS_12NodeCallbackE($diagram,$179);
 $181=(($this+268)|0);
 $182=((HEAP32[(($181)>>2)])|0);
 $183=(($this+260)|0);
 $184=((HEAP32[(($183)>>2)])|0);
 $185=(($182+((($184)*(60))&-1))|0);
 $186=$1;
 $187=$2;
 HEAP32[(($1)>>2)]=28;
 $_idx67=((($184)*(60))&-1);
 $188=(((($_idx67|0))/(60))&-1);
 $189=($_idx67|0)>7680;
 if ($189) {
  __ZNSt3__120get_temporary_bufferIN16b2ParticleSystem5TriadEEENS_4pairIPT_iEEi($2,$188);
  $190=(($2)|0);
  $191=((HEAP32[(($190)>>2)])|0);
  $192=(($2+4)|0);
  $193=((HEAP32[(($192)>>2)])|0);
  $__h_sroa_0_0_load1013_i66=$191;$__buf_sroa_1_4_load14_i65=$193;
 } else {
  $__h_sroa_0_0_load1013_i66=0;$__buf_sroa_1_4_load14_i65=0;
 }


 __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($182,$185,$1,$188,$__h_sroa_0_0_load1013_i66,$__buf_sroa_1_4_load14_i65);
 $201=($__h_sroa_0_0_load1013_i66|0)==0;
 if (!($201)) {
  $203=$__h_sroa_0_0_load1013_i66;
  __ZdlPv($203);
 }
 $205=((HEAP32[(($181)>>2)])|0);
 $206=((HEAP32[(($183)>>2)])|0);
 $207=(($205+((($206)*(60))&-1))|0);
 $208=((__ZNSt3__16uniqueIPN16b2ParticleSystem5TriadEPFbRKS2_S5_EEET_S8_S8_T0_($205,$207,18))|0);
 $210=((HEAP32[(($181)>>2)])|0);
 $211=$208;
 $212=$210;
 $213=((($211)-($212))|0);
 $214=(((($213|0))/(60))&-1);
 HEAP32[(($183)>>2)]=$214;
 __ZN16b2VoronoiDiagramD2Ev($diagram);
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_($this,$groupA,$groupB){
 $this=($this)|0;
 $groupA=($groupA)|0;
 $groupB=($groupB)|0;
 var $filter=0,$1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$i_023=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $filter=((sp)|0);
 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZNK7b2World8IsLockedEv($2))|0);
 if ($3) {
  STACKTOP=sp;return;
 }
 $5=(($groupB+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($groupB+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($this+56)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 __ZN16b2ParticleSystem12RotateBufferEiii($this,$6,$8,$10);
 $11=(($groupA+4)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($groupA+8)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=((HEAP32[(($5)>>2)])|0);
 __ZN16b2ParticleSystem12RotateBufferEiii($this,$12,$14,$15);
 $16=((HEAP32[(($5)>>2)])|0);
 __ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_EN24JoinParticleGroupsFilterC2Ei($filter,$16);
 __ZN16b2ParticleSystem14UpdateContactsEb($this,1);
 $17=((HEAP32[(($11)>>2)])|0);
 $18=((HEAP32[(($7)>>2)])|0);
 $19=(($filter)|0);
 __ZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterE($this,$17,$18,$19);
 $20=((HEAP32[(($5)>>2)])|0);
 $21=((HEAP32[(($7)>>2)])|0);
 $22=($20|0)<($21|0);
 if ($22) {
  $23=(($this+160)|0);
  $24=((HEAP32[(($7)>>2)])|0);
  $i_023=$20;
  while(1) {

   $26=((HEAP32[(($23)>>2)])|0);
   $27=(($26+($i_023<<2))|0);
   HEAP32[(($27)>>2)]=$groupA;
   $28=((($i_023)+(1))|0);
   $29=($28|0)<($24|0);
   if ($29) {
    $i_023=$28;
   } else {
    break;
   }
  }
 }
 $30=(($groupA+12)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 $32=(($groupB+12)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=$33|$31;
 __ZN16b2ParticleSystem13SetGroupFlagsEP15b2ParticleGroupj($this,$groupA,$34);
 $35=((HEAP32[(($7)>>2)])|0);
 HEAP32[(($13)>>2)]=$35;
 $36=((HEAP32[(($7)>>2)])|0);
 HEAP32[(($5)>>2)]=$36;
 __ZN16b2ParticleSystem20DestroyParticleGroupEP15b2ParticleGroup($this,$groupB);
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem16ConnectionFilterD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEv($this){
 $this=($this)|0;
 var $filter=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$i_05=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $filter=((sp)|0);
 $1=(($this+104)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 __ZZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEvEN14ReactiveFilterC2EPj($filter,$2);
 $3=(($this+56)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($filter)|0);
 __ZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterE($this,0,$4,$5);
 $6=((HEAP32[(($3)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  $16=(($this+8)|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $18=$17&-4097;
  HEAP32[(($16)>>2)]=$18;
  STACKTOP=sp;return;
 }
 $8=((HEAP32[(($1)>>2)])|0);
 $i_05=0;
 while(1) {

  $10=(($8+($i_05<<2))|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=$11&-4097;
  HEAP32[(($10)>>2)]=$12;
  $13=((($i_05)+(1))|0);
  $14=((HEAP32[(($3)>>2)])|0);
  $15=($13|0)<($14|0);
  if ($15) {
   $i_05=$13;
  } else {
   break;
  }
 }
 $16=(($this+8)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=$17&-4097;
 HEAP32[(($16)>>2)]=$18;
 STACKTOP=sp;return;
}


function __ZL22ParticleCanBeConnectedjP15b2ParticleGroup($flags,$group){
 $flags=($flags)|0;
 $group=($group)|0;
 var $1=0,$2=0,$4=0,$6=0,$7=0,$8=0,$10=0,label=0;

 $1=$flags&28;
 $2=($1|0)==0;
 do {
  if ($2) {
   $4=($group|0)==0;
   if ($4) {
    $10=0;
    break;
   }
   $6=((__ZNK15b2ParticleGroup13GetGroupFlagsEv($group))|0);
   $7=$6&2;
   $8=($7|0)!=0;
   $10=$8;
  } else {
   $10=1;
  }
 } while(0);

 return (($10)|0);
}


function __ZN16b2ParticleSystem21RequestGrowableBufferINS_4PairEEEPT_S3_iPi($this,$buffer,$count,$capacity){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $count=($count)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$_=0,$6=0,$_0=0,label=0;

 $1=((HEAP32[(($capacity)>>2)])|0);
 $2=($1|0)>($count|0);
 if ($2) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=($count|0)==0;
 $5=$count<<1;
 $_=($4?256:$5);
 $6=((__ZN16b2ParticleSystem16ReallocateBufferINS_4PairEEEPT_S3_ii($this,$buffer,$1,$_))|0);
 HEAP32[(($capacity)>>2)]=$_;
 $_0=$6;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem18ComparePairIndicesERKNS_4PairES2_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$14=0,$_0=0,label=0;

 $1=(($a)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($b)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 if ($5) {
  $10=(($a+4)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=(($b+4)|0);
  $13=((HEAP32[(($12)>>2)])|0);
  $14=($11|0)<($13|0);
  $_0=$14;

  return (($_0)|0);
 } else {
  $7=((($2)-($4))|0);
  $8=($7|0)<0;
  $_0=$8;

  return (($_0)|0);
 }
  return 0;
}


function __ZNSt3__16uniqueIPN16b2ParticleSystem4PairEPFbRKS2_S5_EEET_S8_S8_T0_($__first,$__last,$__pred){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__pred=($__pred)|0;
 var $1=0,$_011_i=0,$2=0,$3=0,$5=0,$6=0,$8=0,$_0_ph=0,$__i_0_ph=0,$__i_0=0,$10=0,$11=0,$13=0,$15=0,$16=0,$17=0,$19=0,$_1=0,label=0;

 $1=($__first|0)==($__last|0);
 if ($1) {
  $_1=$__last;

  return (($_1)|0);
 } else {
  $_011_i=$__first;
 }
 while(1) {

  $2=(($_011_i+20)|0);
  $3=($2|0)==($__last|0);
  if ($3) {
   $_1=$__last;
   label = 11;
   break;
  }
  $5=((FUNCTION_TABLE_iii[($__pred)&63]($_011_i,$2))|0);
  if ($5) {
   break;
  } else {
   $_011_i=$2;
  }
 }
 if ((label|0) == 11) {

  return (($_1)|0);
 }
 $6=($_011_i|0)==($__last|0);
 if ($6) {
  $_1=$_011_i;

  return (($_1)|0);
 }
 $8=(($_011_i+20)|0);
 $__i_0_ph=$8;$_0_ph=$_011_i;
 L12: while(1) {


  $__i_0=$__i_0_ph;
  while(1) {

   $10=(($__i_0+20)|0);
   $11=($10|0)==($__last|0);
   if ($11) {
    break L12;
   }
   $13=((FUNCTION_TABLE_iii[($__pred)&63]($_0_ph,$10))|0);
   if ($13) {
    $__i_0=$10;
   } else {
    break;
   }
  }
  $15=(($_0_ph+20)|0);
  $16=$15;
  $17=$10;
  HEAP32[(($16)>>2)]=((HEAP32[(($17)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((($17)+(4))>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((($17)+(8))>>2)])|0);HEAP32[((($16)+(12))>>2)]=((HEAP32[((($17)+(12))>>2)])|0);HEAP32[((($16)+(16))>>2)]=((HEAP32[((($17)+(16))>>2)])|0);
  $__i_0_ph=$10;$_0_ph=$15;
 }
 $19=(($_0_ph+20)|0);
 $_1=$19;

 return (($_1)|0);
}


function __ZN16b2ParticleSystem16MatchPairIndicesERKNS_4PairES2_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,label=0;

 $1=(($a)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($b)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 if (!($5)) {
  $13=0;

  return (($13)|0);
 }
 $7=(($a+4)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($b+4)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)==($10|0);
 $13=$11;

 return (($13)|0);
}


function __ZN16b2ParticleSystem19CompareTriadIndicesERKNS_5TriadES2_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$14=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0,$23=0,$_0=0;
 var label=0;

 $1=(($a)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($b)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 if (!($5)) {
  $7=((($2)-($4))|0);
  $8=($7|0)<0;
  $_0=$8;

  return (($_0)|0);
 }
 $10=(($a+4)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($b+4)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=($11|0)==($13|0);
 if ($14) {
  $19=(($a+8)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  $21=(($b+8)|0);
  $22=((HEAP32[(($21)>>2)])|0);
  $23=($20|0)<($22|0);
  $_0=$23;

  return (($_0)|0);
 } else {
  $16=((($11)-($13))|0);
  $17=($16|0)<0;
  $_0=$17;

  return (($_0)|0);
 }
  return 0;
}


function __ZNSt3__16uniqueIPN16b2ParticleSystem5TriadEPFbRKS2_S5_EEET_S8_S8_T0_($__first,$__last,$__pred){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__pred=($__pred)|0;
 var $1=0,$_011_i=0,$2=0,$3=0,$5=0,$6=0,$8=0,$_0_ph=0,$__i_0_ph=0,$__i_0=0,$10=0,$11=0,$13=0,$15=0,$16=0,$17=0,$19=0,$_1=0,label=0;

 $1=($__first|0)==($__last|0);
 if ($1) {
  $_1=$__last;

  return (($_1)|0);
 } else {
  $_011_i=$__first;
 }
 while(1) {

  $2=(($_011_i+60)|0);
  $3=($2|0)==($__last|0);
  if ($3) {
   $_1=$__last;
   label = 11;
   break;
  }
  $5=((FUNCTION_TABLE_iii[($__pred)&63]($_011_i,$2))|0);
  if ($5) {
   break;
  } else {
   $_011_i=$2;
  }
 }
 if ((label|0) == 11) {

  return (($_1)|0);
 }
 $6=($_011_i|0)==($__last|0);
 if ($6) {
  $_1=$_011_i;

  return (($_1)|0);
 }
 $8=(($_011_i+60)|0);
 $__i_0_ph=$8;$_0_ph=$_011_i;
 L12: while(1) {


  $__i_0=$__i_0_ph;
  while(1) {

   $10=(($__i_0+60)|0);
   $11=($10|0)==($__last|0);
   if ($11) {
    break L12;
   }
   $13=((FUNCTION_TABLE_iii[($__pred)&63]($_0_ph,$10))|0);
   if ($13) {
    $__i_0=$10;
   } else {
    break;
   }
  }
  $15=(($_0_ph+60)|0);
  $16=$15;
  $17=$10;
  (_memcpy((($16)|0), (($17)|0), 60)|0);
  $__i_0_ph=$10;$_0_ph=$15;
 }
 $19=(($_0_ph+60)|0);
 $_1=$19;

 return (($_1)|0);
}


function __ZN16b2ParticleSystem17MatchTriadIndicesERKNS_5TriadES2_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=0,$19=0,label=0;

 $1=(($a)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($b)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 if (!($5)) {
  $19=0;

  return (($19)|0);
 }
 $7=(($a+4)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($b+4)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)==($10|0);
 if (!($11)) {
  $19=0;

  return (($19)|0);
 }
 $13=(($a+8)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($b+8)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=($14|0)==($16|0);
 $19=$17;

 return (($19)|0);
}


function __ZN16b2ParticleSystem13ComputeWeightEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $k_010=0,$22=0,$23=0,$24=0,$25=.0,$26=0,$27=.0,$28=.0,$29=0,$30=0,$k1_09=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=.0,$38=0,$39=.0,$40=.0;
 var $41=0,$42=.0,$43=.0,$44=0,$45=0,label=0;

 $1=(($this+132)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=(($this+56)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=$5<<2;
 _memset((((($3)|0))|0), ((((0)|0))|0), (((($6)|0))|0))|0;
 $7=(($this+236)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($8|0)>0;
 if ($9) {
  $10=(($this+244)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=((HEAP32[(($1)>>2)])|0);
  $13=((HEAP32[(($7)>>2)])|0);
  $k_010=0;
  while(1) {

   $22=(($11+((($k_010)*(28))&-1))|0);
   $23=((HEAP32[(($22)>>2)])|0);
   $24=(($11+((($k_010)*(28))&-1)+12)|0);
   $25=(+(HEAPF32[(($24)>>2)]));
   $26=(($12+($23<<2))|0);
   $27=(+(HEAPF32[(($26)>>2)]));
   $28=($25)+($27);
   HEAPF32[(($26)>>2)]=$28;
   $29=((($k_010)+(1))|0);
   $30=($29|0)<($13|0);
   if ($30) {
    $k_010=$29;
   } else {
    break;
   }
  }
 }
 $14=(($this+224)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=($15|0)>0;
 if (!($16)) {
  return;
 }
 $17=(($this+232)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=((HEAP32[(($1)>>2)])|0);
 $20=((HEAP32[(($14)>>2)])|0);
 $k1_09=0;
 while(1) {

  $32=(($18+((($k1_09)*(24))&-1))|0);
  $33=((HEAP32[(($32)>>2)])|0);
  $34=(($18+((($k1_09)*(24))&-1)+4)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  $36=(($18+((($k1_09)*(24))&-1)+12)|0);
  $37=(+(HEAPF32[(($36)>>2)]));
  $38=(($19+($33<<2))|0);
  $39=(+(HEAPF32[(($38)>>2)]));
  $40=($37)+($39);
  HEAPF32[(($38)>>2)]=$40;
  $41=(($19+($35<<2))|0);
  $42=(+(HEAPF32[(($41)>>2)]));
  $43=($37)+($42);
  HEAPF32[(($41)>>2)]=$43;
  $44=((($k1_09)+(1))|0);
  $45=($44|0)<($20|0);
  if ($45) {
   $k1_09=$44;
  } else {
   break;
  }
 }
 return;
}


function __ZN16b2ParticleSystem12ComputeDepthEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$contactGroupsCount_077=0,$k_076=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $20=0,$21=0,$23=0,$24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$31=0,$32=0,$34=0,$35=0,$36=0,$37=0,$contactGroupsCount_1=0,$39=0,$40=0,$41=0,$contactGroupsCount_0_lcssa=0;
 var $42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$groupsToUpdateCount_072=0,$group_071=0,$57=0,$58=0,$59=0,$60=0;
 var $62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$scevgep=0,$scevgep82=0,$73=0,$74=0,$smax=0,$75=0,$76=0,$groupsToUpdateCount_1=0,$77=0;
 var $78=0,$i1_065=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$i3_060=0,$91=0,$92=.0,$93=0,$94=.0,$95=0,$96=0,$97=0;
 var $98=0,$99=0,$groupsToUpdateCount_0_lcssa83=0,$100=0,$101=0,$102=.0,$103=.0,$104=0,$105=0,$t_0=0,$_not=0,$_not84=0,$brmerge=0,$107=0,$108=0,$109=0,$110=0,$updated_0_off057=0,$k4_056=0,$112=0;
 var $113=0,$114=0,$115=0,$116=0,$117=.0,$118=.0,$119=0,$120=0,$121=.0,$122=.0,$123=.0,$124=.0,$125=0,$updated_1_off0=0,$128=.0,$129=0,$updated_2_off0=0,$132=0,$133=0,$134=0;
 var $i8_052=0,$136=0,$137=0,$138=0,$139=0,$140=0,$141=0,$142=0,$143=0,$i10_051=0,$145=0,$146=.0,$147=0,$149=.0,$150=.0,$storemerge=.0,$152=0,$153=0,$154=0,$155=0;
 var $156=0,$157=0,$158=0,$159=0,$160=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+76)|0);
 $4=(($this+224)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=((($5)*(24))&-1);
 $7=((__ZN16b2StackAllocator8AllocateEi($3,$6))|0);
 $8=$7;
 $9=((HEAP32[(($4)>>2)])|0);
 $10=($9|0)>0;
 if ($10) {
  $11=(($this+232)|0);
  $12=(($this+160)|0);
  $k_076=0;$contactGroupsCount_077=0;
  while(1) {


   $14=((HEAP32[(($11)>>2)])|0);
   $15=(($14+((($k_076)*(24))&-1))|0);
   $16=(($15)|0);
   $17=((HEAP32[(($16)>>2)])|0);
   $18=((HEAP32[(($12)>>2)])|0);
   $19=(($18+($17<<2))|0);
   $20=((HEAP32[(($19)>>2)])|0);
   $21=($20|0)==0;
   do {
    if ($21) {
     $contactGroupsCount_1=$contactGroupsCount_077;
    } else {
     $23=(($14+((($k_076)*(24))&-1)+4)|0);
     $24=((HEAP32[(($23)>>2)])|0);
     $25=(($18+($24<<2))|0);
     $26=((HEAP32[(($25)>>2)])|0);
     $27=($20|0)==($26|0);
     if (!($27)) {
      $contactGroupsCount_1=$contactGroupsCount_077;
      break;
     }
     $29=(($20+12)|0);
     $30=((HEAP32[(($29)>>2)])|0);
     $31=$30&16;
     $32=($31|0)==0;
     if ($32) {
      $contactGroupsCount_1=$contactGroupsCount_077;
      break;
     }
     $34=((($contactGroupsCount_077)+(1))|0);
     $35=(($8+((($contactGroupsCount_077)*(24))&-1))|0);
     $36=$35;
     $37=$15;
     HEAP32[(($36)>>2)]=((HEAP32[(($37)>>2)])|0);HEAP32[((($36)+(4))>>2)]=((HEAP32[((($37)+(4))>>2)])|0);HEAP32[((($36)+(8))>>2)]=((HEAP32[((($37)+(8))>>2)])|0);HEAP32[((($36)+(12))>>2)]=((HEAP32[((($37)+(12))>>2)])|0);HEAP32[((($36)+(16))>>2)]=((HEAP32[((($37)+(16))>>2)])|0);HEAP32[((($36)+(20))>>2)]=((HEAP32[((($37)+(20))>>2)])|0);
     $contactGroupsCount_1=$34;
    }
   } while(0);

   $39=((($k_076)+(1))|0);
   $40=((HEAP32[(($4)>>2)])|0);
   $41=($39|0)<($40|0);
   if ($41) {
    $k_076=$39;$contactGroupsCount_077=$contactGroupsCount_1;
   } else {
    $contactGroupsCount_0_lcssa=$contactGroupsCount_1;
    break;
   }
  }
 } else {
  $contactGroupsCount_0_lcssa=0;
 }

 $42=((HEAP32[(($1)>>2)])|0);
 $43=(($42+76)|0);
 $44=(($this+300)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=$45<<2;
 $47=((__ZN16b2StackAllocator8AllocateEi($43,$46))|0);
 $48=$47;
 $49=(($this+304)|0);
 $50=((HEAP32[(($49)>>2)])|0);
 $51=($50|0)==0;
 do {
  if ($51) {
   $groupsToUpdateCount_0_lcssa83=0;
  } else {
   $52=(($this+140)|0);
   $group_071=$50;$groupsToUpdateCount_072=0;
   while(1) {


    $57=(($group_071+12)|0);
    $58=((HEAP32[(($57)>>2)])|0);
    $59=$58&16;
    $60=($59|0)==0;
    do {
     if ($60) {
      $groupsToUpdateCount_1=$groupsToUpdateCount_072;
     } else {
      $62=((($groupsToUpdateCount_072)+(1))|0);
      $63=(($48+($groupsToUpdateCount_072<<2))|0);
      HEAP32[(($63)>>2)]=$group_071;
      $64=((HEAP32[(($57)>>2)])|0);
      $65=$64&-17;
      __ZN16b2ParticleSystem13SetGroupFlagsEP15b2ParticleGroupj($this,$group_071,$65);
      $66=(($group_071+4)|0);
      $67=((HEAP32[(($66)>>2)])|0);
      $68=(($group_071+8)|0);
      $69=((HEAP32[(($68)>>2)])|0);
      $70=($67|0)<($69|0);
      if (!($70)) {
       $groupsToUpdateCount_1=$62;
       break;
      }
      $71=((HEAP32[(($52)>>2)])|0);
      $72=((HEAP32[(($68)>>2)])|0);
      $scevgep=(($71+($67<<2))|0);
      $scevgep82=$scevgep;
      $73=((($67)+(1))|0);
      $74=($72|0)>($73|0);
      $smax=($74?$72:$73);
      $75=((($smax)-($67))|0);
      $76=$75<<2;
      _memset((((($scevgep82)|0))|0), ((((0)|0))|0), (((($76)|0))|0))|0;
      $groupsToUpdateCount_1=$62;
     }
    } while(0);

    $77=((__ZN15b2ParticleGroup7GetNextEv($group_071))|0);
    $78=($77|0)==0;
    if ($78) {
     break;
    } else {
     $group_071=$77;$groupsToUpdateCount_072=$groupsToUpdateCount_1;
    }
   }
   $53=($groupsToUpdateCount_1|0)>0;
   if (!($53)) {
    $groupsToUpdateCount_0_lcssa83=$groupsToUpdateCount_1;
    break;
   }
   $54=(($this+132)|0);
   $55=(($this+148)|0);
   $i1_065=0;
   while(1) {

    $80=(($48+($i1_065<<2))|0);
    $81=((HEAP32[(($80)>>2)])|0);
    $82=(($81+4)|0);
    $83=((HEAP32[(($82)>>2)])|0);
    $84=(($81+8)|0);
    $85=((HEAP32[(($84)>>2)])|0);
    $86=($83|0)<($85|0);
    if ($86) {
     $87=((HEAP32[(($54)>>2)])|0);
     $88=((HEAP32[(($55)>>2)])|0);
     $89=((HEAP32[(($84)>>2)])|0);
     $i3_060=$83;
     while(1) {

      $91=(($87+($i3_060<<2))|0);
      $92=(+(HEAPF32[(($91)>>2)]));
      $93=$92<(0.800000011920929);
      $94=($93?(0.0):(3.4028234663852886e+38));
      $95=(($88+($i3_060<<2))|0);
      HEAPF32[(($95)>>2)]=$94;
      $96=((($i3_060)+(1))|0);
      $97=($96|0)<($89|0);
      if ($97) {
       $i3_060=$96;
      } else {
       break;
      }
     }
    }
    $98=((($i1_065)+(1))|0);
    $99=($98|0)<($groupsToUpdateCount_1|0);
    if ($99) {
     $i1_065=$98;
    } else {
     $groupsToUpdateCount_0_lcssa83=$groupsToUpdateCount_1;
     break;
    }
   }
  }
 } while(0);

 $100=(($this+56)|0);
 $101=((HEAP32[(($100)>>2)])|0);
 $102=(+((($101|0))|0));
 $103=(+(Math_sqrt($102)));
 $104=(~~($103));
 $105=(($this+148)|0);
 $t_0=0;
 while(1) {

  $_not=($t_0|0)>=($104|0);
  $_not84=($contactGroupsCount_0_lcssa|0)<1;
  $brmerge=$_not|$_not84;
  if ($brmerge) {
   break;
  }
  $107=((HEAP32[(($105)>>2)])|0);
  $k4_056=0;$updated_0_off057=0;
  while(1) {


   $112=(($8+((($k4_056)*(24))&-1))|0);
   $113=((HEAP32[(($112)>>2)])|0);
   $114=(($8+((($k4_056)*(24))&-1)+4)|0);
   $115=((HEAP32[(($114)>>2)])|0);
   $116=(($8+((($k4_056)*(24))&-1)+12)|0);
   $117=(+(HEAPF32[(($116)>>2)]));
   $118=((1.0))-($117);
   $119=(($107+($113<<2))|0);
   $120=(($107+($115<<2))|0);
   $121=(+(HEAPF32[(($120)>>2)]));
   $122=($118)+($121);
   $123=(+(HEAPF32[(($119)>>2)]));
   $124=($118)+($123);
   $125=$123>$122;
   if ($125) {
    HEAPF32[(($119)>>2)]=$122;
    $updated_1_off0=1;
   } else {
    $updated_1_off0=$updated_0_off057;
   }

   $128=(+(HEAPF32[(($120)>>2)]));
   $129=$128>$124;
   if ($129) {
    HEAPF32[(($120)>>2)]=$124;
    $updated_2_off0=1;
   } else {
    $updated_2_off0=$updated_1_off0;
   }

   $132=((($k4_056)+(1))|0);
   $133=($132|0)<($contactGroupsCount_0_lcssa|0);
   if ($133) {
    $k4_056=$132;$updated_0_off057=$updated_2_off0;
   } else {
    break;
   }
  }
  $134=((($t_0)+(1))|0);
  if ($updated_2_off0) {
   $t_0=$134;
  } else {
   break;
  }
 }
 $108=($groupsToUpdateCount_0_lcssa83|0)>0;
 if (!($108)) {
  $157=((HEAP32[(($1)>>2)])|0);
  $158=(($157+76)|0);
  __ZN16b2StackAllocator4FreeEPv($158,$47);
  $159=((HEAP32[(($1)>>2)])|0);
  $160=(($159+76)|0);
  __ZN16b2StackAllocator4FreeEPv($160,$7);
  return;
 }
 $109=(($this+148)|0);
 $110=(($this+40)|0);
 $i8_052=0;
 while(1) {

  $136=(($48+($i8_052<<2))|0);
  $137=((HEAP32[(($136)>>2)])|0);
  $138=(($137+4)|0);
  $139=((HEAP32[(($138)>>2)])|0);
  $140=(($137+8)|0);
  $141=((HEAP32[(($140)>>2)])|0);
  $142=($139|0)<($141|0);
  if ($142) {
   $143=((HEAP32[(($109)>>2)])|0);
   $i10_051=$139;
   while(1) {

    $145=(($143+($i10_051<<2))|0);
    $146=(+(HEAPF32[(($145)>>2)]));
    $147=$146<(3.4028234663852886e+38);
    if ($147) {
     $149=(+(HEAPF32[(($110)>>2)]));
     $150=($146)*($149);
     $storemerge=$150;
    } else {
     $storemerge=0.0;
    }

    HEAPF32[(($145)>>2)]=$storemerge;
    $152=((($i10_051)+(1))|0);
    $153=((HEAP32[(($140)>>2)])|0);
    $154=($152|0)<($153|0);
    if ($154) {
     $i10_051=$152;
    } else {
     break;
    }
   }
  }
  $155=((($i8_052)+(1))|0);
  $156=($155|0)<($groupsToUpdateCount_0_lcssa83|0);
  if ($156) {
   $i8_052=$155;
  } else {
   break;
  }
 }
 $157=((HEAP32[(($1)>>2)])|0);
 $158=(($157+76)|0);
 __ZN16b2StackAllocator4FreeEPv($158,$47);
 $159=((HEAP32[(($1)>>2)])|0);
 $160=(($159+76)|0);
 __ZN16b2StackAllocator4FreeEPv($160,$7);
 return;
}


function __ZN15b2ParticleGroup7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZL10computeTagff($x,$y){
 $x=+($x);
 $y=+($y);
 var $1=.0,$2=0,$3=0,$4=.0,$5=.0,$6=0,$7=0,label=0;

 $1=($y)+((2048.0));
 $2=(~~($1));
 $3=$2<<20;
 $4=($x)*((256.0));
 $5=($4)+((524288.0));
 $6=(~~($5));
 $7=((($3)+($6))|0);
 return (($7)|0);
}


function __ZNK16b2ParticleSystem26GetParticleContactListenerEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$11=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&32768;
 $4=($3|0)==0;
 if ($4) {
  $11=0;

  return (($11)|0);
 }
 $6=(($this+376)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+102952)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $11=$9;

 return (($11)|0);
}


function __ZN17b2ParticlePairSetC1EP16b2StackAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var label=0;

 __ZN17b2ParticlePairSetC2EP16b2StackAllocator($this,$allocator);
 return;
}


function __ZN17b2ParticlePairSet10InitializeEPK17b2ParticleContactiPKj($this,$contacts,$numContacts,$particleFlagsBuffer){
 $this=($this)|0;
 $contacts=($contacts)|0;
 $numContacts=($numContacts)|0;
 $particleFlagsBuffer=($particleFlagsBuffer)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$insertedContacts_020=0,$i_019=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0;
 var $22=0,$23=0,$25=0,$26=0,$27=0,$28=0,$insertedContacts_1=0,$30=0,$31=0,$insertedContacts_0_lcssa=0,$32=0,$33=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this)|0);
 __ZN12_GLOBAL__N_117FixedSetAllocator5ClearEv($2);
 $3=(($this)|0);
 $4=((__ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE8AllocateEi($3,$numContacts))|0);
 $5=($4|0)==0;
 if ($5) {
  STACKTOP=sp;return;
 }
 $7=((__ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE9GetBufferEv($3))|0);
 $8=($numContacts|0)>0;
 if ($8) {
  $i_019=0;$insertedContacts_020=0;
  while(1) {


   $9=(($contacts+((($i_019)*(24))&-1))|0);
   $10=((HEAP32[(($9)>>2)])|0);
   $11=($10|0)==-1;
   do {
    if ($11) {
     $insertedContacts_1=$insertedContacts_020;
    } else {
     $13=(($contacts+((($i_019)*(24))&-1)+4)|0);
     $14=((HEAP32[(($13)>>2)])|0);
     $15=($14|0)==-1;
     if ($15) {
      $insertedContacts_1=$insertedContacts_020;
      break;
     }
     $17=(($particleFlagsBuffer+($10<<2))|0);
     $18=((HEAP32[(($17)>>2)])|0);
     $19=(($particleFlagsBuffer+($14<<2))|0);
     $20=((HEAP32[(($19)>>2)])|0);
     $21=$20|$18;
     $22=$21&32768;
     $23=($22|0)==0;
     if ($23) {
      $insertedContacts_1=$insertedContacts_020;
      break;
     }
     $25=(($7+($i_019<<3))|0);
     HEAP32[(($25)>>2)]=$10;
     $26=((HEAP32[(($13)>>2)])|0);
     $27=(($7+($i_019<<3)+4)|0);
     HEAP32[(($27)>>2)]=$26;
     $28=((($insertedContacts_020)+(1))|0);
     $insertedContacts_1=$28;
    }
   } while(0);

   $30=((($i_019)+(1))|0);
   $31=($30|0)<($numContacts|0);
   if ($31) {
    $i_019=$30;$insertedContacts_020=$insertedContacts_1;
   } else {
    $insertedContacts_0_lcssa=$insertedContacts_1;
    break;
   }
  }
 } else {
  $insertedContacts_0_lcssa=0;
 }

 __ZN12_GLOBAL__N_117FixedSetAllocator8SetCountEi($2,$insertedContacts_0_lcssa);
 $32=(($7+($insertedContacts_0_lcssa<<3))|0);
 $33=$1;
 HEAP32[(($1)>>2)]=26;
 __ZNSt3__16__sortIRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEvT0_SA_T_($7,$32,$1);
 STACKTOP=sp;return;
}


function __ZNK16b2ParticleSystem14GetFlagsBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+104)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK16b2ParticleSystem24GetParticleContactFilterEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$11=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&131072;
 $4=($3|0)==0;
 if ($4) {
  $11=0;

  return (($11)|0);
 }
 $6=(($this+376)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+102948)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $11=$9;

 return (($11)|0);
}


function __ZL18computeRelativeTagjii($tag,$x,$y){
 $tag=($tag)|0;
 $x=($x)|0;
 $y=($y)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$y<<20;
 $2=$x<<8;
 $3=((($2)+($tag))|0);
 $4=((($3)+($1))|0);
 return (($4)|0);
}


function __ZN16b2ParticleSystem10AddContactEiiP15b2ContactFilterP17b2ContactListenerP17b2ParticlePairSet($this,$a,$b,$contactFilter,$contactListener,$particlePairSet){
 $this=($this)|0;
 $a=($a)|0;
 $b=($b)|0;
 $contactFilter=($contactFilter)|0;
 $contactListener=($contactListener)|0;
 $particlePairSet=($particlePairSet)|0;
 var $d=0,$1=0,$tmpcast=0,$pair=0,$2=0,$3=0,$4=0,$5=0,$6=.0,$7=0,$8=.0,$9=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $20=0,$22=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=.0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0;
 var $42=0,$43=0,$44=0,$45=0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$51=.0,$52=0,$53=0,$54=0,$ld$0$0=0,$55$0=0,$ld$1$1=0,$55$1=0,$st$2$0=0,$st$3$1=0,$56=0;
 var $57=0,$58=0,$60=0,$61=0,$62=0,$63=0,$65=0,$67=0,$68=0,$69=0,$70=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $d=((sp)|0);
 $1=(((sp)+(8))|0);
 $tmpcast=$1;
 $pair=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=(($this+112)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+($b<<3))|0);
 $5=(($3+($a<<3))|0);
 __ZmiRK6b2Vec2S1_($d,$4,$5);
 $6=(+(__Z5b2DotRK6b2Vec2S1_($d,$d)));
 $7=(($this+48)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=$6<$8;
 if (!($9)) {
  STACKTOP=sp;return;
 }
 $11=($contactFilter|0)==0;
 do {
  if (!($11)) {
   $13=((__ZNK16b2ParticleSystem14GetFlagsBufferEv($this))|0);
   $14=(($13+($a<<2))|0);
   $15=((HEAP32[(($14)>>2)])|0);
   $16=(($13+($b<<2))|0);
   $17=((HEAP32[(($16)>>2)])|0);
   $18=$17|$15;
   $19=$18&131072;
   $20=($19|0)==0;
   if ($20) {
    break;
   }
   $22=$contactFilter;
   $23=((HEAP32[(($22)>>2)])|0);
   $24=(($23+16)|0);
   $25=((HEAP32[(($24)>>2)])|0);
   $26=((FUNCTION_TABLE_iiiii[($25)&15]($contactFilter,$this,$a,$b))|0);
   if ($26) {
    break;
   }
   STACKTOP=sp;return;
  }
 } while(0);
 $28=(($this+232)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=(($this+224)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 $32=(($this+228)|0);
 $33=((__ZN16b2ParticleSystem21RequestGrowableBufferI17b2ParticleContactEEPT_S3_iPi($this,$29,$31,$32))|0);
 HEAP32[(($28)>>2)]=$33;
 $34=(+(__Z9b2InvSqrtf($6)));
 $35=((HEAP32[(($30)>>2)])|0);
 $36=(($33+((($35)*(24))&-1))|0);
 $37=(($36)|0);
 HEAP32[(($37)>>2)]=$a;
 $38=(($33+((($35)*(24))&-1)+4)|0);
 HEAP32[(($38)>>2)]=$b;
 $39=(($this+104)|0);
 $40=((HEAP32[(($39)>>2)])|0);
 $41=(($40+($a<<2))|0);
 $42=((HEAP32[(($41)>>2)])|0);
 $43=(($40+($b<<2))|0);
 $44=((HEAP32[(($43)>>2)])|0);
 $45=$44|$42;
 $46=(($33+((($35)*(24))&-1)+8)|0);
 HEAP32[(($46)>>2)]=$45;
 $47=($6)*($34);
 $48=(($this+44)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=($47)*($49);
 $51=((1.0))-($50);
 $52=(($33+((($35)*(24))&-1)+12)|0);
 HEAPF32[(($52)>>2)]=$51;
 $53=(($33+((($35)*(24))&-1)+16)|0);
 __ZmlfRK6b2Vec2($tmpcast,$34,$d);
 $54=$53;
 $ld$0$0=(($1)|0);
 $55$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $55$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($54)|0);
 HEAP32[(($st$2$0)>>2)]=$55$0;
 $st$3$1=(($54+4)|0);
 HEAP32[(($st$3$1)>>2)]=$55$1;
 $56=((HEAP32[(($30)>>2)])|0);
 $57=((($56)+(1))|0);
 HEAP32[(($30)>>2)]=$57;
 $58=($contactListener|0)==0;
 if ($58) {
  STACKTOP=sp;return;
 }
 $60=(($pair)|0);
 HEAP32[(($60)>>2)]=$a;
 $61=(($pair+4)|0);
 HEAP32[(($61)>>2)]=$b;
 $62=((__ZNK17b2ParticlePairSet4FindERKN12_GLOBAL__N_115LightweightPairIiiEE($particlePairSet,$pair))|0);
 $63=($62|0)>-1;
 if ($63) {
  $65=(($particlePairSet)|0);
  __ZN12_GLOBAL__N_117FixedSetAllocator10InvalidateEi($65,$62);
  STACKTOP=sp;return;
 } else {
  $67=$contactListener;
  $68=((HEAP32[(($67)>>2)])|0);
  $69=(($68+24)|0);
  $70=((HEAP32[(($69)>>2)])|0);
  FUNCTION_TABLE_viii[($70)&31]($contactListener,$this,$36);
  STACKTOP=sp;return;
 }
}


function __ZNSt3__19remove_ifIP17b2ParticleContactPFbRKS1_EEET_S7_S7_T0_($__first,$__last,$__pred){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__pred=($__pred)|0;
 var $_0_i=0,$2=0,$4=0,$5=0,$_0_ph=0,$__i_0_ph=0,$__i_0=0,$6=0,$7=0,$9=0,$11=0,$12=0,$13=0,$_1=0,label=0;

 $_0_i=$__first;
 while(1) {

  $2=($_0_i|0)==($__last|0);
  if ($2) {
   $_1=$_0_i;
   label = 8;
   break;
  }
  $4=((FUNCTION_TABLE_ii[($__pred)&31]($_0_i))|0);
  $5=(($_0_i+24)|0);
  if ($4) {
   $__i_0_ph=$_0_i;$_0_ph=$_0_i;
   break;
  } else {
   $_0_i=$5;
  }
 }
 if ((label|0) == 8) {

  return (($_1)|0);
 }
 L6: while(1) {


  $__i_0=$__i_0_ph;
  while(1) {

   $6=(($__i_0+24)|0);
   $7=($6|0)==($__last|0);
   if ($7) {
    $_1=$_0_ph;
    break L6;
   }
   $9=((FUNCTION_TABLE_ii[($__pred)&31]($6))|0);
   if ($9) {
    $__i_0=$6;
   } else {
    break;
   }
  }
  $11=$_0_ph;
  $12=$6;
  HEAP32[(($11)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($12)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($12)+(16))>>2)])|0);HEAP32[((($11)+(20))>>2)]=((HEAP32[((($12)+(20))>>2)])|0);
  $13=(($_0_ph+24)|0);
  $__i_0_ph=$6;$_0_ph=$13;
 }

 return (($_1)|0);
}


function __ZL25b2ParticleContactIsZombieRK17b2ParticleContact($contact){
 $contact=($contact)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($contact+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&2;
 $4=($3|0)!=0;
 return (($4)|0);
}


function __ZNK12_GLOBAL__N_117FixedSetAllocator8GetCountEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE9GetBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 $2=((__ZN12_GLOBAL__N_117FixedSetAllocator9GetBufferEv($1))|0);
 $3=$2;
 return (($3)|0);
}


function __ZNK12_GLOBAL__N_117FixedSetAllocator14GetValidBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN17b2ParticlePairSetD1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN17b2ParticlePairSetD2Ev($this);
 return;
}


function __ZN16b2ParticleSystem19DetectStuckParticleEi($this,$particle){
 $this=($this)|0;
 $particle=($particle)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$18=0,$19=0,$20=0,$21=0,$23=0;
 var $24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$34=0,$35=0,label=0;

 $1=(($this+172)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)<1;
 if ($3) {
  return;
 }
 $5=(($this+192)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($6+($particle<<2))|0);
 $8=(($this+176)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+($particle<<2))|0);
 $11=(($this+184)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=(($12+($particle<<2))|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=((($14)+(1))|0);
 HEAP32[(($13)>>2)]=$15;
 $16=($15|0)==2;
 do {
  if ($16) {
   $18=((HEAP32[(($7)>>2)])|0);
   $19=((($18)+(1))|0);
   HEAP32[(($7)>>2)]=$19;
   $20=((HEAP32[(($1)>>2)])|0);
   $21=($19|0)>($20|0);
   if (!($21)) {
    break;
   }
   $23=(($this+208)|0);
   $24=((HEAP32[(($23)>>2)])|0);
   $25=(($this+200)|0);
   $26=((HEAP32[(($25)>>2)])|0);
   $27=(($this+204)|0);
   $28=((__ZN16b2ParticleSystem21RequestGrowableBufferIiEEPT_S2_iPi($this,$24,$26,$27))|0);
   HEAP32[(($23)>>2)]=$28;
   $29=((HEAP32[(($25)>>2)])|0);
   $30=((($29)+(1))|0);
   HEAP32[(($25)>>2)]=$30;
   $31=((HEAP32[(($23)>>2)])|0);
   $32=(($31+($29<<2))|0);
   HEAP32[(($32)>>2)]=$particle;
  }
 } while(0);
 $34=(($this+4)|0);
 $35=((HEAP32[(($34)>>2)])|0);
 HEAP32[(($10)>>2)]=$35;
 return;
}


function __ZN16b2ParticleSystem21RequestGrowableBufferIiEEPT_S2_iPi($this,$buffer,$count,$capacity){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $count=($count)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$_=0,$6=0,$_0=0,label=0;

 $1=((HEAP32[(($capacity)>>2)])|0);
 $2=($1|0)>($count|0);
 if ($2) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=($count|0)==0;
 $5=$count<<1;
 $_=($4?256:$5);
 $6=((__ZN16b2ParticleSystem16ReallocateBufferIiEEPT_S2_ii($this,$buffer,$1,$_))|0);
 HEAP32[(($capacity)>>2)]=$_;
 $_0=$6;

 return (($_0)|0);
}


function __ZNK16b2ParticleSystem11ComputeAABBEP6b2AABB($this,$aabb){
 $this=($this)|0;
 $aabb=($aabb)|0;
 var $p=0,$tmpcast=0,$1=0,$tmpcast15=0,$2=0,$tmpcast16=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$i_017=0,$15=0,$16=0;
 var $17=0,$ld$0$0=0,$18$0=0,$ld$1$1=0,$18$1=0,$st$2$0=0,$st$3$1=0,$ld$4$0=0,$19$0=0,$ld$5$1=0,$19$1=0,$st$6$0=0,$st$7$1=0,$ld$8$0=0,$20$0=0,$ld$9$1=0,$20$1=0,$st$10$0=0,$st$11$1=0,$21=0;
 var $22=0,$23=0,$24=.0,$25=.0,$26=.0,$27=.0,$28=.0,$29=.0,$30=.0,$31=.0,$32=.0,$33=.0,$34=.0,$35=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $p=((sp)|0);
 $tmpcast=$p;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast16=$2;
 $3=((__ZNK16b2ParticleSystem16GetParticleCountEv($this))|0);
 $4=(($aabb)|0);
 $5=(($aabb)|0);
 HEAPF32[(($5)>>2)]=3.4028234663852886e+38;
 $6=(($aabb+4)|0);
 HEAPF32[(($6)>>2)]=3.4028234663852886e+38;
 $7=(($aabb+8)|0);
 $8=(($7)|0);
 HEAPF32[(($8)>>2)]=-3.4028234663852886e+38;
 $9=(($aabb+12)|0);
 HEAPF32[(($9)>>2)]=-3.4028234663852886e+38;
 $10=($3|0)>0;
 if ($10) {
  $11=(($this+112)|0);
  $12=$aabb;
  $13=$7;
  $i_017=0;
  while(1) {

   $15=((HEAP32[(($11)>>2)])|0);
   $16=(($15+($i_017<<3))|0);
   $17=$16;
   $ld$0$0=(($17)|0);
   $18$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($17+4)|0);
   $18$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($p)|0);
   HEAP32[(($st$2$0)>>2)]=$18$0;
   $st$3$1=(($p+4)|0);
   HEAP32[(($st$3$1)>>2)]=$18$1;
   __Z5b2MinRK6b2Vec2S1_($tmpcast15,$4,$tmpcast);
   $ld$4$0=(($1)|0);
   $19$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($1+4)|0);
   $19$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($12)|0);
   HEAP32[(($st$6$0)>>2)]=$19$0;
   $st$7$1=(($12+4)|0);
   HEAP32[(($st$7$1)>>2)]=$19$1;
   __Z5b2MaxRK6b2Vec2S1_($tmpcast16,$7,$tmpcast);
   $ld$8$0=(($2)|0);
   $20$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($2+4)|0);
   $20$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($13)|0);
   HEAP32[(($st$10$0)>>2)]=$20$0;
   $st$11$1=(($13+4)|0);
   HEAP32[(($st$11$1)>>2)]=$20$1;
   $21=((($i_017)+(1))|0);
   $22=($21|0)<($3|0);
   if ($22) {
    $i_017=$21;
   } else {
    break;
   }
  }
 }
 $23=(($this+40)|0);
 $24=(+(HEAPF32[(($23)>>2)]));
 $25=(+(HEAPF32[(($5)>>2)]));
 $26=($25)-($24);
 HEAPF32[(($5)>>2)]=$26;
 $27=(+(HEAPF32[(($23)>>2)]));
 $28=(+(HEAPF32[(($6)>>2)]));
 $29=($28)-($27);
 HEAPF32[(($6)>>2)]=$29;
 $30=(+(HEAPF32[(($23)>>2)]));
 $31=(+(HEAPF32[(($8)>>2)]));
 $32=($30)+($31);
 HEAPF32[(($8)>>2)]=$32;
 $33=(+(HEAPF32[(($23)>>2)]));
 $34=(+(HEAPF32[(($9)>>2)]));
 $35=($33)+($34);
 HEAPF32[(($9)>>2)]=$35;
 STACKTOP=sp;return;
}


function __ZN12_GLOBAL__N_117FixedSetAllocator5ClearEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  return;
 }
 $5=(($this+12)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 __ZN16b2StackAllocator4FreeEPv($6,$2);
 HEAP32[(($1)>>2)]=0;
 $7=(($this+8)|0);
 HEAP32[(($7)>>2)]=0;
 return;
}


function __ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE8AllocateEi($this,$numberOfObjects){
 $this=($this)|0;
 $numberOfObjects=($numberOfObjects)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN12_GLOBAL__N_117FixedSetAllocator5ClearEv($1);
 $2=((__ZN12_GLOBAL__N_117FixedSetAllocator8AllocateEii($1,$numberOfObjects))|0);
 return (($2)|0);
}


function __ZN12_GLOBAL__N_117FixedSetAllocator8SetCountEi($this,$count){
 $this=($this)|0;
 $count=($count)|0;
 var $1=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=$count;
 return;
}


function __ZN12_GLOBAL__N_115LightweightPairIiiE7CompareERKS1_S3_($left,$right){
 $left=($left)|0;
 $right=($right)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,label=0;

 $1=(($left)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($right)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)<($4|0);
 if (!($5)) {
  $13=0;

  return (($13)|0);
 }
 $7=(($left+4)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($right+4)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)<($10|0);
 $13=$11;

 return (($13)|0);
}


function __ZN16b2ParticleSystem18UpdateBodyContactsEv($this){
 $this=($this)|0;
 var $fixtureSet=0,$callback=0,$aabb=0,$1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$14=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$27=0,$i_017=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$36=0,$37=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0;
 var $45=0,$46=0,$47=0,$49=0,$50=0,$51=0,$lpad_phi$0=0,$lpad_phi$1=0,$54=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$i1_015=0,$65=0,$66=0,$67=0;
 var $69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$77=0,$78=0,$79=0,$_sink$0=0,$_sink$1=0,$_0=0,$81=0,$83=0,$84$0=0,$84$1=0,$85$0=0,$85$1=0,$13$0=0;
 var $13$1=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$87$0=0,$87$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $fixtureSet=((sp)|0);
 $callback=(((sp)+(16))|0);
 $aabb=(((sp)+(40))|0);
 $1=((__ZNK16b2ParticleSystem25GetFixtureContactListenerEv($this))|0);
 $2=(($this+376)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3+76)|0);
 __ZN12_GLOBAL__N_118FixtureParticleSetC2EP16b2StackAllocator($fixtureSet,$4);
 $5=($1|0)!=0;
 if ($5) {
  $7=(($this+244)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=(($this+236)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=((__ZNK16b2ParticleSystem14GetFlagsBufferEv($this))|0);
  __ZN12_GLOBAL__N_118FixtureParticleSet10InitializeEPK21b2ParticleBodyContactiPKj($fixtureSet,$8,$10,$11);
 }
 $16=(($this+172)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=($17|0)>0;
 do {
  if ($18) {
   $20=((__ZNK16b2ParticleSystem16GetParticleCountEv($this))|0);
   $21=($20|0)>0;
   if (!($21)) {
    break;
   }
   $22=(($this+184)|0);
   $23=((HEAP32[(($22)>>2)])|0);
   $24=(($this+4)|0);
   $25=(($this+176)|0);
   $26=((HEAP32[(($25)>>2)])|0);
   $27=(($this+192)|0);
   $i_017=0;
   while(1) {

    $29=(($23+($i_017<<2))|0);
    HEAP32[(($29)>>2)]=0;
    $30=((HEAP32[(($24)>>2)])|0);
    $31=(($26+($i_017<<2))|0);
    $32=((HEAP32[(($31)>>2)])|0);
    $33=((($32)+(1))|0);
    $34=($30|0)>($33|0);
    if ($34) {
     $36=((HEAP32[(($27)>>2)])|0);
     $37=(($36+($i_017<<2))|0);
     HEAP32[(($37)>>2)]=0;
    }
    $39=((($i_017)+(1))|0);
    $40=($39|0)<($20|0);
    if ($40) {
     $i_017=$39;
    } else {
     break;
    }
   }
  }
 } while(0);
 $41=(($this+236)|0);
 HEAP32[(($41)>>2)]=0;
 $42=(($this+200)|0);
 HEAP32[(($42)>>2)]=0;
 $43=((HEAP32[(($2)>>2)])|0);
 $44=((__ZNK16b2ParticleSystem23GetFixtureContactFilterEv($this))|0);
 $45=((__ZNK16b2ParticleSystem25GetFixtureContactListenerEv($this))|0);
 __ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallbackC2EPS_P7b2WorldP15b2ContactFilterP17b2ContactListenerPN12_GLOBAL__N_118FixtureParticleSetE($callback,$this,$43,$44,$45,$fixtureSet);
 __ZNK16b2ParticleSystem11ComputeAABBEP6b2AABB($this,$aabb);
 $46=((HEAP32[(($2)>>2)])|0);
 $47=(($callback)|0);
 __ZNK7b2World9QueryAABBEP15b2QueryCallbackRK6b2AABB($46,$47,$aabb);
 $49=(($this+52)|0);
 $50=((HEAP8[($49)])|0);
 $51=(($50<<24)>>24)==0;
 if (!($51)) {
  __ZN16b2ParticleSystem26RemoveSpuriousBodyContactsEv($this);
 }
 if (!($5)) {
  $79=(($fixtureSet)|0);
  __ZN12_GLOBAL__N_117FixedSetAllocatorD2Ev($79);
  STACKTOP=sp;return;
 }
 $57=(($fixtureSet)|0);
 $58=((__ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE9GetBufferEv($57))|0);
 $59=(($fixtureSet)|0);
 $60=((__ZNK12_GLOBAL__N_117FixedSetAllocator14GetValidBufferEv($59))|0);
 $61=((__ZNK12_GLOBAL__N_117FixedSetAllocator8GetCountEv($59))|0);
 $62=($61|0)>0;
 if (!($62)) {
  $79=(($fixtureSet)|0);
  __ZN12_GLOBAL__N_117FixedSetAllocatorD2Ev($79);
  STACKTOP=sp;return;
 }
 $63=$1;
 $i1_015=0;
 while(1) {

  $65=(($60+$i1_015)|0);
  $66=((HEAP8[($65)])|0);
  $67=(($66<<24)>>24)==0;
  if (!($67)) {
   $69=((HEAP32[(($63)>>2)])|0);
   $70=(($69+20)|0);
   $71=((HEAP32[(($70)>>2)])|0);
   $72=(($58+($i1_015<<3))|0);
   $73=((HEAP32[(($72)>>2)])|0);
   $74=(($58+($i1_015<<3)+4)|0);
   $75=((HEAP32[(($74)>>2)])|0);
   FUNCTION_TABLE_viiii[($71)&63]($1,$73,$this,$75);
  }
  $77=((($i1_015)+(1))|0);
  $78=($77|0)<($61|0);
  if ($78) {
   $i1_015=$77;
  } else {
   break;
  }
 }
 $79=(($fixtureSet)|0);
 __ZN12_GLOBAL__N_117FixedSetAllocatorD2Ev($79);
 STACKTOP=sp;return;
}


function __ZNK16b2ParticleSystem25GetFixtureContactListenerEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$11=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&16384;
 $4=($3|0)==0;
 if ($4) {
  $11=0;

  return (($11)|0);
 }
 $6=(($this+376)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+102952)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $11=$9;

 return (($11)|0);
}


function __ZN12_GLOBAL__N_118FixtureParticleSet10InitializeEPK21b2ParticleBodyContactiPKj($this,$bodyContacts,$numBodyContacts,$particleFlagsBuffer){
 $this=($this)|0;
 $bodyContacts=($bodyContacts)|0;
 $numBodyContacts=($numBodyContacts)|0;
 $particleFlagsBuffer=($particleFlagsBuffer)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$insertedContacts_017=0,$i_016=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$18=0,$19=0,$20=0,$21=0;
 var $22=0,$23=0,$insertedContacts_1=0,$25=0,$26=0,$insertedContacts_0_lcssa=0,$27=0,$28=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($this)|0);
 __ZN12_GLOBAL__N_117FixedSetAllocator5ClearEv($2);
 $3=(($this)|0);
 $4=((__ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE8AllocateEi($3,$numBodyContacts))|0);
 $5=($4|0)==0;
 if ($5) {
  STACKTOP=sp;return;
 }
 $7=((__ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE9GetBufferEv($3))|0);
 $8=($numBodyContacts|0)>0;
 if ($8) {
  $i_016=0;$insertedContacts_017=0;
  while(1) {


   $9=(($bodyContacts+((($i_016)*(28))&-1))|0);
   $10=((HEAP32[(($9)>>2)])|0);
   $11=($10|0)==-1;
   do {
    if ($11) {
     $insertedContacts_1=$insertedContacts_017;
    } else {
     $13=(($particleFlagsBuffer+($10<<2))|0);
     $14=((HEAP32[(($13)>>2)])|0);
     $15=$14&16384;
     $16=($15|0)==0;
     if ($16) {
      $insertedContacts_1=$insertedContacts_017;
      break;
     }
     $18=(($bodyContacts+((($i_016)*(28))&-1)+8)|0);
     $19=((HEAP32[(($18)>>2)])|0);
     $20=(($7+($i_016<<3))|0);
     HEAP32[(($20)>>2)]=$19;
     $21=((HEAP32[(($9)>>2)])|0);
     $22=(($7+($i_016<<3)+4)|0);
     HEAP32[(($22)>>2)]=$21;
     $23=((($insertedContacts_017)+(1))|0);
     $insertedContacts_1=$23;
    }
   } while(0);

   $25=((($i_016)+(1))|0);
   $26=($25|0)<($numBodyContacts|0);
   if ($26) {
    $i_016=$25;$insertedContacts_017=$insertedContacts_1;
   } else {
    $insertedContacts_0_lcssa=$insertedContacts_1;
    break;
   }
  }
 } else {
  $insertedContacts_0_lcssa=0;
 }

 __ZN12_GLOBAL__N_117FixedSetAllocator8SetCountEi($2,$insertedContacts_0_lcssa);
 $27=(($7+($insertedContacts_0_lcssa<<3))|0);
 $28=$1;
 HEAP32[(($1)>>2)]=38;
 __ZNSt3__16__sortIRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEvT0_SC_T_($7,$27,$1);
 STACKTOP=sp;return;
}


function __ZNK16b2ParticleSystem23GetFixtureContactFilterEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$11=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&65536;
 $4=($3|0)==0;
 if ($4) {
  $11=0;

  return (($11)|0);
 }
 $6=(($this+376)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+102948)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $11=$9;

 return (($11)|0);
}


function __ZN16b2ParticleSystem26RemoveSpuriousBodyContactsEv($this){
 $this=($this)|0;
 var $1=0,$discarded=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $1=((sp)|0);
 $discarded=(((sp)+(8))|0);
 $2=(((sp)+(16))|0);
 $3=(($this+244)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($this+236)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($4+((($6)*(28))&-1))|0);
 $8=$1;
 HEAP32[(($1)>>2)]=36;
 __ZNSt3__16__sortIRPFbRK21b2ParticleBodyContactS3_EPS1_EEvT0_S8_T_($4,$7,$1);
 HEAP32[(($discarded)>>2)]=0;
 $9=((HEAP32[(($3)>>2)])|0);
 $10=((HEAP32[(($5)>>2)])|0);
 $11=(($9+((($10)*(28))&-1))|0);
 __ZN36b2ParticleBodyContactRemovePredicateC1EP16b2ParticleSystemPi($2,$this,$discarded);
 $12=((__ZNSt3__19remove_ifIP21b2ParticleBodyContact36b2ParticleBodyContactRemovePredicateEET_S4_S4_T0_($9,$11,$2))|0);
 $13=((HEAP32[(($discarded)>>2)])|0);
 $14=((HEAP32[(($5)>>2)])|0);
 $15=((($14)-($13))|0);
 HEAP32[(($5)>>2)]=$15;
 STACKTOP=sp;return;
}


function __ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE9GetBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 $2=((__ZN12_GLOBAL__N_117FixedSetAllocator9GetBufferEv($1))|0);
 $3=$2;
 return (($3)|0);
}


function __ZN16b2ParticleSystem18BodyContactCompareERK21b2ParticleBodyContactS2_($lhs,$rhs){
 $lhs=($lhs)|0;
 $rhs=($rhs)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=.0,$9=0,$10=.0,$11=0,$13=0,$_0=0,label=0;

 $1=(($lhs)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($rhs)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 if ($5) {
  $7=(($lhs+12)|0);
  $8=(+(HEAPF32[(($7)>>2)]));
  $9=(($rhs+12)|0);
  $10=(+(HEAPF32[(($9)>>2)]));
  $11=$8>$10;
  $_0=$11;

  return (($_0)|0);
 } else {
  $13=($2|0)<($4|0);
  $_0=$13;

  return (($_0)|0);
 }
  return 0;
}


function __ZNSt3__19remove_ifIP21b2ParticleBodyContact36b2ParticleBodyContactRemovePredicateEET_S4_S4_T0_($__first,$__last,$__pred){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__pred=($__pred)|0;
 var $_0_i=0,$2=0,$4=0,$5=0,$_0_ph=0,$__i_0_ph=0,$__i_0=0,$6=0,$7=0,$9=0,$11=0,$12=0,$13=0,$_1=0,label=0;
 var tempParam=0;
 var sp=0;sp=STACKTOP;
 tempParam = $__pred; $__pred=STACKTOP;STACKTOP = (STACKTOP + 16)|0;HEAP32[(($__pred)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__pred)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);HEAP32[((($__pred)+(8))>>2)]=((HEAP32[(((tempParam)+(8))>>2)])|0);HEAP32[((($__pred)+(12))>>2)]=((HEAP32[(((tempParam)+(12))>>2)])|0);
 $_0_i=$__first;
 while(1) {

  $2=($_0_i|0)==($__last|0);
  if ($2) {
   $_1=$_0_i;
   label = 8;
   break;
  }
  $4=((__ZN36b2ParticleBodyContactRemovePredicateclERK21b2ParticleBodyContact($__pred,$_0_i))|0);
  $5=(($_0_i+28)|0);
  if ($4) {
   $__i_0_ph=$_0_i;$_0_ph=$_0_i;
   break;
  } else {
   $_0_i=$5;
  }
 }
 if ((label|0) == 8) {

  STACKTOP=sp;return (($_1)|0);
 }
 L6: while(1) {


  $__i_0=$__i_0_ph;
  while(1) {

   $6=(($__i_0+28)|0);
   $7=($6|0)==($__last|0);
   if ($7) {
    $_1=$_0_ph;
    break L6;
   }
   $9=((__ZN36b2ParticleBodyContactRemovePredicateclERK21b2ParticleBodyContact($__pred,$6))|0);
   if ($9) {
    $__i_0=$6;
   } else {
    break;
   }
  }
  $11=$_0_ph;
  $12=$6;
  HEAP32[(($11)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($12)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($12)+(16))>>2)])|0);HEAP32[((($11)+(20))>>2)]=((HEAP32[((($12)+(20))>>2)])|0);HEAP32[((($11)+(24))>>2)]=((HEAP32[((($12)+(24))>>2)])|0);
  $13=(($_0_ph+28)|0);
  $__i_0_ph=$6;$_0_ph=$13;
 }

 STACKTOP=sp;return (($_1)|0);
}


function __ZN36b2ParticleBodyContactRemovePredicateC1EP16b2ParticleSystemPi($this,$system,$discarded){
 $this=($this)|0;
 $system=($system)|0;
 $discarded=($discarded)|0;
 var label=0;

 __ZN36b2ParticleBodyContactRemovePredicateC2EP16b2ParticleSystemPi($this,$system,$discarded);
 return;
}


function __ZN16b2ParticleSystem14SolveCollisionERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $aabb10=0,$aabb10_sub=0,$tmpcast9=0,$v=0,$tmpcast=0,$p1=0,$tmpcast8=0,$p2=0,$1=0,$2=0,$tmpcast11=0,$3=0,$4=0,$tmpcast12=0,$5=0,$callback=0,$6=0,$7=0,$8=0,$9=0;
 var $10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$i_013=0,$20=0,$21=0,$22=0,$ld$0$0=0,$23$0=0,$ld$1$1=0,$23$1=0,$st$2$0=0,$st$3$1=0,$24=0;
 var $25=0,$26=0,$ld$4$0=0,$27$0=0,$ld$5$1=0,$27$1=0,$st$6$0=0,$st$7$1=0,$28=.0,$ld$8$0=0,$29$0=0,$ld$9$1=0,$29$1=0,$st$10$0=0,$st$11$1=0,$ld$12$0=0,$30$0=0,$ld$13$1=0,$30$1=0,$st$14$0=0;
 var $st$15$1=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $aabb10=((sp)|0);
 $aabb10_sub=(($aabb10)|0);
 $tmpcast9=$aabb10;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$v;
 $p1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast8=$p1;
 $p2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast11=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast12=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $callback=STACKTOP;STACKTOP = (STACKTOP + 36)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $6=$aabb10;
 $7=$aabb10;
 HEAPF32[(($7)>>2)]=3.4028234663852886e+38;
 $8=(($tmpcast9+4)|0);
 HEAPF32[(($8)>>2)]=3.4028234663852886e+38;
 $9=(($aabb10+8)|0);
 $10=$9;
 $11=$9;
 HEAPF32[(($11)>>2)]=-3.4028234663852886e+38;
 $12=(($tmpcast9+12)|0);
 HEAPF32[(($12)>>2)]=-3.4028234663852886e+38;
 $13=(($this+56)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=($14|0)>0;
 if (!($15)) {
  __ZZN16b2ParticleSystem14SolveCollisionERK10b2TimeStepEN22SolveCollisionCallbackC2EPS_S2_($callback,$this,$step);
  $34=(($this+376)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  $36=(($callback)|0);
  __ZNK7b2World9QueryAABBEP15b2QueryCallbackRK6b2AABB($35,$36,$tmpcast9);
  STACKTOP=sp;return;
 }
 $16=(($this+120)|0);
 $17=(($this+112)|0);
 $18=(($step)|0);
 $i_013=0;
 while(1) {

  $20=((HEAP32[(($16)>>2)])|0);
  $21=(($20+($i_013<<3))|0);
  $22=$21;
  $ld$0$0=(($22)|0);
  $23$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($22+4)|0);
  $23$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($v)|0);
  HEAP32[(($st$2$0)>>2)]=$23$0;
  $st$3$1=(($v+4)|0);
  HEAP32[(($st$3$1)>>2)]=$23$1;
  $24=((HEAP32[(($17)>>2)])|0);
  $25=(($24+($i_013<<3))|0);
  $26=$25;
  $ld$4$0=(($26)|0);
  $27$0=((HEAP32[(($ld$4$0)>>2)])|0);
  $ld$5$1=(($26+4)|0);
  $27$1=((HEAP32[(($ld$5$1)>>2)])|0);
  $st$6$0=(($p1)|0);
  HEAP32[(($st$6$0)>>2)]=$27$0;
  $st$7$1=(($p1+4)|0);
  HEAP32[(($st$7$1)>>2)]=$27$1;
  $28=(+(HEAPF32[(($18)>>2)]));
  __ZmlfRK6b2Vec2($1,$28,$tmpcast);
  __ZplRK6b2Vec2S1_($p2,$tmpcast8,$1);
  __Z5b2MinRK6b2Vec2S1_($3,$tmpcast8,$p2);
  __Z5b2MinRK6b2Vec2S1_($tmpcast11,$6,$3);
  $ld$8$0=(($2)|0);
  $29$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($2+4)|0);
  $29$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($aabb10_sub)|0);
  HEAP32[(($st$10$0)>>2)]=$29$0;
  $st$11$1=(($aabb10_sub+4)|0);
  HEAP32[(($st$11$1)>>2)]=$29$1;
  __Z5b2MaxRK6b2Vec2S1_($5,$tmpcast8,$p2);
  __Z5b2MaxRK6b2Vec2S1_($tmpcast12,$10,$5);
  $ld$12$0=(($4)|0);
  $30$0=((HEAP32[(($ld$12$0)>>2)])|0);
  $ld$13$1=(($4+4)|0);
  $30$1=((HEAP32[(($ld$13$1)>>2)])|0);
  $st$14$0=(($9)|0);
  HEAP32[(($st$14$0)>>2)]=$30$0;
  $st$15$1=(($9+4)|0);
  HEAP32[(($st$15$1)>>2)]=$30$1;
  $31=((($i_013)+(1))|0);
  $32=((HEAP32[(($13)>>2)])|0);
  $33=($31|0)<($32|0);
  if ($33) {
   $i_013=$31;
  } else {
   break;
  }
 }
 __ZZN16b2ParticleSystem14SolveCollisionERK10b2TimeStepEN22SolveCollisionCallbackC2EPS_S2_($callback,$this,$step);
 $34=(($this+376)|0);
 $35=((HEAP32[(($34)>>2)])|0);
 $36=(($callback)|0);
 __ZNK7b2World9QueryAABBEP15b2QueryCallbackRK6b2AABB($35,$36,$tmpcast9);
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem12SolveBarrierERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $1=0,$2=0,$3=0,$tmpcast77=0,$4=0,$5=0,$6=0,$7=0,$pa=0,$tmpcast=0,$pb=0,$tmpcast65=0,$lower=0,$upper=0,$8=0,$9=0,$va=0,$tmpcast66=0,$vb=0,$tmpcast67=0;
 var $pba=0,$vba=0,$pc=0,$tmpcast68=0,$pca=0,$vca=0,$qba=0,$tmpcast69=0,$qca=0,$tmpcast71=0,$10=0,$11=0,$t1=0,$t2=0,$12=0,$13=0,$14=0,$15=0,$f=0,$16=0;
 var $17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$i_084=0,$28=0,$29=0,$30=0,$31=0,$32=0,$34=0,$35=0,$37=0,$38=0;
 var $40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$48=0,$49=0,$50=.0,$51=0,$52=0,$53=0,$ld$0$0=0,$54$0=0,$ld$1$1=0,$54$1=0,$st$2$0=0,$st$3$1=0,$56=0;
 var $57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=.0,$66=.0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$76=0;
 var $77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$k_082=0,$86=0,$87=0,$88=0,$89=0,$90=0,$92=0,$93=0,$94=0,$95=0,$96=0,$97=0;
 var $98=0,$ld$4$0=0,$99$0=0,$ld$5$1=0,$99$1=0,$st$6$0=0,$st$7$1=0,$100=0,$101=0,$102=0,$ld$8$0=0,$103$0=0,$ld$9$1=0,$103$1=0,$st$10$0=0,$st$11$1=0,$104=.0,$105=.0,$106=.0,$107=.0;
 var $108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=0,$122=0,$123=.0,$124=.0,$125=.0,$126=.0,$127=.0;
 var $128=0,$129=0,$130=0,$131=0,$132=0,$ld$12$0=0,$133$0=0,$ld$13$1=0,$133$1=0,$st$14$0=0,$st$15$1=0,$134=0,$135=0,$136=0,$ld$16$0=0,$137$0=0,$ld$17$1=0,$137$1=0,$st$18$0=0,$st$19$1=0;
 var $138=0,$139=.0,$140=.0,$141=.0,$142=.0,$proxy_081=0,$144=0,$145=0,$146=0,$147=0,$148=0,$ld$20$0=0,$149$0=0,$ld$21$1=0,$149$1=0,$st$22$0=0,$st$23$1=0,$150=.0,$151=0,$152=0;
 var $or_cond94=0,$154=.0,$155=0,$156=0,$or_cond95=0,$158=0,$159=0,$160=0,$161=0,$162=0,$163=0,$165=0,$166=0,$167=0,$169=0,$170=0,$171=.0,$172=.0,$173=.0,$174=.0;
 var $175=.0,$176=0,$178=0,$180=.0,$181=.0,$182=0,$183=0,$or_cond78=0,$qba88=0,$qca89=0,$185=.0,$186=.0,$187=.0,$188=0,$189=0,$or_cond=0,$191=.0,$192=.0,$193=.0,$194=.0;
 var $195=0,$197=.0,$198=.0,$199=.0,$200=.0,$201=.0,$202=.0,$203=.0,$204=0,$207=.0,$qba90=0,$qca91=0,$208=.0,$209=.0,$210=.0,$211=0,$212=0,$or_cond79=0,$214=0,$215=0;
 var $or_cond3=0,$217=.0,$218=0,$219=0,$or_cond80=0,$qba92=0,$qca93=0,$221=.0,$222=.0,$223=.0,$224=0,$225=0,$or_cond5=0,$s_0=.0,$227=.0,$228=.0,$229=.0,$230=.0,$232=0,$233=0;
 var $234=0,$235=0,$236=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $tmpcast77=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pa=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$pa;
 $pb=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast65=$pb;
 $lower=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $upper=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $9=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $va=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast66=$va;
 $vb=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast67=$vb;
 $pba=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $vba=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $pc=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast68=$pc;
 $pca=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $vca=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $qba=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast69=$qba;
 $qca=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast71=$qca;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $t1=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $t2=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $16=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $17=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $18=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $19=(($this+56)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=($20|0)>0;
 if ($21) {
  $22=(($this+104)|0);
  $23=(($this+160)|0);
  $24=(($this+120)|0);
  $25=(($this+112)|0);
  $26=(($this+120)|0);
  $i_084=0;
  while(1) {

   $28=((HEAP32[(($22)>>2)])|0);
   $29=(($28+($i_084<<2))|0);
   $30=((HEAP32[(($29)>>2)])|0);
   $31=$30&1024;
   $32=($31|0)==0;
   do {
    if (!($32)) {
     $34=$30&4;
     $35=($34|0)==0;
     if (!($35)) {
      $37=((HEAP32[(($26)>>2)])|0);
      $38=(($37+($i_084<<3))|0);
      __ZN6b2Vec27SetZeroEv($38);
      break;
     }
     $40=((HEAP32[(($23)>>2)])|0);
     $41=(($40+($i_084<<2))|0);
     $42=((HEAP32[(($41)>>2)])|0);
     $43=(($42+12)|0);
     $44=((HEAP32[(($43)>>2)])|0);
     $45=$44&2;
     $46=($45|0)==0;
     if ($46) {
      break;
     }
     $48=((HEAP32[(($24)>>2)])|0);
     $49=(($48+($i_084<<3))|0);
     __ZNK15b2ParticleGroup17GetLinearVelocityEv($4,$42);
     $50=(+(__ZNK15b2ParticleGroup18GetAngularVelocityEv($42)));
     $51=((HEAP32[(($25)>>2)])|0);
     $52=(($51+($i_084<<3))|0);
     __ZNK15b2ParticleGroup9GetCenterEv($7,$42);
     __ZmiRK6b2Vec2S1_($6,$52,$7);
     __Z7b2CrossfRK6b2Vec2($5,$50,$6);
     __ZplRK6b2Vec2S1_($tmpcast77,$4,$5);
     $53=$49;
     $ld$0$0=(($3)|0);
     $54$0=((HEAP32[(($ld$0$0)>>2)])|0);
     $ld$1$1=(($3+4)|0);
     $54$1=((HEAP32[(($ld$1$1)>>2)])|0);
     $st$2$0=(($53)|0);
     HEAP32[(($st$2$0)>>2)]=$54$0;
     $st$3$1=(($53+4)|0);
     HEAP32[(($st$3$1)>>2)]=$54$1;
    }
   } while(0);
   $56=((($i_084)+(1))|0);
   $57=((HEAP32[(($19)>>2)])|0);
   $58=($56|0)<($57|0);
   if ($58) {
    $i_084=$56;
   } else {
    break;
   }
  }
 }
 $59=(($this+220)|0);
 $60=((HEAP32[(($59)>>2)])|0);
 $61=(($this+212)|0);
 $62=((HEAP32[(($61)>>2)])|0);
 $63=(($60+($62<<3))|0);
 $64=(($step)|0);
 $65=(+(HEAPF32[(($64)>>2)]));
 $66=($65)*((2.5));
 $67=(($this+248)|0);
 $68=((HEAP32[(($67)>>2)])|0);
 $69=($68|0)>0;
 if (!($69)) {
  STACKTOP=sp;return;
 }
 $70=(($this+256)|0);
 $71=(($this+112)|0);
 $72=(($this+40)|0);
 $73=(($lower)|0);
 $74=(($lower+4)|0);
 $75=(($upper)|0);
 $76=(($upper+4)|0);
 $77=(($this+44)|0);
 $78=(($2)|0);
 $79=(($1)|0);
 $80=(($this+120)|0);
 $81=$pc;
 $82=(($tmpcast68+4)|0);
 $83=(($this+160)|0);
 $84=(($step+4)|0);
 $k_082=0;
 while(1) {

  $86=((HEAP32[(($70)>>2)])|0);
  $87=(($86+((($k_082)*(20))&-1)+8)|0);
  $88=((HEAP32[(($87)>>2)])|0);
  $89=$88&1024;
  $90=($89|0)==0;
  do {
   if (!($90)) {
    $92=(($86+((($k_082)*(20))&-1))|0);
    $93=((HEAP32[(($92)>>2)])|0);
    $94=(($86+((($k_082)*(20))&-1)+4)|0);
    $95=((HEAP32[(($94)>>2)])|0);
    $96=((HEAP32[(($71)>>2)])|0);
    $97=(($96+($93<<3))|0);
    $98=$97;
    $ld$4$0=(($98)|0);
    $99$0=((HEAP32[(($ld$4$0)>>2)])|0);
    $ld$5$1=(($98+4)|0);
    $99$1=((HEAP32[(($ld$5$1)>>2)])|0);
    $st$6$0=(($pa)|0);
    HEAP32[(($st$6$0)>>2)]=$99$0;
    $st$7$1=(($pa+4)|0);
    HEAP32[(($st$7$1)>>2)]=$99$1;
    $100=((HEAP32[(($71)>>2)])|0);
    $101=(($100+($95<<3))|0);
    $102=$101;
    $ld$8$0=(($102)|0);
    $103$0=((HEAP32[(($ld$8$0)>>2)])|0);
    $ld$9$1=(($102+4)|0);
    $103$1=((HEAP32[(($ld$9$1)>>2)])|0);
    $st$10$0=(($pb)|0);
    HEAP32[(($st$10$0)>>2)]=$103$0;
    $st$11$1=(($pb+4)|0);
    HEAP32[(($st$11$1)>>2)]=$103$1;
    __Z5b2MinRK6b2Vec2S1_($lower,$tmpcast,$tmpcast65);
    __Z5b2MaxRK6b2Vec2S1_($upper,$tmpcast,$tmpcast65);
    $104=(+(HEAPF32[(($72)>>2)]));
    $105=(+(HEAPF32[(($73)>>2)]));
    $106=($105)-($104);
    HEAPF32[(($73)>>2)]=$106;
    $107=(+(HEAPF32[(($72)>>2)]));
    $108=(+(HEAPF32[(($74)>>2)]));
    $109=($108)-($107);
    HEAPF32[(($74)>>2)]=$109;
    $110=(+(HEAPF32[(($72)>>2)]));
    $111=(+(HEAPF32[(($75)>>2)]));
    $112=($110)+($111);
    HEAPF32[(($75)>>2)]=$112;
    $113=(+(HEAPF32[(($72)>>2)]));
    $114=(+(HEAPF32[(($76)>>2)]));
    $115=($113)+($114);
    HEAPF32[(($76)>>2)]=$115;
    $116=(+(HEAPF32[(($77)>>2)]));
    $117=(+(HEAPF32[(($73)>>2)]));
    $118=($116)*($117);
    $119=(+(HEAPF32[(($74)>>2)]));
    $120=($116)*($119);
    $121=((__ZL10computeTagff($118,$120))|0);
    HEAP32[(($8)>>2)]=$121;
    $122=((__ZNSt3__113__lower_boundIRNS_6__lessIN16b2ParticleSystem5ProxyEjEEPS3_jEET0_S7_S7_RKT1_T_($60,$63,$8,$2))|0);
    $123=(+(HEAPF32[(($77)>>2)]));
    $124=(+(HEAPF32[(($75)>>2)]));
    $125=($123)*($124);
    $126=(+(HEAPF32[(($76)>>2)]));
    $127=($123)*($126);
    $128=((__ZL10computeTagff($125,$127))|0);
    HEAP32[(($9)>>2)]=$128;
    $129=((__ZNSt3__113__upper_boundIRNS_6__lessIjN16b2ParticleSystem5ProxyEEEPS3_jEET0_S7_S7_RKT1_T_($122,$63,$9,$1))|0);
    $130=((HEAP32[(($80)>>2)])|0);
    $131=(($130+($93<<3))|0);
    $132=$131;
    $ld$12$0=(($132)|0);
    $133$0=((HEAP32[(($ld$12$0)>>2)])|0);
    $ld$13$1=(($132+4)|0);
    $133$1=((HEAP32[(($ld$13$1)>>2)])|0);
    $st$14$0=(($va)|0);
    HEAP32[(($st$14$0)>>2)]=$133$0;
    $st$15$1=(($va+4)|0);
    HEAP32[(($st$15$1)>>2)]=$133$1;
    $134=((HEAP32[(($80)>>2)])|0);
    $135=(($134+($95<<3))|0);
    $136=$135;
    $ld$16$0=(($136)|0);
    $137$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($136+4)|0);
    $137$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($vb)|0);
    HEAP32[(($st$18$0)>>2)]=$137$0;
    $st$19$1=(($vb+4)|0);
    HEAP32[(($st$19$1)>>2)]=$137$1;
    __ZmiRK6b2Vec2S1_($pba,$tmpcast65,$tmpcast);
    __ZmiRK6b2Vec2S1_($vba,$tmpcast67,$tmpcast66);
    $138=($122|0)==($129|0);
    if ($138) {
     break;
    }
    $139=(+(HEAPF32[(($73)>>2)]));
    $140=(+(HEAPF32[(($75)>>2)]));
    $141=(+(HEAPF32[(($74)>>2)]));
    $142=(+(HEAPF32[(($76)>>2)]));
    $proxy_081=$122;
    while(1) {

     $144=(($proxy_081)|0);
     $145=((HEAP32[(($144)>>2)])|0);
     $146=((HEAP32[(($71)>>2)])|0);
     $147=(($146+($145<<3))|0);
     $148=$147;
     $ld$20$0=(($148)|0);
     $149$0=((HEAP32[(($ld$20$0)>>2)])|0);
     $ld$21$1=(($148+4)|0);
     $149$1=((HEAP32[(($ld$21$1)>>2)])|0);
     $st$22$0=(($pc)|0);
     HEAP32[(($st$22$0)>>2)]=$149$0;
     $st$23$1=(($pc+4)|0);
     HEAP32[(($st$23$1)>>2)]=$149$1;
     $150=(+(HEAPF32[(($81)>>2)]));
     $151=$139>$150;
     $152=$150>$140;
     $or_cond94=$151|$152;
     L23: do {
      if (!($or_cond94)) {
       $154=(+(HEAPF32[(($82)>>2)]));
       $155=$141>$154;
       $156=$154>$142;
       $or_cond95=$155|$156;
       if ($or_cond95) {
        break;
       }
       $158=((HEAP32[(($83)>>2)])|0);
       $159=(($158+($93<<2))|0);
       $160=((HEAP32[(($159)>>2)])|0);
       $161=(($158+($145<<2))|0);
       $162=((HEAP32[(($161)>>2)])|0);
       $163=($160|0)==($162|0);
       if ($163) {
        break;
       }
       $165=(($158+($95<<2))|0);
       $166=((HEAP32[(($165)>>2)])|0);
       $167=($166|0)==($162|0);
       if ($167) {
        break;
       }
       $169=((HEAP32[(($80)>>2)])|0);
       $170=(($169+($145<<3))|0);
       __ZmiRK6b2Vec2S1_($pca,$tmpcast68,$tmpcast);
       __ZmiRK6b2Vec2S1_($vca,$170,$tmpcast66);
       $171=(+(__Z7b2CrossRK6b2Vec2S1_($vba,$vca)));
       $172=(+(__Z7b2CrossRK6b2Vec2S1_($pba,$vca)));
       $173=(+(__Z7b2CrossRK6b2Vec2S1_($pca,$vba)));
       $174=($172)-($173);
       $175=(+(__Z7b2CrossRK6b2Vec2S1_($pba,$pca)));
       $176=$171==(0.0);
       do {
        if ($176) {
         $178=$174==(0.0);
         if ($178) {
          break L23;
         }
         $180=((-.0))-($175);
         $181=($180)/($174);
         $182=$181>=(0.0);
         $183=$181<$66;
         $or_cond78=$182&$183;
         if (!($or_cond78)) {
          break L23;
         }
         __ZmlfRK6b2Vec2($10,$181,$vba);
         $qba88=$qba;
         __ZplRK6b2Vec2S1_($qba88,$pba,$10);
         __ZmlfRK6b2Vec2($11,$181,$vca);
         $qca89=$qca;
         __ZplRK6b2Vec2S1_($qca89,$pca,$11);
         $185=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast69,$tmpcast71)));
         $186=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast69,$tmpcast69)));
         $187=($185)/($186);
         $188=$187>=(0.0);
         $189=$187<=(1.0);
         $or_cond=$188&$189;
         if ($or_cond) {
          $s_0=$187;
         } else {
          break L23;
         }
        } else {
         $191=($174)*($174);
         $192=($175)*((4.0));
         $193=($171)*($192);
         $194=($191)-($193);
         $195=$194<(0.0);
         if ($195) {
          break L23;
         }
         $197=(+(Math_sqrt($194)));
         $198=((-.0))-($174);
         $199=($198)-($197);
         $200=($171)*((2.0));
         $201=($199)/($200);
         HEAPF32[(($t1)>>2)]=$201;
         $202=($197)-($174);
         $203=($202)/($200);
         HEAPF32[(($t2)>>2)]=$203;
         $204=$201>$203;
         if ($204) {
          __Z6b2SwapIfEvRT_S1_($t1,$t2);
         }
         $207=(+(HEAPF32[(($t1)>>2)]));
         __ZmlfRK6b2Vec2($12,$207,$vba);
         $qba90=$qba;
         __ZplRK6b2Vec2S1_($qba90,$pba,$12);
         __ZmlfRK6b2Vec2($13,$207,$vca);
         $qca91=$qca;
         __ZplRK6b2Vec2S1_($qca91,$pca,$13);
         $208=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast69,$tmpcast71)));
         $209=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast69,$tmpcast69)));
         $210=($208)/($209);
         $211=$207>=(0.0);
         $212=$207<$66;
         $or_cond79=$211&$212;
         if ($or_cond79) {
          $214=$210>=(0.0);
          $215=$210<=(1.0);
          $or_cond3=$214&$215;
          if ($or_cond3) {
           $s_0=$210;
           break;
          }
         }
         $217=(+(HEAPF32[(($t2)>>2)]));
         $218=$217>=(0.0);
         $219=$217<$66;
         $or_cond80=$218&$219;
         if (!($or_cond80)) {
          break L23;
         }
         __ZmlfRK6b2Vec2($14,$217,$vba);
         $qba92=$qba;
         __ZplRK6b2Vec2S1_($qba92,$pba,$14);
         __ZmlfRK6b2Vec2($15,$217,$vca);
         $qca93=$qca;
         __ZplRK6b2Vec2S1_($qca93,$pca,$15);
         $221=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast69,$tmpcast71)));
         $222=(+(__Z5b2DotRK6b2Vec2S1_($tmpcast69,$tmpcast69)));
         $223=($221)/($222);
         $224=$223>=(0.0);
         $225=$223<=(1.0);
         $or_cond5=$224&$225;
         if ($or_cond5) {
          $s_0=$223;
         } else {
          break L23;
         }
        }
       } while(0);

       __ZmlfRK6b2Vec2($17,$s_0,$vba);
       __ZplRK6b2Vec2S1_($16,$tmpcast66,$17);
       __ZmiRK6b2Vec2S1_($f,$16,$170);
       $227=(+(HEAPF32[(($84)>>2)]));
       $228=((-.0))-($227);
       $229=(+(__ZNK16b2ParticleSystem15GetParticleMassEv($this)));
       $230=($229)*($228);
       __ZmlfRK6b2Vec2($18,$230,$f);
       __ZN16b2ParticleSystem18ParticleApplyForceEiRK6b2Vec2($this,$145,$18);
       __ZN6b2Vec2pLERKS_($170,$f);
      }
     } while(0);
     $232=(($proxy_081+8)|0);
     $233=($232|0)==($129|0);
     if ($233) {
      break;
     } else {
      $proxy_081=$232;
     }
    }
   }
  } while(0);
  $234=((($k_082)+(1))|0);
  $235=((HEAP32[(($67)>>2)])|0);
  $236=($234|0)<($235|0);
  if ($236) {
   $k_082=$234;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZNK15b2ParticleGroup17GetLinearVelocityEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 __ZNK15b2ParticleGroup16UpdateStatisticsEv($this);
 $1=(($this+48)|0);
 $2=$1;
 $3=$agg_result;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function __ZNK15b2ParticleGroup18GetAngularVelocityEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,label=0;

 __ZNK15b2ParticleGroup16UpdateStatisticsEv($this);
 $1=(($this+56)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 return (+($2));
}


function __ZNK15b2ParticleGroup9GetCenterEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 __ZNK15b2ParticleGroup16UpdateStatisticsEv($this);
 $1=(($this+40)|0);
 $2=$1;
 $3=$agg_result;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function __ZN16b2ParticleSystem18ParticleApplyForceEiRK6b2Vec2($this,$index,$force){
 $this=($this)|0;
 $index=($index)|0;
 $force=($force)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,label=0;

 $1=((__ZL18IsSignificantForceRK6b2Vec2($force))|0);
 if (!($1)) {
  return;
 }
 $3=(($this+104)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+($index<<2))|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZNK16b2ParticleSystem17ForceCanBeAppliedEj(0,$6))|0);
 if (!($7)) {
  return;
 }
 __ZN16b2ParticleSystem18PrepareForceBufferEv($this);
 $9=(($this+128)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+($index<<3))|0);
 __ZN6b2Vec2pLERKS_($11,$force);
 return;
}


function __ZN16b2ParticleSystem5SolveERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $subStep=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$11=0,$12=0,$13=0,$14=0,$17=0,$18=0,$19=0,$22=0,$23=0,$24=0,$27=0,$28=0;
 var $29=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$45=0,$46=0,$47=0,$48=.0,$49=.0,$50=.0;
 var $51=0,$52=.0,$53=.0,$54=.0,$55=0,$56=0,$57=0,$60=0,$61=0,$62=0,$65=0,$66=0,$69=0,$70=0,$71=0,$74=0,$75=0,$76=0,$79=0,$80=0;
 var $81=0,$84=0,$85=0,$86=0,$89=0,$90=0,$91=0,$94=0,$95=0,$96=0,$99=0,$100=0,$101=0,$104=0,$105=0,$106=0,$109=0,$110=0,$111=0,$114=0;
 var $115=0,$116=0,$119=0,$120=0,$121=0,$124=0,$125=0,$126=0,$129=0,$130=0,$131=0,$133=0,$134=0,$135=.0,$i_09=0,$137=0,$138=0,$139=0,$140=0,$141=0;
 var $142=0,$143=0,$144=0,$145=0,$146=0,$147=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $subStep=((sp)|0);
 $1=(((sp)+(32))|0);
 $2=(($this+56)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($3|0)==0;
 if ($4) {
  STACKTOP=sp;return;
 }
 $6=(($this+272)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)==0;
 if (!($8)) {
  __ZN16b2ParticleSystem14SolveLifetimesERK10b2TimeStep($this,$step);
 }
 $11=(($this+8)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=$12&2;
 $14=($13|0)==0;
 if (!($14)) {
  __ZN16b2ParticleSystem11SolveZombieEv($this);
 }
 $17=(($this+12)|0);
 $18=((HEAP8[($17)])|0);
 $19=(($18<<24)>>24)==0;
 if (!($19)) {
  __ZN16b2ParticleSystem22UpdateAllParticleFlagsEv($this);
 }
 $22=(($this+20)|0);
 $23=((HEAP8[($22)])|0);
 $24=(($23<<24)>>24)==0;
 if (!($24)) {
  __ZN16b2ParticleSystem19UpdateAllGroupFlagsEv($this);
 }
 $27=(($this)|0);
 $28=((HEAP8[($27)])|0);
 $29=(($28<<24)>>24)==0;
 if (!($29)) {
  STACKTOP=sp;return;
 }
 $31=(($this+24)|0);
 HEAP32[(($31)>>2)]=0;
 $32=(($step+20)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=($33|0)>0;
 if (!($34)) {
  STACKTOP=sp;return;
 }
 $35=(($this+4)|0);
 $36=$subStep;
 $37=$step;
 $38=(($subStep)|0);
 $39=(($subStep+4)|0);
 $40=(($this+16)|0);
 $41=(($this+21)|0);
 $42=(($this+112)|0);
 $43=(($this+120)|0);
 while(1) {
  $45=((HEAP32[(($35)>>2)])|0);
  $46=((($45)+(1))|0);
  HEAP32[(($35)>>2)]=$46;
  HEAP32[(($36)>>2)]=((HEAP32[(($37)>>2)])|0);HEAP32[((($36)+(4))>>2)]=((HEAP32[((($37)+(4))>>2)])|0);HEAP32[((($36)+(8))>>2)]=((HEAP32[((($37)+(8))>>2)])|0);HEAP32[((($36)+(12))>>2)]=((HEAP32[((($37)+(12))>>2)])|0);HEAP32[((($36)+(16))>>2)]=((HEAP32[((($37)+(16))>>2)])|0);HEAP32[((($36)+(20))>>2)]=((HEAP32[((($37)+(20))>>2)])|0);HEAP32[((($36)+(24))>>2)]=((HEAP32[((($37)+(24))>>2)])|0);
  $47=((HEAP32[(($32)>>2)])|0);
  $48=(+((($47|0))|0));
  $49=(+(HEAPF32[(($38)>>2)]));
  $50=($49)/($48);
  HEAPF32[(($38)>>2)]=$50;
  $51=((HEAP32[(($32)>>2)])|0);
  $52=(+((($51|0))|0));
  $53=(+(HEAPF32[(($39)>>2)]));
  $54=($53)*($52);
  HEAPF32[(($39)>>2)]=$54;
  __ZN16b2ParticleSystem18UpdateBodyContactsEv($this);
  __ZN16b2ParticleSystem14UpdateContactsEb($this,0);
  __ZN16b2ParticleSystem13ComputeWeightEv($this);
  $55=((HEAP32[(($40)>>2)])|0);
  $56=$55&16;
  $57=($56|0)==0;
  if (!($57)) {
   __ZN16b2ParticleSystem12ComputeDepthEv($this);
  }
  $60=((HEAP32[(($11)>>2)])|0);
  $61=$60&4096;
  $62=($61|0)==0;
  if (!($62)) {
   __ZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEv($this);
  }
  $65=((HEAP8[($41)])|0);
  $66=(($65<<24)>>24)==0;
  if (!($66)) {
   __ZN16b2ParticleSystem10SolveForceERK10b2TimeStep($this,$subStep);
  }
  $69=((HEAP32[(($11)>>2)])|0);
  $70=$69&32;
  $71=($70|0)==0;
  if (!($71)) {
   __ZN16b2ParticleSystem12SolveViscousEv($this);
  }
  $74=((HEAP32[(($11)>>2)])|0);
  $75=$74&8192;
  $76=($75|0)==0;
  if (!($76)) {
   __ZN16b2ParticleSystem14SolveRepulsiveERK10b2TimeStep($this,$subStep);
  }
  $79=((HEAP32[(($11)>>2)])|0);
  $80=$79&64;
  $81=($80|0)==0;
  if (!($81)) {
   __ZN16b2ParticleSystem11SolvePowderERK10b2TimeStep($this,$subStep);
  }
  $84=((HEAP32[(($11)>>2)])|0);
  $85=$84&128;
  $86=($85|0)==0;
  if (!($86)) {
   __ZN16b2ParticleSystem12SolveTensileERK10b2TimeStep($this,$subStep);
  }
  $89=((HEAP32[(($40)>>2)])|0);
  $90=$89&1;
  $91=($90|0)==0;
  if (!($91)) {
   __ZN16b2ParticleSystem10SolveSolidERK10b2TimeStep($this,$subStep);
  }
  $94=((HEAP32[(($11)>>2)])|0);
  $95=$94&256;
  $96=($95|0)==0;
  if (!($96)) {
   __ZN16b2ParticleSystem16SolveColorMixingEv($this);
  }
  __ZN16b2ParticleSystem12SolveGravityERK10b2TimeStep($this,$subStep);
  $99=((HEAP32[(($11)>>2)])|0);
  $100=$99&2048;
  $101=($100|0)==0;
  if (!($101)) {
   __ZN16b2ParticleSystem19SolveStaticPressureERK10b2TimeStep($this,$subStep);
  }
  __ZN16b2ParticleSystem13SolvePressureERK10b2TimeStep($this,$subStep);
  __ZN16b2ParticleSystem12SolveDampingERK10b2TimeStep($this,$subStep);
  $104=((HEAP32[(($11)>>2)])|0);
  $105=$104&2048;
  $106=($105|0)==0;
  if (!($106)) {
   __ZN16b2ParticleSystem17SolveExtraDampingEv($this);
  }
  $109=((HEAP32[(($11)>>2)])|0);
  $110=$109&16;
  $111=($110|0)==0;
  if (!($111)) {
   __ZN16b2ParticleSystem12SolveElasticERK10b2TimeStep($this,$subStep);
  }
  $114=((HEAP32[(($11)>>2)])|0);
  $115=$114&8;
  $116=($115|0)==0;
  if (!($116)) {
   __ZN16b2ParticleSystem11SolveSpringERK10b2TimeStep($this,$subStep);
  }
  __ZN16b2ParticleSystem13LimitVelocityERK10b2TimeStep($this,$subStep);
  $119=((HEAP32[(($11)>>2)])|0);
  $120=$119&1024;
  $121=($120|0)==0;
  if (!($121)) {
   __ZN16b2ParticleSystem12SolveBarrierERK10b2TimeStep($this,$subStep);
  }
  __ZN16b2ParticleSystem14SolveCollisionERK10b2TimeStep($this,$subStep);
  $124=((HEAP32[(($40)>>2)])|0);
  $125=$124&2;
  $126=($125|0)==0;
  if (!($126)) {
   __ZN16b2ParticleSystem10SolveRigidERK10b2TimeStep($this,$subStep);
  }
  $129=((HEAP32[(($11)>>2)])|0);
  $130=$129&4;
  $131=($130|0)==0;
  if (!($131)) {
   __ZN16b2ParticleSystem9SolveWallEv($this);
  }
  $133=((HEAP32[(($2)>>2)])|0);
  $134=($133|0)>0;
  if ($134) {
   $135=(+(HEAPF32[(($38)>>2)]));
   $i_09=0;
   while(1) {

    $137=((HEAP32[(($42)>>2)])|0);
    $138=(($137+($i_09<<3))|0);
    $139=((HEAP32[(($43)>>2)])|0);
    $140=(($139+($i_09<<3))|0);
    __ZmlfRK6b2Vec2($1,$135,$140);
    __ZN6b2Vec2pLERKS_($138,$1);
    $141=((($i_09)+(1))|0);
    $142=((HEAP32[(($2)>>2)])|0);
    $143=($141|0)<($142|0);
    if ($143) {
     $i_09=$141;
    } else {
     break;
    }
   }
  }
  $144=((HEAP32[(($31)>>2)])|0);
  $145=((($144)+(1))|0);
  HEAP32[(($31)>>2)]=$145;
  $146=((HEAP32[(($32)>>2)])|0);
  $147=($145|0)<($146|0);
  if (!($147)) {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem14SolveLifetimesERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $1=0,$2=0,$3=.0,$4$0=0,$4$1=0,$5=0,$st$0$0=0,$st$1$1=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$16=0,$17=0,$i_015_in=0;
 var $i_015=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$or_cond=0,$25=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($step)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4$0=((__ZNK16b2ParticleSystem24LifetimeToExpirationTimeEf($this,$3))|0);
 $4$1=tempRet0;
 $5=(($this+288)|0);
 $st$0$0=(($5)|0);
 HEAP32[(($st$0$0)>>2)]=$4$0;
 $st$1$1=(($5+4)|0);
 HEAP32[(($st$1$1)>>2)]=$4$1;
 $6=((__ZNK16b2ParticleSystem23GetQuantizedTimeElapsedEv($this))|0);
 $7=(($this+272)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($this+280)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=((__ZNK16b2ParticleSystem16GetParticleCountEv($this))|0);
 $12=(($this+296)|0);
 $13=((HEAP8[($12)])|0);
 $14=(($13<<24)>>24)==0;
 if (!($14)) {
  __ZN12_GLOBAL__N_124ExpirationTimeComparatorC2EPKi($1,$8);
  $16=(($10+($11<<2))|0);
  __ZNSt3__16__sortIRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEvT0_S5_T_($10,$16,$1);
  HEAP8[($12)]=0;
 }
 $17=($11|0)>0;
 if ($17) {
  $i_015_in=$11;
 } else {
  STACKTOP=sp;return;
 }
 while(1) {

  $i_015=((($i_015_in)-(1))|0);
  $18=(($10+($i_015<<2))|0);
  $19=((HEAP32[(($18)>>2)])|0);
  $20=(($8+($19<<2))|0);
  $21=((HEAP32[(($20)>>2)])|0);
  $22=($6|0)<($21|0);
  $23=($21|0)<1;
  $or_cond=$22|$23;
  if ($or_cond) {
   label = 6;
   break;
  }
  __ZN16b2ParticleSystem15DestroyParticleEi($this,$19);
  $25=($i_015|0)>0;
  if ($25) {
   $i_015_in=$i_015;
  } else {
   label = 6;
   break;
  }
 }
 if ((label|0) == 6) {
  STACKTOP=sp;return;
 }
}


function __ZN16b2ParticleSystem22UpdateAllParticleFlagsEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i_03=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,label=0;

 $1=(($this+8)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+56)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($3|0)>0;
 if (!($4)) {
  $15=(($this+12)|0);
  HEAP8[($15)]=0;
  return;
 }
 $5=(($this+104)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $i_03=0;
 while(1) {

  $8=(($6+($i_03<<2))|0);
  $9=((HEAP32[(($8)>>2)])|0);
  $10=((HEAP32[(($1)>>2)])|0);
  $11=$10|$9;
  HEAP32[(($1)>>2)]=$11;
  $12=((($i_03)+(1))|0);
  $13=((HEAP32[(($2)>>2)])|0);
  $14=($12|0)<($13|0);
  if ($14) {
   $i_03=$12;
  } else {
   break;
  }
 }
 $15=(($this+12)|0);
 HEAP8[($15)]=0;
 return;
}


function __ZN16b2ParticleSystem19UpdateAllGroupFlagsEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$group_03=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,label=0;

 $1=(($this+16)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+304)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($3|0)==0;
 if ($4) {
  $11=(($this+20)|0);
  HEAP8[($11)]=0;
  return;
 } else {
  $group_03=$3;
 }
 while(1) {

  $5=(($group_03+12)|0);
  $6=((HEAP32[(($5)>>2)])|0);
  $7=((HEAP32[(($1)>>2)])|0);
  $8=$7|$6;
  HEAP32[(($1)>>2)]=$8;
  $9=((__ZNK15b2ParticleGroup7GetNextEv($group_03))|0);
  $10=($9|0)==0;
  if ($10) {
   break;
  } else {
   $group_03=$9;
  }
 }
 $11=(($this+20)|0);
 HEAP8[($11)]=0;
 return;
}


function __ZN16b2ParticleSystem10SolveForceERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $1=0,$2=0,$3=.0,$4=.0,$5=.0,$6=0,$7=0,$8=0,$9=0,$10=0,$i_05=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($step)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4=(+(__ZNK16b2ParticleSystem18GetParticleInvMassEv($this)));
 $5=($3)*($4);
 $6=(($this+56)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)>0;
 if (!($8)) {
  $19=(($this+21)|0);
  HEAP8[($19)]=0;
  STACKTOP=sp;return;
 }
 $9=(($this+120)|0);
 $10=(($this+128)|0);
 $i_05=0;
 while(1) {

  $12=((HEAP32[(($9)>>2)])|0);
  $13=(($12+($i_05<<3))|0);
  $14=((HEAP32[(($10)>>2)])|0);
  $15=(($14+($i_05<<3))|0);
  __ZmlfRK6b2Vec2($1,$5,$15);
  __ZN6b2Vec2pLERKS_($13,$1);
  $16=((($i_05)+(1))|0);
  $17=((HEAP32[(($6)>>2)])|0);
  $18=($16|0)<($17|0);
  if ($18) {
   $i_05=$16;
  } else {
   break;
  }
 }
 $19=(($this+21)|0);
 HEAP8[($19)]=0;
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem12SolveViscousEv($this){
 $this=($this)|0;
 var $p=0,$tmpcast=0,$v=0,$1=0,$f=0,$2=0,$3=0,$v6=0,$f7=0,$4=0,$5=.0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0;
 var $15=0,$16=0,$17=0,$k_019=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=.0,$32=0,$33=.0,$34=0,$35=0;
 var $36=0,$ld$0$0=0,$37$0=0,$ld$1$1=0,$37$1=0,$st$2$0=0,$st$3$1=0,$38=0,$39=0,$40=.0,$41=.0,$42=0,$43=0,$44=.0,$46=0,$47=0,$48=0,$k1_018=0,$50=0,$51=0;
 var $52=0,$53=0,$54=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=.0,$62=0,$63=0,$64=0,$65=.0,$66=0,$67=0,$68=0,$69=0,$71=0,$72=0,$73=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $p=((sp)|0);
 $tmpcast=$p;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $v6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($this+328)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($this+236)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)>0;
 if ($8) {
  $9=(($this+244)|0);
  $10=(($this+104)|0);
  $11=(($this+112)|0);
  $12=(($this+120)|0);
  $k_019=0;
  while(1) {

   $19=((HEAP32[(($9)>>2)])|0);
   $20=(($19+((($k_019)*(28))&-1))|0);
   $21=((HEAP32[(($20)>>2)])|0);
   $22=((HEAP32[(($10)>>2)])|0);
   $23=(($22+($21<<2))|0);
   $24=((HEAP32[(($23)>>2)])|0);
   $25=$24&32;
   $26=($25|0)==0;
   if (!($26)) {
    $28=(($19+((($k_019)*(28))&-1)+4)|0);
    $29=((HEAP32[(($28)>>2)])|0);
    $30=(($19+((($k_019)*(28))&-1)+12)|0);
    $31=(+(HEAPF32[(($30)>>2)]));
    $32=(($19+((($k_019)*(28))&-1)+24)|0);
    $33=(+(HEAPF32[(($32)>>2)]));
    $34=((HEAP32[(($11)>>2)])|0);
    $35=(($34+($21<<3))|0);
    $36=$35;
    $ld$0$0=(($36)|0);
    $37$0=((HEAP32[(($ld$0$0)>>2)])|0);
    $ld$1$1=(($36+4)|0);
    $37$1=((HEAP32[(($ld$1$1)>>2)])|0);
    $st$2$0=(($p)|0);
    HEAP32[(($st$2$0)>>2)]=$37$0;
    $st$3$1=(($p+4)|0);
    HEAP32[(($st$3$1)>>2)]=$37$1;
    __ZNK6b2Body31GetLinearVelocityFromWorldPointERK6b2Vec2($1,$29,$tmpcast);
    $38=((HEAP32[(($12)>>2)])|0);
    $39=(($38+($21<<3))|0);
    __ZmiRK6b2Vec2S1_($v,$1,$39);
    $40=($5)*($33);
    $41=($31)*($40);
    __ZmlfRK6b2Vec2($f,$41,$v);
    $42=((HEAP32[(($12)>>2)])|0);
    $43=(($42+($21<<3))|0);
    $44=(+(__ZNK16b2ParticleSystem18GetParticleInvMassEv($this)));
    __ZmlfRK6b2Vec2($2,$44,$f);
    __ZN6b2Vec2pLERKS_($43,$2);
    __ZNK6b2Vec2ngEv($3,$f);
    __ZN6b2Body18ApplyLinearImpulseERK6b2Vec2S2_b($29,$3,$tmpcast,1);
   }
   $46=((($k_019)+(1))|0);
   $47=((HEAP32[(($6)>>2)])|0);
   $48=($46|0)<($47|0);
   if ($48) {
    $k_019=$46;
   } else {
    break;
   }
  }
 }
 $13=(($this+224)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=($14|0)>0;
 if (!($15)) {
  STACKTOP=sp;return;
 }
 $16=(($this+232)|0);
 $17=(($this+120)|0);
 $k1_018=0;
 while(1) {

  $50=((HEAP32[(($16)>>2)])|0);
  $51=(($50+((($k1_018)*(24))&-1)+8)|0);
  $52=((HEAP32[(($51)>>2)])|0);
  $53=$52&32;
  $54=($53|0)==0;
  if (!($54)) {
   $56=(($50+((($k1_018)*(24))&-1))|0);
   $57=((HEAP32[(($56)>>2)])|0);
   $58=(($50+((($k1_018)*(24))&-1)+4)|0);
   $59=((HEAP32[(($58)>>2)])|0);
   $60=(($50+((($k1_018)*(24))&-1)+12)|0);
   $61=(+(HEAPF32[(($60)>>2)]));
   $62=((HEAP32[(($17)>>2)])|0);
   $63=(($62+($59<<3))|0);
   $64=(($62+($57<<3))|0);
   __ZmiRK6b2Vec2S1_($v6,$63,$64);
   $65=($5)*($61);
   __ZmlfRK6b2Vec2($f7,$65,$v6);
   $66=((HEAP32[(($17)>>2)])|0);
   $67=(($66+($57<<3))|0);
   __ZN6b2Vec2pLERKS_($67,$f7);
   $68=((HEAP32[(($17)>>2)])|0);
   $69=(($68+($59<<3))|0);
   __ZN6b2Vec2mIERKS_($69,$f7);
  }
  $71=((($k1_018)+(1))|0);
  $72=((HEAP32[(($13)>>2)])|0);
  $73=($71|0)<($72|0);
  if ($73) {
   $k1_018=$71;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem14SolveRepulsiveERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $n=0,$tmpcast=0,$f=0,$1=0,$2=.0,$3=.0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$k_010=0,$12=0,$13=0,$14=0,$15=0,$16=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$29=0,$30=.0,$31=0,$32=0,$ld$0$0=0,$33$0=0,$ld$1$1=0,$33$1=0,$st$2$0=0,$st$3$1=0,$34=.0;
 var $35=0,$36=0,$37=0,$38=0,$40=0,$41=0,$42=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $n=((sp)|0);
 $tmpcast=$n;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($this+340)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(+(__ZNK16b2ParticleSystem19GetCriticalVelocityERK10b2TimeStep($this,$step)));
 $4=($2)*($3);
 $5=(($this+224)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  STACKTOP=sp;return;
 }
 $8=(($this+232)|0);
 $9=(($this+160)|0);
 $10=(($this+120)|0);
 $k_010=0;
 while(1) {

  $12=((HEAP32[(($8)>>2)])|0);
  $13=(($12+((($k_010)*(24))&-1)+8)|0);
  $14=((HEAP32[(($13)>>2)])|0);
  $15=$14&8192;
  $16=($15|0)==0;
  do {
   if (!($16)) {
    $18=(($12+((($k_010)*(24))&-1))|0);
    $19=((HEAP32[(($18)>>2)])|0);
    $20=(($12+((($k_010)*(24))&-1)+4)|0);
    $21=((HEAP32[(($20)>>2)])|0);
    $22=((HEAP32[(($9)>>2)])|0);
    $23=(($22+($19<<2))|0);
    $24=((HEAP32[(($23)>>2)])|0);
    $25=(($22+($21<<2))|0);
    $26=((HEAP32[(($25)>>2)])|0);
    $27=($24|0)==($26|0);
    if ($27) {
     break;
    }
    $29=(($12+((($k_010)*(24))&-1)+12)|0);
    $30=(+(HEAPF32[(($29)>>2)]));
    $31=(($12+((($k_010)*(24))&-1)+16)|0);
    $32=$31;
    $ld$0$0=(($32)|0);
    $33$0=((HEAP32[(($ld$0$0)>>2)])|0);
    $ld$1$1=(($32+4)|0);
    $33$1=((HEAP32[(($ld$1$1)>>2)])|0);
    $st$2$0=(($n)|0);
    HEAP32[(($st$2$0)>>2)]=$33$0;
    $st$3$1=(($n+4)|0);
    HEAP32[(($st$3$1)>>2)]=$33$1;
    $34=($4)*($30);
    __ZmlfRK6b2Vec2($f,$34,$tmpcast);
    $35=((HEAP32[(($10)>>2)])|0);
    $36=(($35+($19<<3))|0);
    __ZN6b2Vec2mIERKS_($36,$f);
    $37=((HEAP32[(($10)>>2)])|0);
    $38=(($37+($21<<3))|0);
    __ZN6b2Vec2pLERKS_($38,$f);
   }
  } while(0);
  $40=((($k_010)+(1))|0);
  $41=((HEAP32[(($5)>>2)])|0);
  $42=($40|0)<($41|0);
  if ($42) {
   $k_010=$40;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem11SolvePowderERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $n=0,$tmpcast=0,$f=0,$1=0,$2=.0,$3=.0,$4=.0,$5=0,$6=0,$7=0,$8=0,$9=0,$k_010=0,$11=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=.0;
 var $19=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$ld$0$0=0,$27$0=0,$ld$1$1=0,$27$1=0,$st$2$0=0,$st$3$1=0,$28=.0,$29=.0,$30=0,$31=0,$32=0,$33=0,$35=0;
 var $36=0,$37=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $n=((sp)|0);
 $tmpcast=$n;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($this+344)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(+(__ZNK16b2ParticleSystem19GetCriticalVelocityERK10b2TimeStep($this,$step)));
 $4=($2)*($3);
 $5=(($this+224)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  STACKTOP=sp;return;
 }
 $8=(($this+232)|0);
 $9=(($this+120)|0);
 $k_010=0;
 while(1) {

  $11=((HEAP32[(($8)>>2)])|0);
  $12=(($11+((($k_010)*(24))&-1)+8)|0);
  $13=((HEAP32[(($12)>>2)])|0);
  $14=$13&64;
  $15=($14|0)==0;
  do {
   if (!($15)) {
    $17=(($11+((($k_010)*(24))&-1)+12)|0);
    $18=(+(HEAPF32[(($17)>>2)]));
    $19=$18>(0.25);
    if (!($19)) {
     break;
    }
    $21=(($11+((($k_010)*(24))&-1))|0);
    $22=((HEAP32[(($21)>>2)])|0);
    $23=(($11+((($k_010)*(24))&-1)+4)|0);
    $24=((HEAP32[(($23)>>2)])|0);
    $25=(($11+((($k_010)*(24))&-1)+16)|0);
    $26=$25;
    $ld$0$0=(($26)|0);
    $27$0=((HEAP32[(($ld$0$0)>>2)])|0);
    $ld$1$1=(($26+4)|0);
    $27$1=((HEAP32[(($ld$1$1)>>2)])|0);
    $st$2$0=(($n)|0);
    HEAP32[(($st$2$0)>>2)]=$27$0;
    $st$3$1=(($n+4)|0);
    HEAP32[(($st$3$1)>>2)]=$27$1;
    $28=($18)+((-0.25));
    $29=($4)*($28);
    __ZmlfRK6b2Vec2($f,$29,$tmpcast);
    $30=((HEAP32[(($9)>>2)])|0);
    $31=(($30+($22<<3))|0);
    __ZN6b2Vec2mIERKS_($31,$f);
    $32=((HEAP32[(($9)>>2)])|0);
    $33=(($32+($24<<3))|0);
    __ZN6b2Vec2pLERKS_($33,$f);
   }
  } while(0);
  $35=((($k_010)+(1))|0);
  $36=((HEAP32[(($5)>>2)])|0);
  $37=($35|0)<($36|0);
  if ($37) {
   $k_010=$35;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem12SolveTensileERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $n=0,$tmpcast23=0,$weightedNormal=0,$n6=0,$tmpcast=0,$s=0,$f=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$i_028=0,$11=0,$12=0,$13=0;
 var $$etemp$0=0,$ld$1$0=0,$14$0=0,$ld$2$1=0,$14$1=0,$st$3$0=0,$st$4$1=0,$15=0,$16=0,$17=0,$k_025=0,$19=0,$20=0,$21=0,$22=0,$23=0,$25=0,$26=0,$27=0,$28=0;
 var $29=0,$30=.0,$31=0,$32=0,$ld$5$0=0,$33$0=0,$ld$6$1=0,$33$1=0,$st$7$0=0,$st$8$1=0,$34=.0,$35=.0,$36=0,$37=0,$38=0,$39=0,$41=0,$42=0,$43=0,$44=.0;
 var $45=0,$46=.0,$47=.0,$48=0,$49=.0,$50=.0,$51=.0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$k1_024=0,$59=0,$60=0,$61=0,$62=0,$63=0,$65=0;
 var $66=0,$67=0,$68=0,$69=0,$70=.0,$71=0,$72=0,$ld$9$0=0,$73$0=0,$ld$10$1=0,$73$1=0,$st$11$0=0,$st$12$1=0,$74=0,$75=0,$76=.0,$77=0,$78=.0,$79=.0,$80=0;
 var $81=0,$82=0,$83=.0,$84=.0,$85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=0,$91=0,$92=0,$93=0,$95=0,$96=0,$97=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $n=((sp)|0);
 $tmpcast23=$n;
 $weightedNormal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $n6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$n6;
 $s=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($this+56)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if ($3) {
  $4=(($this+144)|0);
  $i_028=0;
  while(1) {

   $11=((HEAP32[(($4)>>2)])|0);
   $12=(($11+($i_028<<3))|0);
   $13=$12;
   $$etemp$0=8264;
   $ld$1$0=(($$etemp$0)|0);
   $14$0=((HEAP32[(($ld$1$0)>>2)])|0);
   $ld$2$1=(($$etemp$0+4)|0);
   $14$1=((HEAP32[(($ld$2$1)>>2)])|0);
   $st$3$0=(($13)|0);
   HEAP32[(($st$3$0)>>2)]=$14$0;
   $st$4$1=(($13+4)|0);
   HEAP32[(($st$4$1)>>2)]=$14$1;
   $15=((($i_028)+(1))|0);
   $16=((HEAP32[(($1)>>2)])|0);
   $17=($15|0)<($16|0);
   if ($17) {
    $i_028=$15;
   } else {
    break;
   }
  }
 }
 $5=(($this+224)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if ($7) {
  $8=(($this+232)|0);
  $9=(($this+144)|0);
  $k_025=0;
  while(1) {

   $19=((HEAP32[(($8)>>2)])|0);
   $20=(($19+((($k_025)*(24))&-1)+8)|0);
   $21=((HEAP32[(($20)>>2)])|0);
   $22=$21&128;
   $23=($22|0)==0;
   if (!($23)) {
    $25=(($19+((($k_025)*(24))&-1))|0);
    $26=((HEAP32[(($25)>>2)])|0);
    $27=(($19+((($k_025)*(24))&-1)+4)|0);
    $28=((HEAP32[(($27)>>2)])|0);
    $29=(($19+((($k_025)*(24))&-1)+12)|0);
    $30=(+(HEAPF32[(($29)>>2)]));
    $31=(($19+((($k_025)*(24))&-1)+16)|0);
    $32=$31;
    $ld$5$0=(($32)|0);
    $33$0=((HEAP32[(($ld$5$0)>>2)])|0);
    $ld$6$1=(($32+4)|0);
    $33$1=((HEAP32[(($ld$6$1)>>2)])|0);
    $st$7$0=(($n)|0);
    HEAP32[(($st$7$0)>>2)]=$33$0;
    $st$8$1=(($n+4)|0);
    HEAP32[(($st$8$1)>>2)]=$33$1;
    $34=((1.0))-($30);
    $35=($30)*($34);
    __ZmlfRK6b2Vec2($weightedNormal,$35,$tmpcast23);
    $36=((HEAP32[(($9)>>2)])|0);
    $37=(($36+($26<<3))|0);
    __ZN6b2Vec2mIERKS_($37,$weightedNormal);
    $38=((HEAP32[(($9)>>2)])|0);
    $39=(($38+($28<<3))|0);
    __ZN6b2Vec2pLERKS_($39,$weightedNormal);
   }
   $41=((($k_025)+(1))|0);
   $42=((HEAP32[(($5)>>2)])|0);
   $43=($41|0)<($42|0);
   if ($43) {
    $k_025=$41;
   } else {
    break;
   }
  }
 }
 $44=(+(__ZNK16b2ParticleSystem19GetCriticalVelocityERK10b2TimeStep($this,$step)));
 $45=(($this+332)|0);
 $46=(+(HEAPF32[(($45)>>2)]));
 $47=($44)*($46);
 $48=(($this+336)|0);
 $49=(+(HEAPF32[(($48)>>2)]));
 $50=($44)*($49);
 $51=($44)*((0.5));
 $52=((HEAP32[(($5)>>2)])|0);
 $53=($52|0)>0;
 if (!($53)) {
  STACKTOP=sp;return;
 }
 $54=(($this+232)|0);
 $55=(($this+132)|0);
 $56=(($this+144)|0);
 $57=(($this+120)|0);
 $k1_024=0;
 while(1) {

  $59=((HEAP32[(($54)>>2)])|0);
  $60=(($59+((($k1_024)*(24))&-1)+8)|0);
  $61=((HEAP32[(($60)>>2)])|0);
  $62=$61&128;
  $63=($62|0)==0;
  if (!($63)) {
   $65=(($59+((($k1_024)*(24))&-1))|0);
   $66=((HEAP32[(($65)>>2)])|0);
   $67=(($59+((($k1_024)*(24))&-1)+4)|0);
   $68=((HEAP32[(($67)>>2)])|0);
   $69=(($59+((($k1_024)*(24))&-1)+12)|0);
   $70=(+(HEAPF32[(($69)>>2)]));
   $71=(($59+((($k1_024)*(24))&-1)+16)|0);
   $72=$71;
   $ld$9$0=(($72)|0);
   $73$0=((HEAP32[(($ld$9$0)>>2)])|0);
   $ld$10$1=(($72+4)|0);
   $73$1=((HEAP32[(($ld$10$1)>>2)])|0);
   $st$11$0=(($n6)|0);
   HEAP32[(($st$11$0)>>2)]=$73$0;
   $st$12$1=(($n6+4)|0);
   HEAP32[(($st$12$1)>>2)]=$73$1;
   $74=((HEAP32[(($55)>>2)])|0);
   $75=(($74+($66<<2))|0);
   $76=(+(HEAPF32[(($75)>>2)]));
   $77=(($74+($68<<2))|0);
   $78=(+(HEAPF32[(($77)>>2)]));
   $79=($76)+($78);
   $80=((HEAP32[(($56)>>2)])|0);
   $81=(($80+($68<<3))|0);
   $82=(($80+($66<<3))|0);
   __ZmiRK6b2Vec2S1_($s,$81,$82);
   $83=($79)+((-2.0));
   $84=($47)*($83);
   $85=(+(__Z5b2DotRK6b2Vec2S1_($s,$tmpcast)));
   $86=($50)*($85);
   $87=($84)+($86);
   $88=(+(__Z5b2MinIfET_S0_S0_($87,$51)));
   $89=($70)*($88);
   __ZmlfRK6b2Vec2($f,$89,$tmpcast);
   $90=((HEAP32[(($57)>>2)])|0);
   $91=(($90+($66<<3))|0);
   __ZN6b2Vec2mIERKS_($91,$f);
   $92=((HEAP32[(($57)>>2)])|0);
   $93=(($92+($68<<3))|0);
   __ZN6b2Vec2pLERKS_($93,$f);
  }
  $95=((($k1_024)+(1))|0);
  $96=((HEAP32[(($5)>>2)])|0);
  $97=($95|0)<($96|0);
  if ($97) {
   $k1_024=$95;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem10SolveSolidERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $n=0,$tmpcast=0,$f=0,$1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$k_011=0,$14=0,$15=0,$16=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$26=0,$27=.0,$28=0,$29=0,$ld$0$0=0,$30$0=0,$ld$1$1=0,$30$1=0,$st$2$0=0,$st$3$1=0,$31=0,$32=0,$33=.0;
 var $34=0,$35=.0,$36=.0,$37=.0,$38=.0,$39=0,$40=0,$41=0,$42=0,$44=0,$45=0,$46=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $n=((sp)|0);
 $tmpcast=$n;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($step+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+348)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($this+224)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)>0;
 if (!($8)) {
  STACKTOP=sp;return;
 }
 $9=(($this+232)|0);
 $10=(($this+160)|0);
 $11=(($this+148)|0);
 $12=(($this+120)|0);
 $k_011=0;
 while(1) {

  $14=((HEAP32[(($9)>>2)])|0);
  $15=(($14+((($k_011)*(24))&-1))|0);
  $16=((HEAP32[(($15)>>2)])|0);
  $17=(($14+((($k_011)*(24))&-1)+4)|0);
  $18=((HEAP32[(($17)>>2)])|0);
  $19=((HEAP32[(($10)>>2)])|0);
  $20=(($19+($16<<2))|0);
  $21=((HEAP32[(($20)>>2)])|0);
  $22=(($19+($18<<2))|0);
  $23=((HEAP32[(($22)>>2)])|0);
  $24=($21|0)==($23|0);
  if (!($24)) {
   $26=(($14+((($k_011)*(24))&-1)+12)|0);
   $27=(+(HEAPF32[(($26)>>2)]));
   $28=(($14+((($k_011)*(24))&-1)+16)|0);
   $29=$28;
   $ld$0$0=(($29)|0);
   $30$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($29+4)|0);
   $30$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($n)|0);
   HEAP32[(($st$2$0)>>2)]=$30$0;
   $st$3$1=(($n+4)|0);
   HEAP32[(($st$3$1)>>2)]=$30$1;
   $31=((HEAP32[(($11)>>2)])|0);
   $32=(($31+($16<<2))|0);
   $33=(+(HEAPF32[(($32)>>2)]));
   $34=(($31+($18<<2))|0);
   $35=(+(HEAPF32[(($34)>>2)]));
   $36=($33)+($35);
   $37=($5)*($36);
   $38=($27)*($37);
   __ZmlfRK6b2Vec2($f,$38,$tmpcast);
   $39=((HEAP32[(($12)>>2)])|0);
   $40=(($39+($16<<3))|0);
   __ZN6b2Vec2mIERKS_($40,$f);
   $41=((HEAP32[(($12)>>2)])|0);
   $42=(($41+($18<<3))|0);
   __ZN6b2Vec2pLERKS_($42,$f);
  }
  $44=((($k_011)+(1))|0);
  $45=((HEAP32[(($6)>>2)])|0);
  $46=($44|0)<($45|0);
  if ($46) {
   $k_011=$44;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem16SolveColorMixingEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$k_07=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0;
 var $42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0;
 var $62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$81=0;
 var $82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=0,$91=0,$92=0,$93=0,$94=0,$95=0,$97=0,$98=0,$99=0,label=0;

 $1=(($this+364)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*((128.0));
 $4=(~~($3));
 $5=($4|0)==0;
 if ($5) {
  return;
 }
 $6=(($this+224)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)>0;
 if (!($8)) {
  return;
 }
 $9=(($this+232)|0);
 $10=(($this+104)|0);
 $11=(($this+152)|0);
 $12=((HEAP8[(8152)])|0);
 $13=($12&255);
 $k_07=0;
 while(1) {

  $15=((HEAP32[(($9)>>2)])|0);
  $16=(($15+((($k_07)*(24))&-1))|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $18=(($15+((($k_07)*(24))&-1)+4)|0);
  $19=((HEAP32[(($18)>>2)])|0);
  $20=((HEAP32[(($10)>>2)])|0);
  $21=(($20+($17<<2))|0);
  $22=((HEAP32[(($21)>>2)])|0);
  $23=(($20+($19<<2))|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=$22&256;
  $26=$25&$24;
  $27=($26|0)==0;
  if (!($27)) {
   $29=((HEAP32[(($11)>>2)])|0);
   $30=(($29+($19<<2))|0);
   $31=((HEAP8[($30)])|0);
   $32=($31&255);
   $33=(($29+($17<<2))|0);
   $34=((HEAP8[($33)])|0);
   $35=($34&255);
   $36=((($32)-($35))|0);
   $37=(Math_imul($36,$4)|0);
   $38=$37>>($13|0);
   $39=(($29+($19<<2)+1)|0);
   $40=((HEAP8[($39)])|0);
   $41=($40&255);
   $42=(($29+($17<<2)+1)|0);
   $43=((HEAP8[($42)])|0);
   $44=($43&255);
   $45=((($41)-($44))|0);
   $46=(Math_imul($45,$4)|0);
   $47=$46>>($13|0);
   $48=(($29+($19<<2)+2)|0);
   $49=((HEAP8[($48)])|0);
   $50=($49&255);
   $51=(($29+($17<<2)+2)|0);
   $52=((HEAP8[($51)])|0);
   $53=($52&255);
   $54=((($50)-($53))|0);
   $55=(Math_imul($54,$4)|0);
   $56=$55>>($13|0);
   $57=(($29+($19<<2)+3)|0);
   $58=((HEAP8[($57)])|0);
   $59=($58&255);
   $60=(($29+($17<<2)+3)|0);
   $61=((HEAP8[($60)])|0);
   $62=($61&255);
   $63=((($59)-($62))|0);
   $64=(Math_imul($63,$4)|0);
   $65=$64>>($13|0);
   $66=((($38)+($35))|0);
   $67=(($66)&255);
   HEAP8[($33)]=$67;
   $68=((HEAP8[($42)])|0);
   $69=($68&255);
   $70=((($69)+($47))|0);
   $71=(($70)&255);
   HEAP8[($42)]=$71;
   $72=((HEAP8[($51)])|0);
   $73=($72&255);
   $74=((($73)+($56))|0);
   $75=(($74)&255);
   HEAP8[($51)]=$75;
   $76=((HEAP8[($60)])|0);
   $77=($76&255);
   $78=((($77)+($65))|0);
   $79=(($78)&255);
   HEAP8[($60)]=$79;
   $80=((HEAP8[($30)])|0);
   $81=($80&255);
   $82=((($81)-($38))|0);
   $83=(($82)&255);
   HEAP8[($30)]=$83;
   $84=((HEAP8[($39)])|0);
   $85=($84&255);
   $86=((($85)-($47))|0);
   $87=(($86)&255);
   HEAP8[($39)]=$87;
   $88=((HEAP8[($48)])|0);
   $89=($88&255);
   $90=((($89)-($56))|0);
   $91=(($90)&255);
   HEAP8[($48)]=$91;
   $92=((HEAP8[($57)])|0);
   $93=($92&255);
   $94=((($93)-($65))|0);
   $95=(($94)&255);
   HEAP8[($57)]=$95;
  }
  $97=((($k_07)+(1))|0);
  $98=((HEAP32[(($6)>>2)])|0);
  $99=($97|0)<($98|0);
  if ($99) {
   $k_07=$97;
  } else {
   break;
  }
 }
 return;
}


function __ZN16b2ParticleSystem12SolveGravityERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $gravity=0,$1=0,$2=0,$3=.0,$4=0,$5=.0,$6=.0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$i_04=0,$14=0,$15=0,$16=0,$17=0,$18=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $gravity=((sp)|0);
 $1=(((sp)+(8))|0);
 $2=(($step)|0);
 $3=(+(HEAPF32[(($2)>>2)]));
 $4=(($this+36)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($3)*($5);
 $7=(($this+376)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 __ZNK7b2World10GetGravityEv($1,$8);
 __ZmlfRK6b2Vec2($gravity,$6,$1);
 $9=(($this+56)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)>0;
 if (!($11)) {
  STACKTOP=sp;return;
 }
 $12=(($this+120)|0);
 $i_04=0;
 while(1) {

  $14=((HEAP32[(($12)>>2)])|0);
  $15=(($14+($i_04<<3))|0);
  __ZN6b2Vec2pLERKS_($15,$gravity);
  $16=((($i_04)+(1))|0);
  $17=((HEAP32[(($9)>>2)])|0);
  $18=($16|0)<($17|0);
  if ($18) {
   $i_04=$16;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem19SolveStaticPressureERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $1=0,$2=0,$3=0,$4=.0,$5=0,$6=.0,$7=.0,$8=.0,$9=0,$10=.0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$t_021=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$k_018=0,$30=0,$31=0,$32=0,$33=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=.0,$41=0;
 var $42=0,$43=.0,$44=.0,$45=0,$46=0,$47=.0,$48=.0,$49=0,$50=0,$51=.0,$52=.0,$53=0,$54=0,$55=.0,$56=.0,$58=0,$59=0,$60=0,$61=0,$62=0;
 var $63=0,$64=0,$i_019=0,$66=0,$67=.0,$68=0,$69=0,$70=0,$71=0,$73=0,$74=0,$75=.0,$76=.0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=0,$83=0;
 var $85=0,$86=0,$88=0,$89=0,$90=0,$91=0,$92=0,label=0;

 $1=(($this+136)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN16b2ParticleSystem13RequestBufferIfEEPT_S2_($this,$2))|0);
 HEAP32[(($1)>>2)]=$3;
 $4=(+(__ZNK16b2ParticleSystem19GetCriticalPressureERK10b2TimeStep($this,$step)));
 $5=(($this+352)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=($4)*($6);
 $8=($4)*((0.25));
 $9=(($this+356)|0);
 $10=(+(HEAPF32[(($9)>>2)]));
 $11=(($this+360)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($12|0)>0;
 if (!($13)) {
  return;
 }
 $14=(($this+140)|0);
 $15=(($this+56)|0);
 $16=(($this+224)|0);
 $17=(($this+132)|0);
 $18=(($this+104)|0);
 $19=(($this+232)|0);
 $t_021=0;
 while(1) {

  $21=((HEAP32[(($14)>>2)])|0);
  $22=$21;
  $23=((HEAP32[(($15)>>2)])|0);
  $24=$23<<2;
  _memset((((($22)|0))|0), ((((0)|0))|0), (((($24)|0))|0))|0;
  $25=((HEAP32[(($16)>>2)])|0);
  $26=($25|0)>0;
  if ($26) {
   $27=((HEAP32[(($19)>>2)])|0);
   $28=((HEAP32[(($16)>>2)])|0);
   $k_018=0;
   while(1) {

    $30=(($27+((($k_018)*(24))&-1)+8)|0);
    $31=((HEAP32[(($30)>>2)])|0);
    $32=$31&2048;
    $33=($32|0)==0;
    if (!($33)) {
     $35=(($27+((($k_018)*(24))&-1))|0);
     $36=((HEAP32[(($35)>>2)])|0);
     $37=(($27+((($k_018)*(24))&-1)+4)|0);
     $38=((HEAP32[(($37)>>2)])|0);
     $39=(($27+((($k_018)*(24))&-1)+12)|0);
     $40=(+(HEAPF32[(($39)>>2)]));
     $41=((HEAP32[(($1)>>2)])|0);
     $42=(($41+($38<<2))|0);
     $43=(+(HEAPF32[(($42)>>2)]));
     $44=($40)*($43);
     $45=((HEAP32[(($14)>>2)])|0);
     $46=(($45+($36<<2))|0);
     $47=(+(HEAPF32[(($46)>>2)]));
     $48=($44)+($47);
     HEAPF32[(($46)>>2)]=$48;
     $49=((HEAP32[(($1)>>2)])|0);
     $50=(($49+($36<<2))|0);
     $51=(+(HEAPF32[(($50)>>2)]));
     $52=($40)*($51);
     $53=((HEAP32[(($14)>>2)])|0);
     $54=(($53+($38<<2))|0);
     $55=(+(HEAPF32[(($54)>>2)]));
     $56=($52)+($55);
     HEAPF32[(($54)>>2)]=$56;
    }
    $58=((($k_018)+(1))|0);
    $59=($58|0)<($28|0);
    if ($59) {
     $k_018=$58;
    } else {
     break;
    }
   }
  }
  $60=((HEAP32[(($15)>>2)])|0);
  $61=($60|0)>0;
  if ($61) {
   $62=((HEAP32[(($17)>>2)])|0);
   $63=((HEAP32[(($18)>>2)])|0);
   $64=((HEAP32[(($15)>>2)])|0);
   $i_019=0;
   while(1) {

    $66=(($62+($i_019<<2))|0);
    $67=(+(HEAPF32[(($66)>>2)]));
    $68=(($63+($i_019<<2))|0);
    $69=((HEAP32[(($68)>>2)])|0);
    $70=$69&2048;
    $71=($70|0)==0;
    if ($71) {
     $85=((HEAP32[(($1)>>2)])|0);
     $86=(($85+($i_019<<2))|0);
     HEAPF32[(($86)>>2)]=0.0;
    } else {
     $73=((HEAP32[(($14)>>2)])|0);
     $74=(($73+($i_019<<2))|0);
     $75=(+(HEAPF32[(($74)>>2)]));
     $76=($67)+((-1.0));
     $77=($7)*($76);
     $78=($77)+($75);
     $79=($10)+($67);
     $80=($78)/($79);
     $81=(+(__Z7b2ClampIfET_S0_S0_S0_($80,0.0,$8)));
     $82=((HEAP32[(($1)>>2)])|0);
     $83=(($82+($i_019<<2))|0);
     HEAPF32[(($83)>>2)]=$81;
    }
    $88=((($i_019)+(1))|0);
    $89=($88|0)<($64|0);
    if ($89) {
     $i_019=$88;
    } else {
     break;
    }
   }
  }
  $90=((($t_021)+(1))|0);
  $91=((HEAP32[(($11)>>2)])|0);
  $92=($90|0)<($91|0);
  if ($92) {
   $t_021=$90;
  } else {
   break;
  }
 }
 return;
}


function __ZN16b2ParticleSystem13SolvePressureERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $n=0,$tmpcast32=0,$p=0,$tmpcast33=0,$f=0,$1=0,$n10=0,$tmpcast=0,$f12=0,$2=.0,$3=0,$4=.0,$5=.0,$6=.0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0;
 var $13=0,$14=0,$i_045=0,$16=0,$17=.0,$18=.0,$19=.0,$20=.0,$21=.0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0;
 var $33=0,$34=0,$i1_043=0,$36=0,$37=0,$38=0,$39=0,$41=0,$42=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0;
 var $55=0,$i2_039=0,$57=0,$58=0,$59=0,$60=0,$62=0,$63=0,$64=.0,$65=0,$66=0,$67=.0,$68=.0,$70=0,$71=0,$72=0,$73=.0,$74=0,$75=.0,$76=0;
 var $77=.0,$78=.0,$79=.0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$86=0,$87=0,$88=0,$89=0,$90=0,$91=0,$92=0,$k_035=0,$94=0,$95=0,$96=0;
 var $97=0,$98=0,$99=0,$100=.0,$101=0,$102=.0,$103=0,$104=0,$ld$0$0=0,$105$0=0,$ld$1$1=0,$105$1=0,$st$2$0=0,$st$3$1=0,$106=0,$107=0,$108=0,$ld$4$0=0,$109$0=0,$ld$5$1=0;
 var $109$1=0,$st$6$0=0,$st$7$1=0,$110=0,$111=0,$112=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=.0,$118=0,$119=0,$120=.0,$121=0,$122=0,$123=0,$k5_034=0,$125=0,$126=0;
 var $127=0,$128=0,$129=0,$130=0,$131=.0,$132=0,$133=0,$ld$8$0=0,$134$0=0,$ld$9$1=0,$134$1=0,$st$10$0=0,$st$11$1=0,$135=0,$136=0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0;
 var $142=.0,$143=0,$144=0,$145=0,$146=0,$147=0,$148=0,$149=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $n=((sp)|0);
 $tmpcast32=$n;
 $p=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$p;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $n10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$n10;
 $f12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=(+(__ZNK16b2ParticleSystem19GetCriticalPressureERK10b2TimeStep($this,$step)));
 $3=(($this+312)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=($2)*((0.25));
 $7=(($this+56)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($8|0)>0;
 if ($9) {
  $10=(($this+132)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=(($this+140)|0);
  $13=((HEAP32[(($12)>>2)])|0);
  $14=((HEAP32[(($7)>>2)])|0);
  $i_045=0;
  while(1) {

   $16=(($11+($i_045<<2))|0);
   $17=(+(HEAPF32[(($16)>>2)]));
   $18=($17)+((-1.0));
   $19=(+(__Z5b2MaxIfET_S0_S0_(0.0,$18)));
   $20=($5)*($19);
   $21=(+(__Z5b2MinIfET_S0_S0_($20,$6)));
   $22=(($13+($i_045<<2))|0);
   HEAPF32[(($22)>>2)]=$21;
   $23=((($i_045)+(1))|0);
   $24=($23|0)<($14|0);
   if ($24) {
    $i_045=$23;
   } else {
    break;
   }
  }
 }
 $25=(($this+8)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=$26&192;
 $28=($27|0)==0;
 do {
  if (!($28)) {
   $29=((HEAP32[(($7)>>2)])|0);
   $30=($29|0)>0;
   if (!($30)) {
    break;
   }
   $31=(($this+104)|0);
   $32=((HEAP32[(($31)>>2)])|0);
   $33=((HEAP32[(($7)>>2)])|0);
   $34=(($this+140)|0);
   $i1_043=0;
   while(1) {

    $36=(($32+($i1_043<<2))|0);
    $37=((HEAP32[(($36)>>2)])|0);
    $38=$37&192;
    $39=($38|0)==0;
    if (!($39)) {
     $41=((HEAP32[(($34)>>2)])|0);
     $42=(($41+($i1_043<<2))|0);
     HEAPF32[(($42)>>2)]=0.0;
    }
    $44=((($i1_043)+(1))|0);
    $45=($44|0)<($33|0);
    if ($45) {
     $i1_043=$44;
    } else {
     break;
    }
   }
  }
 } while(0);
 $46=((HEAP32[(($25)>>2)])|0);
 $47=$46&2048;
 $48=($47|0)==0;
 do {
  if (!($48)) {
   $49=((HEAP32[(($7)>>2)])|0);
   $50=($49|0)>0;
   if (!($50)) {
    break;
   }
   $51=(($this+104)|0);
   $52=((HEAP32[(($51)>>2)])|0);
   $53=((HEAP32[(($7)>>2)])|0);
   $54=(($this+136)|0);
   $55=(($this+140)|0);
   $i2_039=0;
   while(1) {

    $57=(($52+($i2_039<<2))|0);
    $58=((HEAP32[(($57)>>2)])|0);
    $59=$58&2048;
    $60=($59|0)==0;
    if (!($60)) {
     $62=((HEAP32[(($54)>>2)])|0);
     $63=(($62+($i2_039<<2))|0);
     $64=(+(HEAPF32[(($63)>>2)]));
     $65=((HEAP32[(($55)>>2)])|0);
     $66=(($65+($i2_039<<2))|0);
     $67=(+(HEAPF32[(($66)>>2)]));
     $68=($64)+($67);
     HEAPF32[(($66)>>2)]=$68;
    }
    $70=((($i2_039)+(1))|0);
    $71=($70|0)<($53|0);
    if ($71) {
     $i2_039=$70;
    } else {
     break;
    }
   }
  }
 } while(0);
 $72=(($step)|0);
 $73=(+(HEAPF32[(($72)>>2)]));
 $74=(($this+28)|0);
 $75=(+(HEAPF32[(($74)>>2)]));
 $76=(($this+40)|0);
 $77=(+(HEAPF32[(($76)>>2)]));
 $78=($75)*($77);
 $79=($73)/($78);
 $80=(($this+236)|0);
 $81=((HEAP32[(($80)>>2)])|0);
 $82=($81|0)>0;
 if ($82) {
  $83=(($this+244)|0);
  $84=(($this+112)|0);
  $85=(($this+140)|0);
  $86=(($this+120)|0);
  $k_035=0;
  while(1) {

   $94=((HEAP32[(($83)>>2)])|0);
   $95=(($94+((($k_035)*(28))&-1))|0);
   $96=((HEAP32[(($95)>>2)])|0);
   $97=(($94+((($k_035)*(28))&-1)+4)|0);
   $98=((HEAP32[(($97)>>2)])|0);
   $99=(($94+((($k_035)*(28))&-1)+12)|0);
   $100=(+(HEAPF32[(($99)>>2)]));
   $101=(($94+((($k_035)*(28))&-1)+24)|0);
   $102=(+(HEAPF32[(($101)>>2)]));
   $103=(($94+((($k_035)*(28))&-1)+16)|0);
   $104=$103;
   $ld$0$0=(($104)|0);
   $105$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($104+4)|0);
   $105$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($n)|0);
   HEAP32[(($st$2$0)>>2)]=$105$0;
   $st$3$1=(($n+4)|0);
   HEAP32[(($st$3$1)>>2)]=$105$1;
   $106=((HEAP32[(($84)>>2)])|0);
   $107=(($106+($96<<3))|0);
   $108=$107;
   $ld$4$0=(($108)|0);
   $109$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($108+4)|0);
   $109$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($p)|0);
   HEAP32[(($st$6$0)>>2)]=$109$0;
   $st$7$1=(($p+4)|0);
   HEAP32[(($st$7$1)>>2)]=$109$1;
   $110=((HEAP32[(($85)>>2)])|0);
   $111=(($110+($96<<2))|0);
   $112=(+(HEAPF32[(($111)>>2)]));
   $113=($5)*($100);
   $114=($113)+($112);
   $115=($79)*($100);
   $116=($115)*($102);
   $117=($116)*($114);
   __ZmlfRK6b2Vec2($f,$117,$tmpcast32);
   $118=((HEAP32[(($86)>>2)])|0);
   $119=(($118+($96<<3))|0);
   $120=(+(__ZNK16b2ParticleSystem18GetParticleInvMassEv($this)));
   __ZmlfRK6b2Vec2($1,$120,$f);
   __ZN6b2Vec2mIERKS_($119,$1);
   __ZN6b2Body18ApplyLinearImpulseERK6b2Vec2S2_b($98,$f,$tmpcast33,1);
   $121=((($k_035)+(1))|0);
   $122=((HEAP32[(($80)>>2)])|0);
   $123=($121|0)<($122|0);
   if ($123) {
    $k_035=$121;
   } else {
    break;
   }
  }
 }
 $87=(($this+224)|0);
 $88=((HEAP32[(($87)>>2)])|0);
 $89=($88|0)>0;
 if (!($89)) {
  STACKTOP=sp;return;
 }
 $90=(($this+232)|0);
 $91=(($this+140)|0);
 $92=(($this+120)|0);
 $k5_034=0;
 while(1) {

  $125=((HEAP32[(($90)>>2)])|0);
  $126=(($125+((($k5_034)*(24))&-1))|0);
  $127=((HEAP32[(($126)>>2)])|0);
  $128=(($125+((($k5_034)*(24))&-1)+4)|0);
  $129=((HEAP32[(($128)>>2)])|0);
  $130=(($125+((($k5_034)*(24))&-1)+12)|0);
  $131=(+(HEAPF32[(($130)>>2)]));
  $132=(($125+((($k5_034)*(24))&-1)+16)|0);
  $133=$132;
  $ld$8$0=(($133)|0);
  $134$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($133+4)|0);
  $134$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($n10)|0);
  HEAP32[(($st$10$0)>>2)]=$134$0;
  $st$11$1=(($n10+4)|0);
  HEAP32[(($st$11$1)>>2)]=$134$1;
  $135=((HEAP32[(($91)>>2)])|0);
  $136=(($135+($127<<2))|0);
  $137=(+(HEAPF32[(($136)>>2)]));
  $138=(($135+($129<<2))|0);
  $139=(+(HEAPF32[(($138)>>2)]));
  $140=($137)+($139);
  $141=($79)*($131);
  $142=($141)*($140);
  __ZmlfRK6b2Vec2($f12,$142,$tmpcast);
  $143=((HEAP32[(($92)>>2)])|0);
  $144=(($143+($127<<3))|0);
  __ZN6b2Vec2mIERKS_($144,$f12);
  $145=((HEAP32[(($92)>>2)])|0);
  $146=(($145+($129<<3))|0);
  __ZN6b2Vec2pLERKS_($146,$f12);
  $147=((($k5_034)+(1))|0);
  $148=((HEAP32[(($87)>>2)])|0);
  $149=($147|0)<($148|0);
  if ($149) {
   $k5_034=$147;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem12SolveDampingERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $n=0,$tmpcast24=0,$p=0,$tmpcast25=0,$v=0,$1=0,$f=0,$2=0,$3=0,$n6=0,$tmpcast=0,$v7=0,$f10=0,$4=0,$5=.0,$6=.0,$7=.0,$8=0,$9=0,$10=0;
 var $11=0,$12=0,$13=0,$14=.0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=.0,$k_027=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=.0,$29=0,$30=.0;
 var $31=0,$32=0,$ld$0$0=0,$33$0=0,$ld$1$1=0,$33$1=0,$st$2$0=0,$st$3$1=0,$34=0,$35=0,$36=0,$ld$4$0=0,$37$0=0,$ld$5$1=0,$37$1=0,$st$6$0=0,$st$7$1=0,$38=0,$39=0,$40=.0;
 var $41=0,$43=.0,$44=.0,$45=.0,$46=.0,$47=.0,$48=.0,$49=0,$50=0,$51=.0,$53=0,$54=0,$55=0,$k1_026=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0;
 var $63=.0,$64=0,$65=0,$ld$8$0=0,$66$0=0,$ld$9$1=0,$66$1=0,$st$10$0=0,$st$11$1=0,$67=0,$68=0,$69=0,$70=.0,$71=0,$73=.0,$74=.0,$75=.0,$76=.0,$77=.0,$78=0;
 var $79=0,$80=0,$81=0,$83=0,$84=0,$85=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $n=((sp)|0);
 $tmpcast24=$n;
 $p=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast25=$p;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $n6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$n6;
 $v7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($this+316)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(+(__ZNK16b2ParticleSystem19GetCriticalVelocityERK10b2TimeStep($this,$step)));
 $7=((1.0))/($6);
 $8=(($this+236)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=($9|0)>0;
 if ($10) {
  $11=(($this+244)|0);
  $12=(($this+112)|0);
  $13=(($this+120)|0);
  $14=((-.0))-($7);
  $k_027=0;
  while(1) {

   $22=((HEAP32[(($11)>>2)])|0);
   $23=(($22+((($k_027)*(28))&-1))|0);
   $24=((HEAP32[(($23)>>2)])|0);
   $25=(($22+((($k_027)*(28))&-1)+4)|0);
   $26=((HEAP32[(($25)>>2)])|0);
   $27=(($22+((($k_027)*(28))&-1)+12)|0);
   $28=(+(HEAPF32[(($27)>>2)]));
   $29=(($22+((($k_027)*(28))&-1)+24)|0);
   $30=(+(HEAPF32[(($29)>>2)]));
   $31=(($22+((($k_027)*(28))&-1)+16)|0);
   $32=$31;
   $ld$0$0=(($32)|0);
   $33$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($32+4)|0);
   $33$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($n)|0);
   HEAP32[(($st$2$0)>>2)]=$33$0;
   $st$3$1=(($n+4)|0);
   HEAP32[(($st$3$1)>>2)]=$33$1;
   $34=((HEAP32[(($12)>>2)])|0);
   $35=(($34+($24<<3))|0);
   $36=$35;
   $ld$4$0=(($36)|0);
   $37$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($36+4)|0);
   $37$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($p)|0);
   HEAP32[(($st$6$0)>>2)]=$37$0;
   $st$7$1=(($p+4)|0);
   HEAP32[(($st$7$1)>>2)]=$37$1;
   __ZNK6b2Body31GetLinearVelocityFromWorldPointERK6b2Vec2($1,$26,$tmpcast25);
   $38=((HEAP32[(($13)>>2)])|0);
   $39=(($38+($24<<3))|0);
   __ZmiRK6b2Vec2S1_($v,$1,$39);
   $40=(+(__Z5b2DotRK6b2Vec2S1_($v,$tmpcast24)));
   $41=$40<(0.0);
   if ($41) {
    $43=($5)*($28);
    $44=($40)*($14);
    $45=(+(__Z5b2MinIfET_S0_S0_($44,0.5)));
    $46=(+(__Z5b2MaxIfET_S0_S0_($43,$45)));
    $47=($30)*($46);
    $48=($40)*($47);
    __ZmlfRK6b2Vec2($f,$48,$tmpcast24);
    $49=((HEAP32[(($13)>>2)])|0);
    $50=(($49+($24<<3))|0);
    $51=(+(__ZNK16b2ParticleSystem18GetParticleInvMassEv($this)));
    __ZmlfRK6b2Vec2($2,$51,$f);
    __ZN6b2Vec2pLERKS_($50,$2);
    __ZNK6b2Vec2ngEv($3,$f);
    __ZN6b2Body18ApplyLinearImpulseERK6b2Vec2S2_b($26,$3,$tmpcast25,1);
   }
   $53=((($k_027)+(1))|0);
   $54=((HEAP32[(($8)>>2)])|0);
   $55=($53|0)<($54|0);
   if ($55) {
    $k_027=$53;
   } else {
    break;
   }
  }
 }
 $15=(($this+224)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=($16|0)>0;
 if (!($17)) {
  STACKTOP=sp;return;
 }
 $18=(($this+232)|0);
 $19=(($this+120)|0);
 $20=((-.0))-($7);
 $k1_026=0;
 while(1) {

  $57=((HEAP32[(($18)>>2)])|0);
  $58=(($57+((($k1_026)*(24))&-1))|0);
  $59=((HEAP32[(($58)>>2)])|0);
  $60=(($57+((($k1_026)*(24))&-1)+4)|0);
  $61=((HEAP32[(($60)>>2)])|0);
  $62=(($57+((($k1_026)*(24))&-1)+12)|0);
  $63=(+(HEAPF32[(($62)>>2)]));
  $64=(($57+((($k1_026)*(24))&-1)+16)|0);
  $65=$64;
  $ld$8$0=(($65)|0);
  $66$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($65+4)|0);
  $66$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $st$10$0=(($n6)|0);
  HEAP32[(($st$10$0)>>2)]=$66$0;
  $st$11$1=(($n6+4)|0);
  HEAP32[(($st$11$1)>>2)]=$66$1;
  $67=((HEAP32[(($19)>>2)])|0);
  $68=(($67+($61<<3))|0);
  $69=(($67+($59<<3))|0);
  __ZmiRK6b2Vec2S1_($v7,$68,$69);
  $70=(+(__Z5b2DotRK6b2Vec2S1_($v7,$tmpcast)));
  $71=$70<(0.0);
  if ($71) {
   $73=($5)*($63);
   $74=($70)*($20);
   $75=(+(__Z5b2MinIfET_S0_S0_($74,0.5)));
   $76=(+(__Z5b2MaxIfET_S0_S0_($73,$75)));
   $77=($70)*($76);
   __ZmlfRK6b2Vec2($f10,$77,$tmpcast);
   $78=((HEAP32[(($19)>>2)])|0);
   $79=(($78+($59<<3))|0);
   __ZN6b2Vec2pLERKS_($79,$f10);
   $80=((HEAP32[(($19)>>2)])|0);
   $81=(($80+($61<<3))|0);
   __ZN6b2Vec2mIERKS_($81,$f10);
  }
  $83=((($k1_026)+(1))|0);
  $84=((HEAP32[(($15)>>2)])|0);
  $85=($83|0)<($84|0);
  if ($85) {
   $k1_026=$83;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem17SolveExtraDampingEv($this){
 $this=($this)|0;
 var $n=0,$tmpcast=0,$p=0,$tmpcast11=0,$v=0,$1=0,$f=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$k_012=0,$12=0,$13=0,$14=0;
 var $15=0,$16=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0,$24=.0,$25=0,$26=0,$ld$0$0=0,$27$0=0,$ld$1$1=0,$27$1=0,$st$2$0=0,$st$3$1=0,$28=0,$29=0,$30=0;
 var $ld$4$0=0,$31$0=0,$ld$5$1=0,$31$1=0,$st$6$0=0,$st$7$1=0,$32=0,$33=0,$34=.0,$35=0,$37=.0,$38=.0,$39=0,$40=0,$41=.0,$43=0,$44=0,$45=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $n=((sp)|0);
 $tmpcast=$n;
 $p=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast11=$p;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($this+236)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($5|0)>0;
 if (!($6)) {
  STACKTOP=sp;return;
 }
 $7=(($this+244)|0);
 $8=(($this+104)|0);
 $9=(($this+112)|0);
 $10=(($this+120)|0);
 $k_012=0;
 while(1) {

  $12=((HEAP32[(($7)>>2)])|0);
  $13=(($12+((($k_012)*(28))&-1))|0);
  $14=((HEAP32[(($13)>>2)])|0);
  $15=((HEAP32[(($8)>>2)])|0);
  $16=(($15+($14<<2))|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $18=$17&2048;
  $19=($18|0)==0;
  do {
   if (!($19)) {
    $21=(($12+((($k_012)*(28))&-1)+4)|0);
    $22=((HEAP32[(($21)>>2)])|0);
    $23=(($12+((($k_012)*(28))&-1)+24)|0);
    $24=(+(HEAPF32[(($23)>>2)]));
    $25=(($12+((($k_012)*(28))&-1)+16)|0);
    $26=$25;
    $ld$0$0=(($26)|0);
    $27$0=((HEAP32[(($ld$0$0)>>2)])|0);
    $ld$1$1=(($26+4)|0);
    $27$1=((HEAP32[(($ld$1$1)>>2)])|0);
    $st$2$0=(($n)|0);
    HEAP32[(($st$2$0)>>2)]=$27$0;
    $st$3$1=(($n+4)|0);
    HEAP32[(($st$3$1)>>2)]=$27$1;
    $28=((HEAP32[(($9)>>2)])|0);
    $29=(($28+($14<<3))|0);
    $30=$29;
    $ld$4$0=(($30)|0);
    $31$0=((HEAP32[(($ld$4$0)>>2)])|0);
    $ld$5$1=(($30+4)|0);
    $31$1=((HEAP32[(($ld$5$1)>>2)])|0);
    $st$6$0=(($p)|0);
    HEAP32[(($st$6$0)>>2)]=$31$0;
    $st$7$1=(($p+4)|0);
    HEAP32[(($st$7$1)>>2)]=$31$1;
    __ZNK6b2Body31GetLinearVelocityFromWorldPointERK6b2Vec2($1,$22,$tmpcast11);
    $32=((HEAP32[(($10)>>2)])|0);
    $33=(($32+($14<<3))|0);
    __ZmiRK6b2Vec2S1_($v,$1,$33);
    $34=(+(__Z5b2DotRK6b2Vec2S1_($v,$tmpcast)));
    $35=$34<(0.0);
    if (!($35)) {
     break;
    }
    $37=($24)*((0.5));
    $38=($37)*($34);
    __ZmlfRK6b2Vec2($f,$38,$tmpcast);
    $39=((HEAP32[(($10)>>2)])|0);
    $40=(($39+($14<<3))|0);
    $41=(+(__ZNK16b2ParticleSystem18GetParticleInvMassEv($this)));
    __ZmlfRK6b2Vec2($2,$41,$f);
    __ZN6b2Vec2pLERKS_($40,$2);
    __ZNK6b2Vec2ngEv($3,$f);
    __ZN6b2Body18ApplyLinearImpulseERK6b2Vec2S2_b($22,$3,$tmpcast11,1);
   }
  } while(0);
  $43=((($k_012)+(1))|0);
  $44=((HEAP32[(($4)>>2)])|0);
  $45=($43|0)<($44|0);
  if ($45) {
   $k_012=$43;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem12SolveElasticERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $pa=0,$tmpcast=0,$pb=0,$tmpcast29=0,$pc=0,$tmpcast30=0,$1=0,$2=0,$3=0,$midPoint=0,$4=0,$5=0,$r=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0;
 var $13=0,$14=0,$15=0,$16=.0,$17=0,$18=.0,$19=.0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$k_031=0,$30=0,$31=0,$32=0;
 var $33=0,$34=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$ld$0$0=0,$48$0=0,$ld$1$1=0,$48$1=0,$st$2$0=0,$st$3$1=0;
 var $49=0,$50=0,$51=0,$ld$4$0=0,$52$0=0,$ld$5$1=0,$52$1=0,$st$6$0=0,$st$7$1=0,$53=0,$54=0,$55=0,$ld$8$0=0,$56$0=0,$ld$9$1=0,$56$1=0,$st$10$0=0,$st$11$1=0,$57=0,$58=0;
 var $59=0,$60=0,$61=.0,$62=.0,$63=.0,$64=.0,$65=.0,$66=.0,$67=.0,$68=.0,$69=.0,$70=.0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=.0,$78=.0;
 var $79=.0,$80=.0,$81=.0,$82=0,$83=.0,$84=.0,$86=0,$87=0,$88=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $pa=((sp)|0);
 $tmpcast=$pa;
 $pb=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast29=$pb;
 $pc=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$pc;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $midPoint=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $r=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=(($step+4)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=(($this+320)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=($16)*($18);
 $20=(($this+260)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=($21|0)>0;
 if (!($22)) {
  STACKTOP=sp;return;
 }
 $23=(($this+268)|0);
 $24=(($this+112)|0);
 $25=(($this+120)|0);
 $26=(($step)|0);
 $27=(($r)|0);
 $28=(($r+4)|0);
 $k_031=0;
 while(1) {

  $30=((HEAP32[(($23)>>2)])|0);
  $31=(($30+((($k_031)*(60))&-1)+12)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  $33=$32&16;
  $34=($33|0)==0;
  if (!($34)) {
   $36=(($30+((($k_031)*(60))&-1))|0);
   $37=((HEAP32[(($36)>>2)])|0);
   $38=(($30+((($k_031)*(60))&-1)+4)|0);
   $39=((HEAP32[(($38)>>2)])|0);
   $40=(($30+((($k_031)*(60))&-1)+8)|0);
   $41=((HEAP32[(($40)>>2)])|0);
   $42=(($30+((($k_031)*(60))&-1)+20)|0);
   $43=(($30+((($k_031)*(60))&-1)+28)|0);
   $44=(($30+((($k_031)*(60))&-1)+36)|0);
   $45=((HEAP32[(($24)>>2)])|0);
   $46=(($45+($37<<3))|0);
   $47=$46;
   $ld$0$0=(($47)|0);
   $48$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($47+4)|0);
   $48$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($pa)|0);
   HEAP32[(($st$2$0)>>2)]=$48$0;
   $st$3$1=(($pa+4)|0);
   HEAP32[(($st$3$1)>>2)]=$48$1;
   $49=((HEAP32[(($24)>>2)])|0);
   $50=(($49+($39<<3))|0);
   $51=$50;
   $ld$4$0=(($51)|0);
   $52$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($51+4)|0);
   $52$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($pb)|0);
   HEAP32[(($st$6$0)>>2)]=$52$0;
   $st$7$1=(($pb+4)|0);
   HEAP32[(($st$7$1)>>2)]=$52$1;
   $53=((HEAP32[(($24)>>2)])|0);
   $54=(($53+($41<<3))|0);
   $55=$54;
   $ld$8$0=(($55)|0);
   $56$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($55+4)|0);
   $56$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($pc)|0);
   HEAP32[(($st$10$0)>>2)]=$56$0;
   $st$11$1=(($pc+4)|0);
   HEAP32[(($st$11$1)>>2)]=$56$1;
   $57=((HEAP32[(($25)>>2)])|0);
   $58=(($57+($37<<3))|0);
   $59=(($57+($39<<3))|0);
   $60=(($57+($41<<3))|0);
   $61=(+(HEAPF32[(($26)>>2)]));
   __ZmlfRK6b2Vec2($1,$61,$58);
   __ZN6b2Vec2pLERKS_($tmpcast,$1);
   $62=(+(HEAPF32[(($26)>>2)]));
   __ZmlfRK6b2Vec2($2,$62,$59);
   __ZN6b2Vec2pLERKS_($tmpcast29,$2);
   $63=(+(HEAPF32[(($26)>>2)]));
   __ZmlfRK6b2Vec2($3,$63,$60);
   __ZN6b2Vec2pLERKS_($tmpcast30,$3);
   __ZplRK6b2Vec2S1_($5,$tmpcast,$tmpcast29);
   __ZplRK6b2Vec2S1_($4,$5,$tmpcast30);
   __ZmlfRK6b2Vec2($midPoint,0.3333333432674408,$4);
   __ZN6b2Vec2mIERKS_($tmpcast,$midPoint);
   __ZN6b2Vec2mIERKS_($tmpcast29,$midPoint);
   __ZN6b2Vec2mIERKS_($tmpcast30,$midPoint);
   $64=(+(__Z7b2CrossRK6b2Vec2S1_($42,$tmpcast)));
   $65=(+(__Z7b2CrossRK6b2Vec2S1_($43,$tmpcast29)));
   $66=($64)+($65);
   $67=(+(__Z7b2CrossRK6b2Vec2S1_($44,$tmpcast30)));
   $68=($66)+($67);
   HEAPF32[(($27)>>2)]=$68;
   $69=(+(__Z5b2DotRK6b2Vec2S1_($42,$tmpcast)));
   $70=(+(__Z5b2DotRK6b2Vec2S1_($43,$tmpcast29)));
   $71=($69)+($70);
   $72=(+(__Z5b2DotRK6b2Vec2S1_($44,$tmpcast30)));
   $73=($71)+($72);
   HEAPF32[(($28)>>2)]=$73;
   $74=(+(HEAPF32[(($27)>>2)]));
   $75=($74)*($74);
   $76=($73)*($73);
   $77=($75)+($76);
   $78=(+(__Z9b2InvSqrtf($77)));
   $79=($74)*($78);
   HEAPF32[(($27)>>2)]=$79;
   $80=(+(HEAPF32[(($28)>>2)]));
   $81=($78)*($80);
   HEAPF32[(($28)>>2)]=$81;
   $82=(($30+((($k_031)*(60))&-1)+16)|0);
   $83=(+(HEAPF32[(($82)>>2)]));
   $84=($19)*($83);
   __Z5b2MulRK5b2RotRK6b2Vec2($8,$r,$42);
   __ZmiRK6b2Vec2S1_($7,$8,$tmpcast);
   __ZmlfRK6b2Vec2($6,$84,$7);
   __ZN6b2Vec2pLERKS_($58,$6);
   __Z5b2MulRK5b2RotRK6b2Vec2($11,$r,$43);
   __ZmiRK6b2Vec2S1_($10,$11,$tmpcast29);
   __ZmlfRK6b2Vec2($9,$84,$10);
   __ZN6b2Vec2pLERKS_($59,$9);
   __Z5b2MulRK5b2RotRK6b2Vec2($14,$r,$44);
   __ZmiRK6b2Vec2S1_($13,$14,$tmpcast30);
   __ZmlfRK6b2Vec2($12,$84,$13);
   __ZN6b2Vec2pLERKS_($60,$12);
  }
  $86=((($k_031)+(1))|0);
  $87=((HEAP32[(($20)>>2)])|0);
  $88=($86|0)<($87|0);
  if ($88) {
   $k_031=$86;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem11SolveSpringERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $pa=0,$tmpcast=0,$pb=0,$tmpcast15=0,$1=0,$2=0,$d=0,$f=0,$3=0,$4=.0,$5=0,$6=.0,$7=.0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0;
 var $k_016=0,$16=0,$17=0,$18=0,$19=0,$20=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$ld$0$0=0,$29$0=0,$ld$1$1=0,$29$1=0,$st$2$0=0,$st$3$1=0,$30=0;
 var $31=0,$32=0,$ld$4$0=0,$33$0=0,$ld$5$1=0,$33$1=0,$st$6$0=0,$st$7$1=0,$34=0,$35=0,$36=0,$37=.0,$38=.0,$39=0,$40=.0,$41=.0,$42=0,$43=.0,$44=.0,$45=.0;
 var $46=.0,$47=.0,$49=0,$50=0,$51=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $pa=((sp)|0);
 $tmpcast=$pa;
 $pb=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast15=$pb;
 $1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $d=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $3=(($step+4)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+324)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=($4)*($6);
 $8=(($this+248)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=($9|0)>0;
 if (!($10)) {
  STACKTOP=sp;return;
 }
 $11=(($this+256)|0);
 $12=(($this+112)|0);
 $13=(($this+120)|0);
 $14=(($step)|0);
 $k_016=0;
 while(1) {

  $16=((HEAP32[(($11)>>2)])|0);
  $17=(($16+((($k_016)*(20))&-1)+8)|0);
  $18=((HEAP32[(($17)>>2)])|0);
  $19=$18&8;
  $20=($19|0)==0;
  if (!($20)) {
   $22=(($16+((($k_016)*(20))&-1))|0);
   $23=((HEAP32[(($22)>>2)])|0);
   $24=(($16+((($k_016)*(20))&-1)+4)|0);
   $25=((HEAP32[(($24)>>2)])|0);
   $26=((HEAP32[(($12)>>2)])|0);
   $27=(($26+($23<<3))|0);
   $28=$27;
   $ld$0$0=(($28)|0);
   $29$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($28+4)|0);
   $29$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($pa)|0);
   HEAP32[(($st$2$0)>>2)]=$29$0;
   $st$3$1=(($pa+4)|0);
   HEAP32[(($st$3$1)>>2)]=$29$1;
   $30=((HEAP32[(($12)>>2)])|0);
   $31=(($30+($25<<3))|0);
   $32=$31;
   $ld$4$0=(($32)|0);
   $33$0=((HEAP32[(($ld$4$0)>>2)])|0);
   $ld$5$1=(($32+4)|0);
   $33$1=((HEAP32[(($ld$5$1)>>2)])|0);
   $st$6$0=(($pb)|0);
   HEAP32[(($st$6$0)>>2)]=$33$0;
   $st$7$1=(($pb+4)|0);
   HEAP32[(($st$7$1)>>2)]=$33$1;
   $34=((HEAP32[(($13)>>2)])|0);
   $35=(($34+($23<<3))|0);
   $36=(($34+($25<<3))|0);
   $37=(+(HEAPF32[(($14)>>2)]));
   __ZmlfRK6b2Vec2($1,$37,$35);
   __ZN6b2Vec2pLERKS_($tmpcast,$1);
   $38=(+(HEAPF32[(($14)>>2)]));
   __ZmlfRK6b2Vec2($2,$38,$36);
   __ZN6b2Vec2pLERKS_($tmpcast15,$2);
   __ZmiRK6b2Vec2S1_($d,$tmpcast15,$tmpcast);
   $39=(($16+((($k_016)*(20))&-1)+16)|0);
   $40=(+(HEAPF32[(($39)>>2)]));
   $41=(+(__ZNK6b2Vec26LengthEv($d)));
   $42=(($16+((($k_016)*(20))&-1)+12)|0);
   $43=(+(HEAPF32[(($42)>>2)]));
   $44=($7)*($43);
   $45=($40)-($41);
   $46=($45)*($44);
   $47=($46)/($41);
   __ZmlfRK6b2Vec2($f,$47,$d);
   __ZN6b2Vec2mIERKS_($35,$f);
   __ZN6b2Vec2pLERKS_($36,$f);
  }
  $49=((($k_016)+(1))|0);
  $50=((HEAP32[(($8)>>2)])|0);
  $51=($49|0)<($50|0);
  if ($51) {
   $k_016=$49;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem13LimitVelocityERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $1=.0,$2=0,$3=0,$4=0,$5=0,$i_08=0,$7=0,$8=0,$9=.0,$10=0,$12=.0,$13=.0,$15=0,$16=0,$17=0,label=0;

 $1=(+(__ZNK16b2ParticleSystem26GetCriticalVelocitySquaredERK10b2TimeStep($this,$step)));
 $2=(($this+56)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($3|0)>0;
 if (!($4)) {
  return;
 }
 $5=(($this+120)|0);
 $i_08=0;
 while(1) {

  $7=((HEAP32[(($5)>>2)])|0);
  $8=(($7+($i_08<<3))|0);
  $9=(+(__Z5b2DotRK6b2Vec2S1_($8,$8)));
  $10=$9>$1;
  if ($10) {
   $12=($1)/($9);
   $13=(+(Math_sqrt($12)));
   __ZN6b2Vec2mLEf($8,$13);
  }
  $15=((($i_08)+(1))|0);
  $16=((HEAP32[(($2)>>2)])|0);
  $17=($15|0)<($16|0);
  if ($17) {
   $i_08=$15;
  } else {
   break;
  }
 }
 return;
}


function __ZN16b2ParticleSystem10SolveRigidERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $rotation=0,$transform=0,$1=0,$2=0,$3=0,$4=0,$5=0,$velocityTransform=0,$6=0,$tmpcast=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0;
 var $17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$group_022=0,$24=0,$25=0,$26=0,$27=0,$29=.0,$30=0,$31=.0,$32=.0,$33=0,$34=.0,$35=0,$36=0,$37=0;
 var $38=.0,$39=.0,$40=.0,$41=.0,$42=.0,$43=.0,$44=.0,$45=.0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$52=0,$53=0,$54=0,$55=0,$i_021=0,$56=0;
 var $57=0,$58=0,$59=0,$60=0,$ld$0$0=0,$61$0=0,$ld$1$1=0,$61$1=0,$st$2$0=0,$st$3$1=0,$62=0,$63=0,$64=0,$65=0,$66=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+96)|0;
 $rotation=((sp)|0);
 $transform=(((sp)+(8))|0);
 $1=(((sp)+(24))|0);
 $2=(((sp)+(32))|0);
 $3=(((sp)+(40))|0);
 $4=(((sp)+(48))|0);
 $5=(((sp)+(56))|0);
 $velocityTransform=(((sp)+(72))|0);
 $6=(((sp)+(88))|0);
 $tmpcast=$6;
 $7=(($this+304)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($8|0)==0;
 if ($9) {
  STACKTOP=sp;return;
 }
 $10=(($step)|0);
 $11=$5;
 $12=(($step+4)|0);
 $13=(($transform)|0);
 $14=(($velocityTransform)|0);
 $15=(($transform+4)|0);
 $16=(($velocityTransform+4)|0);
 $17=(($transform+8)|0);
 $18=(($velocityTransform+8)|0);
 $19=(($transform+12)|0);
 $20=(($velocityTransform+12)|0);
 $21=(($this+120)|0);
 $22=(($this+112)|0);
 $group_022=$8;
 while(1) {

  $24=(($group_022+12)|0);
  $25=((HEAP32[(($24)>>2)])|0);
  $26=$25&2;
  $27=($26|0)==0;
  do {
   if (!($27)) {
    __ZNK15b2ParticleGroup16UpdateStatisticsEv($group_022);
    $29=(+(HEAPF32[(($10)>>2)]));
    $30=(($group_022+56)|0);
    $31=(+(HEAPF32[(($30)>>2)]));
    $32=($29)*($31);
    __ZN5b2RotC1Ef($rotation,$32);
    $33=(($group_022+40)|0);
    $34=(+(HEAPF32[(($10)>>2)]));
    $35=(($group_022+48)|0);
    __ZmlfRK6b2Vec2($3,$34,$35);
    __ZplRK6b2Vec2S1_($2,$33,$3);
    __Z5b2MulRK5b2RotRK6b2Vec2($4,$rotation,$33);
    __ZmiRK6b2Vec2S1_($1,$2,$4);
    __ZN11b2TransformC1ERK6b2Vec2RK5b2Rot($transform,$1,$rotation);
    $36=(($group_022+60)|0);
    __Z5b2MulRK11b2TransformS1_($5,$transform,$36);
    $37=$36;
    HEAP32[(($37)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($37)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($37)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);HEAP32[((($37)+(12))>>2)]=((HEAP32[((($11)+(12))>>2)])|0);
    $38=(+(HEAPF32[(($12)>>2)]));
    $39=(+(HEAPF32[(($13)>>2)]));
    $40=($38)*($39);
    HEAPF32[(($14)>>2)]=$40;
    $41=(+(HEAPF32[(($12)>>2)]));
    $42=(+(HEAPF32[(($15)>>2)]));
    $43=($41)*($42);
    HEAPF32[(($16)>>2)]=$43;
    $44=(+(HEAPF32[(($12)>>2)]));
    $45=(+(HEAPF32[(($17)>>2)]));
    $46=($44)*($45);
    HEAPF32[(($18)>>2)]=$46;
    $47=(+(HEAPF32[(($12)>>2)]));
    $48=(+(HEAPF32[(($19)>>2)]));
    $49=($48)+((-1.0));
    $50=($47)*($49);
    HEAPF32[(($20)>>2)]=$50;
    $51=(($group_022+4)|0);
    $52=((HEAP32[(($51)>>2)])|0);
    $53=(($group_022+8)|0);
    $54=((HEAP32[(($53)>>2)])|0);
    $55=($52|0)<($54|0);
    if ($55) {
     $i_021=$52;
    } else {
     break;
    }
    while(1) {

     $56=((HEAP32[(($21)>>2)])|0);
     $57=(($56+($i_021<<3))|0);
     $58=((HEAP32[(($22)>>2)])|0);
     $59=(($58+($i_021<<3))|0);
     __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast,$velocityTransform,$59);
     $60=$57;
     $ld$0$0=(($6)|0);
     $61$0=((HEAP32[(($ld$0$0)>>2)])|0);
     $ld$1$1=(($6+4)|0);
     $61$1=((HEAP32[(($ld$1$1)>>2)])|0);
     $st$2$0=(($60)|0);
     HEAP32[(($st$2$0)>>2)]=$61$0;
     $st$3$1=(($60+4)|0);
     HEAP32[(($st$3$1)>>2)]=$61$1;
     $62=((($i_021)+(1))|0);
     $63=((HEAP32[(($53)>>2)])|0);
     $64=($62|0)<($63|0);
     if ($64) {
      $i_021=$62;
     } else {
      break;
     }
    }
   }
  } while(0);
  $65=((__ZN15b2ParticleGroup7GetNextEv($group_022))|0);
  $66=($65|0)==0;
  if ($66) {
   break;
  } else {
   $group_022=$65;
  }
 }
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem9SolveWallEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$i_04=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,$14=0,$16=0,$17=0,$18=0,label=0;

 $1=(($this+56)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 if (!($3)) {
  return;
 }
 $4=(($this+104)|0);
 $5=(($this+120)|0);
 $i_04=0;
 while(1) {

  $7=((HEAP32[(($4)>>2)])|0);
  $8=(($7+($i_04<<2))|0);
  $9=((HEAP32[(($8)>>2)])|0);
  $10=$9&4;
  $11=($10|0)==0;
  if (!($11)) {
   $13=((HEAP32[(($5)>>2)])|0);
   $14=(($13+($i_04<<3))|0);
   __ZN6b2Vec27SetZeroEv($14);
  }
  $16=((($i_04)+(1))|0);
  $17=((HEAP32[(($1)>>2)])|0);
  $18=($16|0)<($17|0);
  if ($18) {
   $i_04=$16;
  } else {
   break;
  }
 }
 return;
}


function __ZNK15b2ParticleGroup7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZNK16b2ParticleSystem26GetCriticalVelocitySquaredERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $1=.0,$2=.0,label=0;

 $1=(+(__ZNK16b2ParticleSystem19GetCriticalVelocityERK10b2TimeStep($this,$step)));
 $2=($1)*($1);
 return (+($2));
}


function __ZNK7b2World10GetGravityEv($agg_result,$this){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$ld$0$0=0,$4$0=0,$ld$1$1=0,$4$1=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=(($this+102980)|0);
 $2=$1;
 $3=$agg_result;
 $ld$0$0=(($2)|0);
 $4$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $4$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($3)|0);
 HEAP32[(($st$2$0)>>2)]=$4$0;
 $st$3$1=(($3+4)|0);
 HEAP32[(($st$3$1)>>2)]=$4$1;
 return;
}


function __ZN16b2ParticleSystem13RequestBufferIfEEPT_S2_($this,$buffer){
 $this=($this)|0;
 $buffer=($buffer)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 if (!($1)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $3=(($this+60)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==0;
 if ($5) {
  __ZN16b2ParticleSystem34ReallocateInternalAllocatedBuffersEi($this,256);
 }
 $8=(($this+376)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9)|0);
 $11=((HEAP32[(($3)>>2)])|0);
 $12=$11<<2;
 $13=((__ZN16b2BlockAllocator8AllocateEi($10,$12))|0);
 $14=$13;
 $15=((HEAP32[(($3)>>2)])|0);
 $16=$15<<2;
 _memset((((($13)|0))|0), ((((0)|0))|0), (((($16)|0))|0))|0;
 $_0=$14;

 return (($_0)|0);
}


function __ZNK16b2ParticleSystem19GetCriticalPressureERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $1=0,$2=.0,$3=.0,$4=.0,label=0;

 $1=(($this+28)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(+(__ZNK16b2ParticleSystem26GetCriticalVelocitySquaredERK10b2TimeStep($this,$step)));
 $4=($2)*($3);
 return (+($4));
}


function __ZNK16b2ParticleSystem18GetParticleInvMassEv($this){
 $this=($this)|0;
 var $1=0,$2=.0,$3=.0,$4=0,$5=.0,$6=.0,$7=.0,label=0;

 $1=(($this+44)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=($2)*((1.3333333730697632));
 $4=(($this+32)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=($5)*($3);
 $7=($3)*($6);
 return (+($7));
}


function __ZN6b2Body18ApplyLinearImpulseERK6b2Vec2S2_b($this,$impulse,$point,$wake){
 $this=($this)|0;
 $impulse=($impulse)|0;
 $point=($point)|0;
 $wake=($wake)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,$14=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=.0,$22=0,$23=.0,$24=0,$25=.0;
 var $26=.0,$27=0,$28=.0,$29=.0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(($this)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==2;
 if (!($5)) {
  STACKTOP=sp;return;
 }
 do {
  if ($wake) {
   $8=(($this+4)|0);
   $9=((HEAP16[(($8)>>1)])|0);
   $10=$9&2;
   $11=(($10<<16)>>16)==0;
   if (!($11)) {
    break;
   }
   __ZN6b2Body8SetAwakeEb($this,1);
  }
 } while(0);
 $14=(($this+4)|0);
 $15=((HEAP16[(($14)>>1)])|0);
 $16=$15&2;
 $17=(($16<<16)>>16)==0;
 if ($17) {
  STACKTOP=sp;return;
 }
 $19=(($this+80)|0);
 $20=(($this+136)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 __ZmlfRK6b2Vec2($1,$21,$impulse);
 __ZN6b2Vec2pLERKS_($19,$1);
 $22=(($this+144)|0);
 $23=(+(HEAPF32[(($22)>>2)]));
 $24=(($this+60)|0);
 __ZmiRK6b2Vec2S1_($2,$point,$24);
 $25=(+(__Z7b2CrossRK6b2Vec2S1_($2,$impulse)));
 $26=($23)*($25);
 $27=(($this+88)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=($28)+($26);
 HEAPF32[(($27)>>2)]=$29;
 STACKTOP=sp;return;
}


function __ZNK16b2ParticleSystem19GetCriticalVelocityERK10b2TimeStep($this,$step){
 $this=($this)|0;
 $step=($step)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,label=0;

 $1=(($this+40)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($step+4)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 return (+($5));
}


function __ZNK6b2Body31GetLinearVelocityFromWorldPointERK6b2Vec2($agg_result,$this,$worldPoint){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $worldPoint=($worldPoint)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(($this+80)|0);
 $4=(($this+88)|0);
 $5=(+(HEAPF32[(($4)>>2)]));
 $6=(($this+60)|0);
 __ZmiRK6b2Vec2S1_($2,$worldPoint,$6);
 __Z7b2CrossfRK6b2Vec2($1,$5,$2);
 __ZplRK6b2Vec2S1_($agg_result,$3,$1);
 STACKTOP=sp;return;
}


function __ZN11b2TransformC1ERK6b2Vec2RK5b2Rot($this,$position,$rotation){
 $this=($this)|0;
 $position=($position)|0;
 $rotation=($rotation)|0;
 var label=0;

 __ZN11b2TransformC2ERK6b2Vec2RK5b2Rot($this,$position,$rotation);
 return;
}


function __Z5b2MulRK11b2TransformS1_($agg_result,$A,$B){
 $agg_result=($agg_result)|0;
 $A=($A)|0;
 $B=($B)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast5=0,$3=0,$4=0,$5=0,$6=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$st$2$0=0,$st$3$1=0,$9=0,$10=0,$11=0,$ld$4$0=0,$12$0=0;
 var $ld$5$1=0,$12$1=0,$st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast5=$2;
 $3=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $4=(($agg_result+8)|0);
 $5=(($A+8)|0);
 $6=(($B+8)|0);
 __Z5b2MulRK5b2RotS1_($tmpcast,$5,$6);
 $7=$4;
 $ld$0$0=(($1)|0);
 $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($7)|0);
 HEAP32[(($st$2$0)>>2)]=$8$0;
 $st$3$1=(($7+4)|0);
 HEAP32[(($st$3$1)>>2)]=$8$1;
 $9=(($B)|0);
 __Z5b2MulRK5b2RotRK6b2Vec2($3,$5,$9);
 $10=(($A)|0);
 __ZplRK6b2Vec2S1_($tmpcast5,$3,$10);
 $11=$agg_result;
 $ld$4$0=(($2)|0);
 $12$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $12$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($11)|0);
 HEAP32[(($st$6$0)>>2)]=$12$0;
 $st$7$1=(($11+4)|0);
 HEAP32[(($st$7$1)>>2)]=$12$1;
 STACKTOP=sp;return;
}


function __Z9b2InvSqrtf($x){
 $x=+($x);
 var $1=0,$2=.0,$3=0,$4=0,$5=.0,$6=.0,$7=.0,$8=.0,$9=.0,label=0;

 $1=(HEAPF32[((tempDoublePtr)>>2)]=$x,((HEAP32[((tempDoublePtr)>>2)])|0));
 $2=($x)*((0.5));
 $3=$1>>1;
 $4=(((1597463007)-($3))|0);
 $5=(HEAP32[((tempDoublePtr)>>2)]=$4,(+(HEAPF32[((tempDoublePtr)>>2)])));
 $6=($2)*($5);
 $7=($5)*($6);
 $8=((1.5))-($7);
 $9=($5)*($8);
 return (+($9));
}


function __ZN15b2SlabAllocatorI16b2ParticleHandleE4FreeEPS0_($this,$object){
 $this=($this)|0;
 $object=($object)|0;
 var $1=0,label=0;

 $1=(($this+12)|0);
 __ZN15b2TypedFreeListI16b2ParticleHandleE4FreeEPS0_($1,$object);
 return;
}


function __ZNSt3__19remove_ifIPN16b2ParticleSystem5ProxyEPFbRKS2_EEET_S8_S8_T0_($__first,$__last,$__pred){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__pred=($__pred)|0;
 var $_0_i=0,$2=0,$4=0,$5=0,$_0_ph=0,$__i_0_ph=0,$__i_0=0,$6=0,$7=0,$9=0,$11=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$st$2$0=0,$st$3$1=0,$14=0,$_1=0;
 var label=0;

 $_0_i=$__first;
 while(1) {

  $2=($_0_i|0)==($__last|0);
  if ($2) {
   $_1=$_0_i;
   label = 8;
   break;
  }
  $4=((FUNCTION_TABLE_ii[($__pred)&31]($_0_i))|0);
  $5=(($_0_i+8)|0);
  if ($4) {
   $__i_0_ph=$_0_i;$_0_ph=$_0_i;
   break;
  } else {
   $_0_i=$5;
  }
 }
 if ((label|0) == 8) {

  return (($_1)|0);
 }
 L6: while(1) {


  $__i_0=$__i_0_ph;
  while(1) {

   $6=(($__i_0+8)|0);
   $7=($6|0)==($__last|0);
   if ($7) {
    $_1=$_0_ph;
    break L6;
   }
   $9=((FUNCTION_TABLE_ii[($__pred)&31]($6))|0);
   if ($9) {
    $__i_0=$6;
   } else {
    break;
   }
  }
  $11=$6;
  $12=$_0_ph;
  $ld$0$0=(($11)|0);
  $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($11+4)|0);
  $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $st$2$0=(($12)|0);
  HEAP32[(($st$2$0)>>2)]=$13$0;
  $st$3$1=(($12+4)|0);
  HEAP32[(($st$3$1)>>2)]=$13$1;
  $14=(($_0_ph+8)|0);
  $__i_0_ph=$6;$_0_ph=$14;
 }

 return (($_1)|0);
}


function __ZZN16b2ParticleSystem11SolveZombieEvEN4Test14IsProxyInvalidERKNS_5ProxyE($proxy){
 $proxy=($proxy)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($proxy)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)<0;
 return (($3)|0);
}


function __ZZN16b2ParticleSystem11SolveZombieEvEN4Test16IsContactInvalidERK17b2ParticleContact($contact){
 $contact=($contact)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,label=0;

 $1=(($contact)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)<0;
 if ($3) {
  $9=1;

  return (($9)|0);
 }
 $5=(($contact+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)<0;
 $9=$7;

 return (($9)|0);
}


function __ZNSt3__19remove_ifIP21b2ParticleBodyContactPFbRKS1_EEET_S7_S7_T0_($__first,$__last,$__pred){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__pred=($__pred)|0;
 var $_0_i=0,$2=0,$4=0,$5=0,$_0_ph=0,$__i_0_ph=0,$__i_0=0,$6=0,$7=0,$9=0,$11=0,$12=0,$13=0,$_1=0,label=0;

 $_0_i=$__first;
 while(1) {

  $2=($_0_i|0)==($__last|0);
  if ($2) {
   $_1=$_0_i;
   label = 8;
   break;
  }
  $4=((FUNCTION_TABLE_ii[($__pred)&31]($_0_i))|0);
  $5=(($_0_i+28)|0);
  if ($4) {
   $__i_0_ph=$_0_i;$_0_ph=$_0_i;
   break;
  } else {
   $_0_i=$5;
  }
 }
 if ((label|0) == 8) {

  return (($_1)|0);
 }
 L6: while(1) {


  $__i_0=$__i_0_ph;
  while(1) {

   $6=(($__i_0+28)|0);
   $7=($6|0)==($__last|0);
   if ($7) {
    $_1=$_0_ph;
    break L6;
   }
   $9=((FUNCTION_TABLE_ii[($__pred)&31]($6))|0);
   if ($9) {
    $__i_0=$6;
   } else {
    break;
   }
  }
  $11=$_0_ph;
  $12=$6;
  HEAP32[(($11)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($12)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($12)+(16))>>2)])|0);HEAP32[((($11)+(20))>>2)]=((HEAP32[((($12)+(20))>>2)])|0);HEAP32[((($11)+(24))>>2)]=((HEAP32[((($12)+(24))>>2)])|0);
  $13=(($_0_ph+28)|0);
  $__i_0_ph=$6;$_0_ph=$13;
 }

 return (($_1)|0);
}


function __ZZN16b2ParticleSystem11SolveZombieEvEN4Test20IsBodyContactInvalidERK21b2ParticleBodyContact($contact){
 $contact=($contact)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($contact)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)<0;
 return (($3)|0);
}


function __ZNSt3__19remove_ifIPN16b2ParticleSystem4PairEPFbRKS2_EEET_S8_S8_T0_($__first,$__last,$__pred){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__pred=($__pred)|0;
 var $_0_i=0,$2=0,$4=0,$5=0,$_0_ph=0,$__i_0_ph=0,$__i_0=0,$6=0,$7=0,$9=0,$11=0,$12=0,$13=0,$_1=0,label=0;

 $_0_i=$__first;
 while(1) {

  $2=($_0_i|0)==($__last|0);
  if ($2) {
   $_1=$_0_i;
   label = 8;
   break;
  }
  $4=((FUNCTION_TABLE_ii[($__pred)&31]($_0_i))|0);
  $5=(($_0_i+20)|0);
  if ($4) {
   $__i_0_ph=$_0_i;$_0_ph=$_0_i;
   break;
  } else {
   $_0_i=$5;
  }
 }
 if ((label|0) == 8) {

  return (($_1)|0);
 }
 L6: while(1) {


  $__i_0=$__i_0_ph;
  while(1) {

   $6=(($__i_0+20)|0);
   $7=($6|0)==($__last|0);
   if ($7) {
    $_1=$_0_ph;
    break L6;
   }
   $9=((FUNCTION_TABLE_ii[($__pred)&31]($6))|0);
   if ($9) {
    $__i_0=$6;
   } else {
    break;
   }
  }
  $11=$_0_ph;
  $12=$6;
  HEAP32[(($11)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($12)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($12)+(16))>>2)])|0);
  $13=(($_0_ph+20)|0);
  $__i_0_ph=$6;$_0_ph=$13;
 }

 return (($_1)|0);
}


function __ZZN16b2ParticleSystem11SolveZombieEvEN4Test13IsPairInvalidERKNS_4PairE($pair){
 $pair=($pair)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,label=0;

 $1=(($pair)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)<0;
 if ($3) {
  $9=1;

  return (($9)|0);
 }
 $5=(($pair+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)<0;
 $9=$7;

 return (($9)|0);
}


function __ZNSt3__19remove_ifIPN16b2ParticleSystem5TriadEPFbRKS2_EEET_S8_S8_T0_($__first,$__last,$__pred){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__pred=($__pred)|0;
 var $_0_i=0,$2=0,$4=0,$5=0,$_0_ph=0,$__i_0_ph=0,$__i_0=0,$6=0,$7=0,$9=0,$11=0,$12=0,$13=0,$_1=0,label=0;

 $_0_i=$__first;
 while(1) {

  $2=($_0_i|0)==($__last|0);
  if ($2) {
   $_1=$_0_i;
   label = 8;
   break;
  }
  $4=((FUNCTION_TABLE_ii[($__pred)&31]($_0_i))|0);
  $5=(($_0_i+60)|0);
  if ($4) {
   $__i_0_ph=$_0_i;$_0_ph=$_0_i;
   break;
  } else {
   $_0_i=$5;
  }
 }
 if ((label|0) == 8) {

  return (($_1)|0);
 }
 L6: while(1) {


  $__i_0=$__i_0_ph;
  while(1) {

   $6=(($__i_0+60)|0);
   $7=($6|0)==($__last|0);
   if ($7) {
    $_1=$_0_ph;
    break L6;
   }
   $9=((FUNCTION_TABLE_ii[($__pred)&31]($6))|0);
   if ($9) {
    $__i_0=$6;
   } else {
    break;
   }
  }
  $11=$_0_ph;
  $12=$6;
  (_memcpy((($11)|0), (($12)|0), 60)|0);
  $13=(($_0_ph+60)|0);
  $__i_0_ph=$6;$_0_ph=$13;
 }

 return (($_1)|0);
}


function __ZZN16b2ParticleSystem11SolveZombieEvEN4Test14IsTriadInvalidERKNS_5TriadE($triad){
 $triad=($triad)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$13=0,label=0;

 $1=(($triad)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)<0;
 if ($3) {
  $13=1;

  return (($13)|0);
 }
 $5=(($triad+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)<0;
 if ($7) {
  $13=1;

  return (($13)|0);
 }
 $9=(($triad+8)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)<0;
 $13=$11;

 return (($13)|0);
}


function __ZNK16b2ParticleSystem24LifetimeToExpirationTimeEf($this,$lifetime){
 $this=($this)|0;
 $lifetime=+($lifetime);
 var $1=0,$ld$0$0=0,$2$0=0,$ld$1$1=0,$2$1=0,$3=0,$4=.0,$5=.0,$6=.0,$7$0=0,$7$1=0,$8$0=0,$8$1=0,label=0;

 $1=(($this+288)|0);
 $ld$0$0=(($1)|0);
 $2$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $2$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $3=(($this+372)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($lifetime)/($4);
 $6=($5)*((4294967296.0));
 $7$0=(~~((+($6))))>>>0;$7$1=(tempDouble=(+($6)),(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0);
 $8$0=((_i64Add($7$0,$7$1,$2$0,$2$1))|0);$8$1=tempRet0;
 return (((tempRet0=$8$1,$8$0))|0);
}


function __ZN16b2ParticleSystem15DestroyParticleEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var label=0;

 __ZN16b2ParticleSystem15DestroyParticleEib($this,$index,0);
 return;
}


function __ZZN16b2ParticleSystem12RotateBufferEiiiENK10NewIndicesixEi($this,$i){
 $this=($this)|0;
 $i=($i)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$14=0,$16=0,$17=0,$_0=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>($i|0);
 if ($3) {
  $_0=$i;

  return (($_0)|0);
 }
 $5=(($this+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>($i|0);
 $8=(($this+8)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 if ($7) {
  $11=((($i)-($6))|0);
  $12=((($11)+($9))|0);
  $_0=$12;

  return (($_0)|0);
 }
 $14=($9|0)>($i|0);
 if (!($14)) {
  $_0=$i;

  return (($_0)|0);
 }
 $16=((($2)+($i))|0);
 $17=((($16)-($6))|0);
 $_0=$17;

 return (($_0)|0);
}


function __ZNK16b2ParticleHandle8GetIndexEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN16b2ParticleSystem13RequestBufferIiEEPT_S2_($this,$buffer){
 $this=($this)|0;
 $buffer=($buffer)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 if (!($1)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $3=(($this+60)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==0;
 if ($5) {
  __ZN16b2ParticleSystem34ReallocateInternalAllocatedBuffersEi($this,256);
 }
 $8=(($this+376)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9)|0);
 $11=((HEAP32[(($3)>>2)])|0);
 $12=$11<<2;
 $13=((__ZN16b2BlockAllocator8AllocateEi($10,$12))|0);
 $14=$13;
 $15=((HEAP32[(($3)>>2)])|0);
 $16=$15<<2;
 _memset((((($13)|0))|0), ((((0)|0))|0), (((($16)|0))|0))|0;
 $_0=$14;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem23GetExpirationTimeBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+272)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((__ZN16b2ParticleSystem13RequestBufferIiEEPT_S2_($this,$2))|0);
 HEAP32[(($1)>>2)]=$3;
 return (($3)|0);
}


function __ZN16b2ParticleSystem13RequestBufferI6b2Vec2EEPT_S3_($this,$buffer){
 $this=($this)|0;
 $buffer=($buffer)|0;
 var $1=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 if (!($1)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $3=(($this+60)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($4|0)==0;
 if ($5) {
  __ZN16b2ParticleSystem34ReallocateInternalAllocatedBuffersEi($this,256);
 }
 $8=(($this+376)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9)|0);
 $11=((HEAP32[(($3)>>2)])|0);
 $12=$11<<3;
 $13=((__ZN16b2BlockAllocator8AllocateEi($10,$12))|0);
 $14=$13;
 $15=((HEAP32[(($3)>>2)])|0);
 $16=$15<<3;
 _memset((((($13)|0))|0), ((((0)|0))|0), (((($16)|0))|0))|0;
 $_0=$14;

 return (($_0)|0);
}


function __ZL18IsSignificantForceRK6b2Vec2($force){
 $force=($force)|0;
 var $1=0,$2=.0,$3=0,$5=0,$6=.0,$7=0,$9=0,label=0;

 $1=(($force)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=$2!=(0.0);
 if ($3) {
  $9=1;

  return (($9)|0);
 }
 $5=(($force+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=$6!=(0.0);
 $9=$7;

 return (($9)|0);
}


function __ZN16b2ParticleSystem18PrepareForceBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this+21)|0);
 $2=((HEAP8[($1)])|0);
 $3=(($2<<24)>>24)==0;
 if (!($3)) {
  return;
 }
 $5=(($this+128)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=$6;
 $8=(($this+56)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=$9<<3;
 _memset((((($7)|0))|0), ((((0)|0))|0), (((($10)|0))|0))|0;
 HEAP8[($1)]=1;
 return;
}


function __ZNK16b2ParticleSystem17ForceCanBeAppliedEj($this,$flags){
 $this=($this)|0;
 $flags=($flags)|0;
 var $1=0,$2=0,label=0;

 $1=$flags&4;
 $2=($1|0)==0;
 return (($2)|0);
}


function __ZNK16b2ParticleSystem9QueryAABBEP15b2QueryCallbackRK6b2AABB($this,$callback,$aabb){
 $this=($this)|0;
 $callback=($callback)|0;
 $aabb=($aabb)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,$13=.0,$14=0,$15=.0,$16=.0,$17=0,$18=.0,$19=.0,$20=0,$21=0;
 var $22=0,$23=.0,$24=0,$25=.0,$26=.0,$27=0,$28=.0,$29=.0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$proxy_019=0,$37=0,$38=0,$39=0,$40=.0,$41=0;
 var $42=.0,$43=0,$45=.0,$46=0,$48=.0,$49=0,$50=.0,$51=0,$53=.0,$54=0,$56=0,$57=0,$58=0,$59=0,$61=0,$62=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(((sp)+(24))|0);
 $5=(($this+212)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)==0;
 if ($7) {
  STACKTOP=sp;return;
 }
 $9=(($this+220)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=(($10+($6<<3))|0);
 $12=(($this+44)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=(($aabb)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=($13)*($15);
 $17=(($aabb+4)|0);
 $18=(+(HEAPF32[(($17)>>2)]));
 $19=($13)*($18);
 $20=((__ZL10computeTagff($16,$19))|0);
 HEAP32[(($3)>>2)]=$20;
 $21=(($2)|0);
 $22=((__ZNSt3__113__lower_boundIRNS_6__lessIN16b2ParticleSystem5ProxyEjEEPS3_jEET0_S7_S7_RKT1_T_($10,$11,$3,$2))|0);
 $23=(+(HEAPF32[(($12)>>2)]));
 $24=(($aabb+8)|0);
 $25=(+(HEAPF32[(($24)>>2)]));
 $26=($23)*($25);
 $27=(($aabb+12)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=($23)*($28);
 $30=((__ZL10computeTagff($26,$29))|0);
 HEAP32[(($4)>>2)]=$30;
 $31=(($1)|0);
 $32=((__ZNSt3__113__upper_boundIRNS_6__lessIjN16b2ParticleSystem5ProxyEEEPS3_jEET0_S7_S7_RKT1_T_($22,$11,$4,$1))|0);
 $33=($22>>>0)<($32>>>0);
 if (!($33)) {
  STACKTOP=sp;return;
 }
 $34=(($this+112)|0);
 $35=$callback;
 $proxy_019=$22;
 L7: while(1) {

  $37=(($proxy_019)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $39=((HEAP32[(($34)>>2)])|0);
  $40=(+(HEAPF32[(($14)>>2)]));
  $41=(($39+($38<<3))|0);
  $42=(+(HEAPF32[(($41)>>2)]));
  $43=$40<$42;
  do {
   if ($43) {
    $45=(+(HEAPF32[(($24)>>2)]));
    $46=$42<$45;
    if (!($46)) {
     break;
    }
    $48=(+(HEAPF32[(($17)>>2)]));
    $49=(($39+($38<<3)+4)|0);
    $50=(+(HEAPF32[(($49)>>2)]));
    $51=$48<$50;
    if (!($51)) {
     break;
    }
    $53=(+(HEAPF32[(($27)>>2)]));
    $54=$50<$53;
    if (!($54)) {
     break;
    }
    $56=((HEAP32[(($35)>>2)])|0);
    $57=(($56+12)|0);
    $58=((HEAP32[(($57)>>2)])|0);
    $59=((FUNCTION_TABLE_iiii[($58)&31]($callback,$this,$38))|0);
    if (!($59)) {
     label = 10;
     break L7;
    }
   }
  } while(0);
  $61=(($proxy_019+8)|0);
  $62=($61>>>0)<($32>>>0);
  if ($62) {
   $proxy_019=$61;
  } else {
   label = 10;
   break;
  }
 }
 if ((label|0) == 10) {
  STACKTOP=sp;return;
 }
}


function __ZNSt3__113__rotate_leftIPP16b2ParticleHandleEET_S4_S4_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=((HEAP32[(($__first)>>2)])|0);
 $2=(($__first+4)|0);
 $3=$__last;
 $4=$2;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=$__first;
 $8=$2;
 ((_memmove((($7)|0),(($8)|0),(($5)|0)))|0);
 $9=(($__first+($6<<2))|0);
 HEAP32[(($9)>>2)]=$1;
 return (($9)|0);
}


function __ZNSt3__114__rotate_rightIPP16b2ParticleHandleEET_S4_S4_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=((($__last)-(4))|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$1;
 $4=$__first;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=(((-$6))|0);
 $8=(($__last+($7<<2))|0);
 $9=$8;
 $10=$__first;
 ((_memmove((($9)|0),(($10)|0),(($5)|0)))|0);
 HEAP32[(($__first)>>2)]=$2;
 return (($8)|0);
}


function __ZNSt3__112__rotate_gcdIPP16b2ParticleHandleEET_S4_S4_S4_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$_09_i=0,$_078_i=0,$11=0,$12=0,$13=0,$14=0,$15=0,$_05_i=0,$_0_i=0,$16=0,$17=0;
 var $18=0,$19=0,$_sum=0,$__p_031=0,$21=0,$22=0,$23=0,$__p1_0=0,$__p2_0=0,$25=0,$26=0,$27=0,$28=0,$29=0,$31=0,$33=0,$34=0,$__p2_1=0,$36=0,$38=0;
 var $39=0,$_0=0,label=0;

 $1=$__middle;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>2;
 $5=$__last;
 $6=((($5)-($1))|0);
 $7=$6>>2;
 $8=($4|0)==($7|0);
 if ($8) {
  $10=($__first|0)==($__middle|0);
  if ($10) {
   $_0=$__middle;

   return (($_0)|0);
  } else {
   $_078_i=$__first;$_09_i=$__middle;
  }
  while(1) {


   $11=((HEAP32[(($_078_i)>>2)])|0);
   $12=((HEAP32[(($_09_i)>>2)])|0);
   HEAP32[(($_078_i)>>2)]=$12;
   HEAP32[(($_09_i)>>2)]=$11;
   $13=(($_078_i+4)|0);
   $14=(($_09_i+4)|0);
   $15=($13|0)==($__middle|0);
   if ($15) {
    $_0=$__middle;
    break;
   } else {
    $_078_i=$13;$_09_i=$14;
   }
  }

  return (($_0)|0);
 } else {
  $_0_i=$4;$_05_i=$7;
 }
 while(1) {


  $16=(((($_0_i|0))%(($_05_i|0)))&-1);
  $17=($16|0)==0;
  if ($17) {
   break;
  } else {
   $_0_i=$_05_i;$_05_i=$16;
  }
 }
 $18=($_05_i|0)==0;
 if (!($18)) {
  $19=(($__first+($_05_i<<2))|0);
  $_sum=((($4)-(1))|0);
  $__p_031=$19;
  while(1) {

   $21=((($__p_031)-(4))|0);
   $22=((HEAP32[(($21)>>2)])|0);
   $23=(($__p_031+($_sum<<2))|0);
   $__p2_0=$23;$__p1_0=$21;
   while(1) {


    $25=((HEAP32[(($__p2_0)>>2)])|0);
    HEAP32[(($__p1_0)>>2)]=$25;
    $26=$__p2_0;
    $27=((($5)-($26))|0);
    $28=$27>>2;
    $29=($4|0)<($28|0);
    if ($29) {
     $31=(($__p2_0+($4<<2))|0);
     $__p2_1=$31;
    } else {
     $33=((($4)-($28))|0);
     $34=(($__first+($33<<2))|0);
     $__p2_1=$34;
    }

    $36=($__p2_1|0)==($21|0);
    if ($36) {
     break;
    } else {
     $__p1_0=$__p2_0;$__p2_0=$__p2_1;
    }
   }
   HEAP32[(($__p2_0)>>2)]=$22;
   $38=($21|0)==($__first|0);
   if ($38) {
    break;
   } else {
    $__p_031=$21;
   }
  }
 }
 $39=(($__first+($7<<2))|0);
 $_0=$39;

 return (($_0)|0);
}


function __ZNSt3__113__rotate_leftIPPvEET_S3_S3_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=((HEAP32[(($__first)>>2)])|0);
 $2=(($__first+4)|0);
 $3=$__last;
 $4=$2;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=$__first;
 $8=$2;
 ((_memmove((($7)|0),(($8)|0),(($5)|0)))|0);
 $9=(($__first+($6<<2))|0);
 HEAP32[(($9)>>2)]=$1;
 return (($9)|0);
}


function __ZNSt3__114__rotate_rightIPPvEET_S3_S3_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=((($__last)-(4))|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$1;
 $4=$__first;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=(((-$6))|0);
 $8=(($__last+($7<<2))|0);
 $9=$8;
 $10=$__first;
 ((_memmove((($9)|0),(($10)|0),(($5)|0)))|0);
 HEAP32[(($__first)>>2)]=$2;
 return (($8)|0);
}


function __ZNSt3__112__rotate_gcdIPPvEET_S3_S3_S3_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$_09_i=0,$_078_i=0,$11=0,$12=0,$13=0,$14=0,$15=0,$_05_i=0,$_0_i=0,$16=0,$17=0;
 var $18=0,$19=0,$_sum=0,$__p_031=0,$21=0,$22=0,$23=0,$__p1_0=0,$__p2_0=0,$25=0,$26=0,$27=0,$28=0,$29=0,$31=0,$33=0,$34=0,$__p2_1=0,$36=0,$38=0;
 var $39=0,$_0=0,label=0;

 $1=$__middle;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>2;
 $5=$__last;
 $6=((($5)-($1))|0);
 $7=$6>>2;
 $8=($4|0)==($7|0);
 if ($8) {
  $10=($__first|0)==($__middle|0);
  if ($10) {
   $_0=$__middle;

   return (($_0)|0);
  } else {
   $_078_i=$__first;$_09_i=$__middle;
  }
  while(1) {


   $11=((HEAP32[(($_078_i)>>2)])|0);
   $12=((HEAP32[(($_09_i)>>2)])|0);
   HEAP32[(($_078_i)>>2)]=$12;
   HEAP32[(($_09_i)>>2)]=$11;
   $13=(($_078_i+4)|0);
   $14=(($_09_i+4)|0);
   $15=($13|0)==($__middle|0);
   if ($15) {
    $_0=$__middle;
    break;
   } else {
    $_078_i=$13;$_09_i=$14;
   }
  }

  return (($_0)|0);
 } else {
  $_0_i=$4;$_05_i=$7;
 }
 while(1) {


  $16=(((($_0_i|0))%(($_05_i|0)))&-1);
  $17=($16|0)==0;
  if ($17) {
   break;
  } else {
   $_0_i=$_05_i;$_05_i=$16;
  }
 }
 $18=($_05_i|0)==0;
 if (!($18)) {
  $19=(($__first+($_05_i<<2))|0);
  $_sum=((($4)-(1))|0);
  $__p_031=$19;
  while(1) {

   $21=((($__p_031)-(4))|0);
   $22=((HEAP32[(($21)>>2)])|0);
   $23=(($__p_031+($_sum<<2))|0);
   $__p2_0=$23;$__p1_0=$21;
   while(1) {


    $25=((HEAP32[(($__p2_0)>>2)])|0);
    HEAP32[(($__p1_0)>>2)]=$25;
    $26=$__p2_0;
    $27=((($5)-($26))|0);
    $28=$27>>2;
    $29=($4|0)<($28|0);
    if ($29) {
     $31=(($__p2_0+($4<<2))|0);
     $__p2_1=$31;
    } else {
     $33=((($4)-($28))|0);
     $34=(($__first+($33<<2))|0);
     $__p2_1=$34;
    }

    $36=($__p2_1|0)==($21|0);
    if ($36) {
     break;
    } else {
     $__p1_0=$__p2_0;$__p2_0=$__p2_1;
    }
   }
   HEAP32[(($__p2_0)>>2)]=$22;
   $38=($21|0)==($__first|0);
   if ($38) {
    break;
   } else {
    $__p_031=$21;
   }
  }
 }
 $39=(($__first+($7<<2))|0);
 $_0=$39;

 return (($_0)|0);
}


function __ZNSt3__116__rotate_forwardIP15b2ParticleColorEET_S3_S3_S3_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $__t_i22=0,$__t_i=0,$1=0,$tmpcast_i=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$__middle41=0,$scevgep=0,$10=0,$scevgep42=0,$scevgep4243=0,$11=0,$12=0,$14=0;
 var $15=0,$16=0,$_02031=0,$__020=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$scevgep44=0,$_020_lcssa47=0,$_lcssa2945=0,$26=0,$tmpcast_i23=0,$_121_ph=0,$__i_1_ph=0,$_1_ph=0;
 var $__i_1=0,$_1=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$__121=0,$_lcssa2946=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $__t_i22=((sp)|0);
 $__t_i=(((sp)+(8))|0);
 $1=$__t_i;
 $tmpcast_i=$__t_i;
 $2=$__first;
 $3=((((((HEAPU8[($2)])|0))|(((HEAPU8[((($2)+(1))|0)])|0)<<8)|(((HEAPU8[((($2)+(2))|0)])|0)<<16)|(((HEAPU8[((($2)+(3))|0)])|0)<<24))|0));
 HEAP32[(($__t_i)>>2)]=$3;
 $4=((__ZN15b2ParticleColoraSERKS_($__first,$__middle))|0);
 $5=((__ZN15b2ParticleColoraSERKS_($__middle,$tmpcast_i))|0);
 $6=(($__first+4)|0);
 $7=(($__middle+4)|0);
 $8=($7|0)==($__last|0);
 $9=($6|0)==($__middle|0);
 do {
  if ($8) {
   if ($9) {
    $_lcssa2946=$6;
   } else {
    $_lcssa2945=$6;$_020_lcssa47=$__middle;
    break;
   }

   STACKTOP=sp;return (($_lcssa2946)|0);
  } else {
   $__middle41=$__middle;
   $scevgep=((($__last)-(8))|0);
   $10=(((-$__middle41))|0);
   $scevgep42=(($scevgep+$10)|0);
   $scevgep4243=$scevgep42;
   $11=$scevgep4243>>>2;
   $12=((($11)+(2))|0);
   $_02031=$__middle;$16=$6;$15=$7;$14=$9;
   while(1) {




    $__020=($14?$15:$_02031);
    $17=$16;
    $18=((((((HEAPU8[($17)])|0))|(((HEAPU8[((($17)+(1))|0)])|0)<<8)|(((HEAPU8[((($17)+(2))|0)])|0)<<16)|(((HEAPU8[((($17)+(3))|0)])|0)<<24))|0));
    HEAP32[(($__t_i)>>2)]=$18;
    $19=((__ZN15b2ParticleColoraSERKS_($16,$15))|0);
    $20=((__ZN15b2ParticleColoraSERKS_($15,$tmpcast_i))|0);
    $21=(($16+4)|0);
    $22=(($15+4)|0);
    $23=($22|0)==($__last|0);
    $24=($21|0)==($__020|0);
    if ($23) {
     break;
    } else {
     $_02031=$__020;$16=$21;$15=$22;$14=$24;
    }
   }
   $scevgep44=(($__first+($12<<2))|0);
   if ($24) {
    $_lcssa2946=$scevgep44;
   } else {
    $_lcssa2945=$scevgep44;$_020_lcssa47=$__020;
    break;
   }

   STACKTOP=sp;return (($_lcssa2946)|0);
  }
 } while(0);


 $26=$__t_i22;
 $tmpcast_i23=$__t_i22;
 $_1_ph=$_lcssa2945;$__i_1_ph=$_020_lcssa47;$_121_ph=$_020_lcssa47;
 L10: while(1) {



  $_1=$_1_ph;$__i_1=$__i_1_ph;
  while(1) {


   $28=$_1;
   $29=((((((HEAPU8[($28)])|0))|(((HEAPU8[((($28)+(1))|0)])|0)<<8)|(((HEAPU8[((($28)+(2))|0)])|0)<<16)|(((HEAPU8[((($28)+(3))|0)])|0)<<24))|0));
   HEAP32[(($__t_i22)>>2)]=$29;
   $30=((__ZN15b2ParticleColoraSERKS_($_1,$__i_1))|0);
   $31=((__ZN15b2ParticleColoraSERKS_($__i_1,$tmpcast_i23))|0);
   $32=(($_1+4)|0);
   $33=(($__i_1+4)|0);
   $34=($33|0)==($__last|0);
   $35=($32|0)==($_121_ph|0);
   if (!($34)) {
    break;
   }
   if ($35) {
    $_lcssa2946=$_lcssa2945;
    break L10;
   } else {
    $_1=$32;$__i_1=$_121_ph;
   }
  }
  $__121=($35?$33:$_121_ph);
  $_1_ph=$32;$__i_1_ph=$33;$_121_ph=$__121;
 }

 STACKTOP=sp;return (($_lcssa2946)|0);
}


function __ZNSt3__113__rotate_leftIPfEET_S2_S2_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=.0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=(+(HEAPF32[(($__first)>>2)]));
 $2=(($__first+4)|0);
 $3=$__last;
 $4=$2;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=$__first;
 $8=$2;
 ((_memmove((($7)|0),(($8)|0),(($5)|0)))|0);
 $9=(($__first+($6<<2))|0);
 HEAPF32[(($9)>>2)]=$1;
 return (($9)|0);
}


function __ZNSt3__114__rotate_rightIPfEET_S2_S2_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=.0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=((($__last)-(4))|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=$1;
 $4=$__first;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=(((-$6))|0);
 $8=(($__last+($7<<2))|0);
 $9=$8;
 $10=$__first;
 ((_memmove((($9)|0),(($10)|0),(($5)|0)))|0);
 HEAPF32[(($__first)>>2)]=$2;
 return (($8)|0);
}


function __ZNSt3__112__rotate_gcdIPfEET_S2_S2_S2_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$_09_i=0,$_078_i=0,$11=.0,$12=.0,$13=0,$14=0,$15=0,$_05_i=0,$_0_i=0,$16=0,$17=0;
 var $18=0,$19=0,$_sum=0,$__p_031=0,$21=0,$22=.0,$23=0,$__p1_0=0,$__p2_0=0,$25=.0,$26=0,$27=0,$28=0,$29=0,$31=0,$33=0,$34=0,$__p2_1=0,$36=0,$38=0;
 var $39=0,$_0=0,label=0;

 $1=$__middle;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>2;
 $5=$__last;
 $6=((($5)-($1))|0);
 $7=$6>>2;
 $8=($4|0)==($7|0);
 if ($8) {
  $10=($__first|0)==($__middle|0);
  if ($10) {
   $_0=$__middle;

   return (($_0)|0);
  } else {
   $_078_i=$__first;$_09_i=$__middle;
  }
  while(1) {


   $11=(+(HEAPF32[(($_078_i)>>2)]));
   $12=(+(HEAPF32[(($_09_i)>>2)]));
   HEAPF32[(($_078_i)>>2)]=$12;
   HEAPF32[(($_09_i)>>2)]=$11;
   $13=(($_078_i+4)|0);
   $14=(($_09_i+4)|0);
   $15=($13|0)==($__middle|0);
   if ($15) {
    $_0=$__middle;
    break;
   } else {
    $_078_i=$13;$_09_i=$14;
   }
  }

  return (($_0)|0);
 } else {
  $_0_i=$4;$_05_i=$7;
 }
 while(1) {


  $16=(((($_0_i|0))%(($_05_i|0)))&-1);
  $17=($16|0)==0;
  if ($17) {
   break;
  } else {
   $_0_i=$_05_i;$_05_i=$16;
  }
 }
 $18=($_05_i|0)==0;
 if (!($18)) {
  $19=(($__first+($_05_i<<2))|0);
  $_sum=((($4)-(1))|0);
  $__p_031=$19;
  while(1) {

   $21=((($__p_031)-(4))|0);
   $22=(+(HEAPF32[(($21)>>2)]));
   $23=(($__p_031+($_sum<<2))|0);
   $__p2_0=$23;$__p1_0=$21;
   while(1) {


    $25=(+(HEAPF32[(($__p2_0)>>2)]));
    HEAPF32[(($__p1_0)>>2)]=$25;
    $26=$__p2_0;
    $27=((($5)-($26))|0);
    $28=$27>>2;
    $29=($4|0)<($28|0);
    if ($29) {
     $31=(($__p2_0+($4<<2))|0);
     $__p2_1=$31;
    } else {
     $33=((($4)-($28))|0);
     $34=(($__first+($33<<2))|0);
     $__p2_1=$34;
    }

    $36=($__p2_1|0)==($21|0);
    if ($36) {
     break;
    } else {
     $__p1_0=$__p2_0;$__p2_0=$__p2_1;
    }
   }
   HEAPF32[(($__p2_0)>>2)]=$22;
   $38=($21|0)==($__first|0);
   if ($38) {
    break;
   } else {
    $__p_031=$21;
   }
  }
 }
 $39=(($__first+($7<<2))|0);
 $_0=$39;

 return (($_0)|0);
}


function __ZNSt3__113__rotate_leftIPP15b2ParticleGroupEET_S4_S4_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=((HEAP32[(($__first)>>2)])|0);
 $2=(($__first+4)|0);
 $3=$__last;
 $4=$2;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=$__first;
 $8=$2;
 ((_memmove((($7)|0),(($8)|0),(($5)|0)))|0);
 $9=(($__first+($6<<2))|0);
 HEAP32[(($9)>>2)]=$1;
 return (($9)|0);
}


function __ZNSt3__114__rotate_rightIPP15b2ParticleGroupEET_S4_S4_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=((($__last)-(4))|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$1;
 $4=$__first;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=(((-$6))|0);
 $8=(($__last+($7<<2))|0);
 $9=$8;
 $10=$__first;
 ((_memmove((($9)|0),(($10)|0),(($5)|0)))|0);
 HEAP32[(($__first)>>2)]=$2;
 return (($8)|0);
}


function __ZNSt3__112__rotate_gcdIPP15b2ParticleGroupEET_S4_S4_S4_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$_09_i=0,$_078_i=0,$11=0,$12=0,$13=0,$14=0,$15=0,$_05_i=0,$_0_i=0,$16=0,$17=0;
 var $18=0,$19=0,$_sum=0,$__p_031=0,$21=0,$22=0,$23=0,$__p1_0=0,$__p2_0=0,$25=0,$26=0,$27=0,$28=0,$29=0,$31=0,$33=0,$34=0,$__p2_1=0,$36=0,$38=0;
 var $39=0,$_0=0,label=0;

 $1=$__middle;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>2;
 $5=$__last;
 $6=((($5)-($1))|0);
 $7=$6>>2;
 $8=($4|0)==($7|0);
 if ($8) {
  $10=($__first|0)==($__middle|0);
  if ($10) {
   $_0=$__middle;

   return (($_0)|0);
  } else {
   $_078_i=$__first;$_09_i=$__middle;
  }
  while(1) {


   $11=((HEAP32[(($_078_i)>>2)])|0);
   $12=((HEAP32[(($_09_i)>>2)])|0);
   HEAP32[(($_078_i)>>2)]=$12;
   HEAP32[(($_09_i)>>2)]=$11;
   $13=(($_078_i+4)|0);
   $14=(($_09_i+4)|0);
   $15=($13|0)==($__middle|0);
   if ($15) {
    $_0=$__middle;
    break;
   } else {
    $_078_i=$13;$_09_i=$14;
   }
  }

  return (($_0)|0);
 } else {
  $_0_i=$4;$_05_i=$7;
 }
 while(1) {


  $16=(((($_0_i|0))%(($_05_i|0)))&-1);
  $17=($16|0)==0;
  if ($17) {
   break;
  } else {
   $_0_i=$_05_i;$_05_i=$16;
  }
 }
 $18=($_05_i|0)==0;
 if (!($18)) {
  $19=(($__first+($_05_i<<2))|0);
  $_sum=((($4)-(1))|0);
  $__p_031=$19;
  while(1) {

   $21=((($__p_031)-(4))|0);
   $22=((HEAP32[(($21)>>2)])|0);
   $23=(($__p_031+($_sum<<2))|0);
   $__p2_0=$23;$__p1_0=$21;
   while(1) {


    $25=((HEAP32[(($__p2_0)>>2)])|0);
    HEAP32[(($__p1_0)>>2)]=$25;
    $26=$__p2_0;
    $27=((($5)-($26))|0);
    $28=$27>>2;
    $29=($4|0)<($28|0);
    if ($29) {
     $31=(($__p2_0+($4<<2))|0);
     $__p2_1=$31;
    } else {
     $33=((($4)-($28))|0);
     $34=(($__first+($33<<2))|0);
     $__p2_1=$34;
    }

    $36=($__p2_1|0)==($21|0);
    if ($36) {
     break;
    } else {
     $__p1_0=$__p2_0;$__p2_0=$__p2_1;
    }
   }
   HEAP32[(($__p2_0)>>2)]=$22;
   $38=($21|0)==($__first|0);
   if ($38) {
    break;
   } else {
    $__p_031=$21;
   }
  }
 }
 $39=(($__first+($7<<2))|0);
 $_0=$39;

 return (($_0)|0);
}


function __ZNSt3__113__rotate_leftIP6b2Vec2EET_S3_S3_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$ld$0$0=0,$2$0=0,$ld$1$1=0,$2$1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=$__first;
 $ld$0$0=(($1)|0);
 $2$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $2$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $3=(($__first+8)|0);
 $4=$__last;
 $5=$3;
 $6=((($4)-($5))|0);
 $7=$6>>3;
 $8=$__first;
 $9=$3;
 ((_memmove((($8)|0),(($9)|0),(($6)|0)))|0);
 $10=(($__first+($7<<3))|0);
 $11=$10;
 $st$2$0=(($11)|0);
 HEAP32[(($st$2$0)>>2)]=$2$0;
 $st$3$1=(($11+4)|0);
 HEAP32[(($st$3$1)>>2)]=$2$1;
 return (($10)|0);
}


function __ZNSt3__114__rotate_rightIP6b2Vec2EET_S3_S3_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$st$2$0=0,$st$3$1=0,label=0;

 $1=((($__last)-(8))|0);
 $2=$1;
 $ld$0$0=(($2)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($2+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $4=$1;
 $5=$__first;
 $6=((($4)-($5))|0);
 $7=$6>>3;
 $8=(((-$7))|0);
 $9=(($__last+($8<<3))|0);
 $10=$9;
 $11=$__first;
 ((_memmove((($10)|0),(($11)|0),(($6)|0)))|0);
 $12=$__first;
 $st$2$0=(($12)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($12+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 return (($9)|0);
}


function __ZNSt3__112__rotate_gcdIP6b2Vec2EET_S3_S3_S3_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$_09_i=0,$_078_i=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$13=0,$ld$2$0=0,$14$0=0,$ld$3$1=0;
 var $14$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=0,$_05_i=0,$_0_i=0,$18=0,$19=0,$20=0,$21=0,$_sum=0,$__p_031=0,$23=0,$24=0,$ld$8$0=0,$25$0=0;
 var $ld$9$1=0,$25$1=0,$26=0,$__p1_0=0,$__p2_0=0,$28=0,$29=0,$ld$10$0=0,$30$0=0,$ld$11$1=0,$30$1=0,$st$12$0=0,$st$13$1=0,$31=0,$32=0,$33=0,$34=0,$36=0,$38=0,$39=0;
 var $__p2_1=0,$41=0,$st$14$0=0,$st$15$1=0,$43=0,$44=0,$_0=0,label=0;

 $1=$__middle;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>3;
 $5=$__last;
 $6=((($5)-($1))|0);
 $7=$6>>3;
 $8=($4|0)==($7|0);
 if ($8) {
  $10=($__first|0)==($__middle|0);
  if ($10) {
   $_0=$__middle;

   return (($_0)|0);
  } else {
   $_078_i=$__first;$_09_i=$__middle;
  }
  while(1) {


   $11=$_078_i;
   $ld$0$0=(($11)|0);
   $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($11+4)|0);
   $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $13=$_09_i;
   $ld$2$0=(($13)|0);
   $14$0=((HEAP32[(($ld$2$0)>>2)])|0);
   $ld$3$1=(($13+4)|0);
   $14$1=((HEAP32[(($ld$3$1)>>2)])|0);
   $st$4$0=(($11)|0);
   HEAP32[(($st$4$0)>>2)]=$14$0;
   $st$5$1=(($11+4)|0);
   HEAP32[(($st$5$1)>>2)]=$14$1;
   $st$6$0=(($13)|0);
   HEAP32[(($st$6$0)>>2)]=$12$0;
   $st$7$1=(($13+4)|0);
   HEAP32[(($st$7$1)>>2)]=$12$1;
   $15=(($_078_i+8)|0);
   $16=(($_09_i+8)|0);
   $17=($15|0)==($__middle|0);
   if ($17) {
    $_0=$__middle;
    break;
   } else {
    $_078_i=$15;$_09_i=$16;
   }
  }

  return (($_0)|0);
 } else {
  $_0_i=$4;$_05_i=$7;
 }
 while(1) {


  $18=(((($_0_i|0))%(($_05_i|0)))&-1);
  $19=($18|0)==0;
  if ($19) {
   break;
  } else {
   $_0_i=$_05_i;$_05_i=$18;
  }
 }
 $20=($_05_i|0)==0;
 if (!($20)) {
  $21=(($__first+($_05_i<<3))|0);
  $_sum=((($4)-(1))|0);
  $__p_031=$21;
  while(1) {

   $23=((($__p_031)-(8))|0);
   $24=$23;
   $ld$8$0=(($24)|0);
   $25$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($24+4)|0);
   $25$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $26=(($__p_031+($_sum<<3))|0);
   $__p2_0=$26;$__p1_0=$23;
   while(1) {


    $28=$__p2_0;
    $29=$__p1_0;
    $ld$10$0=(($28)|0);
    $30$0=((HEAP32[(($ld$10$0)>>2)])|0);
    $ld$11$1=(($28+4)|0);
    $30$1=((HEAP32[(($ld$11$1)>>2)])|0);
    $st$12$0=(($29)|0);
    HEAP32[(($st$12$0)>>2)]=$30$0;
    $st$13$1=(($29+4)|0);
    HEAP32[(($st$13$1)>>2)]=$30$1;
    $31=$__p2_0;
    $32=((($5)-($31))|0);
    $33=$32>>3;
    $34=($4|0)<($33|0);
    if ($34) {
     $36=(($__p2_0+($4<<3))|0);
     $__p2_1=$36;
    } else {
     $38=((($4)-($33))|0);
     $39=(($__first+($38<<3))|0);
     $__p2_1=$39;
    }

    $41=($__p2_1|0)==($23|0);
    if ($41) {
     break;
    } else {
     $__p1_0=$__p2_0;$__p2_0=$__p2_1;
    }
   }
   $st$14$0=(($28)|0);
   HEAP32[(($st$14$0)>>2)]=$25$0;
   $st$15$1=(($28+4)|0);
   HEAP32[(($st$15$1)>>2)]=$25$1;
   $43=($23|0)==($__first|0);
   if ($43) {
    break;
   } else {
    $__p_031=$23;
   }
  }
 }
 $44=(($__first+($7<<3))|0);
 $_0=$44;

 return (($_0)|0);
}


function __ZNSt3__113__rotate_leftIPiEET_S2_S2_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=((HEAP32[(($__first)>>2)])|0);
 $2=(($__first+4)|0);
 $3=$__last;
 $4=$2;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=$__first;
 $8=$2;
 ((_memmove((($7)|0),(($8)|0),(($5)|0)))|0);
 $9=(($__first+($6<<2))|0);
 HEAP32[(($9)>>2)]=$1;
 return (($9)|0);
}


function __ZNSt3__114__rotate_rightIPiEET_S2_S2_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=((($__last)-(4))|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$1;
 $4=$__first;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=(((-$6))|0);
 $8=(($__last+($7<<2))|0);
 $9=$8;
 $10=$__first;
 ((_memmove((($9)|0),(($10)|0),(($5)|0)))|0);
 HEAP32[(($__first)>>2)]=$2;
 return (($8)|0);
}


function __ZNSt3__112__rotate_gcdIPiEET_S2_S2_S2_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$_09_i=0,$_078_i=0,$11=0,$12=0,$13=0,$14=0,$15=0,$_05_i=0,$_0_i=0,$16=0,$17=0;
 var $18=0,$19=0,$_sum=0,$__p_031=0,$21=0,$22=0,$23=0,$__p1_0=0,$__p2_0=0,$25=0,$26=0,$27=0,$28=0,$29=0,$31=0,$33=0,$34=0,$__p2_1=0,$36=0,$38=0;
 var $39=0,$_0=0,label=0;

 $1=$__middle;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>2;
 $5=$__last;
 $6=((($5)-($1))|0);
 $7=$6>>2;
 $8=($4|0)==($7|0);
 if ($8) {
  $10=($__first|0)==($__middle|0);
  if ($10) {
   $_0=$__middle;

   return (($_0)|0);
  } else {
   $_078_i=$__first;$_09_i=$__middle;
  }
  while(1) {


   $11=((HEAP32[(($_078_i)>>2)])|0);
   $12=((HEAP32[(($_09_i)>>2)])|0);
   HEAP32[(($_078_i)>>2)]=$12;
   HEAP32[(($_09_i)>>2)]=$11;
   $13=(($_078_i+4)|0);
   $14=(($_09_i+4)|0);
   $15=($13|0)==($__middle|0);
   if ($15) {
    $_0=$__middle;
    break;
   } else {
    $_078_i=$13;$_09_i=$14;
   }
  }

  return (($_0)|0);
 } else {
  $_0_i=$4;$_05_i=$7;
 }
 while(1) {


  $16=(((($_0_i|0))%(($_05_i|0)))&-1);
  $17=($16|0)==0;
  if ($17) {
   break;
  } else {
   $_0_i=$_05_i;$_05_i=$16;
  }
 }
 $18=($_05_i|0)==0;
 if (!($18)) {
  $19=(($__first+($_05_i<<2))|0);
  $_sum=((($4)-(1))|0);
  $__p_031=$19;
  while(1) {

   $21=((($__p_031)-(4))|0);
   $22=((HEAP32[(($21)>>2)])|0);
   $23=(($__p_031+($_sum<<2))|0);
   $__p2_0=$23;$__p1_0=$21;
   while(1) {


    $25=((HEAP32[(($__p2_0)>>2)])|0);
    HEAP32[(($__p1_0)>>2)]=$25;
    $26=$__p2_0;
    $27=((($5)-($26))|0);
    $28=$27>>2;
    $29=($4|0)<($28|0);
    if ($29) {
     $31=(($__p2_0+($4<<2))|0);
     $__p2_1=$31;
    } else {
     $33=((($4)-($28))|0);
     $34=(($__first+($33<<2))|0);
     $__p2_1=$34;
    }

    $36=($__p2_1|0)==($21|0);
    if ($36) {
     break;
    } else {
     $__p1_0=$__p2_0;$__p2_0=$__p2_1;
    }
   }
   HEAP32[(($__p2_0)>>2)]=$22;
   $38=($21|0)==($__first|0);
   if ($38) {
    break;
   } else {
    $__p_031=$21;
   }
  }
 }
 $39=(($__first+($7<<2))|0);
 $_0=$39;

 return (($_0)|0);
}


function __ZNSt3__113__rotate_leftIPjEET_S2_S2_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=((HEAP32[(($__first)>>2)])|0);
 $2=(($__first+4)|0);
 $3=$__last;
 $4=$2;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=$__first;
 $8=$2;
 ((_memmove((($7)|0),(($8)|0),(($5)|0)))|0);
 $9=(($__first+($6<<2))|0);
 HEAP32[(($9)>>2)]=$1;
 return (($9)|0);
}


function __ZNSt3__114__rotate_rightIPjEET_S2_S2_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=((($__last)-(4))|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$1;
 $4=$__first;
 $5=((($3)-($4))|0);
 $6=$5>>2;
 $7=(((-$6))|0);
 $8=(($__last+($7<<2))|0);
 $9=$8;
 $10=$__first;
 ((_memmove((($9)|0),(($10)|0),(($5)|0)))|0);
 HEAP32[(($__first)>>2)]=$2;
 return (($8)|0);
}


function __ZNSt3__112__rotate_gcdIPjEET_S2_S2_S2_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$_09_i=0,$_078_i=0,$11=0,$12=0,$13=0,$14=0,$15=0,$_05_i=0,$_0_i=0,$16=0,$17=0;
 var $18=0,$19=0,$_sum=0,$__p_031=0,$21=0,$22=0,$23=0,$__p1_0=0,$__p2_0=0,$25=0,$26=0,$27=0,$28=0,$29=0,$31=0,$33=0,$34=0,$__p2_1=0,$36=0,$38=0;
 var $39=0,$_0=0,label=0;

 $1=$__middle;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>2;
 $5=$__last;
 $6=((($5)-($1))|0);
 $7=$6>>2;
 $8=($4|0)==($7|0);
 if ($8) {
  $10=($__first|0)==($__middle|0);
  if ($10) {
   $_0=$__middle;

   return (($_0)|0);
  } else {
   $_078_i=$__first;$_09_i=$__middle;
  }
  while(1) {


   $11=((HEAP32[(($_078_i)>>2)])|0);
   $12=((HEAP32[(($_09_i)>>2)])|0);
   HEAP32[(($_078_i)>>2)]=$12;
   HEAP32[(($_09_i)>>2)]=$11;
   $13=(($_078_i+4)|0);
   $14=(($_09_i+4)|0);
   $15=($13|0)==($__middle|0);
   if ($15) {
    $_0=$__middle;
    break;
   } else {
    $_078_i=$13;$_09_i=$14;
   }
  }

  return (($_0)|0);
 } else {
  $_0_i=$4;$_05_i=$7;
 }
 while(1) {


  $16=(((($_0_i|0))%(($_05_i|0)))&-1);
  $17=($16|0)==0;
  if ($17) {
   break;
  } else {
   $_0_i=$_05_i;$_05_i=$16;
  }
 }
 $18=($_05_i|0)==0;
 if (!($18)) {
  $19=(($__first+($_05_i<<2))|0);
  $_sum=((($4)-(1))|0);
  $__p_031=$19;
  while(1) {

   $21=((($__p_031)-(4))|0);
   $22=((HEAP32[(($21)>>2)])|0);
   $23=(($__p_031+($_sum<<2))|0);
   $__p2_0=$23;$__p1_0=$21;
   while(1) {


    $25=((HEAP32[(($__p2_0)>>2)])|0);
    HEAP32[(($__p1_0)>>2)]=$25;
    $26=$__p2_0;
    $27=((($5)-($26))|0);
    $28=$27>>2;
    $29=($4|0)<($28|0);
    if ($29) {
     $31=(($__p2_0+($4<<2))|0);
     $__p2_1=$31;
    } else {
     $33=((($4)-($28))|0);
     $34=(($__first+($33<<2))|0);
     $__p2_1=$34;
    }

    $36=($__p2_1|0)==($21|0);
    if ($36) {
     break;
    } else {
     $__p1_0=$__p2_0;$__p2_0=$__p2_1;
    }
   }
   HEAP32[(($__p2_0)>>2)]=$22;
   $38=($21|0)==($__first|0);
   if ($38) {
    break;
   } else {
    $__p_031=$21;
   }
  }
 }
 $39=(($__first+($7<<2))|0);
 $_0=$39;

 return (($_0)|0);
}


function __ZNSt3__16__sortIRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEvT0_S5_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $_0129_ph=0,$_0_ph=0,$1=0,$2=0,$_0=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$20=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$28=0,$31=0,$32=0,$33=0,$35=0,$36=0,$_sum=0,$37=0,$38=0,$40=0,$__n_swaps_0=0,$42=0,$43=0,$44=0,$__j_0=0,$45=0;
 var $46=0,$48=0,$49=0,$50=0,$51=0,$__i_0=0,$52=0,$54=0,$55=0,$56=0,$57=0,$59=0,$60=0,$__i_1=0,$62=0,$__i_2_ph=0,$__j_1_ph=0,$63=0,$__i_2=0,$65=0;
 var $66=0,$67=0,$68=0,$__j_2=0,$70=0,$71=0,$72=0,$74=0,$76=0,$77=0,$79=0,$80=0,$81=0,$83=0,$84=0,$__n_swaps_3=0,$__j_3=0,$86=0,$87=0,$__m_0_ph=0;
 var $__n_swaps_4_ph=0,$__i_3_ph=0,$__j_4_ph=0,$88=0,$__i_3=0,$90=0,$91=0,$92=0,$93=0,$__j_5=0,$95=0,$96=0,$97=0,$99=0,$101=0,$102=0,$103=0,$___m_0=0,$104=0,$__m_2=0;
 var $__n_swaps_5=0,$__i_4=0,$105=0,$107=0,$108=0,$109=0,$111=0,$__n_swaps_6=0,$113=0,$115=0,$116=0,$117=0,$121=0,$122=0,$123=0,$124=0,$126=0,$128=0,label=0;

 $_0_ph=$__first;$_0129_ph=$__last;
 L1: while(1) {


  $1=$_0129_ph;
  $2=((($_0129_ph)-(4))|0);
  $_0=$_0_ph;
  L3: while(1) {

   $3=$_0;
   $4=((($1)-($3))|0);
   $5=$4>>2;
   switch (($5|0)) {
   case 4: {
    label = 7;
    break L1;
    break;
   }
   case 3: {
    label = 6;
    break L1;
    break;
   }
   case 5: {
    label = 8;
    break L1;
    break;
   }
   case 2: {
    label = 4;
    break L1;
    break;
   }
   case 0:case 1: {
    label = 46;
    break L1;
    break;
   }
   default: {
   }
   }
   $28=($4|0)<124;
   if ($28) {
    label = 10;
    break L1;
   }
   $31=($4|0)>3996;
   $32=(((($5|0))/(2))&-1);
   $33=(($_0+($32<<2))|0);
   if ($31) {
    $35=(((($5|0))/(4))&-1);
    $36=(($_0+($35<<2))|0);
    $_sum=((($35)+($32))|0);
    $37=(($_0+($_sum<<2))|0);
    $38=((__ZNSt3__17__sort5IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_S5_S5_T_($_0,$36,$33,$37,$2,$__comp))|0);
    $__n_swaps_0=$38;
   } else {
    $40=((__ZNSt3__17__sort3IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_T_($_0,$33,$2,$__comp))|0);
    $__n_swaps_0=$40;
   }

   $42=((HEAP32[(($_0)>>2)])|0);
   $43=((HEAP32[(($33)>>2)])|0);
   $44=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$42,$43))|0);
   do {
    if ($44) {
     $__j_3=$2;$__n_swaps_3=$__n_swaps_0;
    } else {
     $__j_0=$2;
     while(1) {

      $45=((($__j_0)-(4))|0);
      $46=($_0|0)==($45|0);
      if ($46) {
       break;
      }
      $79=((HEAP32[(($45)>>2)])|0);
      $80=((HEAP32[(($33)>>2)])|0);
      $81=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$79,$80))|0);
      if ($81) {
       label = 28;
       break;
      } else {
       $__j_0=$45;
      }
     }
     if ((label|0) == 28) {
      label = 0;
      $83=((HEAP32[(($_0)>>2)])|0);
      HEAP32[(($_0)>>2)]=$79;
      HEAP32[(($45)>>2)]=$83;
      $84=((($__n_swaps_0)+(1))|0);
      $__j_3=$45;$__n_swaps_3=$84;
      break;
     }
     $48=(($_0+4)|0);
     $49=((HEAP32[(($_0)>>2)])|0);
     $50=((HEAP32[(($2)>>2)])|0);
     $51=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$49,$50))|0);
     if ($51) {
      $__i_1=$48;
     } else {
      $__i_0=$48;
      while(1) {

       $52=($__i_0|0)==($2|0);
       if ($52) {
        label = 46;
        break L1;
       }
       $54=((HEAP32[(($_0)>>2)])|0);
       $55=((HEAP32[(($__i_0)>>2)])|0);
       $56=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$54,$55))|0);
       $57=(($__i_0+4)|0);
       if ($56) {
        break;
       } else {
        $__i_0=$57;
       }
      }
      $59=((HEAP32[(($2)>>2)])|0);
      HEAP32[(($__i_0)>>2)]=$59;
      HEAP32[(($2)>>2)]=$55;
      $60=(($__i_0+4)|0);
      $__i_1=$60;
     }

     $62=($__i_1|0)==($2|0);
     if ($62) {
      label = 46;
      break L1;
     } else {
      $__j_1_ph=$2;$__i_2_ph=$__i_1;
     }
     while(1) {


      $63=((HEAP32[(($_0)>>2)])|0);
      $__i_2=$__i_2_ph;
      while(1) {

       $65=((HEAP32[(($__i_2)>>2)])|0);
       $66=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$63,$65))|0);
       $67=(($__i_2+4)|0);
       if ($66) {
        break;
       } else {
        $__i_2=$67;
       }
      }
      $68=((HEAP32[(($_0)>>2)])|0);
      $__j_2=$__j_1_ph;
      while(1) {

       $70=((($__j_2)-(4))|0);
       $71=((HEAP32[(($70)>>2)])|0);
       $72=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$68,$71))|0);
       if ($72) {
        $__j_2=$70;
       } else {
        break;
       }
      }
      $74=($__i_2>>>0)<($70>>>0);
      if (!($74)) {
       $_0=$__i_2;
       continue L3;
      }
      $76=((HEAP32[(($__i_2)>>2)])|0);
      HEAP32[(($__i_2)>>2)]=$71;
      HEAP32[(($70)>>2)]=$76;
      $77=(($__i_2+4)|0);
      $__j_1_ph=$70;$__i_2_ph=$77;
     }
    }
   } while(0);


   $86=(($_0+4)|0);
   $87=($86>>>0)<($__j_3>>>0);
   L34: do {
    if ($87) {
     $__j_4_ph=$__j_3;$__i_3_ph=$86;$__n_swaps_4_ph=$__n_swaps_3;$__m_0_ph=$33;
     while(1) {




      $88=((HEAP32[(($__m_0_ph)>>2)])|0);
      $__i_3=$__i_3_ph;
      while(1) {

       $90=((HEAP32[(($__i_3)>>2)])|0);
       $91=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$90,$88))|0);
       $92=(($__i_3+4)|0);
       if ($91) {
        $__i_3=$92;
       } else {
        break;
       }
      }
      $93=((HEAP32[(($__m_0_ph)>>2)])|0);
      $__j_5=$__j_4_ph;
      while(1) {

       $95=((($__j_5)-(4))|0);
       $96=((HEAP32[(($95)>>2)])|0);
       $97=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$96,$93))|0);
       if ($97) {
        break;
       } else {
        $__j_5=$95;
       }
      }
      $99=($__i_3>>>0)>($95>>>0);
      if ($99) {
       $__i_4=$__i_3;$__n_swaps_5=$__n_swaps_4_ph;$__m_2=$__m_0_ph;
       break L34;
      }
      $101=((HEAP32[(($__i_3)>>2)])|0);
      HEAP32[(($__i_3)>>2)]=$96;
      HEAP32[(($95)>>2)]=$101;
      $102=((($__n_swaps_4_ph)+(1))|0);
      $103=($__m_0_ph|0)==($__i_3|0);
      $___m_0=($103?$95:$__m_0_ph);
      $104=(($__i_3+4)|0);
      $__j_4_ph=$95;$__i_3_ph=$104;$__n_swaps_4_ph=$102;$__m_0_ph=$___m_0;
     }
    } else {
     $__i_4=$86;$__n_swaps_5=$__n_swaps_3;$__m_2=$33;
    }
   } while(0);



   $105=($__i_4|0)==($__m_2|0);
   do {
    if ($105) {
     $__n_swaps_6=$__n_swaps_5;
    } else {
     $107=((HEAP32[(($__m_2)>>2)])|0);
     $108=((HEAP32[(($__i_4)>>2)])|0);
     $109=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$107,$108))|0);
     if (!($109)) {
      $__n_swaps_6=$__n_swaps_5;
      break;
     }
     HEAP32[(($__i_4)>>2)]=$107;
     HEAP32[(($__m_2)>>2)]=$108;
     $111=((($__n_swaps_5)+(1))|0);
     $__n_swaps_6=$111;
    }
   } while(0);

   $113=($__n_swaps_6|0)==0;
   if ($113) {
    $115=((__ZNSt3__127__insertion_sort_incompleteIRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEbT0_S5_T_($_0,$__i_4,$__comp))|0);
    $116=(($__i_4+4)|0);
    $117=((__ZNSt3__127__insertion_sort_incompleteIRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEbT0_S5_T_($116,$_0129_ph,$__comp))|0);
    if ($117) {
     label = 41;
     break;
    }
    if ($115) {
     $_0=$116;
     continue;
    }
   }
   $121=$__i_4;
   $122=((($121)-($3))|0);
   $123=((($1)-($121))|0);
   $124=($122|0)<($123|0);
   if (!($124)) {
    label = 45;
    break;
   }
   __ZNSt3__16__sortIRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEvT0_S5_T_($_0,$__i_4,$__comp);
   $126=(($__i_4+4)|0);
   $_0=$126;
  }
  if ((label|0) == 41) {
   label = 0;
   if ($115) {
    label = 46;
    break;
   } else {
    $_0_ph=$_0;$_0129_ph=$__i_4;
    continue;
   }
  }
  else if ((label|0) == 45) {
   label = 0;
   $128=(($__i_4+4)|0);
   __ZNSt3__16__sortIRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEvT0_S5_T_($128,$_0129_ph,$__comp);
   $_0_ph=$_0;$_0129_ph=$__i_4;
   continue;
  }
 }
 if ((label|0) == 4) {
  $7=((($_0129_ph)-(4))|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=((HEAP32[(($_0)>>2)])|0);
  $10=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$8,$9))|0);
  if (!($10)) {
   return;
  }
  HEAP32[(($_0)>>2)]=$8;
  HEAP32[(($7)>>2)]=$9;
  return;
 }
 else if ((label|0) == 6) {
  $13=(($_0+4)|0);
  $14=((($_0129_ph)-(4))|0);
  $15=((__ZNSt3__17__sort3IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_T_($_0,$13,$14,$__comp))|0);
  return;
 }
 else if ((label|0) == 7) {
  $17=(($_0+4)|0);
  $18=(($_0+8)|0);
  $19=((($_0129_ph)-(4))|0);
  $20=((__ZNSt3__17__sort4IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_S5_T_($_0,$17,$18,$19,$__comp))|0);
  return;
 }
 else if ((label|0) == 8) {
  $22=(($_0+4)|0);
  $23=(($_0+8)|0);
  $24=(($_0+12)|0);
  $25=((($_0129_ph)-(4))|0);
  $26=((__ZNSt3__17__sort5IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_S5_S5_T_($_0,$22,$23,$24,$25,$__comp))|0);
  return;
 }
 else if ((label|0) == 10) {
  __ZNSt3__118__insertion_sort_3IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEvT0_S5_T_($_0,$_0129_ph,$__comp);
  return;
 }
 else if ((label|0) == 46) {
  return;
 }
}


function __ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($this,$particleIndexA,$particleIndexB){
 $this=($this)|0;
 $particleIndexA=($particleIndexA)|0;
 $particleIndexB=($particleIndexB)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=.0,$8=0,$9=.0,$10=0,$tmp=0,$12=0,$14=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+($particleIndexA<<2))|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($2+($particleIndexB<<2))|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(+((($4|0))|0));
 $8=$7<=(0.0);
 $9=(+((($6|0))|0));
 $10=$9<=(0.0);
 $tmp=$8^$10;
 if ($tmp) {
  $14=$8;

  return (($14)|0);
 }
 $12=($4|0)>($6|0);
 $14=$12;

 return (($14)|0);
}


function __ZNSt3__17__sort3IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_T_($__x,$__y,$__z,$__c){
 $__x=($__x)|0;
 $__y=($__y)|0;
 $__z=($__z)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$15=0,$16=0,$_0=0,label=0;

 $1=((HEAP32[(($__y)>>2)])|0);
 $2=((HEAP32[(($__x)>>2)])|0);
 $3=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$1,$2))|0);
 $4=((HEAP32[(($__z)>>2)])|0);
 $5=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$4,$1))|0);
 if (!($3)) {
  if (!($5)) {
   $_0=0;

   return (($_0)|0);
  }
  HEAP32[(($__y)>>2)]=$4;
  HEAP32[(($__z)>>2)]=$1;
  $8=((HEAP32[(($__y)>>2)])|0);
  $9=((HEAP32[(($__x)>>2)])|0);
  $10=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$8,$9))|0);
  if (!($10)) {
   $_0=1;

   return (($_0)|0);
  }
  HEAP32[(($__x)>>2)]=$8;
  HEAP32[(($__y)>>2)]=$9;
  $_0=2;

  return (($_0)|0);
 }
 if ($5) {
  HEAP32[(($__x)>>2)]=$4;
  HEAP32[(($__z)>>2)]=$2;
  $_0=1;

  return (($_0)|0);
 }
 HEAP32[(($__x)>>2)]=$1;
 HEAP32[(($__y)>>2)]=$2;
 $15=((HEAP32[(($__z)>>2)])|0);
 $16=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$15,$2))|0);
 if (!($16)) {
  $_0=1;

  return (($_0)|0);
 }
 HEAP32[(($__y)>>2)]=$15;
 HEAP32[(($__z)>>2)]=$2;
 $_0=2;

 return (($_0)|0);
}


function __ZNSt3__17__sort4IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_S5_T_($__x1,$__x2,$__x3,$__x4,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$14=0,$16=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort3IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_T_($__x1,$__x2,$__x3,$__c))|0);
 $2=((HEAP32[(($__x4)>>2)])|0);
 $3=((HEAP32[(($__x3)>>2)])|0);
 $4=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$2,$3))|0);
 if (!($4)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 HEAP32[(($__x3)>>2)]=$2;
 HEAP32[(($__x4)>>2)]=$3;
 $6=((($1)+(1))|0);
 $7=((HEAP32[(($__x3)>>2)])|0);
 $8=((HEAP32[(($__x2)>>2)])|0);
 $9=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$7,$8))|0);
 if (!($9)) {
  $__r_0=$6;

  return (($__r_0)|0);
 }
 HEAP32[(($__x2)>>2)]=$7;
 HEAP32[(($__x3)>>2)]=$8;
 $11=((($1)+(2))|0);
 $12=((HEAP32[(($__x2)>>2)])|0);
 $13=((HEAP32[(($__x1)>>2)])|0);
 $14=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$12,$13))|0);
 if (!($14)) {
  $__r_0=$11;

  return (($__r_0)|0);
 }
 HEAP32[(($__x1)>>2)]=$12;
 HEAP32[(($__x2)>>2)]=$13;
 $16=((($1)+(3))|0);
 $__r_0=$16;

 return (($__r_0)|0);
}


function __ZNSt3__17__sort5IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_S5_S5_T_($__x1,$__x2,$__x3,$__x4,$__x5,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__x5=($__x5)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$14=0,$16=0,$17=0,$18=0,$19=0,$21=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort4IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_S5_T_($__x1,$__x2,$__x3,$__x4,$__c))|0);
 $2=((HEAP32[(($__x5)>>2)])|0);
 $3=((HEAP32[(($__x4)>>2)])|0);
 $4=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$2,$3))|0);
 if (!($4)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 HEAP32[(($__x4)>>2)]=$2;
 HEAP32[(($__x5)>>2)]=$3;
 $6=((($1)+(1))|0);
 $7=((HEAP32[(($__x4)>>2)])|0);
 $8=((HEAP32[(($__x3)>>2)])|0);
 $9=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$7,$8))|0);
 if (!($9)) {
  $__r_0=$6;

  return (($__r_0)|0);
 }
 HEAP32[(($__x3)>>2)]=$7;
 HEAP32[(($__x4)>>2)]=$8;
 $11=((($1)+(2))|0);
 $12=((HEAP32[(($__x3)>>2)])|0);
 $13=((HEAP32[(($__x2)>>2)])|0);
 $14=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$12,$13))|0);
 if (!($14)) {
  $__r_0=$11;

  return (($__r_0)|0);
 }
 HEAP32[(($__x2)>>2)]=$12;
 HEAP32[(($__x3)>>2)]=$13;
 $16=((($1)+(3))|0);
 $17=((HEAP32[(($__x2)>>2)])|0);
 $18=((HEAP32[(($__x1)>>2)])|0);
 $19=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__c,$17,$18))|0);
 if (!($19)) {
  $__r_0=$16;

  return (($__r_0)|0);
 }
 HEAP32[(($__x1)>>2)]=$17;
 HEAP32[(($__x2)>>2)]=$18;
 $21=((($1)+(4))|0);
 $__r_0=$21;

 return (($__r_0)|0);
}


function __ZNSt3__118__insertion_sort_3IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEvT0_S5_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$__i_023=0,$__j_022=0,$6=0,$7=0,$8=0,$__j_1=0,$__k_0=0,$9=0,$10=0,$12=0,$13=0,$14=0,$16=0,$17=0,label=0;

 $1=(($__first+8)|0);
 $2=(($__first+4)|0);
 $3=((__ZNSt3__17__sort3IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_T_($__first,$2,$1,$__comp))|0);
 $4=(($__first+12)|0);
 $5=($4|0)==($__last|0);
 if ($5) {
  return;
 } else {
  $__j_022=$1;$__i_023=$4;
 }
 while(1) {


  $6=((HEAP32[(($__i_023)>>2)])|0);
  $7=((HEAP32[(($__j_022)>>2)])|0);
  $8=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$6,$7))|0);
  if ($8) {
   $__k_0=$__j_022;$__j_1=$__i_023;
   while(1) {


    $9=((HEAP32[(($__k_0)>>2)])|0);
    HEAP32[(($__j_1)>>2)]=$9;
    $10=($__k_0|0)==($__first|0);
    if ($10) {
     break;
    }
    $12=((($__k_0)-(4))|0);
    $13=((HEAP32[(($12)>>2)])|0);
    $14=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$6,$13))|0);
    if ($14) {
     $__j_1=$__k_0;$__k_0=$12;
    } else {
     break;
    }
   }
   HEAP32[(($__k_0)>>2)]=$6;
  }
  $16=(($__i_023+4)|0);
  $17=($16|0)==($__last|0);
  if ($17) {
   break;
  } else {
   $__j_022=$__i_023;$__i_023=$16;
  }
 }
 return;
}


function __ZNSt3__127__insertion_sort_incompleteIRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEbT0_S5_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$12=0,$13=0,$14=0,$16=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0,$24=0,$25=0;
 var $27=0,$28=0,$29=0,$30=0,$31=0,$__i_050=0,$__count_049=0,$__j_048=0,$32=0,$33=0,$34=0,$__j_1=0,$__k_0=0,$35=0,$36=0,$38=0,$39=0,$40=0,$41=0,$42=0;
 var $44=0,$45=0,$__count_1=0,$47=0,$48=0,$_0=0,label=0;

 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>2;
 switch (($4|0)) {
 case 2: {
  $6=((($__last)-(4))|0);
  $7=((HEAP32[(($6)>>2)])|0);
  $8=((HEAP32[(($__first)>>2)])|0);
  $9=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$7,$8))|0);
  if (!($9)) {
   $_0=1;

   return (($_0)|0);
  }
  HEAP32[(($__first)>>2)]=$7;
  HEAP32[(($6)>>2)]=$8;
  $_0=1;

  return (($_0)|0);
  break;
 }
 case 4: {
  $16=(($__first+4)|0);
  $17=(($__first+8)|0);
  $18=((($__last)-(4))|0);
  $19=((__ZNSt3__17__sort4IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_S5_T_($__first,$16,$17,$18,$__comp))|0);
  $_0=1;

  return (($_0)|0);
  break;
 }
 case 0:case 1: {
  $_0=1;

  return (($_0)|0);
  break;
 }
 case 5: {
  $21=(($__first+4)|0);
  $22=(($__first+8)|0);
  $23=(($__first+12)|0);
  $24=((($__last)-(4))|0);
  $25=((__ZNSt3__17__sort5IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_S5_S5_T_($__first,$21,$22,$23,$24,$__comp))|0);
  $_0=1;

  return (($_0)|0);
  break;
 }
 case 3: {
  $12=(($__first+4)|0);
  $13=((($__last)-(4))|0);
  $14=((__ZNSt3__17__sort3IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_T_($__first,$12,$13,$__comp))|0);
  $_0=1;

  return (($_0)|0);
  break;
 }
 default: {
  $27=(($__first+8)|0);
  $28=(($__first+4)|0);
  $29=((__ZNSt3__17__sort3IRN12_GLOBAL__N_124ExpirationTimeComparatorEPiEEjT0_S5_S5_T_($__first,$28,$27,$__comp))|0);
  $30=(($__first+12)|0);
  $31=($30|0)==($__last|0);
  if ($31) {
   $_0=1;

   return (($_0)|0);
  } else {
   $__j_048=$27;$__count_049=0;$__i_050=$30;
  }
  while(1) {



   $32=((HEAP32[(($__i_050)>>2)])|0);
   $33=((HEAP32[(($__j_048)>>2)])|0);
   $34=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$32,$33))|0);
   if ($34) {
    $__k_0=$__j_048;$__j_1=$__i_050;
    while(1) {


     $35=((HEAP32[(($__k_0)>>2)])|0);
     HEAP32[(($__j_1)>>2)]=$35;
     $36=($__k_0|0)==($__first|0);
     if ($36) {
      break;
     }
     $38=((($__k_0)-(4))|0);
     $39=((HEAP32[(($38)>>2)])|0);
     $40=((__ZNK12_GLOBAL__N_124ExpirationTimeComparatorclEii($__comp,$32,$39))|0);
     if ($40) {
      $__j_1=$__k_0;$__k_0=$38;
     } else {
      break;
     }
    }
    HEAP32[(($__k_0)>>2)]=$32;
    $41=((($__count_049)+(1))|0);
    $42=($41|0)==8;
    if ($42) {
     break;
    } else {
     $__count_1=$41;
    }
   } else {
    $__count_1=$__count_049;
   }

   $47=(($__i_050+4)|0);
   $48=($47|0)==($__last|0);
   if ($48) {
    $_0=1;
    label = 14;
    break;
   } else {
    $__j_048=$__i_050;$__count_049=$__count_1;$__i_050=$47;
   }
  }
  if ((label|0) == 14) {

   return (($_0)|0);
  }
  $44=(($__i_050+4)|0);
  $45=($44|0)==($__last|0);
  $_0=$45;

  return (($_0)|0);
 }
 }
  return 0;
}


function __ZN15b2TypedFreeListI16b2ParticleHandleE4FreeEPS0_($this,$instance){
 $this=($this)|0;
 $instance=($instance)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 $2=(($instance)|0);
 $3=((__ZN24b2TypedIntrusiveListNodeI16b2ParticleHandleE11GetListNodeEv($2))|0);
 __ZN10b2FreeList4FreeEP19b2IntrusiveListNode($1,$3);
 return;
}


function __ZN24b2TypedIntrusiveListNodeI16b2ParticleHandleE11GetListNodeEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 return (($1)|0);
}


function __ZN36b2ParticleBodyContactRemovePredicateclERK21b2ParticleBodyContact($this,$contact){
 $this=($this)|0;
 $contact=($contact)|0;
 var $n=0,$tmpcast=0,$pos=0,$distance=0,$normal=0,$1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0;
 var $20=0,$21=0,$ld$0$0=0,$22$0=0,$ld$1$1=0,$22$1=0,$st$2$0=0,$st$3$1=0,$23=0,$24=0,$25=0,$26=.0,$27=0,$28=.0,$29=.0,$30=.0,$31=0,$32=0,$33=0,$34=0;
 var $35=0,$36=0,$37=0,$38=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$childIndex_0=0,$48=0,$50=0,$51=.0,$52=0,$53=0,$55=0,$56=0,$57=0;
 var $58=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $n=((sp)|0);
 $tmpcast=$n;
 $pos=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $distance=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $normal=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $1=(($contact)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 if (!($5)) {
  $7=(($this+8)|0);
  HEAP32[(($7)>>2)]=0;
  $8=((HEAP32[(($1)>>2)])|0);
  HEAP32[(($3)>>2)]=$8;
 }
 $10=(($this+8)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=((($11)+(1))|0);
 HEAP32[(($10)>>2)]=$12;
 $13=($11|0)>3;
 if ($13) {
  $15=(($this+12)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $18=((($17)+(1))|0);
  HEAP32[(($16)>>2)]=$18;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 $20=(($contact+16)|0);
 $21=$20;
 $ld$0$0=(($21)|0);
 $22$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($21+4)|0);
 $22$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($n)|0);
 HEAP32[(($st$2$0)>>2)]=$22$0;
 $st$3$1=(($n+4)|0);
 HEAP32[(($st$3$1)>>2)]=$22$1;
 $23=(($this)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($24+40)|0);
 $26=(+(HEAPF32[(($25)>>2)]));
 $27=(($contact+12)|0);
 $28=(+(HEAPF32[(($27)>>2)]));
 $29=((1.0))-($28);
 $30=($26)*($29);
 __ZN6b2Vec2mLEf($tmpcast,$30);
 $31=((HEAP32[(($1)>>2)])|0);
 $32=((HEAP32[(($23)>>2)])|0);
 $33=(($32+112)|0);
 $34=((HEAP32[(($33)>>2)])|0);
 $35=(($34+($31<<3))|0);
 __ZplRK6b2Vec2S1_($pos,$35,$tmpcast);
 $36=(($contact+8)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=((__ZNK9b2Fixture9TestPointERK6b2Vec2($37,$pos))|0);
 if ($38) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $40=((HEAP32[(($36)>>2)])|0);
 $41=((__ZN9b2Fixture8GetShapeEv($40))|0);
 $42=$41;
 $43=((HEAP32[(($42)>>2)])|0);
 $44=(($43+12)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=((FUNCTION_TABLE_ii[($45)&31]($41))|0);
 $childIndex_0=0;
 while(1) {

  $48=($childIndex_0|0)<($46|0);
  if (!($48)) {
   break;
  }
  $50=((HEAP32[(($36)>>2)])|0);
  __ZNK9b2Fixture15ComputeDistanceERK6b2Vec2PfPS0_i($50,$pos,$distance,$normal,$childIndex_0);
  $51=(+(HEAPF32[(($distance)>>2)]));
  $52=$51<(0.004999999888241291);
  $53=((($childIndex_0)+(1))|0);
  if ($52) {
   $_0=0;
   label = 10;
   break;
  } else {
   $childIndex_0=$53;
  }
 }
 if ((label|0) == 10) {

  STACKTOP=sp;return (($_0)|0);
 }
 $55=(($this+12)|0);
 $56=((HEAP32[(($55)>>2)])|0);
 $57=((HEAP32[(($56)>>2)])|0);
 $58=((($57)+(1))|0);
 HEAP32[(($56)>>2)]=$58;
 $_0=1;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK9b2Fixture9TestPointERK6b2Vec2($this,$p){
 $this=($this)|0;
 $p=($p)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+16)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((__ZNK6b2Body12GetTransformEv($8))|0);
 $10=((FUNCTION_TABLE_iiii[($6)&31]($2,$9,$p))|0);
 return (($10)|0);
}


function __ZNK9b2Fixture15ComputeDistanceERK6b2Vec2PfPS0_i($this,$p,$d,$n,$childIndex){
 $this=($this)|0;
 $p=($p)|0;
 $d=($d)|0;
 $n=($n)|0;
 $childIndex=($childIndex)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2;
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+20)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($this+8)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((__ZNK6b2Body12GetTransformEv($8))|0);
 FUNCTION_TABLE_viiiiii[($6)&31]($2,$9,$p,$d,$n,$childIndex);
 return;
}


function __ZNSt3__16__sortIRPFbRK21b2ParticleBodyContactS3_EPS1_EEvT0_S8_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t_i134=0,$__t_i133=0,$__t_i132=0,$__t_i131=0,$__t_i130=0,$__t_i=0,$__t_i134_0_cast140=0,$__t_i133_0_cast139=0,$__t_i131_0_cast137=0,$__t_i130_0_cast136=0,$__t_i132_0_cast138=0,$_0129_ph=0,$_0_ph=0,$1=0,$2=0,$3=0,$_0=0,$4=0,$5=0,$6=0;
 var $8=0,$9=0,$10=0,$__t_i_0_cast135=0,$$etemp$0$0=0,$$etemp$0$1=0,$12=0,$13=0,$$etemp$1$0=0,$$etemp$1$1=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0,$24=0,$25=0,$26=0;
 var $27=0,$28=0,$30=0,$33=0,$34=0,$35=0,$37=0,$38=0,$_sum=0,$39=0,$40=0,$42=0,$__n_swaps_0=0,$44=0,$45=0,$__j_0=0,$46=0,$47=0,$49=0,$50=0;
 var $51=0,$__i_0=0,$52=0,$54=0,$55=0,$56=0,$$etemp$2$0=0,$$etemp$2$1=0,$58=0,$$etemp$3$0=0,$$etemp$3$1=0,$59=0,$__i_1=0,$61=0,$__i_2_ph=0,$__j_1_ph=0,$__i_2=0,$63=0,$64=0,$65=0;
 var $__j_2=0,$66=0,$67=0,$68=0,$70=0,$$etemp$4$0=0,$$etemp$4$1=0,$72=0,$73=0,$$etemp$5$0=0,$$etemp$5$1=0,$74=0,$76=0,$77=0,$$etemp$6$0=0,$$etemp$6$1=0,$79=0,$80=0,$$etemp$7$0=0,$$etemp$7$1=0;
 var $81=0,$__n_swaps_3=0,$__j_3=0,$83=0,$84=0,$__m_0_ph=0,$__n_swaps_4_ph=0,$__i_3_ph=0,$__j_4_ph=0,$__i_3=0,$86=0,$87=0,$88=0,$__j_5=0,$89=0,$90=0,$91=0,$93=0,$$etemp$8$0=0,$$etemp$8$1=0;
 var $95=0,$96=0,$$etemp$9$0=0,$$etemp$9$1=0,$97=0,$98=0,$___m_0=0,$99=0,$__m_2=0,$__n_swaps_5=0,$__i_4=0,$100=0,$102=0,$103=0,$$etemp$10$0=0,$$etemp$10$1=0,$105=0,$106=0,$$etemp$11$0=0,$$etemp$11$1=0;
 var $107=0,$__n_swaps_6=0,$109=0,$111=0,$112=0,$113=0,$117=0,$118=0,$119=0,$120=0,$122=0,$124=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+192)|0;
 $__t_i134=((sp)|0);
 $__t_i133=(((sp)+(32))|0);
 $__t_i132=(((sp)+(64))|0);
 $__t_i131=(((sp)+(96))|0);
 $__t_i130=(((sp)+(128))|0);
 $__t_i=(((sp)+(160))|0);
 $__t_i134_0_cast140=$__t_i134;
 $__t_i133_0_cast139=$__t_i133;
 $__t_i131_0_cast137=$__t_i131;
 $__t_i130_0_cast136=$__t_i130;
 $__t_i132_0_cast138=$__t_i132;
 $_0_ph=$__first;$_0129_ph=$__last;
 L1: while(1) {


  $1=$_0129_ph;
  $2=((($_0129_ph)-(28))|0);
  $3=$2;
  $_0=$_0_ph;
  L3: while(1) {

   $4=$_0;
   $5=((($1)-($4))|0);
   $6=(((($5|0))/(28))&-1);
   switch (($6|0)) {
   case 3: {
    label = 6;
    break L1;
    break;
   }
   case 5: {
    label = 8;
    break L1;
    break;
   }
   case 4: {
    label = 7;
    break L1;
    break;
   }
   case 2: {
    label = 4;
    break L1;
    break;
   }
   case 0:case 1: {
    label = 44;
    break L1;
    break;
   }
   default: {
   }
   }
   $30=($5|0)<868;
   if ($30) {
    label = 10;
    break L1;
   }
   $33=($5|0)>27972;
   $34=(((($5|0))/(56))&-1);
   $35=(($_0+((($34)*(28))&-1))|0);
   if ($33) {
    $37=(((($5|0))/(112))&-1);
    $38=(($_0+((($37)*(28))&-1))|0);
    $_sum=((($37)+($34))|0);
    $39=(($_0+((($_sum)*(28))&-1))|0);
    $40=((__ZNSt3__17__sort5IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_S8_S8_T_($_0,$38,$35,$39,$2,$__comp))|0);
    $__n_swaps_0=$40;
   } else {
    $42=((__ZNSt3__17__sort3IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_T_($_0,$35,$2,$__comp))|0);
    $__n_swaps_0=$42;
   }

   $44=((HEAP32[(($__comp)>>2)])|0);
   $45=((FUNCTION_TABLE_iii[($44)&63]($_0,$35))|0);
   do {
    if ($45) {
     $__j_3=$2;$__n_swaps_3=$__n_swaps_0;
    } else {
     $__j_0=$2;
     while(1) {

      $46=((($__j_0)-(28))|0);
      $47=($_0|0)==($46|0);
      if ($47) {
       break;
      }
      $76=((HEAP32[(($__comp)>>2)])|0);
      $77=((FUNCTION_TABLE_iii[($76)&63]($46,$35))|0);
      if ($77) {
       label = 27;
       break;
      } else {
       $__j_0=$46;
      }
     }
     if ((label|0) == 27) {
      label = 0;
      $$etemp$6$0=28;
      $$etemp$6$1=0;

      $79=$_0;
      HEAP32[(($__t_i132_0_cast138)>>2)]=((HEAP32[(($79)>>2)])|0);HEAP32[((($__t_i132_0_cast138)+(4))>>2)]=((HEAP32[((($79)+(4))>>2)])|0);HEAP32[((($__t_i132_0_cast138)+(8))>>2)]=((HEAP32[((($79)+(8))>>2)])|0);HEAP32[((($__t_i132_0_cast138)+(12))>>2)]=((HEAP32[((($79)+(12))>>2)])|0);HEAP32[((($__t_i132_0_cast138)+(16))>>2)]=((HEAP32[((($79)+(16))>>2)])|0);HEAP32[((($__t_i132_0_cast138)+(20))>>2)]=((HEAP32[((($79)+(20))>>2)])|0);HEAP32[((($__t_i132_0_cast138)+(24))>>2)]=((HEAP32[((($79)+(24))>>2)])|0);
      $80=$46;
      HEAP32[(($79)>>2)]=((HEAP32[(($80)>>2)])|0);HEAP32[((($79)+(4))>>2)]=((HEAP32[((($80)+(4))>>2)])|0);HEAP32[((($79)+(8))>>2)]=((HEAP32[((($80)+(8))>>2)])|0);HEAP32[((($79)+(12))>>2)]=((HEAP32[((($80)+(12))>>2)])|0);HEAP32[((($79)+(16))>>2)]=((HEAP32[((($80)+(16))>>2)])|0);HEAP32[((($79)+(20))>>2)]=((HEAP32[((($80)+(20))>>2)])|0);HEAP32[((($79)+(24))>>2)]=((HEAP32[((($80)+(24))>>2)])|0);
      HEAP32[(($80)>>2)]=((HEAP32[(($__t_i132_0_cast138)>>2)])|0);HEAP32[((($80)+(4))>>2)]=((HEAP32[((($__t_i132_0_cast138)+(4))>>2)])|0);HEAP32[((($80)+(8))>>2)]=((HEAP32[((($__t_i132_0_cast138)+(8))>>2)])|0);HEAP32[((($80)+(12))>>2)]=((HEAP32[((($__t_i132_0_cast138)+(12))>>2)])|0);HEAP32[((($80)+(16))>>2)]=((HEAP32[((($__t_i132_0_cast138)+(16))>>2)])|0);HEAP32[((($80)+(20))>>2)]=((HEAP32[((($__t_i132_0_cast138)+(20))>>2)])|0);HEAP32[((($80)+(24))>>2)]=((HEAP32[((($__t_i132_0_cast138)+(24))>>2)])|0);
      $$etemp$7$0=28;
      $$etemp$7$1=0;

      $81=((($__n_swaps_0)+(1))|0);
      $__j_3=$46;$__n_swaps_3=$81;
      break;
     }
     $49=(($_0+28)|0);
     $50=((HEAP32[(($__comp)>>2)])|0);
     $51=((FUNCTION_TABLE_iii[($50)&63]($_0,$2))|0);
     if ($51) {
      $__i_1=$49;
     } else {
      $__i_0=$49;
      while(1) {

       $52=($__i_0|0)==($2|0);
       if ($52) {
        label = 44;
        break L1;
       }
       $54=((HEAP32[(($__comp)>>2)])|0);
       $55=((FUNCTION_TABLE_iii[($54)&63]($_0,$__i_0))|0);
       $56=(($__i_0+28)|0);
       if ($55) {
        break;
       } else {
        $__i_0=$56;
       }
      }
      $$etemp$2$0=28;
      $$etemp$2$1=0;

      $58=$__i_0;
      HEAP32[(($__t_i130_0_cast136)>>2)]=((HEAP32[(($58)>>2)])|0);HEAP32[((($__t_i130_0_cast136)+(4))>>2)]=((HEAP32[((($58)+(4))>>2)])|0);HEAP32[((($__t_i130_0_cast136)+(8))>>2)]=((HEAP32[((($58)+(8))>>2)])|0);HEAP32[((($__t_i130_0_cast136)+(12))>>2)]=((HEAP32[((($58)+(12))>>2)])|0);HEAP32[((($__t_i130_0_cast136)+(16))>>2)]=((HEAP32[((($58)+(16))>>2)])|0);HEAP32[((($__t_i130_0_cast136)+(20))>>2)]=((HEAP32[((($58)+(20))>>2)])|0);HEAP32[((($__t_i130_0_cast136)+(24))>>2)]=((HEAP32[((($58)+(24))>>2)])|0);
      HEAP32[(($58)>>2)]=((HEAP32[(($3)>>2)])|0);HEAP32[((($58)+(4))>>2)]=((HEAP32[((($3)+(4))>>2)])|0);HEAP32[((($58)+(8))>>2)]=((HEAP32[((($3)+(8))>>2)])|0);HEAP32[((($58)+(12))>>2)]=((HEAP32[((($3)+(12))>>2)])|0);HEAP32[((($58)+(16))>>2)]=((HEAP32[((($3)+(16))>>2)])|0);HEAP32[((($58)+(20))>>2)]=((HEAP32[((($3)+(20))>>2)])|0);HEAP32[((($58)+(24))>>2)]=((HEAP32[((($3)+(24))>>2)])|0);
      HEAP32[(($3)>>2)]=((HEAP32[(($__t_i130_0_cast136)>>2)])|0);HEAP32[((($3)+(4))>>2)]=((HEAP32[((($__t_i130_0_cast136)+(4))>>2)])|0);HEAP32[((($3)+(8))>>2)]=((HEAP32[((($__t_i130_0_cast136)+(8))>>2)])|0);HEAP32[((($3)+(12))>>2)]=((HEAP32[((($__t_i130_0_cast136)+(12))>>2)])|0);HEAP32[((($3)+(16))>>2)]=((HEAP32[((($__t_i130_0_cast136)+(16))>>2)])|0);HEAP32[((($3)+(20))>>2)]=((HEAP32[((($__t_i130_0_cast136)+(20))>>2)])|0);HEAP32[((($3)+(24))>>2)]=((HEAP32[((($__t_i130_0_cast136)+(24))>>2)])|0);
      $$etemp$3$0=28;
      $$etemp$3$1=0;

      $59=(($__i_0+28)|0);
      $__i_1=$59;
     }

     $61=($__i_1|0)==($2|0);
     if ($61) {
      label = 44;
      break L1;
     } else {
      $__j_1_ph=$2;$__i_2_ph=$__i_1;
     }
     while(1) {


      $__i_2=$__i_2_ph;
      while(1) {

       $63=((HEAP32[(($__comp)>>2)])|0);
       $64=((FUNCTION_TABLE_iii[($63)&63]($_0,$__i_2))|0);
       $65=(($__i_2+28)|0);
       if ($64) {
        $__j_2=$__j_1_ph;
        break;
       } else {
        $__i_2=$65;
       }
      }
      while(1) {

       $66=((HEAP32[(($__comp)>>2)])|0);
       $67=((($__j_2)-(28))|0);
       $68=((FUNCTION_TABLE_iii[($66)&63]($_0,$67))|0);
       if ($68) {
        $__j_2=$67;
       } else {
        break;
       }
      }
      $70=($__i_2>>>0)<($67>>>0);
      if (!($70)) {
       $_0=$__i_2;
       continue L3;
      }
      $$etemp$4$0=28;
      $$etemp$4$1=0;

      $72=$__i_2;
      HEAP32[(($__t_i131_0_cast137)>>2)]=((HEAP32[(($72)>>2)])|0);HEAP32[((($__t_i131_0_cast137)+(4))>>2)]=((HEAP32[((($72)+(4))>>2)])|0);HEAP32[((($__t_i131_0_cast137)+(8))>>2)]=((HEAP32[((($72)+(8))>>2)])|0);HEAP32[((($__t_i131_0_cast137)+(12))>>2)]=((HEAP32[((($72)+(12))>>2)])|0);HEAP32[((($__t_i131_0_cast137)+(16))>>2)]=((HEAP32[((($72)+(16))>>2)])|0);HEAP32[((($__t_i131_0_cast137)+(20))>>2)]=((HEAP32[((($72)+(20))>>2)])|0);HEAP32[((($__t_i131_0_cast137)+(24))>>2)]=((HEAP32[((($72)+(24))>>2)])|0);
      $73=$67;
      HEAP32[(($72)>>2)]=((HEAP32[(($73)>>2)])|0);HEAP32[((($72)+(4))>>2)]=((HEAP32[((($73)+(4))>>2)])|0);HEAP32[((($72)+(8))>>2)]=((HEAP32[((($73)+(8))>>2)])|0);HEAP32[((($72)+(12))>>2)]=((HEAP32[((($73)+(12))>>2)])|0);HEAP32[((($72)+(16))>>2)]=((HEAP32[((($73)+(16))>>2)])|0);HEAP32[((($72)+(20))>>2)]=((HEAP32[((($73)+(20))>>2)])|0);HEAP32[((($72)+(24))>>2)]=((HEAP32[((($73)+(24))>>2)])|0);
      HEAP32[(($73)>>2)]=((HEAP32[(($__t_i131_0_cast137)>>2)])|0);HEAP32[((($73)+(4))>>2)]=((HEAP32[((($__t_i131_0_cast137)+(4))>>2)])|0);HEAP32[((($73)+(8))>>2)]=((HEAP32[((($__t_i131_0_cast137)+(8))>>2)])|0);HEAP32[((($73)+(12))>>2)]=((HEAP32[((($__t_i131_0_cast137)+(12))>>2)])|0);HEAP32[((($73)+(16))>>2)]=((HEAP32[((($__t_i131_0_cast137)+(16))>>2)])|0);HEAP32[((($73)+(20))>>2)]=((HEAP32[((($__t_i131_0_cast137)+(20))>>2)])|0);HEAP32[((($73)+(24))>>2)]=((HEAP32[((($__t_i131_0_cast137)+(24))>>2)])|0);
      $$etemp$5$0=28;
      $$etemp$5$1=0;

      $74=(($__i_2+28)|0);
      $__j_1_ph=$67;$__i_2_ph=$74;
     }
    }
   } while(0);


   $83=(($_0+28)|0);
   $84=($83>>>0)<($__j_3>>>0);
   L33: do {
    if ($84) {
     $__j_4_ph=$__j_3;$__i_3_ph=$83;$__n_swaps_4_ph=$__n_swaps_3;$__m_0_ph=$35;
     while(1) {




      $__i_3=$__i_3_ph;
      while(1) {

       $86=((HEAP32[(($__comp)>>2)])|0);
       $87=((FUNCTION_TABLE_iii[($86)&63]($__i_3,$__m_0_ph))|0);
       $88=(($__i_3+28)|0);
       if ($87) {
        $__i_3=$88;
       } else {
        $__j_5=$__j_4_ph;
        break;
       }
      }
      while(1) {

       $89=((HEAP32[(($__comp)>>2)])|0);
       $90=((($__j_5)-(28))|0);
       $91=((FUNCTION_TABLE_iii[($89)&63]($90,$__m_0_ph))|0);
       if ($91) {
        break;
       } else {
        $__j_5=$90;
       }
      }
      $93=($__i_3>>>0)>($90>>>0);
      if ($93) {
       $__i_4=$__i_3;$__n_swaps_5=$__n_swaps_4_ph;$__m_2=$__m_0_ph;
       break L33;
      }
      $$etemp$8$0=28;
      $$etemp$8$1=0;

      $95=$__i_3;
      HEAP32[(($__t_i133_0_cast139)>>2)]=((HEAP32[(($95)>>2)])|0);HEAP32[((($__t_i133_0_cast139)+(4))>>2)]=((HEAP32[((($95)+(4))>>2)])|0);HEAP32[((($__t_i133_0_cast139)+(8))>>2)]=((HEAP32[((($95)+(8))>>2)])|0);HEAP32[((($__t_i133_0_cast139)+(12))>>2)]=((HEAP32[((($95)+(12))>>2)])|0);HEAP32[((($__t_i133_0_cast139)+(16))>>2)]=((HEAP32[((($95)+(16))>>2)])|0);HEAP32[((($__t_i133_0_cast139)+(20))>>2)]=((HEAP32[((($95)+(20))>>2)])|0);HEAP32[((($__t_i133_0_cast139)+(24))>>2)]=((HEAP32[((($95)+(24))>>2)])|0);
      $96=$90;
      HEAP32[(($95)>>2)]=((HEAP32[(($96)>>2)])|0);HEAP32[((($95)+(4))>>2)]=((HEAP32[((($96)+(4))>>2)])|0);HEAP32[((($95)+(8))>>2)]=((HEAP32[((($96)+(8))>>2)])|0);HEAP32[((($95)+(12))>>2)]=((HEAP32[((($96)+(12))>>2)])|0);HEAP32[((($95)+(16))>>2)]=((HEAP32[((($96)+(16))>>2)])|0);HEAP32[((($95)+(20))>>2)]=((HEAP32[((($96)+(20))>>2)])|0);HEAP32[((($95)+(24))>>2)]=((HEAP32[((($96)+(24))>>2)])|0);
      HEAP32[(($96)>>2)]=((HEAP32[(($__t_i133_0_cast139)>>2)])|0);HEAP32[((($96)+(4))>>2)]=((HEAP32[((($__t_i133_0_cast139)+(4))>>2)])|0);HEAP32[((($96)+(8))>>2)]=((HEAP32[((($__t_i133_0_cast139)+(8))>>2)])|0);HEAP32[((($96)+(12))>>2)]=((HEAP32[((($__t_i133_0_cast139)+(12))>>2)])|0);HEAP32[((($96)+(16))>>2)]=((HEAP32[((($__t_i133_0_cast139)+(16))>>2)])|0);HEAP32[((($96)+(20))>>2)]=((HEAP32[((($__t_i133_0_cast139)+(20))>>2)])|0);HEAP32[((($96)+(24))>>2)]=((HEAP32[((($__t_i133_0_cast139)+(24))>>2)])|0);
      $$etemp$9$0=28;
      $$etemp$9$1=0;

      $97=((($__n_swaps_4_ph)+(1))|0);
      $98=($__m_0_ph|0)==($__i_3|0);
      $___m_0=($98?$90:$__m_0_ph);
      $99=(($__i_3+28)|0);
      $__j_4_ph=$90;$__i_3_ph=$99;$__n_swaps_4_ph=$97;$__m_0_ph=$___m_0;
     }
    } else {
     $__i_4=$83;$__n_swaps_5=$__n_swaps_3;$__m_2=$35;
    }
   } while(0);



   $100=($__i_4|0)==($__m_2|0);
   do {
    if ($100) {
     $__n_swaps_6=$__n_swaps_5;
    } else {
     $102=((HEAP32[(($__comp)>>2)])|0);
     $103=((FUNCTION_TABLE_iii[($102)&63]($__m_2,$__i_4))|0);
     if (!($103)) {
      $__n_swaps_6=$__n_swaps_5;
      break;
     }
     $$etemp$10$0=28;
     $$etemp$10$1=0;

     $105=$__i_4;
     HEAP32[(($__t_i134_0_cast140)>>2)]=((HEAP32[(($105)>>2)])|0);HEAP32[((($__t_i134_0_cast140)+(4))>>2)]=((HEAP32[((($105)+(4))>>2)])|0);HEAP32[((($__t_i134_0_cast140)+(8))>>2)]=((HEAP32[((($105)+(8))>>2)])|0);HEAP32[((($__t_i134_0_cast140)+(12))>>2)]=((HEAP32[((($105)+(12))>>2)])|0);HEAP32[((($__t_i134_0_cast140)+(16))>>2)]=((HEAP32[((($105)+(16))>>2)])|0);HEAP32[((($__t_i134_0_cast140)+(20))>>2)]=((HEAP32[((($105)+(20))>>2)])|0);HEAP32[((($__t_i134_0_cast140)+(24))>>2)]=((HEAP32[((($105)+(24))>>2)])|0);
     $106=$__m_2;
     HEAP32[(($105)>>2)]=((HEAP32[(($106)>>2)])|0);HEAP32[((($105)+(4))>>2)]=((HEAP32[((($106)+(4))>>2)])|0);HEAP32[((($105)+(8))>>2)]=((HEAP32[((($106)+(8))>>2)])|0);HEAP32[((($105)+(12))>>2)]=((HEAP32[((($106)+(12))>>2)])|0);HEAP32[((($105)+(16))>>2)]=((HEAP32[((($106)+(16))>>2)])|0);HEAP32[((($105)+(20))>>2)]=((HEAP32[((($106)+(20))>>2)])|0);HEAP32[((($105)+(24))>>2)]=((HEAP32[((($106)+(24))>>2)])|0);
     HEAP32[(($106)>>2)]=((HEAP32[(($__t_i134_0_cast140)>>2)])|0);HEAP32[((($106)+(4))>>2)]=((HEAP32[((($__t_i134_0_cast140)+(4))>>2)])|0);HEAP32[((($106)+(8))>>2)]=((HEAP32[((($__t_i134_0_cast140)+(8))>>2)])|0);HEAP32[((($106)+(12))>>2)]=((HEAP32[((($__t_i134_0_cast140)+(12))>>2)])|0);HEAP32[((($106)+(16))>>2)]=((HEAP32[((($__t_i134_0_cast140)+(16))>>2)])|0);HEAP32[((($106)+(20))>>2)]=((HEAP32[((($__t_i134_0_cast140)+(20))>>2)])|0);HEAP32[((($106)+(24))>>2)]=((HEAP32[((($__t_i134_0_cast140)+(24))>>2)])|0);
     $$etemp$11$0=28;
     $$etemp$11$1=0;

     $107=((($__n_swaps_5)+(1))|0);
     $__n_swaps_6=$107;
    }
   } while(0);

   $109=($__n_swaps_6|0)==0;
   if ($109) {
    $111=((__ZNSt3__127__insertion_sort_incompleteIRPFbRK21b2ParticleBodyContactS3_EPS1_EEbT0_S8_T_($_0,$__i_4,$__comp))|0);
    $112=(($__i_4+28)|0);
    $113=((__ZNSt3__127__insertion_sort_incompleteIRPFbRK21b2ParticleBodyContactS3_EPS1_EEbT0_S8_T_($112,$_0129_ph,$__comp))|0);
    if ($113) {
     label = 39;
     break;
    }
    if ($111) {
     $_0=$112;
     continue;
    }
   }
   $117=$__i_4;
   $118=((($117)-($4))|0);
   $119=((($1)-($117))|0);
   $120=($118|0)<($119|0);
   if (!($120)) {
    label = 43;
    break;
   }
   __ZNSt3__16__sortIRPFbRK21b2ParticleBodyContactS3_EPS1_EEvT0_S8_T_($_0,$__i_4,$__comp);
   $122=(($__i_4+28)|0);
   $_0=$122;
  }
  if ((label|0) == 39) {
   label = 0;
   if ($111) {
    label = 44;
    break;
   } else {
    $_0_ph=$_0;$_0129_ph=$__i_4;
    continue;
   }
  }
  else if ((label|0) == 43) {
   label = 0;
   $124=(($__i_4+28)|0);
   __ZNSt3__16__sortIRPFbRK21b2ParticleBodyContactS3_EPS1_EEvT0_S8_T_($124,$_0129_ph,$__comp);
   $_0_ph=$_0;$_0129_ph=$__i_4;
   continue;
  }
 }
 if ((label|0) == 4) {
  $8=((HEAP32[(($__comp)>>2)])|0);
  $9=((($_0129_ph)-(28))|0);
  $10=((FUNCTION_TABLE_iii[($8)&63]($9,$_0))|0);
  if (!($10)) {
   STACKTOP=sp;return;
  }
  $__t_i_0_cast135=$__t_i;
  $$etemp$0$0=28;
  $$etemp$0$1=0;

  $12=$_0;
  HEAP32[(($__t_i_0_cast135)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($__t_i_0_cast135)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast135)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);HEAP32[((($__t_i_0_cast135)+(12))>>2)]=((HEAP32[((($12)+(12))>>2)])|0);HEAP32[((($__t_i_0_cast135)+(16))>>2)]=((HEAP32[((($12)+(16))>>2)])|0);HEAP32[((($__t_i_0_cast135)+(20))>>2)]=((HEAP32[((($12)+(20))>>2)])|0);HEAP32[((($__t_i_0_cast135)+(24))>>2)]=((HEAP32[((($12)+(24))>>2)])|0);
  $13=$9;
  HEAP32[(($12)>>2)]=((HEAP32[(($13)>>2)])|0);HEAP32[((($12)+(4))>>2)]=((HEAP32[((($13)+(4))>>2)])|0);HEAP32[((($12)+(8))>>2)]=((HEAP32[((($13)+(8))>>2)])|0);HEAP32[((($12)+(12))>>2)]=((HEAP32[((($13)+(12))>>2)])|0);HEAP32[((($12)+(16))>>2)]=((HEAP32[((($13)+(16))>>2)])|0);HEAP32[((($12)+(20))>>2)]=((HEAP32[((($13)+(20))>>2)])|0);HEAP32[((($12)+(24))>>2)]=((HEAP32[((($13)+(24))>>2)])|0);
  HEAP32[(($13)>>2)]=((HEAP32[(($__t_i_0_cast135)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($__t_i_0_cast135)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($__t_i_0_cast135)+(8))>>2)])|0);HEAP32[((($13)+(12))>>2)]=((HEAP32[((($__t_i_0_cast135)+(12))>>2)])|0);HEAP32[((($13)+(16))>>2)]=((HEAP32[((($__t_i_0_cast135)+(16))>>2)])|0);HEAP32[((($13)+(20))>>2)]=((HEAP32[((($__t_i_0_cast135)+(20))>>2)])|0);HEAP32[((($13)+(24))>>2)]=((HEAP32[((($__t_i_0_cast135)+(24))>>2)])|0);
  $$etemp$1$0=28;
  $$etemp$1$1=0;

  STACKTOP=sp;return;
 }
 else if ((label|0) == 6) {
  $15=(($_0+28)|0);
  $16=((($_0129_ph)-(28))|0);
  $17=((__ZNSt3__17__sort3IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_T_($_0,$15,$16,$__comp))|0);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 7) {
  $19=(($_0+28)|0);
  $20=(($_0+56)|0);
  $21=((($_0129_ph)-(28))|0);
  $22=((__ZNSt3__17__sort4IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_S8_T_($_0,$19,$20,$21,$__comp))|0);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 8) {
  $24=(($_0+28)|0);
  $25=(($_0+56)|0);
  $26=(($_0+84)|0);
  $27=((($_0129_ph)-(28))|0);
  $28=((__ZNSt3__17__sort5IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_S8_S8_T_($_0,$24,$25,$26,$27,$__comp))|0);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 10) {
  __ZNSt3__118__insertion_sort_3IRPFbRK21b2ParticleBodyContactS3_EPS1_EEvT0_S8_T_($_0,$_0129_ph,$__comp);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 44) {
  STACKTOP=sp;return;
 }
}


function __ZNSt3__17__sort3IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_T_($__x,$__y,$__z,$__c){
 $__x=($__x)|0;
 $__y=($__y)|0;
 $__z=($__z)|0;
 $__c=($__c)|0;
 var $__t_i28=0,$__t_i27=0,$__t_i26=0,$__t_i25=0,$__t_i=0,$1=0,$2=0,$3=0,$4=0,$__t_i_0_cast29=0,$$etemp$0$0=0,$$etemp$0$1=0,$7=0,$8=0,$$etemp$1$0=0,$$etemp$1$1=0,$9=0,$10=0,$__t_i26_0_cast31=0,$$etemp$2$0=0;
 var $$etemp$2$1=0,$12=0,$$etemp$3$0=0,$$etemp$3$1=0,$__t_i28_0_cast33=0,$$etemp$4$0=0,$$etemp$4$1=0,$15=0,$16=0,$$etemp$5$0=0,$$etemp$5$1=0,$__t_i27_0_cast32=0,$$etemp$6$0=0,$$etemp$6$1=0,$18=0,$19=0,$$etemp$7$0=0,$$etemp$7$1=0,$20=0,$21=0;
 var $__t_i25_0_cast30=0,$$etemp$8$0=0,$$etemp$8$1=0,$23=0,$$etemp$9$0=0,$$etemp$9$1=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+160)|0;
 $__t_i28=((sp)|0);
 $__t_i27=(((sp)+(32))|0);
 $__t_i26=(((sp)+(64))|0);
 $__t_i25=(((sp)+(96))|0);
 $__t_i=(((sp)+(128))|0);
 $1=((HEAP32[(($__c)>>2)])|0);
 $2=((FUNCTION_TABLE_iii[($1)&63]($__y,$__x))|0);
 $3=((HEAP32[(($__c)>>2)])|0);
 $4=((FUNCTION_TABLE_iii[($3)&63]($__z,$__y))|0);
 if (!($2)) {
  if (!($4)) {
   $_0=0;

   STACKTOP=sp;return (($_0)|0);
  }
  $__t_i_0_cast29=$__t_i;
  $$etemp$0$0=28;
  $$etemp$0$1=0;

  $7=$__y;
  HEAP32[(($__t_i_0_cast29)>>2)]=((HEAP32[(($7)>>2)])|0);HEAP32[((($__t_i_0_cast29)+(4))>>2)]=((HEAP32[((($7)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast29)+(8))>>2)]=((HEAP32[((($7)+(8))>>2)])|0);HEAP32[((($__t_i_0_cast29)+(12))>>2)]=((HEAP32[((($7)+(12))>>2)])|0);HEAP32[((($__t_i_0_cast29)+(16))>>2)]=((HEAP32[((($7)+(16))>>2)])|0);HEAP32[((($__t_i_0_cast29)+(20))>>2)]=((HEAP32[((($7)+(20))>>2)])|0);HEAP32[((($__t_i_0_cast29)+(24))>>2)]=((HEAP32[((($7)+(24))>>2)])|0);
  $8=$__z;
  HEAP32[(($7)>>2)]=((HEAP32[(($8)>>2)])|0);HEAP32[((($7)+(4))>>2)]=((HEAP32[((($8)+(4))>>2)])|0);HEAP32[((($7)+(8))>>2)]=((HEAP32[((($8)+(8))>>2)])|0);HEAP32[((($7)+(12))>>2)]=((HEAP32[((($8)+(12))>>2)])|0);HEAP32[((($7)+(16))>>2)]=((HEAP32[((($8)+(16))>>2)])|0);HEAP32[((($7)+(20))>>2)]=((HEAP32[((($8)+(20))>>2)])|0);HEAP32[((($7)+(24))>>2)]=((HEAP32[((($8)+(24))>>2)])|0);
  HEAP32[(($8)>>2)]=((HEAP32[(($__t_i_0_cast29)>>2)])|0);HEAP32[((($8)+(4))>>2)]=((HEAP32[((($__t_i_0_cast29)+(4))>>2)])|0);HEAP32[((($8)+(8))>>2)]=((HEAP32[((($__t_i_0_cast29)+(8))>>2)])|0);HEAP32[((($8)+(12))>>2)]=((HEAP32[((($__t_i_0_cast29)+(12))>>2)])|0);HEAP32[((($8)+(16))>>2)]=((HEAP32[((($__t_i_0_cast29)+(16))>>2)])|0);HEAP32[((($8)+(20))>>2)]=((HEAP32[((($__t_i_0_cast29)+(20))>>2)])|0);HEAP32[((($8)+(24))>>2)]=((HEAP32[((($__t_i_0_cast29)+(24))>>2)])|0);
  $$etemp$1$0=28;
  $$etemp$1$1=0;

  $9=((HEAP32[(($__c)>>2)])|0);
  $10=((FUNCTION_TABLE_iii[($9)&63]($__y,$__x))|0);
  if (!($10)) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $__t_i26_0_cast31=$__t_i26;
  $$etemp$2$0=28;
  $$etemp$2$1=0;

  $12=$__x;
  HEAP32[(($__t_i26_0_cast31)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($__t_i26_0_cast31)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($__t_i26_0_cast31)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);HEAP32[((($__t_i26_0_cast31)+(12))>>2)]=((HEAP32[((($12)+(12))>>2)])|0);HEAP32[((($__t_i26_0_cast31)+(16))>>2)]=((HEAP32[((($12)+(16))>>2)])|0);HEAP32[((($__t_i26_0_cast31)+(20))>>2)]=((HEAP32[((($12)+(20))>>2)])|0);HEAP32[((($__t_i26_0_cast31)+(24))>>2)]=((HEAP32[((($12)+(24))>>2)])|0);
  HEAP32[(($12)>>2)]=((HEAP32[(($7)>>2)])|0);HEAP32[((($12)+(4))>>2)]=((HEAP32[((($7)+(4))>>2)])|0);HEAP32[((($12)+(8))>>2)]=((HEAP32[((($7)+(8))>>2)])|0);HEAP32[((($12)+(12))>>2)]=((HEAP32[((($7)+(12))>>2)])|0);HEAP32[((($12)+(16))>>2)]=((HEAP32[((($7)+(16))>>2)])|0);HEAP32[((($12)+(20))>>2)]=((HEAP32[((($7)+(20))>>2)])|0);HEAP32[((($12)+(24))>>2)]=((HEAP32[((($7)+(24))>>2)])|0);
  HEAP32[(($7)>>2)]=((HEAP32[(($__t_i26_0_cast31)>>2)])|0);HEAP32[((($7)+(4))>>2)]=((HEAP32[((($__t_i26_0_cast31)+(4))>>2)])|0);HEAP32[((($7)+(8))>>2)]=((HEAP32[((($__t_i26_0_cast31)+(8))>>2)])|0);HEAP32[((($7)+(12))>>2)]=((HEAP32[((($__t_i26_0_cast31)+(12))>>2)])|0);HEAP32[((($7)+(16))>>2)]=((HEAP32[((($__t_i26_0_cast31)+(16))>>2)])|0);HEAP32[((($7)+(20))>>2)]=((HEAP32[((($__t_i26_0_cast31)+(20))>>2)])|0);HEAP32[((($7)+(24))>>2)]=((HEAP32[((($__t_i26_0_cast31)+(24))>>2)])|0);
  $$etemp$3$0=28;
  $$etemp$3$1=0;

  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 if ($4) {
  $__t_i28_0_cast33=$__t_i28;
  $$etemp$4$0=28;
  $$etemp$4$1=0;

  $15=$__x;
  HEAP32[(($__t_i28_0_cast33)>>2)]=((HEAP32[(($15)>>2)])|0);HEAP32[((($__t_i28_0_cast33)+(4))>>2)]=((HEAP32[((($15)+(4))>>2)])|0);HEAP32[((($__t_i28_0_cast33)+(8))>>2)]=((HEAP32[((($15)+(8))>>2)])|0);HEAP32[((($__t_i28_0_cast33)+(12))>>2)]=((HEAP32[((($15)+(12))>>2)])|0);HEAP32[((($__t_i28_0_cast33)+(16))>>2)]=((HEAP32[((($15)+(16))>>2)])|0);HEAP32[((($__t_i28_0_cast33)+(20))>>2)]=((HEAP32[((($15)+(20))>>2)])|0);HEAP32[((($__t_i28_0_cast33)+(24))>>2)]=((HEAP32[((($15)+(24))>>2)])|0);
  $16=$__z;
  HEAP32[(($15)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($15)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($15)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($15)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);HEAP32[((($15)+(16))>>2)]=((HEAP32[((($16)+(16))>>2)])|0);HEAP32[((($15)+(20))>>2)]=((HEAP32[((($16)+(20))>>2)])|0);HEAP32[((($15)+(24))>>2)]=((HEAP32[((($16)+(24))>>2)])|0);
  HEAP32[(($16)>>2)]=((HEAP32[(($__t_i28_0_cast33)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((($__t_i28_0_cast33)+(4))>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((($__t_i28_0_cast33)+(8))>>2)])|0);HEAP32[((($16)+(12))>>2)]=((HEAP32[((($__t_i28_0_cast33)+(12))>>2)])|0);HEAP32[((($16)+(16))>>2)]=((HEAP32[((($__t_i28_0_cast33)+(16))>>2)])|0);HEAP32[((($16)+(20))>>2)]=((HEAP32[((($__t_i28_0_cast33)+(20))>>2)])|0);HEAP32[((($16)+(24))>>2)]=((HEAP32[((($__t_i28_0_cast33)+(24))>>2)])|0);
  $$etemp$5$0=28;
  $$etemp$5$1=0;

  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 $__t_i27_0_cast32=$__t_i27;
 $$etemp$6$0=28;
 $$etemp$6$1=0;

 $18=$__x;
 HEAP32[(($__t_i27_0_cast32)>>2)]=((HEAP32[(($18)>>2)])|0);HEAP32[((($__t_i27_0_cast32)+(4))>>2)]=((HEAP32[((($18)+(4))>>2)])|0);HEAP32[((($__t_i27_0_cast32)+(8))>>2)]=((HEAP32[((($18)+(8))>>2)])|0);HEAP32[((($__t_i27_0_cast32)+(12))>>2)]=((HEAP32[((($18)+(12))>>2)])|0);HEAP32[((($__t_i27_0_cast32)+(16))>>2)]=((HEAP32[((($18)+(16))>>2)])|0);HEAP32[((($__t_i27_0_cast32)+(20))>>2)]=((HEAP32[((($18)+(20))>>2)])|0);HEAP32[((($__t_i27_0_cast32)+(24))>>2)]=((HEAP32[((($18)+(24))>>2)])|0);
 $19=$__y;
 HEAP32[(($18)>>2)]=((HEAP32[(($19)>>2)])|0);HEAP32[((($18)+(4))>>2)]=((HEAP32[((($19)+(4))>>2)])|0);HEAP32[((($18)+(8))>>2)]=((HEAP32[((($19)+(8))>>2)])|0);HEAP32[((($18)+(12))>>2)]=((HEAP32[((($19)+(12))>>2)])|0);HEAP32[((($18)+(16))>>2)]=((HEAP32[((($19)+(16))>>2)])|0);HEAP32[((($18)+(20))>>2)]=((HEAP32[((($19)+(20))>>2)])|0);HEAP32[((($18)+(24))>>2)]=((HEAP32[((($19)+(24))>>2)])|0);
 HEAP32[(($19)>>2)]=((HEAP32[(($__t_i27_0_cast32)>>2)])|0);HEAP32[((($19)+(4))>>2)]=((HEAP32[((($__t_i27_0_cast32)+(4))>>2)])|0);HEAP32[((($19)+(8))>>2)]=((HEAP32[((($__t_i27_0_cast32)+(8))>>2)])|0);HEAP32[((($19)+(12))>>2)]=((HEAP32[((($__t_i27_0_cast32)+(12))>>2)])|0);HEAP32[((($19)+(16))>>2)]=((HEAP32[((($__t_i27_0_cast32)+(16))>>2)])|0);HEAP32[((($19)+(20))>>2)]=((HEAP32[((($__t_i27_0_cast32)+(20))>>2)])|0);HEAP32[((($19)+(24))>>2)]=((HEAP32[((($__t_i27_0_cast32)+(24))>>2)])|0);
 $$etemp$7$0=28;
 $$etemp$7$1=0;

 $20=((HEAP32[(($__c)>>2)])|0);
 $21=((FUNCTION_TABLE_iii[($20)&63]($__z,$__y))|0);
 if (!($21)) {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 $__t_i25_0_cast30=$__t_i25;
 $$etemp$8$0=28;
 $$etemp$8$1=0;

 HEAP32[(($__t_i25_0_cast30)>>2)]=((HEAP32[(($19)>>2)])|0);HEAP32[((($__t_i25_0_cast30)+(4))>>2)]=((HEAP32[((($19)+(4))>>2)])|0);HEAP32[((($__t_i25_0_cast30)+(8))>>2)]=((HEAP32[((($19)+(8))>>2)])|0);HEAP32[((($__t_i25_0_cast30)+(12))>>2)]=((HEAP32[((($19)+(12))>>2)])|0);HEAP32[((($__t_i25_0_cast30)+(16))>>2)]=((HEAP32[((($19)+(16))>>2)])|0);HEAP32[((($__t_i25_0_cast30)+(20))>>2)]=((HEAP32[((($19)+(20))>>2)])|0);HEAP32[((($__t_i25_0_cast30)+(24))>>2)]=((HEAP32[((($19)+(24))>>2)])|0);
 $23=$__z;
 HEAP32[(($19)>>2)]=((HEAP32[(($23)>>2)])|0);HEAP32[((($19)+(4))>>2)]=((HEAP32[((($23)+(4))>>2)])|0);HEAP32[((($19)+(8))>>2)]=((HEAP32[((($23)+(8))>>2)])|0);HEAP32[((($19)+(12))>>2)]=((HEAP32[((($23)+(12))>>2)])|0);HEAP32[((($19)+(16))>>2)]=((HEAP32[((($23)+(16))>>2)])|0);HEAP32[((($19)+(20))>>2)]=((HEAP32[((($23)+(20))>>2)])|0);HEAP32[((($19)+(24))>>2)]=((HEAP32[((($23)+(24))>>2)])|0);
 HEAP32[(($23)>>2)]=((HEAP32[(($__t_i25_0_cast30)>>2)])|0);HEAP32[((($23)+(4))>>2)]=((HEAP32[((($__t_i25_0_cast30)+(4))>>2)])|0);HEAP32[((($23)+(8))>>2)]=((HEAP32[((($__t_i25_0_cast30)+(8))>>2)])|0);HEAP32[((($23)+(12))>>2)]=((HEAP32[((($__t_i25_0_cast30)+(12))>>2)])|0);HEAP32[((($23)+(16))>>2)]=((HEAP32[((($__t_i25_0_cast30)+(16))>>2)])|0);HEAP32[((($23)+(20))>>2)]=((HEAP32[((($__t_i25_0_cast30)+(20))>>2)])|0);HEAP32[((($23)+(24))>>2)]=((HEAP32[((($__t_i25_0_cast30)+(24))>>2)])|0);
 $$etemp$9$0=28;
 $$etemp$9$1=0;

 $_0=2;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNSt3__17__sort4IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_S8_T_($__x1,$__x2,$__x3,$__x4,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__c=($__c)|0;
 var $__t_i23=0,$__t_i22=0,$__t_i=0,$1=0,$2=0,$3=0,$__t_i_0_cast24=0,$$etemp$0$0=0,$$etemp$0$1=0,$5=0,$6=0,$$etemp$1$0=0,$$etemp$1$1=0,$7=0,$8=0,$9=0,$__t_i23_0_cast26=0,$$etemp$2$0=0,$$etemp$2$1=0,$11=0;
 var $$etemp$3$0=0,$$etemp$3$1=0,$12=0,$13=0,$14=0,$__t_i22_0_cast25=0,$$etemp$4$0=0,$$etemp$4$1=0,$16=0,$$etemp$5$0=0,$$etemp$5$1=0,$17=0,$__r_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+96)|0;
 $__t_i23=((sp)|0);
 $__t_i22=(((sp)+(32))|0);
 $__t_i=(((sp)+(64))|0);
 $1=((__ZNSt3__17__sort3IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_T_($__x1,$__x2,$__x3,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&63]($__x4,$__x3))|0);
 if (!($3)) {
  $__r_0=$1;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i_0_cast24=$__t_i;
 $$etemp$0$0=28;
 $$etemp$0$1=0;

 $5=$__x3;
 HEAP32[(($__t_i_0_cast24)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($__t_i_0_cast24)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast24)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);HEAP32[((($__t_i_0_cast24)+(12))>>2)]=((HEAP32[((($5)+(12))>>2)])|0);HEAP32[((($__t_i_0_cast24)+(16))>>2)]=((HEAP32[((($5)+(16))>>2)])|0);HEAP32[((($__t_i_0_cast24)+(20))>>2)]=((HEAP32[((($5)+(20))>>2)])|0);HEAP32[((($__t_i_0_cast24)+(24))>>2)]=((HEAP32[((($5)+(24))>>2)])|0);
 $6=$__x4;
 HEAP32[(($5)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);HEAP32[((($5)+(12))>>2)]=((HEAP32[((($6)+(12))>>2)])|0);HEAP32[((($5)+(16))>>2)]=((HEAP32[((($6)+(16))>>2)])|0);HEAP32[((($5)+(20))>>2)]=((HEAP32[((($6)+(20))>>2)])|0);HEAP32[((($5)+(24))>>2)]=((HEAP32[((($6)+(24))>>2)])|0);
 HEAP32[(($6)>>2)]=((HEAP32[(($__t_i_0_cast24)>>2)])|0);HEAP32[((($6)+(4))>>2)]=((HEAP32[((($__t_i_0_cast24)+(4))>>2)])|0);HEAP32[((($6)+(8))>>2)]=((HEAP32[((($__t_i_0_cast24)+(8))>>2)])|0);HEAP32[((($6)+(12))>>2)]=((HEAP32[((($__t_i_0_cast24)+(12))>>2)])|0);HEAP32[((($6)+(16))>>2)]=((HEAP32[((($__t_i_0_cast24)+(16))>>2)])|0);HEAP32[((($6)+(20))>>2)]=((HEAP32[((($__t_i_0_cast24)+(20))>>2)])|0);HEAP32[((($6)+(24))>>2)]=((HEAP32[((($__t_i_0_cast24)+(24))>>2)])|0);
 $$etemp$1$0=28;
 $$etemp$1$1=0;

 $7=((($1)+(1))|0);
 $8=((HEAP32[(($__c)>>2)])|0);
 $9=((FUNCTION_TABLE_iii[($8)&63]($__x3,$__x2))|0);
 if (!($9)) {
  $__r_0=$7;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i23_0_cast26=$__t_i23;
 $$etemp$2$0=28;
 $$etemp$2$1=0;

 $11=$__x2;
 HEAP32[(($__t_i23_0_cast26)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($__t_i23_0_cast26)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($__t_i23_0_cast26)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);HEAP32[((($__t_i23_0_cast26)+(12))>>2)]=((HEAP32[((($11)+(12))>>2)])|0);HEAP32[((($__t_i23_0_cast26)+(16))>>2)]=((HEAP32[((($11)+(16))>>2)])|0);HEAP32[((($__t_i23_0_cast26)+(20))>>2)]=((HEAP32[((($11)+(20))>>2)])|0);HEAP32[((($__t_i23_0_cast26)+(24))>>2)]=((HEAP32[((($11)+(24))>>2)])|0);
 HEAP32[(($11)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($5)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($5)+(16))>>2)])|0);HEAP32[((($11)+(20))>>2)]=((HEAP32[((($5)+(20))>>2)])|0);HEAP32[((($11)+(24))>>2)]=((HEAP32[((($5)+(24))>>2)])|0);
 HEAP32[(($5)>>2)]=((HEAP32[(($__t_i23_0_cast26)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($__t_i23_0_cast26)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($__t_i23_0_cast26)+(8))>>2)])|0);HEAP32[((($5)+(12))>>2)]=((HEAP32[((($__t_i23_0_cast26)+(12))>>2)])|0);HEAP32[((($5)+(16))>>2)]=((HEAP32[((($__t_i23_0_cast26)+(16))>>2)])|0);HEAP32[((($5)+(20))>>2)]=((HEAP32[((($__t_i23_0_cast26)+(20))>>2)])|0);HEAP32[((($5)+(24))>>2)]=((HEAP32[((($__t_i23_0_cast26)+(24))>>2)])|0);
 $$etemp$3$0=28;
 $$etemp$3$1=0;

 $12=((($1)+(2))|0);
 $13=((HEAP32[(($__c)>>2)])|0);
 $14=((FUNCTION_TABLE_iii[($13)&63]($__x2,$__x1))|0);
 if (!($14)) {
  $__r_0=$12;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i22_0_cast25=$__t_i22;
 $$etemp$4$0=28;
 $$etemp$4$1=0;

 $16=$__x1;
 HEAP32[(($__t_i22_0_cast25)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($__t_i22_0_cast25)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($__t_i22_0_cast25)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($__t_i22_0_cast25)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);HEAP32[((($__t_i22_0_cast25)+(16))>>2)]=((HEAP32[((($16)+(16))>>2)])|0);HEAP32[((($__t_i22_0_cast25)+(20))>>2)]=((HEAP32[((($16)+(20))>>2)])|0);HEAP32[((($__t_i22_0_cast25)+(24))>>2)]=((HEAP32[((($16)+(24))>>2)])|0);
 HEAP32[(($16)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);HEAP32[((($16)+(12))>>2)]=((HEAP32[((($11)+(12))>>2)])|0);HEAP32[((($16)+(16))>>2)]=((HEAP32[((($11)+(16))>>2)])|0);HEAP32[((($16)+(20))>>2)]=((HEAP32[((($11)+(20))>>2)])|0);HEAP32[((($16)+(24))>>2)]=((HEAP32[((($11)+(24))>>2)])|0);
 HEAP32[(($11)>>2)]=((HEAP32[(($__t_i22_0_cast25)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($__t_i22_0_cast25)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($__t_i22_0_cast25)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($__t_i22_0_cast25)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($__t_i22_0_cast25)+(16))>>2)])|0);HEAP32[((($11)+(20))>>2)]=((HEAP32[((($__t_i22_0_cast25)+(20))>>2)])|0);HEAP32[((($11)+(24))>>2)]=((HEAP32[((($__t_i22_0_cast25)+(24))>>2)])|0);
 $$etemp$5$0=28;
 $$etemp$5$1=0;

 $17=((($1)+(3))|0);
 $__r_0=$17;

 STACKTOP=sp;return (($__r_0)|0);
}



function __ZNSt3__17__sort5IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_S8_S8_T_($__x1,$__x2,$__x3,$__x4,$__x5,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__x5=($__x5)|0;
 $__c=($__c)|0;
 var $__t_i31=0,$__t_i30=0,$__t_i29=0,$__t_i=0,$1=0,$2=0,$3=0,$__t_i_0_cast32=0,$$etemp$0$0=0,$$etemp$0$1=0,$5=0,$6=0,$$etemp$1$0=0,$$etemp$1$1=0,$7=0,$8=0,$9=0,$__t_i30_0_cast34=0,$$etemp$2$0=0,$$etemp$2$1=0;
 var $11=0,$$etemp$3$0=0,$$etemp$3$1=0,$12=0,$13=0,$14=0,$__t_i31_0_cast35=0,$$etemp$4$0=0,$$etemp$4$1=0,$16=0,$$etemp$5$0=0,$$etemp$5$1=0,$17=0,$18=0,$19=0,$__t_i29_0_cast33=0,$$etemp$6$0=0,$$etemp$6$1=0,$21=0,$$etemp$7$0=0;
 var $$etemp$7$1=0,$22=0,$__r_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+128)|0;
 $__t_i31=((sp)|0);
 $__t_i30=(((sp)+(32))|0);
 $__t_i29=(((sp)+(64))|0);
 $__t_i=(((sp)+(96))|0);
 $1=((__ZNSt3__17__sort4IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_S8_T_($__x1,$__x2,$__x3,$__x4,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&63]($__x5,$__x4))|0);
 if (!($3)) {
  $__r_0=$1;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i_0_cast32=$__t_i;
 $$etemp$0$0=28;
 $$etemp$0$1=0;

 $5=$__x4;
 HEAP32[(($__t_i_0_cast32)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($__t_i_0_cast32)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast32)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);HEAP32[((($__t_i_0_cast32)+(12))>>2)]=((HEAP32[((($5)+(12))>>2)])|0);HEAP32[((($__t_i_0_cast32)+(16))>>2)]=((HEAP32[((($5)+(16))>>2)])|0);HEAP32[((($__t_i_0_cast32)+(20))>>2)]=((HEAP32[((($5)+(20))>>2)])|0);HEAP32[((($__t_i_0_cast32)+(24))>>2)]=((HEAP32[((($5)+(24))>>2)])|0);
 $6=$__x5;
 HEAP32[(($5)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);HEAP32[((($5)+(12))>>2)]=((HEAP32[((($6)+(12))>>2)])|0);HEAP32[((($5)+(16))>>2)]=((HEAP32[((($6)+(16))>>2)])|0);HEAP32[((($5)+(20))>>2)]=((HEAP32[((($6)+(20))>>2)])|0);HEAP32[((($5)+(24))>>2)]=((HEAP32[((($6)+(24))>>2)])|0);
 HEAP32[(($6)>>2)]=((HEAP32[(($__t_i_0_cast32)>>2)])|0);HEAP32[((($6)+(4))>>2)]=((HEAP32[((($__t_i_0_cast32)+(4))>>2)])|0);HEAP32[((($6)+(8))>>2)]=((HEAP32[((($__t_i_0_cast32)+(8))>>2)])|0);HEAP32[((($6)+(12))>>2)]=((HEAP32[((($__t_i_0_cast32)+(12))>>2)])|0);HEAP32[((($6)+(16))>>2)]=((HEAP32[((($__t_i_0_cast32)+(16))>>2)])|0);HEAP32[((($6)+(20))>>2)]=((HEAP32[((($__t_i_0_cast32)+(20))>>2)])|0);HEAP32[((($6)+(24))>>2)]=((HEAP32[((($__t_i_0_cast32)+(24))>>2)])|0);
 $$etemp$1$0=28;
 $$etemp$1$1=0;

 $7=((($1)+(1))|0);
 $8=((HEAP32[(($__c)>>2)])|0);
 $9=((FUNCTION_TABLE_iii[($8)&63]($__x4,$__x3))|0);
 if (!($9)) {
  $__r_0=$7;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i30_0_cast34=$__t_i30;
 $$etemp$2$0=28;
 $$etemp$2$1=0;

 $11=$__x3;
 HEAP32[(($__t_i30_0_cast34)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($__t_i30_0_cast34)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($__t_i30_0_cast34)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);HEAP32[((($__t_i30_0_cast34)+(12))>>2)]=((HEAP32[((($11)+(12))>>2)])|0);HEAP32[((($__t_i30_0_cast34)+(16))>>2)]=((HEAP32[((($11)+(16))>>2)])|0);HEAP32[((($__t_i30_0_cast34)+(20))>>2)]=((HEAP32[((($11)+(20))>>2)])|0);HEAP32[((($__t_i30_0_cast34)+(24))>>2)]=((HEAP32[((($11)+(24))>>2)])|0);
 HEAP32[(($11)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($5)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($5)+(16))>>2)])|0);HEAP32[((($11)+(20))>>2)]=((HEAP32[((($5)+(20))>>2)])|0);HEAP32[((($11)+(24))>>2)]=((HEAP32[((($5)+(24))>>2)])|0);
 HEAP32[(($5)>>2)]=((HEAP32[(($__t_i30_0_cast34)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($__t_i30_0_cast34)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($__t_i30_0_cast34)+(8))>>2)])|0);HEAP32[((($5)+(12))>>2)]=((HEAP32[((($__t_i30_0_cast34)+(12))>>2)])|0);HEAP32[((($5)+(16))>>2)]=((HEAP32[((($__t_i30_0_cast34)+(16))>>2)])|0);HEAP32[((($5)+(20))>>2)]=((HEAP32[((($__t_i30_0_cast34)+(20))>>2)])|0);HEAP32[((($5)+(24))>>2)]=((HEAP32[((($__t_i30_0_cast34)+(24))>>2)])|0);
 $$etemp$3$0=28;
 $$etemp$3$1=0;

 $12=((($1)+(2))|0);
 $13=((HEAP32[(($__c)>>2)])|0);
 $14=((FUNCTION_TABLE_iii[($13)&63]($__x3,$__x2))|0);
 if (!($14)) {
  $__r_0=$12;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i31_0_cast35=$__t_i31;
 $$etemp$4$0=28;
 $$etemp$4$1=0;

 $16=$__x2;
 HEAP32[(($__t_i31_0_cast35)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($__t_i31_0_cast35)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($__t_i31_0_cast35)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($__t_i31_0_cast35)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);HEAP32[((($__t_i31_0_cast35)+(16))>>2)]=((HEAP32[((($16)+(16))>>2)])|0);HEAP32[((($__t_i31_0_cast35)+(20))>>2)]=((HEAP32[((($16)+(20))>>2)])|0);HEAP32[((($__t_i31_0_cast35)+(24))>>2)]=((HEAP32[((($16)+(24))>>2)])|0);
 HEAP32[(($16)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);HEAP32[((($16)+(12))>>2)]=((HEAP32[((($11)+(12))>>2)])|0);HEAP32[((($16)+(16))>>2)]=((HEAP32[((($11)+(16))>>2)])|0);HEAP32[((($16)+(20))>>2)]=((HEAP32[((($11)+(20))>>2)])|0);HEAP32[((($16)+(24))>>2)]=((HEAP32[((($11)+(24))>>2)])|0);
 HEAP32[(($11)>>2)]=((HEAP32[(($__t_i31_0_cast35)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($__t_i31_0_cast35)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($__t_i31_0_cast35)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($__t_i31_0_cast35)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($__t_i31_0_cast35)+(16))>>2)])|0);HEAP32[((($11)+(20))>>2)]=((HEAP32[((($__t_i31_0_cast35)+(20))>>2)])|0);HEAP32[((($11)+(24))>>2)]=((HEAP32[((($__t_i31_0_cast35)+(24))>>2)])|0);
 $$etemp$5$0=28;
 $$etemp$5$1=0;

 $17=((($1)+(3))|0);
 $18=((HEAP32[(($__c)>>2)])|0);
 $19=((FUNCTION_TABLE_iii[($18)&63]($__x2,$__x1))|0);
 if (!($19)) {
  $__r_0=$17;

  STACKTOP=sp;return (($__r_0)|0);
 }
 $__t_i29_0_cast33=$__t_i29;
 $$etemp$6$0=28;
 $$etemp$6$1=0;

 $21=$__x1;
 HEAP32[(($__t_i29_0_cast33)>>2)]=((HEAP32[(($21)>>2)])|0);HEAP32[((($__t_i29_0_cast33)+(4))>>2)]=((HEAP32[((($21)+(4))>>2)])|0);HEAP32[((($__t_i29_0_cast33)+(8))>>2)]=((HEAP32[((($21)+(8))>>2)])|0);HEAP32[((($__t_i29_0_cast33)+(12))>>2)]=((HEAP32[((($21)+(12))>>2)])|0);HEAP32[((($__t_i29_0_cast33)+(16))>>2)]=((HEAP32[((($21)+(16))>>2)])|0);HEAP32[((($__t_i29_0_cast33)+(20))>>2)]=((HEAP32[((($21)+(20))>>2)])|0);HEAP32[((($__t_i29_0_cast33)+(24))>>2)]=((HEAP32[((($21)+(24))>>2)])|0);
 HEAP32[(($21)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($21)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($21)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($21)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);HEAP32[((($21)+(16))>>2)]=((HEAP32[((($16)+(16))>>2)])|0);HEAP32[((($21)+(20))>>2)]=((HEAP32[((($16)+(20))>>2)])|0);HEAP32[((($21)+(24))>>2)]=((HEAP32[((($16)+(24))>>2)])|0);
 HEAP32[(($16)>>2)]=((HEAP32[(($__t_i29_0_cast33)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((($__t_i29_0_cast33)+(4))>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((($__t_i29_0_cast33)+(8))>>2)])|0);HEAP32[((($16)+(12))>>2)]=((HEAP32[((($__t_i29_0_cast33)+(12))>>2)])|0);HEAP32[((($16)+(16))>>2)]=((HEAP32[((($__t_i29_0_cast33)+(16))>>2)])|0);HEAP32[((($16)+(20))>>2)]=((HEAP32[((($__t_i29_0_cast33)+(20))>>2)])|0);HEAP32[((($16)+(24))>>2)]=((HEAP32[((($__t_i29_0_cast33)+(24))>>2)])|0);
 $$etemp$7$0=28;
 $$etemp$7$1=0;

 $22=((($1)+(4))|0);
 $__r_0=$22;

 STACKTOP=sp;return (($__r_0)|0);
}


function __ZNSt3__118__insertion_sort_3IRPFbRK21b2ParticleBodyContactS3_EPS1_EEvT0_S8_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$__i_022=0,$__j_021=0,$8=0,$9=0,$11=0,$__j_1=0,$__k_0=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0;
 var $21=0,$22=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $__t=((sp)|0);
 $1=(($__first+56)|0);
 $2=(($__first+28)|0);
 $3=((__ZNSt3__17__sort3IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_T_($__first,$2,$1,$__comp))|0);
 $4=(($__first+84)|0);
 $5=($4|0)==($__last|0);
 if ($5) {
  STACKTOP=sp;return;
 }
 $6=$__t;
 $__j_021=$1;$__i_022=$4;
 while(1) {


  $8=((HEAP32[(($__comp)>>2)])|0);
  $9=((FUNCTION_TABLE_iii[($8)&63]($__i_022,$__j_021))|0);
  if ($9) {
   $11=$__i_022;
   HEAP32[(($6)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($6)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($6)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);HEAP32[((($6)+(12))>>2)]=((HEAP32[((($11)+(12))>>2)])|0);HEAP32[((($6)+(16))>>2)]=((HEAP32[((($11)+(16))>>2)])|0);HEAP32[((($6)+(20))>>2)]=((HEAP32[((($11)+(20))>>2)])|0);HEAP32[((($6)+(24))>>2)]=((HEAP32[((($11)+(24))>>2)])|0);
   $__k_0=$__j_021;$__j_1=$__i_022;
   while(1) {


    $13=$__j_1;
    $14=$__k_0;
    HEAP32[(($13)>>2)]=((HEAP32[(($14)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($14)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($14)+(8))>>2)])|0);HEAP32[((($13)+(12))>>2)]=((HEAP32[((($14)+(12))>>2)])|0);HEAP32[((($13)+(16))>>2)]=((HEAP32[((($14)+(16))>>2)])|0);HEAP32[((($13)+(20))>>2)]=((HEAP32[((($14)+(20))>>2)])|0);HEAP32[((($13)+(24))>>2)]=((HEAP32[((($14)+(24))>>2)])|0);
    $15=($__k_0|0)==($__first|0);
    if ($15) {
     break;
    }
    $17=((HEAP32[(($__comp)>>2)])|0);
    $18=((($__k_0)-(28))|0);
    $19=((FUNCTION_TABLE_iii[($17)&63]($__t,$18))|0);
    if ($19) {
     $__j_1=$__k_0;$__k_0=$18;
    } else {
     break;
    }
   }
   HEAP32[(($14)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($14)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($14)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);HEAP32[((($14)+(12))>>2)]=((HEAP32[((($6)+(12))>>2)])|0);HEAP32[((($14)+(16))>>2)]=((HEAP32[((($6)+(16))>>2)])|0);HEAP32[((($14)+(20))>>2)]=((HEAP32[((($6)+(20))>>2)])|0);HEAP32[((($14)+(24))>>2)]=((HEAP32[((($6)+(24))>>2)])|0);
  }
  $21=(($__i_022+28)|0);
  $22=($21|0)==($__last|0);
  if ($22) {
   break;
  } else {
   $__j_021=$__i_022;$__i_022=$21;
  }
 }
 STACKTOP=sp;return;
}


function __ZNSt3__127__insertion_sort_incompleteIRPFbRK21b2ParticleBodyContactS3_EPS1_EEbT0_S8_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t_i=0,$__t=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$__t_i_0_cast46=0,$$etemp$0$0=0,$$etemp$0$1=0,$10=0,$11=0,$$etemp$1$0=0,$$etemp$1$1=0,$13=0,$14=0,$15=0,$17=0;
 var $18=0,$19=0,$20=0,$22=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$__i_050=0,$__count_049=0,$__j_048=0,$35=0,$36=0,$38=0;
 var $__j_1=0,$__k_0=0,$40=0,$41=0,$42=0,$44=0,$45=0,$46=0,$47=0,$48=0,$50=0,$51=0,$__count_1=0,$53=0,$54=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $__t_i=((sp)|0);
 $__t=(((sp)+(32))|0);
 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=(((($3|0))/(28))&-1);
 switch (($4|0)) {
 case 2: {
  $6=((HEAP32[(($__comp)>>2)])|0);
  $7=((($__last)-(28))|0);
  $8=((FUNCTION_TABLE_iii[($6)&63]($7,$__first))|0);
  if (!($8)) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $__t_i_0_cast46=$__t_i;
  $$etemp$0$0=28;
  $$etemp$0$1=0;

  $10=$__first;
  HEAP32[(($__t_i_0_cast46)>>2)]=((HEAP32[(($10)>>2)])|0);HEAP32[((($__t_i_0_cast46)+(4))>>2)]=((HEAP32[((($10)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast46)+(8))>>2)]=((HEAP32[((($10)+(8))>>2)])|0);HEAP32[((($__t_i_0_cast46)+(12))>>2)]=((HEAP32[((($10)+(12))>>2)])|0);HEAP32[((($__t_i_0_cast46)+(16))>>2)]=((HEAP32[((($10)+(16))>>2)])|0);HEAP32[((($__t_i_0_cast46)+(20))>>2)]=((HEAP32[((($10)+(20))>>2)])|0);HEAP32[((($__t_i_0_cast46)+(24))>>2)]=((HEAP32[((($10)+(24))>>2)])|0);
  $11=$7;
  HEAP32[(($10)>>2)]=((HEAP32[(($11)>>2)])|0);HEAP32[((($10)+(4))>>2)]=((HEAP32[((($11)+(4))>>2)])|0);HEAP32[((($10)+(8))>>2)]=((HEAP32[((($11)+(8))>>2)])|0);HEAP32[((($10)+(12))>>2)]=((HEAP32[((($11)+(12))>>2)])|0);HEAP32[((($10)+(16))>>2)]=((HEAP32[((($11)+(16))>>2)])|0);HEAP32[((($10)+(20))>>2)]=((HEAP32[((($11)+(20))>>2)])|0);HEAP32[((($10)+(24))>>2)]=((HEAP32[((($11)+(24))>>2)])|0);
  HEAP32[(($11)>>2)]=((HEAP32[(($__t_i_0_cast46)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($__t_i_0_cast46)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($__t_i_0_cast46)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($__t_i_0_cast46)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($__t_i_0_cast46)+(16))>>2)])|0);HEAP32[((($11)+(20))>>2)]=((HEAP32[((($__t_i_0_cast46)+(20))>>2)])|0);HEAP32[((($11)+(24))>>2)]=((HEAP32[((($__t_i_0_cast46)+(24))>>2)])|0);
  $$etemp$1$0=28;
  $$etemp$1$1=0;

  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 3: {
  $13=(($__first+28)|0);
  $14=((($__last)-(28))|0);
  $15=((__ZNSt3__17__sort3IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_T_($__first,$13,$14,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 4: {
  $17=(($__first+28)|0);
  $18=(($__first+56)|0);
  $19=((($__last)-(28))|0);
  $20=((__ZNSt3__17__sort4IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_S8_T_($__first,$17,$18,$19,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 5: {
  $22=(($__first+28)|0);
  $23=(($__first+56)|0);
  $24=(($__first+84)|0);
  $25=((($__last)-(28))|0);
  $26=((__ZNSt3__17__sort5IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_S8_S8_T_($__first,$22,$23,$24,$25,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 0:case 1: {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 default: {
  $28=(($__first+56)|0);
  $29=(($__first+28)|0);
  $30=((__ZNSt3__17__sort3IRPFbRK21b2ParticleBodyContactS3_EPS1_EEjT0_S8_S8_T_($__first,$29,$28,$__comp))|0);
  $31=(($__first+84)|0);
  $32=($31|0)==($__last|0);
  if ($32) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $33=$__t;
  $__j_048=$28;$__count_049=0;$__i_050=$31;
  while(1) {



   $35=((HEAP32[(($__comp)>>2)])|0);
   $36=((FUNCTION_TABLE_iii[($35)&63]($__i_050,$__j_048))|0);
   if ($36) {
    $38=$__i_050;
    HEAP32[(($33)>>2)]=((HEAP32[(($38)>>2)])|0);HEAP32[((($33)+(4))>>2)]=((HEAP32[((($38)+(4))>>2)])|0);HEAP32[((($33)+(8))>>2)]=((HEAP32[((($38)+(8))>>2)])|0);HEAP32[((($33)+(12))>>2)]=((HEAP32[((($38)+(12))>>2)])|0);HEAP32[((($33)+(16))>>2)]=((HEAP32[((($38)+(16))>>2)])|0);HEAP32[((($33)+(20))>>2)]=((HEAP32[((($38)+(20))>>2)])|0);HEAP32[((($33)+(24))>>2)]=((HEAP32[((($38)+(24))>>2)])|0);
    $__k_0=$__j_048;$__j_1=$__i_050;
    while(1) {


     $40=$__j_1;
     $41=$__k_0;
     HEAP32[(($40)>>2)]=((HEAP32[(($41)>>2)])|0);HEAP32[((($40)+(4))>>2)]=((HEAP32[((($41)+(4))>>2)])|0);HEAP32[((($40)+(8))>>2)]=((HEAP32[((($41)+(8))>>2)])|0);HEAP32[((($40)+(12))>>2)]=((HEAP32[((($41)+(12))>>2)])|0);HEAP32[((($40)+(16))>>2)]=((HEAP32[((($41)+(16))>>2)])|0);HEAP32[((($40)+(20))>>2)]=((HEAP32[((($41)+(20))>>2)])|0);HEAP32[((($40)+(24))>>2)]=((HEAP32[((($41)+(24))>>2)])|0);
     $42=($__k_0|0)==($__first|0);
     if ($42) {
      break;
     }
     $44=((HEAP32[(($__comp)>>2)])|0);
     $45=((($__k_0)-(28))|0);
     $46=((FUNCTION_TABLE_iii[($44)&63]($__t,$45))|0);
     if ($46) {
      $__j_1=$__k_0;$__k_0=$45;
     } else {
      break;
     }
    }
    HEAP32[(($41)>>2)]=((HEAP32[(($33)>>2)])|0);HEAP32[((($41)+(4))>>2)]=((HEAP32[((($33)+(4))>>2)])|0);HEAP32[((($41)+(8))>>2)]=((HEAP32[((($33)+(8))>>2)])|0);HEAP32[((($41)+(12))>>2)]=((HEAP32[((($33)+(12))>>2)])|0);HEAP32[((($41)+(16))>>2)]=((HEAP32[((($33)+(16))>>2)])|0);HEAP32[((($41)+(20))>>2)]=((HEAP32[((($33)+(20))>>2)])|0);HEAP32[((($41)+(24))>>2)]=((HEAP32[((($33)+(24))>>2)])|0);
    $47=((($__count_049)+(1))|0);
    $48=($47|0)==8;
    if ($48) {
     break;
    } else {
     $__count_1=$47;
    }
   } else {
    $__count_1=$__count_049;
   }

   $53=(($__i_050+28)|0);
   $54=($53|0)==($__last|0);
   if ($54) {
    $_0=1;
    label = 16;
    break;
   } else {
    $__j_048=$__i_050;$__count_049=$__count_1;$__i_050=$53;
   }
  }
  if ((label|0) == 16) {

   STACKTOP=sp;return (($_0)|0);
  }
  $50=(($__i_050+28)|0);
  $51=($50|0)==($__last|0);
  $_0=$51;

  STACKTOP=sp;return (($_0)|0);
 }
 }
  return 0;
}


function __ZNSt3__113__upper_boundIRNS_6__lessIjN16b2ParticleSystem5ProxyEEEPS3_jEET0_S7_S7_RKT1_T_($__first,$__last,$__value_,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__value_=($__value_)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$__len_0_ph=0,$_0_ph=0,$__len_0=0,$6=0,$8=0,$9=0,$10=0,$11=0,$_sum=0,$13=0,$_neg12=0,$14=0,label=0;

 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>3;
 $_0_ph=$__first;$__len_0_ph=$4;
 L1: while(1) {


  $__len_0=$__len_0_ph;
  while(1) {

   $6=($__len_0|0)==0;
   if ($6) {
    break L1;
   }
   $8=(((($__len_0|0))/(2))&-1);
   $9=(($_0_ph+($8<<3))|0);
   $10=((HEAP32[(($__value_)>>2)])|0);
   $11=((__ZltjRKN16b2ParticleSystem5ProxyE($10,$9))|0);
   if ($11) {
    $__len_0=$8;
   } else {
    break;
   }
  }
  $_sum=((($8)+(1))|0);
  $13=(($_0_ph+($_sum<<3))|0);
  $_neg12=((($__len_0)-(1))|0);
  $14=((($_neg12)-($8))|0);
  $_0_ph=$13;$__len_0_ph=$14;
 }
 return (($_0_ph)|0);
}


function __ZltjRKN16b2ParticleSystem5ProxyE($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($b+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2>>>0)>($a>>>0);
 return (($3)|0);
}


function __ZNSt3__113__lower_boundIRNS_6__lessIN16b2ParticleSystem5ProxyEjEEPS3_jEET0_S7_S7_RKT1_T_($__first,$__last,$__value_,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__value_=($__value_)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$__len_0_ph=0,$_0_ph=0,$__len_0=0,$6=0,$8=0,$9=0,$10=0,$11=0,$_sum=0,$13=0,$_neg12=0,$14=0,label=0;

 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>3;
 $_0_ph=$__first;$__len_0_ph=$4;
 L1: while(1) {


  $__len_0=$__len_0_ph;
  while(1) {

   $6=($__len_0|0)==0;
   if ($6) {
    break L1;
   }
   $8=(((($__len_0|0))/(2))&-1);
   $9=(($_0_ph+($8<<3))|0);
   $10=((HEAP32[(($__value_)>>2)])|0);
   $11=((__ZltRKN16b2ParticleSystem5ProxyEj($9,$10))|0);
   if ($11) {
    break;
   } else {
    $__len_0=$8;
   }
  }
  $_sum=((($8)+(1))|0);
  $13=(($_0_ph+($_sum<<3))|0);
  $_neg12=((($__len_0)-(1))|0);
  $14=((($_neg12)-($8))|0);
  $_0_ph=$13;$__len_0_ph=$14;
 }
 return (($_0_ph)|0);
}


function __ZltRKN16b2ParticleSystem5ProxyEj($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($a+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2>>>0)<($b>>>0);
 return (($3)|0);
}


function __ZNSt3__16__sortIRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEvT0_SA_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $_0129_ph=0,$_0_ph=0,$1=0,$2=0,$3=0,$_0=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$14=0,$ld$2$0=0,$15$0=0;
 var $ld$3$1=0,$15$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0,$24=0,$26=0,$27=0,$28=0,$29=0,$30=0,$32=0,$35=0;
 var $36=0,$37=0,$39=0,$40=0,$_sum=0,$41=0,$42=0,$44=0,$__n_swaps_0=0,$46=0,$47=0,$__j_0=0,$48=0,$49=0,$51=0,$52=0,$53=0,$__i_0=0,$54=0,$56=0;
 var $57=0,$58=0,$60=0,$ld$8$0=0,$61$0=0,$ld$9$1=0,$61$1=0,$ld$10$0=0,$62$0=0,$ld$11$1=0,$62$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$63=0,$__i_1=0,$65=0,$__i_2_ph=0,$__j_1_ph=0;
 var $__i_2=0,$67=0,$68=0,$69=0,$__j_2=0,$70=0,$71=0,$72=0,$74=0,$76=0,$ld$16$0=0,$77$0=0,$ld$17$1=0,$77$1=0,$78=0,$ld$18$0=0,$79$0=0,$ld$19$1=0,$79$1=0,$st$20$0=0;
 var $st$21$1=0,$st$22$0=0,$st$23$1=0,$80=0,$82=0,$83=0,$85=0,$ld$24$0=0,$86$0=0,$ld$25$1=0,$86$1=0,$87=0,$ld$26$0=0,$88$0=0,$ld$27$1=0,$88$1=0,$st$28$0=0,$st$29$1=0,$st$30$0=0,$st$31$1=0;
 var $89=0,$__n_swaps_3=0,$__j_3=0,$91=0,$92=0,$__m_0_ph=0,$__n_swaps_4_ph=0,$__i_3_ph=0,$__j_4_ph=0,$__i_3=0,$94=0,$95=0,$96=0,$__j_5=0,$97=0,$98=0,$99=0,$101=0,$103=0,$ld$32$0=0;
 var $104$0=0,$ld$33$1=0,$104$1=0,$105=0,$ld$34$0=0,$106$0=0,$ld$35$1=0,$106$1=0,$st$36$0=0,$st$37$1=0,$st$38$0=0,$st$39$1=0,$107=0,$108=0,$___m_0=0,$109=0,$__m_2=0,$__n_swaps_5=0,$__i_4=0,$110=0;
 var $112=0,$113=0,$115=0,$ld$40$0=0,$116$0=0,$ld$41$1=0,$116$1=0,$117=0,$ld$42$0=0,$118$0=0,$ld$43$1=0,$118$1=0,$st$44$0=0,$st$45$1=0,$st$46$0=0,$st$47$1=0,$119=0,$__n_swaps_6=0,$121=0,$123=0;
 var $124=0,$125=0,$129=0,$130=0,$131=0,$132=0,$134=0,$136=0,label=0;

 $_0_ph=$__first;$_0129_ph=$__last;
 L1: while(1) {


  $1=$_0129_ph;
  $2=((($_0129_ph)-(8))|0);
  $3=$2;
  $_0=$_0_ph;
  L3: while(1) {

   $4=$_0;
   $5=((($1)-($4))|0);
   $6=$5>>3;
   switch (($6|0)) {
   case 2: {
    label = 4;
    break L1;
    break;
   }
   case 3: {
    label = 6;
    break L1;
    break;
   }
   case 4: {
    label = 7;
    break L1;
    break;
   }
   case 5: {
    label = 8;
    break L1;
    break;
   }
   case 0:case 1: {
    label = 44;
    break L1;
    break;
   }
   default: {
   }
   }
   $32=($5|0)<248;
   if ($32) {
    label = 10;
    break L1;
   }
   $35=($5|0)>7992;
   $36=(((($6|0))/(2))&-1);
   $37=(($_0+($36<<3))|0);
   if ($35) {
    $39=(((($6|0))/(4))&-1);
    $40=(($_0+($39<<3))|0);
    $_sum=((($39)+($36))|0);
    $41=(($_0+($_sum<<3))|0);
    $42=((__ZNSt3__17__sort5IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_SA_SA_T_($_0,$40,$37,$41,$2,$__comp))|0);
    $__n_swaps_0=$42;
   } else {
    $44=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_T_($_0,$37,$2,$__comp))|0);
    $__n_swaps_0=$44;
   }

   $46=((HEAP32[(($__comp)>>2)])|0);
   $47=((FUNCTION_TABLE_iii[($46)&63]($_0,$37))|0);
   do {
    if ($47) {
     $__j_3=$2;$__n_swaps_3=$__n_swaps_0;
    } else {
     $__j_0=$2;
     while(1) {

      $48=((($__j_0)-(8))|0);
      $49=($_0|0)==($48|0);
      if ($49) {
       break;
      }
      $82=((HEAP32[(($__comp)>>2)])|0);
      $83=((FUNCTION_TABLE_iii[($82)&63]($48,$37))|0);
      if ($83) {
       label = 27;
       break;
      } else {
       $__j_0=$48;
      }
     }
     if ((label|0) == 27) {
      label = 0;
      $85=$_0;
      $ld$24$0=(($85)|0);
      $86$0=((HEAP32[(($ld$24$0)>>2)])|0);
      $ld$25$1=(($85+4)|0);
      $86$1=((HEAP32[(($ld$25$1)>>2)])|0);
      $87=$48;
      $ld$26$0=(($87)|0);
      $88$0=((HEAP32[(($ld$26$0)>>2)])|0);
      $ld$27$1=(($87+4)|0);
      $88$1=((HEAP32[(($ld$27$1)>>2)])|0);
      $st$28$0=(($85)|0);
      HEAP32[(($st$28$0)>>2)]=$88$0;
      $st$29$1=(($85+4)|0);
      HEAP32[(($st$29$1)>>2)]=$88$1;
      $st$30$0=(($87)|0);
      HEAP32[(($st$30$0)>>2)]=$86$0;
      $st$31$1=(($87+4)|0);
      HEAP32[(($st$31$1)>>2)]=$86$1;
      $89=((($__n_swaps_0)+(1))|0);
      $__j_3=$48;$__n_swaps_3=$89;
      break;
     }
     $51=(($_0+8)|0);
     $52=((HEAP32[(($__comp)>>2)])|0);
     $53=((FUNCTION_TABLE_iii[($52)&63]($_0,$2))|0);
     if ($53) {
      $__i_1=$51;
     } else {
      $__i_0=$51;
      while(1) {

       $54=($__i_0|0)==($2|0);
       if ($54) {
        label = 44;
        break L1;
       }
       $56=((HEAP32[(($__comp)>>2)])|0);
       $57=((FUNCTION_TABLE_iii[($56)&63]($_0,$__i_0))|0);
       $58=(($__i_0+8)|0);
       if ($57) {
        break;
       } else {
        $__i_0=$58;
       }
      }
      $60=$__i_0;
      $ld$8$0=(($60)|0);
      $61$0=((HEAP32[(($ld$8$0)>>2)])|0);
      $ld$9$1=(($60+4)|0);
      $61$1=((HEAP32[(($ld$9$1)>>2)])|0);
      $ld$10$0=(($3)|0);
      $62$0=((HEAP32[(($ld$10$0)>>2)])|0);
      $ld$11$1=(($3+4)|0);
      $62$1=((HEAP32[(($ld$11$1)>>2)])|0);
      $st$12$0=(($60)|0);
      HEAP32[(($st$12$0)>>2)]=$62$0;
      $st$13$1=(($60+4)|0);
      HEAP32[(($st$13$1)>>2)]=$62$1;
      $st$14$0=(($3)|0);
      HEAP32[(($st$14$0)>>2)]=$61$0;
      $st$15$1=(($3+4)|0);
      HEAP32[(($st$15$1)>>2)]=$61$1;
      $63=(($__i_0+8)|0);
      $__i_1=$63;
     }

     $65=($__i_1|0)==($2|0);
     if ($65) {
      label = 44;
      break L1;
     } else {
      $__j_1_ph=$2;$__i_2_ph=$__i_1;
     }
     while(1) {


      $__i_2=$__i_2_ph;
      while(1) {

       $67=((HEAP32[(($__comp)>>2)])|0);
       $68=((FUNCTION_TABLE_iii[($67)&63]($_0,$__i_2))|0);
       $69=(($__i_2+8)|0);
       if ($68) {
        $__j_2=$__j_1_ph;
        break;
       } else {
        $__i_2=$69;
       }
      }
      while(1) {

       $70=((HEAP32[(($__comp)>>2)])|0);
       $71=((($__j_2)-(8))|0);
       $72=((FUNCTION_TABLE_iii[($70)&63]($_0,$71))|0);
       if ($72) {
        $__j_2=$71;
       } else {
        break;
       }
      }
      $74=($__i_2>>>0)<($71>>>0);
      if (!($74)) {
       $_0=$__i_2;
       continue L3;
      }
      $76=$__i_2;
      $ld$16$0=(($76)|0);
      $77$0=((HEAP32[(($ld$16$0)>>2)])|0);
      $ld$17$1=(($76+4)|0);
      $77$1=((HEAP32[(($ld$17$1)>>2)])|0);
      $78=$71;
      $ld$18$0=(($78)|0);
      $79$0=((HEAP32[(($ld$18$0)>>2)])|0);
      $ld$19$1=(($78+4)|0);
      $79$1=((HEAP32[(($ld$19$1)>>2)])|0);
      $st$20$0=(($76)|0);
      HEAP32[(($st$20$0)>>2)]=$79$0;
      $st$21$1=(($76+4)|0);
      HEAP32[(($st$21$1)>>2)]=$79$1;
      $st$22$0=(($78)|0);
      HEAP32[(($st$22$0)>>2)]=$77$0;
      $st$23$1=(($78+4)|0);
      HEAP32[(($st$23$1)>>2)]=$77$1;
      $80=(($__i_2+8)|0);
      $__j_1_ph=$71;$__i_2_ph=$80;
     }
    }
   } while(0);


   $91=(($_0+8)|0);
   $92=($91>>>0)<($__j_3>>>0);
   L33: do {
    if ($92) {
     $__j_4_ph=$__j_3;$__i_3_ph=$91;$__n_swaps_4_ph=$__n_swaps_3;$__m_0_ph=$37;
     while(1) {




      $__i_3=$__i_3_ph;
      while(1) {

       $94=((HEAP32[(($__comp)>>2)])|0);
       $95=((FUNCTION_TABLE_iii[($94)&63]($__i_3,$__m_0_ph))|0);
       $96=(($__i_3+8)|0);
       if ($95) {
        $__i_3=$96;
       } else {
        $__j_5=$__j_4_ph;
        break;
       }
      }
      while(1) {

       $97=((HEAP32[(($__comp)>>2)])|0);
       $98=((($__j_5)-(8))|0);
       $99=((FUNCTION_TABLE_iii[($97)&63]($98,$__m_0_ph))|0);
       if ($99) {
        break;
       } else {
        $__j_5=$98;
       }
      }
      $101=($__i_3>>>0)>($98>>>0);
      if ($101) {
       $__i_4=$__i_3;$__n_swaps_5=$__n_swaps_4_ph;$__m_2=$__m_0_ph;
       break L33;
      }
      $103=$__i_3;
      $ld$32$0=(($103)|0);
      $104$0=((HEAP32[(($ld$32$0)>>2)])|0);
      $ld$33$1=(($103+4)|0);
      $104$1=((HEAP32[(($ld$33$1)>>2)])|0);
      $105=$98;
      $ld$34$0=(($105)|0);
      $106$0=((HEAP32[(($ld$34$0)>>2)])|0);
      $ld$35$1=(($105+4)|0);
      $106$1=((HEAP32[(($ld$35$1)>>2)])|0);
      $st$36$0=(($103)|0);
      HEAP32[(($st$36$0)>>2)]=$106$0;
      $st$37$1=(($103+4)|0);
      HEAP32[(($st$37$1)>>2)]=$106$1;
      $st$38$0=(($105)|0);
      HEAP32[(($st$38$0)>>2)]=$104$0;
      $st$39$1=(($105+4)|0);
      HEAP32[(($st$39$1)>>2)]=$104$1;
      $107=((($__n_swaps_4_ph)+(1))|0);
      $108=($__m_0_ph|0)==($__i_3|0);
      $___m_0=($108?$98:$__m_0_ph);
      $109=(($__i_3+8)|0);
      $__j_4_ph=$98;$__i_3_ph=$109;$__n_swaps_4_ph=$107;$__m_0_ph=$___m_0;
     }
    } else {
     $__i_4=$91;$__n_swaps_5=$__n_swaps_3;$__m_2=$37;
    }
   } while(0);



   $110=($__i_4|0)==($__m_2|0);
   do {
    if ($110) {
     $__n_swaps_6=$__n_swaps_5;
    } else {
     $112=((HEAP32[(($__comp)>>2)])|0);
     $113=((FUNCTION_TABLE_iii[($112)&63]($__m_2,$__i_4))|0);
     if (!($113)) {
      $__n_swaps_6=$__n_swaps_5;
      break;
     }
     $115=$__i_4;
     $ld$40$0=(($115)|0);
     $116$0=((HEAP32[(($ld$40$0)>>2)])|0);
     $ld$41$1=(($115+4)|0);
     $116$1=((HEAP32[(($ld$41$1)>>2)])|0);
     $117=$__m_2;
     $ld$42$0=(($117)|0);
     $118$0=((HEAP32[(($ld$42$0)>>2)])|0);
     $ld$43$1=(($117+4)|0);
     $118$1=((HEAP32[(($ld$43$1)>>2)])|0);
     $st$44$0=(($115)|0);
     HEAP32[(($st$44$0)>>2)]=$118$0;
     $st$45$1=(($115+4)|0);
     HEAP32[(($st$45$1)>>2)]=$118$1;
     $st$46$0=(($117)|0);
     HEAP32[(($st$46$0)>>2)]=$116$0;
     $st$47$1=(($117+4)|0);
     HEAP32[(($st$47$1)>>2)]=$116$1;
     $119=((($__n_swaps_5)+(1))|0);
     $__n_swaps_6=$119;
    }
   } while(0);

   $121=($__n_swaps_6|0)==0;
   if ($121) {
    $123=((__ZNSt3__127__insertion_sort_incompleteIRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEbT0_SA_T_($_0,$__i_4,$__comp))|0);
    $124=(($__i_4+8)|0);
    $125=((__ZNSt3__127__insertion_sort_incompleteIRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEbT0_SA_T_($124,$_0129_ph,$__comp))|0);
    if ($125) {
     label = 39;
     break;
    }
    if ($123) {
     $_0=$124;
     continue;
    }
   }
   $129=$__i_4;
   $130=((($129)-($4))|0);
   $131=((($1)-($129))|0);
   $132=($130|0)<($131|0);
   if (!($132)) {
    label = 43;
    break;
   }
   __ZNSt3__16__sortIRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEvT0_SA_T_($_0,$__i_4,$__comp);
   $134=(($__i_4+8)|0);
   $_0=$134;
  }
  if ((label|0) == 39) {
   label = 0;
   if ($123) {
    label = 44;
    break;
   } else {
    $_0_ph=$_0;$_0129_ph=$__i_4;
    continue;
   }
  }
  else if ((label|0) == 43) {
   label = 0;
   $136=(($__i_4+8)|0);
   __ZNSt3__16__sortIRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEvT0_SA_T_($136,$_0129_ph,$__comp);
   $_0_ph=$_0;$_0129_ph=$__i_4;
   continue;
  }
 }
 if ((label|0) == 4) {
  $8=((HEAP32[(($__comp)>>2)])|0);
  $9=((($_0129_ph)-(8))|0);
  $10=((FUNCTION_TABLE_iii[($8)&63]($9,$_0))|0);
  if (!($10)) {
   return;
  }
  $12=$_0;
  $ld$0$0=(($12)|0);
  $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($12+4)|0);
  $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $14=$9;
  $ld$2$0=(($14)|0);
  $15$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($14+4)|0);
  $15$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($12)|0);
  HEAP32[(($st$4$0)>>2)]=$15$0;
  $st$5$1=(($12+4)|0);
  HEAP32[(($st$5$1)>>2)]=$15$1;
  $st$6$0=(($14)|0);
  HEAP32[(($st$6$0)>>2)]=$13$0;
  $st$7$1=(($14+4)|0);
  HEAP32[(($st$7$1)>>2)]=$13$1;
  return;
 }
 else if ((label|0) == 6) {
  $17=(($_0+8)|0);
  $18=((($_0129_ph)-(8))|0);
  $19=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_T_($_0,$17,$18,$__comp))|0);
  return;
 }
 else if ((label|0) == 7) {
  $21=(($_0+8)|0);
  $22=(($_0+16)|0);
  $23=((($_0129_ph)-(8))|0);
  $24=((__ZNSt3__17__sort4IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_SA_T_($_0,$21,$22,$23,$__comp))|0);
  return;
 }
 else if ((label|0) == 8) {
  $26=(($_0+8)|0);
  $27=(($_0+16)|0);
  $28=(($_0+24)|0);
  $29=((($_0129_ph)-(8))|0);
  $30=((__ZNSt3__17__sort5IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_SA_SA_T_($_0,$26,$27,$28,$29,$__comp))|0);
  return;
 }
 else if ((label|0) == 10) {
  __ZNSt3__118__insertion_sort_3IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEvT0_SA_T_($_0,$_0129_ph,$__comp);
  return;
 }
 else if ((label|0) == 44) {
  return;
 }
}


function __ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_T_($__x,$__y,$__z,$__c){
 $__x=($__x)|0;
 $__y=($__y)|0;
 $__z=($__z)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$4=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$9=0,$ld$2$0=0,$10$0=0,$ld$3$1=0,$10$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$11=0,$12=0;
 var $14=0,$ld$8$0=0,$15$0=0,$ld$9$1=0,$15$1=0,$ld$10$0=0,$16$0=0,$ld$11$1=0,$16$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$18=0,$ld$16$0=0,$19$0=0,$ld$17$1=0,$19$1=0,$21=0,$ld$18$0=0;
 var $22$0=0,$ld$19$1=0,$22$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$24=0,$ld$24$0=0,$25$0=0,$ld$25$1=0,$25$1=0,$st$26$0=0,$st$27$1=0,$st$28$0=0,$st$29$1=0,$26=0,$27=0,$ld$30$0=0,$29$0=0;
 var $ld$31$1=0,$29$1=0,$30=0,$ld$32$0=0,$31$0=0,$ld$33$1=0,$31$1=0,$st$34$0=0,$st$35$1=0,$st$36$0=0,$st$37$1=0,$_0=0,label=0;

 $1=((HEAP32[(($__c)>>2)])|0);
 $2=((FUNCTION_TABLE_iii[($1)&63]($__y,$__x))|0);
 $3=((HEAP32[(($__c)>>2)])|0);
 $4=((FUNCTION_TABLE_iii[($3)&63]($__z,$__y))|0);
 if (!($2)) {
  if (!($4)) {
   $_0=0;

   return (($_0)|0);
  }
  $7=$__y;
  $ld$0$0=(($7)|0);
  $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($7+4)|0);
  $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $9=$__z;
  $ld$2$0=(($9)|0);
  $10$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($9+4)|0);
  $10$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($7)|0);
  HEAP32[(($st$4$0)>>2)]=$10$0;
  $st$5$1=(($7+4)|0);
  HEAP32[(($st$5$1)>>2)]=$10$1;
  $st$6$0=(($9)|0);
  HEAP32[(($st$6$0)>>2)]=$8$0;
  $st$7$1=(($9+4)|0);
  HEAP32[(($st$7$1)>>2)]=$8$1;
  $11=((HEAP32[(($__c)>>2)])|0);
  $12=((FUNCTION_TABLE_iii[($11)&63]($__y,$__x))|0);
  if (!($12)) {
   $_0=1;

   return (($_0)|0);
  }
  $14=$__x;
  $ld$8$0=(($14)|0);
  $15$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($14+4)|0);
  $15$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $ld$10$0=(($7)|0);
  $16$0=((HEAP32[(($ld$10$0)>>2)])|0);
  $ld$11$1=(($7+4)|0);
  $16$1=((HEAP32[(($ld$11$1)>>2)])|0);
  $st$12$0=(($14)|0);
  HEAP32[(($st$12$0)>>2)]=$16$0;
  $st$13$1=(($14+4)|0);
  HEAP32[(($st$13$1)>>2)]=$16$1;
  $st$14$0=(($7)|0);
  HEAP32[(($st$14$0)>>2)]=$15$0;
  $st$15$1=(($7+4)|0);
  HEAP32[(($st$15$1)>>2)]=$15$1;
  $_0=2;

  return (($_0)|0);
 }
 $18=$__x;
 $ld$16$0=(($18)|0);
 $19$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($18+4)|0);
 $19$1=((HEAP32[(($ld$17$1)>>2)])|0);
 if ($4) {
  $21=$__z;
  $ld$18$0=(($21)|0);
  $22$0=((HEAP32[(($ld$18$0)>>2)])|0);
  $ld$19$1=(($21+4)|0);
  $22$1=((HEAP32[(($ld$19$1)>>2)])|0);
  $st$20$0=(($18)|0);
  HEAP32[(($st$20$0)>>2)]=$22$0;
  $st$21$1=(($18+4)|0);
  HEAP32[(($st$21$1)>>2)]=$22$1;
  $st$22$0=(($21)|0);
  HEAP32[(($st$22$0)>>2)]=$19$0;
  $st$23$1=(($21+4)|0);
  HEAP32[(($st$23$1)>>2)]=$19$1;
  $_0=1;

  return (($_0)|0);
 }
 $24=$__y;
 $ld$24$0=(($24)|0);
 $25$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($24+4)|0);
 $25$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($18)|0);
 HEAP32[(($st$26$0)>>2)]=$25$0;
 $st$27$1=(($18+4)|0);
 HEAP32[(($st$27$1)>>2)]=$25$1;
 $st$28$0=(($24)|0);
 HEAP32[(($st$28$0)>>2)]=$19$0;
 $st$29$1=(($24+4)|0);
 HEAP32[(($st$29$1)>>2)]=$19$1;
 $26=((HEAP32[(($__c)>>2)])|0);
 $27=((FUNCTION_TABLE_iii[($26)&63]($__z,$__y))|0);
 if (!($27)) {
  $_0=1;

  return (($_0)|0);
 }
 $ld$30$0=(($24)|0);
 $29$0=((HEAP32[(($ld$30$0)>>2)])|0);
 $ld$31$1=(($24+4)|0);
 $29$1=((HEAP32[(($ld$31$1)>>2)])|0);
 $30=$__z;
 $ld$32$0=(($30)|0);
 $31$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($30+4)|0);
 $31$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($24)|0);
 HEAP32[(($st$34$0)>>2)]=$31$0;
 $st$35$1=(($24+4)|0);
 HEAP32[(($st$35$1)>>2)]=$31$1;
 $st$36$0=(($30)|0);
 HEAP32[(($st$36$0)>>2)]=$29$0;
 $st$37$1=(($30+4)|0);
 HEAP32[(($st$37$1)>>2)]=$29$1;
 $_0=2;

 return (($_0)|0);
}


function __ZNSt3__17__sort4IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_SA_T_($__x1,$__x2,$__x3,$__x4,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$7=0,$ld$2$0=0,$8$0=0,$ld$3$1=0,$8$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$9=0,$10=0,$11=0;
 var $13=0,$ld$8$0=0,$14$0=0,$ld$9$1=0,$14$1=0,$ld$10$0=0,$15$0=0,$ld$11$1=0,$15$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$16=0,$17=0,$18=0,$20=0,$ld$16$0=0,$21$0=0,$ld$17$1=0;
 var $21$1=0,$ld$18$0=0,$22$0=0,$ld$19$1=0,$22$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$23=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_T_($__x1,$__x2,$__x3,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&63]($__x4,$__x3))|0);
 if (!($3)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 $5=$__x3;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $7=$__x4;
 $ld$2$0=(($7)|0);
 $8$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($7+4)|0);
 $8$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $st$4$0=(($5)|0);
 HEAP32[(($st$4$0)>>2)]=$8$0;
 $st$5$1=(($5+4)|0);
 HEAP32[(($st$5$1)>>2)]=$8$1;
 $st$6$0=(($7)|0);
 HEAP32[(($st$6$0)>>2)]=$6$0;
 $st$7$1=(($7+4)|0);
 HEAP32[(($st$7$1)>>2)]=$6$1;
 $9=((($1)+(1))|0);
 $10=((HEAP32[(($__c)>>2)])|0);
 $11=((FUNCTION_TABLE_iii[($10)&63]($__x3,$__x2))|0);
 if (!($11)) {
  $__r_0=$9;

  return (($__r_0)|0);
 }
 $13=$__x2;
 $ld$8$0=(($13)|0);
 $14$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $ld$10$0=(($5)|0);
 $15$0=((HEAP32[(($ld$10$0)>>2)])|0);
 $ld$11$1=(($5+4)|0);
 $15$1=((HEAP32[(($ld$11$1)>>2)])|0);
 $st$12$0=(($13)|0);
 HEAP32[(($st$12$0)>>2)]=$15$0;
 $st$13$1=(($13+4)|0);
 HEAP32[(($st$13$1)>>2)]=$15$1;
 $st$14$0=(($5)|0);
 HEAP32[(($st$14$0)>>2)]=$14$0;
 $st$15$1=(($5+4)|0);
 HEAP32[(($st$15$1)>>2)]=$14$1;
 $16=((($1)+(2))|0);
 $17=((HEAP32[(($__c)>>2)])|0);
 $18=((FUNCTION_TABLE_iii[($17)&63]($__x2,$__x1))|0);
 if (!($18)) {
  $__r_0=$16;

  return (($__r_0)|0);
 }
 $20=$__x1;
 $ld$16$0=(($20)|0);
 $21$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $ld$18$0=(($13)|0);
 $22$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($13+4)|0);
 $22$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $st$20$0=(($20)|0);
 HEAP32[(($st$20$0)>>2)]=$22$0;
 $st$21$1=(($20+4)|0);
 HEAP32[(($st$21$1)>>2)]=$22$1;
 $st$22$0=(($13)|0);
 HEAP32[(($st$22$0)>>2)]=$21$0;
 $st$23$1=(($13+4)|0);
 HEAP32[(($st$23$1)>>2)]=$21$1;
 $23=((($1)+(3))|0);
 $__r_0=$23;

 return (($__r_0)|0);
}


function __ZNSt3__17__sort5IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_SA_SA_T_($__x1,$__x2,$__x3,$__x4,$__x5,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__x5=($__x5)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$7=0,$ld$2$0=0,$8$0=0,$ld$3$1=0,$8$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$9=0,$10=0,$11=0;
 var $13=0,$ld$8$0=0,$14$0=0,$ld$9$1=0,$14$1=0,$ld$10$0=0,$15$0=0,$ld$11$1=0,$15$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$16=0,$17=0,$18=0,$20=0,$ld$16$0=0,$21$0=0,$ld$17$1=0;
 var $21$1=0,$ld$18$0=0,$22$0=0,$ld$19$1=0,$22$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$23=0,$24=0,$25=0,$27=0,$ld$24$0=0,$28$0=0,$ld$25$1=0,$28$1=0,$ld$26$0=0,$29$0=0,$ld$27$1=0;
 var $29$1=0,$st$28$0=0,$st$29$1=0,$st$30$0=0,$st$31$1=0,$30=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort4IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_SA_T_($__x1,$__x2,$__x3,$__x4,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&63]($__x5,$__x4))|0);
 if (!($3)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 $5=$__x4;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $7=$__x5;
 $ld$2$0=(($7)|0);
 $8$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($7+4)|0);
 $8$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $st$4$0=(($5)|0);
 HEAP32[(($st$4$0)>>2)]=$8$0;
 $st$5$1=(($5+4)|0);
 HEAP32[(($st$5$1)>>2)]=$8$1;
 $st$6$0=(($7)|0);
 HEAP32[(($st$6$0)>>2)]=$6$0;
 $st$7$1=(($7+4)|0);
 HEAP32[(($st$7$1)>>2)]=$6$1;
 $9=((($1)+(1))|0);
 $10=((HEAP32[(($__c)>>2)])|0);
 $11=((FUNCTION_TABLE_iii[($10)&63]($__x4,$__x3))|0);
 if (!($11)) {
  $__r_0=$9;

  return (($__r_0)|0);
 }
 $13=$__x3;
 $ld$8$0=(($13)|0);
 $14$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $ld$10$0=(($5)|0);
 $15$0=((HEAP32[(($ld$10$0)>>2)])|0);
 $ld$11$1=(($5+4)|0);
 $15$1=((HEAP32[(($ld$11$1)>>2)])|0);
 $st$12$0=(($13)|0);
 HEAP32[(($st$12$0)>>2)]=$15$0;
 $st$13$1=(($13+4)|0);
 HEAP32[(($st$13$1)>>2)]=$15$1;
 $st$14$0=(($5)|0);
 HEAP32[(($st$14$0)>>2)]=$14$0;
 $st$15$1=(($5+4)|0);
 HEAP32[(($st$15$1)>>2)]=$14$1;
 $16=((($1)+(2))|0);
 $17=((HEAP32[(($__c)>>2)])|0);
 $18=((FUNCTION_TABLE_iii[($17)&63]($__x3,$__x2))|0);
 if (!($18)) {
  $__r_0=$16;

  return (($__r_0)|0);
 }
 $20=$__x2;
 $ld$16$0=(($20)|0);
 $21$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $ld$18$0=(($13)|0);
 $22$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($13+4)|0);
 $22$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $st$20$0=(($20)|0);
 HEAP32[(($st$20$0)>>2)]=$22$0;
 $st$21$1=(($20+4)|0);
 HEAP32[(($st$21$1)>>2)]=$22$1;
 $st$22$0=(($13)|0);
 HEAP32[(($st$22$0)>>2)]=$21$0;
 $st$23$1=(($13+4)|0);
 HEAP32[(($st$23$1)>>2)]=$21$1;
 $23=((($1)+(3))|0);
 $24=((HEAP32[(($__c)>>2)])|0);
 $25=((FUNCTION_TABLE_iii[($24)&63]($__x2,$__x1))|0);
 if (!($25)) {
  $__r_0=$23;

  return (($__r_0)|0);
 }
 $27=$__x1;
 $ld$24$0=(($27)|0);
 $28$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($27+4)|0);
 $28$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $ld$26$0=(($20)|0);
 $29$0=((HEAP32[(($ld$26$0)>>2)])|0);
 $ld$27$1=(($20+4)|0);
 $29$1=((HEAP32[(($ld$27$1)>>2)])|0);
 $st$28$0=(($27)|0);
 HEAP32[(($st$28$0)>>2)]=$29$0;
 $st$29$1=(($27+4)|0);
 HEAP32[(($st$29$1)>>2)]=$29$1;
 $st$30$0=(($20)|0);
 HEAP32[(($st$30$0)>>2)]=$28$0;
 $st$31$1=(($20+4)|0);
 HEAP32[(($st$31$1)>>2)]=$28$1;
 $30=((($1)+(4))|0);
 $__r_0=$30;

 return (($__r_0)|0);
}


function __ZNSt3__118__insertion_sort_3IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEvT0_SA_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$5=0,$__i_022=0,$__j_021=0,$6=0,$7=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$__j_1=0,$__k_0=0;
 var $12=0,$13=0,$ld$4$0=0,$14$0=0,$ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$17=0,$18=0,$19=0,$ld$8$0=0,$20$0=0,$ld$9$1=0,$20$1=0,$st$10$0=0,$st$11$1=0,$22=0,$23=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $__t=((sp)|0);
 $tmpcast=$__t;
 $1=(($__first+16)|0);
 $2=(($__first+8)|0);
 $3=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_T_($__first,$2,$1,$__comp))|0);
 $4=(($__first+24)|0);
 $5=($4|0)==($__last|0);
 if ($5) {
  STACKTOP=sp;return;
 } else {
  $__j_021=$1;$__i_022=$4;
 }
 while(1) {


  $6=((HEAP32[(($__comp)>>2)])|0);
  $7=((FUNCTION_TABLE_iii[($6)&63]($__i_022,$__j_021))|0);
  if ($7) {
   $9=$__i_022;
   $ld$0$0=(($9)|0);
   $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($9+4)|0);
   $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($__t)|0);
   HEAP32[(($st$2$0)>>2)]=$10$0;
   $st$3$1=(($__t+4)|0);
   HEAP32[(($st$3$1)>>2)]=$10$1;
   $__k_0=$__j_021;$__j_1=$__i_022;
   while(1) {


    $12=$__k_0;
    $13=$__j_1;
    $ld$4$0=(($12)|0);
    $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
    $ld$5$1=(($12+4)|0);
    $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
    $st$6$0=(($13)|0);
    HEAP32[(($st$6$0)>>2)]=$14$0;
    $st$7$1=(($13+4)|0);
    HEAP32[(($st$7$1)>>2)]=$14$1;
    $15=($__k_0|0)==($__first|0);
    if ($15) {
     break;
    }
    $17=((HEAP32[(($__comp)>>2)])|0);
    $18=((($__k_0)-(8))|0);
    $19=((FUNCTION_TABLE_iii[($17)&63]($tmpcast,$18))|0);
    if ($19) {
     $__j_1=$__k_0;$__k_0=$18;
    } else {
     break;
    }
   }
   $ld$8$0=(($__t)|0);
   $20$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($__t+4)|0);
   $20$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($12)|0);
   HEAP32[(($st$10$0)>>2)]=$20$0;
   $st$11$1=(($12+4)|0);
   HEAP32[(($st$11$1)>>2)]=$20$1;
  }
  $22=(($__i_022+8)|0);
  $23=($22|0)==($__last|0);
  if ($23) {
   break;
  } else {
   $__j_021=$__i_022;$__i_022=$22;
  }
 }
 STACKTOP=sp;return;
}


function __ZNSt3__127__insertion_sort_incompleteIRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEbT0_SA_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$12=0,$ld$2$0=0,$13$0=0,$ld$3$1=0,$13$1=0,$st$4$0=0;
 var $st$5$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0,$24=0,$25=0,$26=0,$27=0,$28=0,$30=0,$31=0,$32=0,$33=0,$34=0;
 var $__i_049=0,$__count_048=0,$__j_047=0,$35=0,$36=0,$38=0,$ld$8$0=0,$39$0=0,$ld$9$1=0,$39$1=0,$st$10$0=0,$st$11$1=0,$__j_1=0,$__k_0=0,$41=0,$42=0,$ld$12$0=0,$43$0=0,$ld$13$1=0,$43$1=0;
 var $st$14$0=0,$st$15$1=0,$44=0,$46=0,$47=0,$48=0,$ld$16$0=0,$49$0=0,$ld$17$1=0,$49$1=0,$st$18$0=0,$st$19$1=0,$50=0,$51=0,$53=0,$54=0,$__count_1=0,$56=0,$57=0,$_0=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $__t=((sp)|0);
 $tmpcast=$__t;
 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>3;
 switch (($4|0)) {
 case 2: {
  $6=((HEAP32[(($__comp)>>2)])|0);
  $7=((($__last)-(8))|0);
  $8=((FUNCTION_TABLE_iii[($6)&63]($7,$__first))|0);
  if (!($8)) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $10=$__first;
  $ld$0$0=(($10)|0);
  $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($10+4)|0);
  $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $12=$7;
  $ld$2$0=(($12)|0);
  $13$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($12+4)|0);
  $13$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($10)|0);
  HEAP32[(($st$4$0)>>2)]=$13$0;
  $st$5$1=(($10+4)|0);
  HEAP32[(($st$5$1)>>2)]=$13$1;
  $st$6$0=(($12)|0);
  HEAP32[(($st$6$0)>>2)]=$11$0;
  $st$7$1=(($12+4)|0);
  HEAP32[(($st$7$1)>>2)]=$11$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 3: {
  $15=(($__first+8)|0);
  $16=((($__last)-(8))|0);
  $17=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_T_($__first,$15,$16,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 4: {
  $19=(($__first+8)|0);
  $20=(($__first+16)|0);
  $21=((($__last)-(8))|0);
  $22=((__ZNSt3__17__sort4IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_SA_T_($__first,$19,$20,$21,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 5: {
  $24=(($__first+8)|0);
  $25=(($__first+16)|0);
  $26=(($__first+24)|0);
  $27=((($__last)-(8))|0);
  $28=((__ZNSt3__17__sort5IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_SA_SA_T_($__first,$24,$25,$26,$27,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 0:case 1: {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 default: {
  $30=(($__first+16)|0);
  $31=(($__first+8)|0);
  $32=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS3_EEjT0_SA_SA_T_($__first,$31,$30,$__comp))|0);
  $33=(($__first+24)|0);
  $34=($33|0)==($__last|0);
  if ($34) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  } else {
   $__j_047=$30;$__count_048=0;$__i_049=$33;
  }
  while(1) {



   $35=((HEAP32[(($__comp)>>2)])|0);
   $36=((FUNCTION_TABLE_iii[($35)&63]($__i_049,$__j_047))|0);
   if ($36) {
    $38=$__i_049;
    $ld$8$0=(($38)|0);
    $39$0=((HEAP32[(($ld$8$0)>>2)])|0);
    $ld$9$1=(($38+4)|0);
    $39$1=((HEAP32[(($ld$9$1)>>2)])|0);
    $st$10$0=(($__t)|0);
    HEAP32[(($st$10$0)>>2)]=$39$0;
    $st$11$1=(($__t+4)|0);
    HEAP32[(($st$11$1)>>2)]=$39$1;
    $__k_0=$__j_047;$__j_1=$__i_049;
    while(1) {


     $41=$__k_0;
     $42=$__j_1;
     $ld$12$0=(($41)|0);
     $43$0=((HEAP32[(($ld$12$0)>>2)])|0);
     $ld$13$1=(($41+4)|0);
     $43$1=((HEAP32[(($ld$13$1)>>2)])|0);
     $st$14$0=(($42)|0);
     HEAP32[(($st$14$0)>>2)]=$43$0;
     $st$15$1=(($42+4)|0);
     HEAP32[(($st$15$1)>>2)]=$43$1;
     $44=($__k_0|0)==($__first|0);
     if ($44) {
      break;
     }
     $46=((HEAP32[(($__comp)>>2)])|0);
     $47=((($__k_0)-(8))|0);
     $48=((FUNCTION_TABLE_iii[($46)&63]($tmpcast,$47))|0);
     if ($48) {
      $__j_1=$__k_0;$__k_0=$47;
     } else {
      break;
     }
    }
    $ld$16$0=(($__t)|0);
    $49$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($__t+4)|0);
    $49$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($41)|0);
    HEAP32[(($st$18$0)>>2)]=$49$0;
    $st$19$1=(($41+4)|0);
    HEAP32[(($st$19$1)>>2)]=$49$1;
    $50=((($__count_048)+(1))|0);
    $51=($50|0)==8;
    if ($51) {
     break;
    } else {
     $__count_1=$50;
    }
   } else {
    $__count_1=$__count_048;
   }

   $56=(($__i_049+8)|0);
   $57=($56|0)==($__last|0);
   if ($57) {
    $_0=1;
    label = 15;
    break;
   } else {
    $__j_047=$__i_049;$__count_048=$__count_1;$__i_049=$56;
   }
  }
  if ((label|0) == 15) {

   STACKTOP=sp;return (($_0)|0);
  }
  $53=(($__i_049+8)|0);
  $54=($53|0)==($__last|0);
  $_0=$54;

  STACKTOP=sp;return (($_0)|0);
 }
 }
  return 0;
}


function __ZN12_GLOBAL__N_117FixedSetAllocator8AllocateEii($this,$count){
 $this=($this)|0;
 $count=($count)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,$14=0,label=0;

 __ZN12_GLOBAL__N_117FixedSetAllocator5ClearEv($this);
 $1=($count|0)==0;
 if ($1) {
  $13=(($this+8)|0);
  $14=((HEAP32[(($13)>>2)])|0);
  return (($14)|0);
 }
 $3=(($this+12)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=((($count)*(9))&-1);
 $6=((__ZN16b2StackAllocator8AllocateEi($4,$5))|0);
 $7=(($this)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=$count<<3;
 $9=(($6+$8)|0);
 $10=(($this+4)|0);
 HEAP32[(($10)>>2)]=$9;
 _memset((((($9)|0))|0), ((((1)|0))|0), (((($count)|0))|0))|0;
 $11=(($this+8)|0);
 HEAP32[(($11)>>2)]=$count;
 $13=(($this+8)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 return (($14)|0);
}


function __ZN12_GLOBAL__N_117FixedSetAllocator9GetBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIiEEPT_S2_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=$newCapacity<<2;
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=$oldCapacity<<2;
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZNSt3__16__sortIRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEvT0_S7_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $_0129_ph=0,$_0_ph=0,$1=0,$2=0,$3=0,$_0=0,$4=0,$5=0,$6=0,$8=0,$9=0,$11=0,$ld$0$0=0,$12$0=0,$ld$1$1=0,$12$1=0,$13=0,$ld$2$0=0,$14$0=0,$ld$3$1=0;
 var $14$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0,$23=0,$25=0,$26=0,$27=0,$28=0,$29=0,$31=0,$34=0,$35=0;
 var $36=0,$38=0,$39=0,$_sum=0,$40=0,$41=0,$43=0,$__n_swaps_0=0,$45=0,$__j_0=0,$46=0,$47=0,$49=0,$50=0,$__i_0=0,$51=0,$53=0,$54=0,$56=0,$ld$8$0=0;
 var $57$0=0,$ld$9$1=0,$57$1=0,$ld$10$0=0,$58$0=0,$ld$11$1=0,$58$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$59=0,$__i_1=0,$61=0,$__i_2_ph=0,$__j_1_ph=0,$__i_2=0,$63=0,$64=0,$__j_2=0;
 var $65=0,$66=0,$68=0,$70=0,$ld$16$0=0,$71$0=0,$ld$17$1=0,$71$1=0,$72=0,$ld$18$0=0,$73$0=0,$ld$19$1=0,$73$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$74=0,$76=0,$78=0;
 var $ld$24$0=0,$79$0=0,$ld$25$1=0,$79$1=0,$80=0,$ld$26$0=0,$81$0=0,$ld$27$1=0,$81$1=0,$st$28$0=0,$st$29$1=0,$st$30$0=0,$st$31$1=0,$82=0,$__n_swaps_3=0,$__j_3=0,$84=0,$85=0,$__m_0_ph=0,$__n_swaps_4_ph=0;
 var $__i_3_ph=0,$__j_4_ph=0,$__i_3=0,$87=0,$88=0,$__j_5=0,$89=0,$90=0,$92=0,$94=0,$ld$32$0=0,$95$0=0,$ld$33$1=0,$95$1=0,$96=0,$ld$34$0=0,$97$0=0,$ld$35$1=0,$97$1=0,$st$36$0=0;
 var $st$37$1=0,$st$38$0=0,$st$39$1=0,$98=0,$99=0,$___m_0=0,$100=0,$__m_2=0,$__n_swaps_5=0,$__i_4=0,$101=0,$103=0,$105=0,$ld$40$0=0,$106$0=0,$ld$41$1=0,$106$1=0,$107=0,$ld$42$0=0,$108$0=0;
 var $ld$43$1=0,$108$1=0,$st$44$0=0,$st$45$1=0,$st$46$0=0,$st$47$1=0,$109=0,$__n_swaps_6=0,$111=0,$113=0,$114=0,$115=0,$119=0,$120=0,$121=0,$122=0,$124=0,$126=0,label=0;

 $_0_ph=$__first;$_0129_ph=$__last;
 L1: while(1) {


  $1=$_0129_ph;
  $2=((($_0129_ph)-(8))|0);
  $3=$2;
  $_0=$_0_ph;
  L3: while(1) {

   $4=$_0;
   $5=((($1)-($4))|0);
   $6=$5>>3;
   switch (($6|0)) {
   case 2: {
    label = 4;
    break L1;
    break;
   }
   case 3: {
    label = 6;
    break L1;
    break;
   }
   case 4: {
    label = 7;
    break L1;
    break;
   }
   case 5: {
    label = 8;
    break L1;
    break;
   }
   case 0:case 1: {
    label = 44;
    break L1;
    break;
   }
   default: {
   }
   }
   $31=($5|0)<248;
   if ($31) {
    label = 10;
    break L1;
   }
   $34=($5|0)>7992;
   $35=(((($6|0))/(2))&-1);
   $36=(($_0+($35<<3))|0);
   if ($34) {
    $38=(((($6|0))/(4))&-1);
    $39=(($_0+($38<<3))|0);
    $_sum=((($38)+($35))|0);
    $40=(($_0+($_sum<<3))|0);
    $41=((__ZNSt3__17__sort5IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_S7_S7_T_($_0,$39,$36,$40,$2,0))|0);
    $__n_swaps_0=$41;
   } else {
    $43=((__ZNSt3__17__sort3IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_T_($_0,$36,$2,0))|0);
    $__n_swaps_0=$43;
   }

   $45=((__ZltRKN16b2ParticleSystem5ProxyES2_($_0,$36))|0);
   do {
    if ($45) {
     $__j_3=$2;$__n_swaps_3=$__n_swaps_0;
    } else {
     $__j_0=$2;
     while(1) {

      $46=((($__j_0)-(8))|0);
      $47=($_0|0)==($46|0);
      if ($47) {
       break;
      }
      $76=((__ZltRKN16b2ParticleSystem5ProxyES2_($46,$36))|0);
      if ($76) {
       label = 27;
       break;
      } else {
       $__j_0=$46;
      }
     }
     if ((label|0) == 27) {
      label = 0;
      $78=$_0;
      $ld$24$0=(($78)|0);
      $79$0=((HEAP32[(($ld$24$0)>>2)])|0);
      $ld$25$1=(($78+4)|0);
      $79$1=((HEAP32[(($ld$25$1)>>2)])|0);
      $80=$46;
      $ld$26$0=(($80)|0);
      $81$0=((HEAP32[(($ld$26$0)>>2)])|0);
      $ld$27$1=(($80+4)|0);
      $81$1=((HEAP32[(($ld$27$1)>>2)])|0);
      $st$28$0=(($78)|0);
      HEAP32[(($st$28$0)>>2)]=$81$0;
      $st$29$1=(($78+4)|0);
      HEAP32[(($st$29$1)>>2)]=$81$1;
      $st$30$0=(($80)|0);
      HEAP32[(($st$30$0)>>2)]=$79$0;
      $st$31$1=(($80+4)|0);
      HEAP32[(($st$31$1)>>2)]=$79$1;
      $82=((($__n_swaps_0)+(1))|0);
      $__j_3=$46;$__n_swaps_3=$82;
      break;
     }
     $49=(($_0+8)|0);
     $50=((__ZltRKN16b2ParticleSystem5ProxyES2_($_0,$2))|0);
     if ($50) {
      $__i_1=$49;
     } else {
      $__i_0=$49;
      while(1) {

       $51=($__i_0|0)==($2|0);
       if ($51) {
        label = 44;
        break L1;
       }
       $53=((__ZltRKN16b2ParticleSystem5ProxyES2_($_0,$__i_0))|0);
       $54=(($__i_0+8)|0);
       if ($53) {
        break;
       } else {
        $__i_0=$54;
       }
      }
      $56=$__i_0;
      $ld$8$0=(($56)|0);
      $57$0=((HEAP32[(($ld$8$0)>>2)])|0);
      $ld$9$1=(($56+4)|0);
      $57$1=((HEAP32[(($ld$9$1)>>2)])|0);
      $ld$10$0=(($3)|0);
      $58$0=((HEAP32[(($ld$10$0)>>2)])|0);
      $ld$11$1=(($3+4)|0);
      $58$1=((HEAP32[(($ld$11$1)>>2)])|0);
      $st$12$0=(($56)|0);
      HEAP32[(($st$12$0)>>2)]=$58$0;
      $st$13$1=(($56+4)|0);
      HEAP32[(($st$13$1)>>2)]=$58$1;
      $st$14$0=(($3)|0);
      HEAP32[(($st$14$0)>>2)]=$57$0;
      $st$15$1=(($3+4)|0);
      HEAP32[(($st$15$1)>>2)]=$57$1;
      $59=(($__i_0+8)|0);
      $__i_1=$59;
     }

     $61=($__i_1|0)==($2|0);
     if ($61) {
      label = 44;
      break L1;
     } else {
      $__j_1_ph=$2;$__i_2_ph=$__i_1;
     }
     while(1) {


      $__i_2=$__i_2_ph;
      while(1) {

       $63=((__ZltRKN16b2ParticleSystem5ProxyES2_($_0,$__i_2))|0);
       $64=(($__i_2+8)|0);
       if ($63) {
        $__j_2=$__j_1_ph;
        break;
       } else {
        $__i_2=$64;
       }
      }
      while(1) {

       $65=((($__j_2)-(8))|0);
       $66=((__ZltRKN16b2ParticleSystem5ProxyES2_($_0,$65))|0);
       if ($66) {
        $__j_2=$65;
       } else {
        break;
       }
      }
      $68=($__i_2>>>0)<($65>>>0);
      if (!($68)) {
       $_0=$__i_2;
       continue L3;
      }
      $70=$__i_2;
      $ld$16$0=(($70)|0);
      $71$0=((HEAP32[(($ld$16$0)>>2)])|0);
      $ld$17$1=(($70+4)|0);
      $71$1=((HEAP32[(($ld$17$1)>>2)])|0);
      $72=$65;
      $ld$18$0=(($72)|0);
      $73$0=((HEAP32[(($ld$18$0)>>2)])|0);
      $ld$19$1=(($72+4)|0);
      $73$1=((HEAP32[(($ld$19$1)>>2)])|0);
      $st$20$0=(($70)|0);
      HEAP32[(($st$20$0)>>2)]=$73$0;
      $st$21$1=(($70+4)|0);
      HEAP32[(($st$21$1)>>2)]=$73$1;
      $st$22$0=(($72)|0);
      HEAP32[(($st$22$0)>>2)]=$71$0;
      $st$23$1=(($72+4)|0);
      HEAP32[(($st$23$1)>>2)]=$71$1;
      $74=(($__i_2+8)|0);
      $__j_1_ph=$65;$__i_2_ph=$74;
     }
    }
   } while(0);


   $84=(($_0+8)|0);
   $85=($84>>>0)<($__j_3>>>0);
   L33: do {
    if ($85) {
     $__j_4_ph=$__j_3;$__i_3_ph=$84;$__n_swaps_4_ph=$__n_swaps_3;$__m_0_ph=$36;
     while(1) {




      $__i_3=$__i_3_ph;
      while(1) {

       $87=((__ZltRKN16b2ParticleSystem5ProxyES2_($__i_3,$__m_0_ph))|0);
       $88=(($__i_3+8)|0);
       if ($87) {
        $__i_3=$88;
       } else {
        $__j_5=$__j_4_ph;
        break;
       }
      }
      while(1) {

       $89=((($__j_5)-(8))|0);
       $90=((__ZltRKN16b2ParticleSystem5ProxyES2_($89,$__m_0_ph))|0);
       if ($90) {
        break;
       } else {
        $__j_5=$89;
       }
      }
      $92=($__i_3>>>0)>($89>>>0);
      if ($92) {
       $__i_4=$__i_3;$__n_swaps_5=$__n_swaps_4_ph;$__m_2=$__m_0_ph;
       break L33;
      }
      $94=$__i_3;
      $ld$32$0=(($94)|0);
      $95$0=((HEAP32[(($ld$32$0)>>2)])|0);
      $ld$33$1=(($94+4)|0);
      $95$1=((HEAP32[(($ld$33$1)>>2)])|0);
      $96=$89;
      $ld$34$0=(($96)|0);
      $97$0=((HEAP32[(($ld$34$0)>>2)])|0);
      $ld$35$1=(($96+4)|0);
      $97$1=((HEAP32[(($ld$35$1)>>2)])|0);
      $st$36$0=(($94)|0);
      HEAP32[(($st$36$0)>>2)]=$97$0;
      $st$37$1=(($94+4)|0);
      HEAP32[(($st$37$1)>>2)]=$97$1;
      $st$38$0=(($96)|0);
      HEAP32[(($st$38$0)>>2)]=$95$0;
      $st$39$1=(($96+4)|0);
      HEAP32[(($st$39$1)>>2)]=$95$1;
      $98=((($__n_swaps_4_ph)+(1))|0);
      $99=($__m_0_ph|0)==($__i_3|0);
      $___m_0=($99?$89:$__m_0_ph);
      $100=(($__i_3+8)|0);
      $__j_4_ph=$89;$__i_3_ph=$100;$__n_swaps_4_ph=$98;$__m_0_ph=$___m_0;
     }
    } else {
     $__i_4=$84;$__n_swaps_5=$__n_swaps_3;$__m_2=$36;
    }
   } while(0);



   $101=($__i_4|0)==($__m_2|0);
   do {
    if ($101) {
     $__n_swaps_6=$__n_swaps_5;
    } else {
     $103=((__ZltRKN16b2ParticleSystem5ProxyES2_($__m_2,$__i_4))|0);
     if (!($103)) {
      $__n_swaps_6=$__n_swaps_5;
      break;
     }
     $105=$__i_4;
     $ld$40$0=(($105)|0);
     $106$0=((HEAP32[(($ld$40$0)>>2)])|0);
     $ld$41$1=(($105+4)|0);
     $106$1=((HEAP32[(($ld$41$1)>>2)])|0);
     $107=$__m_2;
     $ld$42$0=(($107)|0);
     $108$0=((HEAP32[(($ld$42$0)>>2)])|0);
     $ld$43$1=(($107+4)|0);
     $108$1=((HEAP32[(($ld$43$1)>>2)])|0);
     $st$44$0=(($105)|0);
     HEAP32[(($st$44$0)>>2)]=$108$0;
     $st$45$1=(($105+4)|0);
     HEAP32[(($st$45$1)>>2)]=$108$1;
     $st$46$0=(($107)|0);
     HEAP32[(($st$46$0)>>2)]=$106$0;
     $st$47$1=(($107+4)|0);
     HEAP32[(($st$47$1)>>2)]=$106$1;
     $109=((($__n_swaps_5)+(1))|0);
     $__n_swaps_6=$109;
    }
   } while(0);

   $111=($__n_swaps_6|0)==0;
   if ($111) {
    $113=((__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEbT0_S7_T_($_0,$__i_4,0))|0);
    $114=(($__i_4+8)|0);
    $115=((__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEbT0_S7_T_($114,$_0129_ph,0))|0);
    if ($115) {
     label = 39;
     break;
    }
    if ($113) {
     $_0=$114;
     continue;
    }
   }
   $119=$__i_4;
   $120=((($119)-($4))|0);
   $121=((($1)-($119))|0);
   $122=($120|0)<($121|0);
   if (!($122)) {
    label = 43;
    break;
   }
   __ZNSt3__16__sortIRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEvT0_S7_T_($_0,$__i_4,$__comp);
   $124=(($__i_4+8)|0);
   $_0=$124;
  }
  if ((label|0) == 39) {
   label = 0;
   if ($113) {
    label = 44;
    break;
   } else {
    $_0_ph=$_0;$_0129_ph=$__i_4;
    continue;
   }
  }
  else if ((label|0) == 43) {
   label = 0;
   $126=(($__i_4+8)|0);
   __ZNSt3__16__sortIRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEvT0_S7_T_($126,$_0129_ph,$__comp);
   $_0_ph=$_0;$_0129_ph=$__i_4;
   continue;
  }
 }
 if ((label|0) == 4) {
  $8=((($_0129_ph)-(8))|0);
  $9=((__ZltRKN16b2ParticleSystem5ProxyES2_($8,$_0))|0);
  if (!($9)) {
   return;
  }
  $11=$_0;
  $ld$0$0=(($11)|0);
  $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($11+4)|0);
  $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $13=$8;
  $ld$2$0=(($13)|0);
  $14$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($13+4)|0);
  $14$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($11)|0);
  HEAP32[(($st$4$0)>>2)]=$14$0;
  $st$5$1=(($11+4)|0);
  HEAP32[(($st$5$1)>>2)]=$14$1;
  $st$6$0=(($13)|0);
  HEAP32[(($st$6$0)>>2)]=$12$0;
  $st$7$1=(($13+4)|0);
  HEAP32[(($st$7$1)>>2)]=$12$1;
  return;
 }
 else if ((label|0) == 6) {
  $16=(($_0+8)|0);
  $17=((($_0129_ph)-(8))|0);
  $18=((__ZNSt3__17__sort3IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_T_($_0,$16,$17,0))|0);
  return;
 }
 else if ((label|0) == 7) {
  $20=(($_0+8)|0);
  $21=(($_0+16)|0);
  $22=((($_0129_ph)-(8))|0);
  $23=((__ZNSt3__17__sort4IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_S7_T_($_0,$20,$21,$22,0))|0);
  return;
 }
 else if ((label|0) == 8) {
  $25=(($_0+8)|0);
  $26=(($_0+16)|0);
  $27=(($_0+24)|0);
  $28=((($_0129_ph)-(8))|0);
  $29=((__ZNSt3__17__sort5IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_S7_S7_T_($_0,$25,$26,$27,$28,0))|0);
  return;
 }
 else if ((label|0) == 10) {
  __ZNSt3__118__insertion_sort_3IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEvT0_S7_T_($_0,$_0129_ph,0);
  return;
 }
 else if ((label|0) == 44) {
  return;
 }
}


function __ZNSt3__17__sort3IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_T_($__x,$__y,$__z,$__c){
 $__x=($__x)|0;
 $__y=($__y)|0;
 $__z=($__z)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$7=0,$ld$2$0=0,$8$0=0,$ld$3$1=0,$8$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$9=0,$11=0,$ld$8$0=0,$12$0=0;
 var $ld$9$1=0,$12$1=0,$ld$10$0=0,$13$0=0,$ld$11$1=0,$13$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$15=0,$ld$16$0=0,$16$0=0,$ld$17$1=0,$16$1=0,$18=0,$ld$18$0=0,$19$0=0,$ld$19$1=0,$19$1=0;
 var $st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$21=0,$ld$24$0=0,$22$0=0,$ld$25$1=0,$22$1=0,$st$26$0=0,$st$27$1=0,$st$28$0=0,$st$29$1=0,$23=0,$25=0,$ld$30$0=0,$26$0=0,$ld$31$1=0,$26$1=0,$st$32$0=0;
 var $st$33$1=0,$st$34$0=0,$st$35$1=0,$_0=0,label=0;

 $1=((__ZltRKN16b2ParticleSystem5ProxyES2_($__y,$__x))|0);
 $2=((__ZltRKN16b2ParticleSystem5ProxyES2_($__z,$__y))|0);
 if (!($1)) {
  if (!($2)) {
   $_0=0;

   return (($_0)|0);
  }
  $5=$__y;
  $ld$0$0=(($5)|0);
  $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($5+4)|0);
  $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $7=$__z;
  $ld$2$0=(($7)|0);
  $8$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($7+4)|0);
  $8$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($5)|0);
  HEAP32[(($st$4$0)>>2)]=$8$0;
  $st$5$1=(($5+4)|0);
  HEAP32[(($st$5$1)>>2)]=$8$1;
  $st$6$0=(($7)|0);
  HEAP32[(($st$6$0)>>2)]=$6$0;
  $st$7$1=(($7+4)|0);
  HEAP32[(($st$7$1)>>2)]=$6$1;
  $9=((__ZltRKN16b2ParticleSystem5ProxyES2_($__y,$__x))|0);
  if (!($9)) {
   $_0=1;

   return (($_0)|0);
  }
  $11=$__x;
  $ld$8$0=(($11)|0);
  $12$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($11+4)|0);
  $12$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $ld$10$0=(($5)|0);
  $13$0=((HEAP32[(($ld$10$0)>>2)])|0);
  $ld$11$1=(($5+4)|0);
  $13$1=((HEAP32[(($ld$11$1)>>2)])|0);
  $st$12$0=(($11)|0);
  HEAP32[(($st$12$0)>>2)]=$13$0;
  $st$13$1=(($11+4)|0);
  HEAP32[(($st$13$1)>>2)]=$13$1;
  $st$14$0=(($5)|0);
  HEAP32[(($st$14$0)>>2)]=$12$0;
  $st$15$1=(($5+4)|0);
  HEAP32[(($st$15$1)>>2)]=$12$1;
  $_0=2;

  return (($_0)|0);
 }
 $15=$__x;
 $ld$16$0=(($15)|0);
 $16$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($15+4)|0);
 $16$1=((HEAP32[(($ld$17$1)>>2)])|0);
 if ($2) {
  $18=$__z;
  $ld$18$0=(($18)|0);
  $19$0=((HEAP32[(($ld$18$0)>>2)])|0);
  $ld$19$1=(($18+4)|0);
  $19$1=((HEAP32[(($ld$19$1)>>2)])|0);
  $st$20$0=(($15)|0);
  HEAP32[(($st$20$0)>>2)]=$19$0;
  $st$21$1=(($15+4)|0);
  HEAP32[(($st$21$1)>>2)]=$19$1;
  $st$22$0=(($18)|0);
  HEAP32[(($st$22$0)>>2)]=$16$0;
  $st$23$1=(($18+4)|0);
  HEAP32[(($st$23$1)>>2)]=$16$1;
  $_0=1;

  return (($_0)|0);
 }
 $21=$__y;
 $ld$24$0=(($21)|0);
 $22$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($21+4)|0);
 $22$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($15)|0);
 HEAP32[(($st$26$0)>>2)]=$22$0;
 $st$27$1=(($15+4)|0);
 HEAP32[(($st$27$1)>>2)]=$22$1;
 $st$28$0=(($21)|0);
 HEAP32[(($st$28$0)>>2)]=$16$0;
 $st$29$1=(($21+4)|0);
 HEAP32[(($st$29$1)>>2)]=$16$1;
 $23=((__ZltRKN16b2ParticleSystem5ProxyES2_($__z,$__y))|0);
 if (!($23)) {
  $_0=1;

  return (($_0)|0);
 }
 $25=$__z;
 $ld$30$0=(($25)|0);
 $26$0=((HEAP32[(($ld$30$0)>>2)])|0);
 $ld$31$1=(($25+4)|0);
 $26$1=((HEAP32[(($ld$31$1)>>2)])|0);
 $st$32$0=(($21)|0);
 HEAP32[(($st$32$0)>>2)]=$26$0;
 $st$33$1=(($21+4)|0);
 HEAP32[(($st$33$1)>>2)]=$26$1;
 $st$34$0=(($25)|0);
 HEAP32[(($st$34$0)>>2)]=$16$0;
 $st$35$1=(($25+4)|0);
 HEAP32[(($st$35$1)>>2)]=$16$1;
 $_0=2;

 return (($_0)|0);
}


function __ZNSt3__17__sort4IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_S7_T_($__x1,$__x2,$__x3,$__x4,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$4=0,$ld$0$0=0,$5$0=0,$ld$1$1=0,$5$1=0,$6=0,$ld$2$0=0,$7$0=0,$ld$3$1=0,$7$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$8=0,$9=0,$11=0,$ld$8$0=0;
 var $12$0=0,$ld$9$1=0,$12$1=0,$ld$10$0=0,$13$0=0,$ld$11$1=0,$13$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$14=0,$15=0,$17=0,$ld$16$0=0,$18$0=0,$ld$17$1=0,$18$1=0,$ld$18$0=0,$19$0=0;
 var $ld$19$1=0,$19$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$20=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort3IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_T_($__x1,$__x2,$__x3,0))|0);
 $2=((__ZltRKN16b2ParticleSystem5ProxyES2_($__x4,$__x3))|0);
 if (!($2)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 $4=$__x3;
 $ld$0$0=(($4)|0);
 $5$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($4+4)|0);
 $5$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $6=$__x4;
 $ld$2$0=(($6)|0);
 $7$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($6+4)|0);
 $7$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $st$4$0=(($4)|0);
 HEAP32[(($st$4$0)>>2)]=$7$0;
 $st$5$1=(($4+4)|0);
 HEAP32[(($st$5$1)>>2)]=$7$1;
 $st$6$0=(($6)|0);
 HEAP32[(($st$6$0)>>2)]=$5$0;
 $st$7$1=(($6+4)|0);
 HEAP32[(($st$7$1)>>2)]=$5$1;
 $8=((($1)+(1))|0);
 $9=((__ZltRKN16b2ParticleSystem5ProxyES2_($__x3,$__x2))|0);
 if (!($9)) {
  $__r_0=$8;

  return (($__r_0)|0);
 }
 $11=$__x2;
 $ld$8$0=(($11)|0);
 $12$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($11+4)|0);
 $12$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $ld$10$0=(($4)|0);
 $13$0=((HEAP32[(($ld$10$0)>>2)])|0);
 $ld$11$1=(($4+4)|0);
 $13$1=((HEAP32[(($ld$11$1)>>2)])|0);
 $st$12$0=(($11)|0);
 HEAP32[(($st$12$0)>>2)]=$13$0;
 $st$13$1=(($11+4)|0);
 HEAP32[(($st$13$1)>>2)]=$13$1;
 $st$14$0=(($4)|0);
 HEAP32[(($st$14$0)>>2)]=$12$0;
 $st$15$1=(($4+4)|0);
 HEAP32[(($st$15$1)>>2)]=$12$1;
 $14=((($1)+(2))|0);
 $15=((__ZltRKN16b2ParticleSystem5ProxyES2_($__x2,$__x1))|0);
 if (!($15)) {
  $__r_0=$14;

  return (($__r_0)|0);
 }
 $17=$__x1;
 $ld$16$0=(($17)|0);
 $18$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($17+4)|0);
 $18$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $ld$18$0=(($11)|0);
 $19$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($11+4)|0);
 $19$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $st$20$0=(($17)|0);
 HEAP32[(($st$20$0)>>2)]=$19$0;
 $st$21$1=(($17+4)|0);
 HEAP32[(($st$21$1)>>2)]=$19$1;
 $st$22$0=(($11)|0);
 HEAP32[(($st$22$0)>>2)]=$18$0;
 $st$23$1=(($11+4)|0);
 HEAP32[(($st$23$1)>>2)]=$18$1;
 $20=((($1)+(3))|0);
 $__r_0=$20;

 return (($__r_0)|0);
}


function __ZNSt3__17__sort5IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_S7_S7_T_($__x1,$__x2,$__x3,$__x4,$__x5,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__x5=($__x5)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$4=0,$ld$0$0=0,$5$0=0,$ld$1$1=0,$5$1=0,$6=0,$ld$2$0=0,$7$0=0,$ld$3$1=0,$7$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$8=0,$9=0,$11=0,$ld$8$0=0;
 var $12$0=0,$ld$9$1=0,$12$1=0,$ld$10$0=0,$13$0=0,$ld$11$1=0,$13$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$14=0,$15=0,$17=0,$ld$16$0=0,$18$0=0,$ld$17$1=0,$18$1=0,$ld$18$0=0,$19$0=0;
 var $ld$19$1=0,$19$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$20=0,$21=0,$23=0,$ld$24$0=0,$24$0=0,$ld$25$1=0,$24$1=0,$ld$26$0=0,$25$0=0,$ld$27$1=0,$25$1=0,$st$28$0=0,$st$29$1=0,$st$30$0=0;
 var $st$31$1=0,$26=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort4IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_S7_T_($__x1,$__x2,$__x3,$__x4,0))|0);
 $2=((__ZltRKN16b2ParticleSystem5ProxyES2_($__x5,$__x4))|0);
 if (!($2)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 $4=$__x4;
 $ld$0$0=(($4)|0);
 $5$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($4+4)|0);
 $5$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $6=$__x5;
 $ld$2$0=(($6)|0);
 $7$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($6+4)|0);
 $7$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $st$4$0=(($4)|0);
 HEAP32[(($st$4$0)>>2)]=$7$0;
 $st$5$1=(($4+4)|0);
 HEAP32[(($st$5$1)>>2)]=$7$1;
 $st$6$0=(($6)|0);
 HEAP32[(($st$6$0)>>2)]=$5$0;
 $st$7$1=(($6+4)|0);
 HEAP32[(($st$7$1)>>2)]=$5$1;
 $8=((($1)+(1))|0);
 $9=((__ZltRKN16b2ParticleSystem5ProxyES2_($__x4,$__x3))|0);
 if (!($9)) {
  $__r_0=$8;

  return (($__r_0)|0);
 }
 $11=$__x3;
 $ld$8$0=(($11)|0);
 $12$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($11+4)|0);
 $12$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $ld$10$0=(($4)|0);
 $13$0=((HEAP32[(($ld$10$0)>>2)])|0);
 $ld$11$1=(($4+4)|0);
 $13$1=((HEAP32[(($ld$11$1)>>2)])|0);
 $st$12$0=(($11)|0);
 HEAP32[(($st$12$0)>>2)]=$13$0;
 $st$13$1=(($11+4)|0);
 HEAP32[(($st$13$1)>>2)]=$13$1;
 $st$14$0=(($4)|0);
 HEAP32[(($st$14$0)>>2)]=$12$0;
 $st$15$1=(($4+4)|0);
 HEAP32[(($st$15$1)>>2)]=$12$1;
 $14=((($1)+(2))|0);
 $15=((__ZltRKN16b2ParticleSystem5ProxyES2_($__x3,$__x2))|0);
 if (!($15)) {
  $__r_0=$14;

  return (($__r_0)|0);
 }
 $17=$__x2;
 $ld$16$0=(($17)|0);
 $18$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($17+4)|0);
 $18$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $ld$18$0=(($11)|0);
 $19$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($11+4)|0);
 $19$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $st$20$0=(($17)|0);
 HEAP32[(($st$20$0)>>2)]=$19$0;
 $st$21$1=(($17+4)|0);
 HEAP32[(($st$21$1)>>2)]=$19$1;
 $st$22$0=(($11)|0);
 HEAP32[(($st$22$0)>>2)]=$18$0;
 $st$23$1=(($11+4)|0);
 HEAP32[(($st$23$1)>>2)]=$18$1;
 $20=((($1)+(3))|0);
 $21=((__ZltRKN16b2ParticleSystem5ProxyES2_($__x2,$__x1))|0);
 if (!($21)) {
  $__r_0=$20;

  return (($__r_0)|0);
 }
 $23=$__x1;
 $ld$24$0=(($23)|0);
 $24$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($23+4)|0);
 $24$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $ld$26$0=(($17)|0);
 $25$0=((HEAP32[(($ld$26$0)>>2)])|0);
 $ld$27$1=(($17+4)|0);
 $25$1=((HEAP32[(($ld$27$1)>>2)])|0);
 $st$28$0=(($23)|0);
 HEAP32[(($st$28$0)>>2)]=$25$0;
 $st$29$1=(($23+4)|0);
 HEAP32[(($st$29$1)>>2)]=$25$1;
 $st$30$0=(($17)|0);
 HEAP32[(($st$30$0)>>2)]=$24$0;
 $st$31$1=(($17+4)|0);
 HEAP32[(($st$31$1)>>2)]=$24$1;
 $26=((($1)+(4))|0);
 $__r_0=$26;

 return (($__r_0)|0);
}


function __ZNSt3__118__insertion_sort_3IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEvT0_S7_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$5=0,$__i_022=0,$__j_021=0,$6=0,$8=0,$ld$0$0=0,$9$0=0,$ld$1$1=0,$9$1=0,$st$2$0=0,$st$3$1=0,$__j_1=0,$__k_0=0,$11=0;
 var $12=0,$ld$4$0=0,$13$0=0,$ld$5$1=0,$13$1=0,$st$6$0=0,$st$7$1=0,$14=0,$16=0,$17=0,$ld$8$0=0,$18$0=0,$ld$9$1=0,$18$1=0,$st$10$0=0,$st$11$1=0,$20=0,$21=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $__t=((sp)|0);
 $tmpcast=$__t;
 $1=(($__first+16)|0);
 $2=(($__first+8)|0);
 $3=((__ZNSt3__17__sort3IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_T_($__first,$2,$1,0))|0);
 $4=(($__first+24)|0);
 $5=($4|0)==($__last|0);
 if ($5) {
  STACKTOP=sp;return;
 } else {
  $__j_021=$1;$__i_022=$4;
 }
 while(1) {


  $6=((__ZltRKN16b2ParticleSystem5ProxyES2_($__i_022,$__j_021))|0);
  if ($6) {
   $8=$__i_022;
   $ld$0$0=(($8)|0);
   $9$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($8+4)|0);
   $9$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($__t)|0);
   HEAP32[(($st$2$0)>>2)]=$9$0;
   $st$3$1=(($__t+4)|0);
   HEAP32[(($st$3$1)>>2)]=$9$1;
   $__k_0=$__j_021;$__j_1=$__i_022;
   while(1) {


    $11=$__k_0;
    $12=$__j_1;
    $ld$4$0=(($11)|0);
    $13$0=((HEAP32[(($ld$4$0)>>2)])|0);
    $ld$5$1=(($11+4)|0);
    $13$1=((HEAP32[(($ld$5$1)>>2)])|0);
    $st$6$0=(($12)|0);
    HEAP32[(($st$6$0)>>2)]=$13$0;
    $st$7$1=(($12+4)|0);
    HEAP32[(($st$7$1)>>2)]=$13$1;
    $14=($__k_0|0)==($__first|0);
    if ($14) {
     break;
    }
    $16=((($__k_0)-(8))|0);
    $17=((__ZltRKN16b2ParticleSystem5ProxyES2_($tmpcast,$16))|0);
    if ($17) {
     $__j_1=$__k_0;$__k_0=$16;
    } else {
     break;
    }
   }
   $ld$8$0=(($__t)|0);
   $18$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($__t+4)|0);
   $18$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($11)|0);
   HEAP32[(($st$10$0)>>2)]=$18$0;
   $st$11$1=(($11+4)|0);
   HEAP32[(($st$11$1)>>2)]=$18$1;
  }
  $20=(($__i_022+8)|0);
  $21=($20|0)==($__last|0);
  if ($21) {
   break;
  } else {
   $__j_021=$__i_022;$__i_022=$20;
  }
 }
 STACKTOP=sp;return;
}


function __ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEbT0_S7_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$11=0,$ld$2$0=0,$12$0=0,$ld$3$1=0,$12$1=0,$st$4$0=0,$st$5$1=0;
 var $st$6$0=0,$st$7$1=0,$14=0,$15=0,$16=0,$18=0,$19=0,$20=0,$21=0,$23=0,$24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$31=0,$32=0,$33=0,$__i_049=0;
 var $__count_048=0,$__j_047=0,$34=0,$36=0,$ld$8$0=0,$37$0=0,$ld$9$1=0,$37$1=0,$st$10$0=0,$st$11$1=0,$__j_1=0,$__k_0=0,$39=0,$40=0,$ld$12$0=0,$41$0=0,$ld$13$1=0,$41$1=0,$st$14$0=0,$st$15$1=0;
 var $42=0,$44=0,$45=0,$ld$16$0=0,$46$0=0,$ld$17$1=0,$46$1=0,$st$18$0=0,$st$19$1=0,$47=0,$48=0,$50=0,$51=0,$__count_1=0,$53=0,$54=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $__t=((sp)|0);
 $tmpcast=$__t;
 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>3;
 switch (($4|0)) {
 case 0:case 1: {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 5: {
  $23=(($__first+8)|0);
  $24=(($__first+16)|0);
  $25=(($__first+24)|0);
  $26=((($__last)-(8))|0);
  $27=((__ZNSt3__17__sort5IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_S7_S7_T_($__first,$23,$24,$25,$26,0))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 2: {
  $6=((($__last)-(8))|0);
  $7=((__ZltRKN16b2ParticleSystem5ProxyES2_($6,$__first))|0);
  if (!($7)) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $9=$__first;
  $ld$0$0=(($9)|0);
  $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($9+4)|0);
  $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $11=$6;
  $ld$2$0=(($11)|0);
  $12$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($11+4)|0);
  $12$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($9)|0);
  HEAP32[(($st$4$0)>>2)]=$12$0;
  $st$5$1=(($9+4)|0);
  HEAP32[(($st$5$1)>>2)]=$12$1;
  $st$6$0=(($11)|0);
  HEAP32[(($st$6$0)>>2)]=$10$0;
  $st$7$1=(($11+4)|0);
  HEAP32[(($st$7$1)>>2)]=$10$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 3: {
  $14=(($__first+8)|0);
  $15=((($__last)-(8))|0);
  $16=((__ZNSt3__17__sort3IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_T_($__first,$14,$15,0))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 4: {
  $18=(($__first+8)|0);
  $19=(($__first+16)|0);
  $20=((($__last)-(8))|0);
  $21=((__ZNSt3__17__sort4IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_S7_T_($__first,$18,$19,$20,0))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 default: {
  $29=(($__first+16)|0);
  $30=(($__first+8)|0);
  $31=((__ZNSt3__17__sort3IRNS_6__lessIN16b2ParticleSystem5ProxyES3_EEPS3_EEjT0_S7_S7_T_($__first,$30,$29,0))|0);
  $32=(($__first+24)|0);
  $33=($32|0)==($__last|0);
  if ($33) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  } else {
   $__j_047=$29;$__count_048=0;$__i_049=$32;
  }
  while(1) {



   $34=((__ZltRKN16b2ParticleSystem5ProxyES2_($__i_049,$__j_047))|0);
   if ($34) {
    $36=$__i_049;
    $ld$8$0=(($36)|0);
    $37$0=((HEAP32[(($ld$8$0)>>2)])|0);
    $ld$9$1=(($36+4)|0);
    $37$1=((HEAP32[(($ld$9$1)>>2)])|0);
    $st$10$0=(($__t)|0);
    HEAP32[(($st$10$0)>>2)]=$37$0;
    $st$11$1=(($__t+4)|0);
    HEAP32[(($st$11$1)>>2)]=$37$1;
    $__k_0=$__j_047;$__j_1=$__i_049;
    while(1) {


     $39=$__k_0;
     $40=$__j_1;
     $ld$12$0=(($39)|0);
     $41$0=((HEAP32[(($ld$12$0)>>2)])|0);
     $ld$13$1=(($39+4)|0);
     $41$1=((HEAP32[(($ld$13$1)>>2)])|0);
     $st$14$0=(($40)|0);
     HEAP32[(($st$14$0)>>2)]=$41$0;
     $st$15$1=(($40+4)|0);
     HEAP32[(($st$15$1)>>2)]=$41$1;
     $42=($__k_0|0)==($__first|0);
     if ($42) {
      break;
     }
     $44=((($__k_0)-(8))|0);
     $45=((__ZltRKN16b2ParticleSystem5ProxyES2_($tmpcast,$44))|0);
     if ($45) {
      $__j_1=$__k_0;$__k_0=$44;
     } else {
      break;
     }
    }
    $ld$16$0=(($__t)|0);
    $46$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($__t+4)|0);
    $46$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($39)|0);
    HEAP32[(($st$18$0)>>2)]=$46$0;
    $st$19$1=(($39+4)|0);
    HEAP32[(($st$19$1)>>2)]=$46$1;
    $47=((($__count_048)+(1))|0);
    $48=($47|0)==8;
    if ($48) {
     break;
    } else {
     $__count_1=$47;
    }
   } else {
    $__count_1=$__count_048;
   }

   $53=(($__i_049+8)|0);
   $54=($53|0)==($__last|0);
   if ($54) {
    $_0=1;
    label = 15;
    break;
   } else {
    $__j_047=$__i_049;$__count_048=$__count_1;$__i_049=$53;
   }
  }
  if ((label|0) == 15) {

   STACKTOP=sp;return (($_0)|0);
  }
  $50=(($__i_049+8)|0);
  $51=($50|0)==($__last|0);
  $_0=$51;

  STACKTOP=sp;return (($_0)|0);
 }
 }
  return 0;
}


function __ZltRKN16b2ParticleSystem5ProxyES2_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=(($a+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($b+4)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2>>>0)<($4>>>0);
 return (($5)|0);
}


function __ZNSt3__120get_temporary_bufferIN16b2ParticleSystem5TriadEEENS_4pairIPT_iEEi($agg_result,$__n){
 $agg_result=($agg_result)|0;
 $__n=($__n)|0;
 var $1=0,$2=0,$3=0,$___n=0,$4=0,$_07=0,$5=0,$6=0,$7=0,$8=0,$11=0,$12=0,label=0;

 $1=(($agg_result)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($agg_result+4)|0);
 HEAP32[(($2)>>2)]=0;
 $3=($__n|0)>35791394;
 $___n=($3?35791394:$__n);
 $4=($___n|0)>0;
 if ($4) {
  $_07=$___n;
 } else {
  return;
 }
 while(1) {

  $5=((($_07)*(60))&-1);
  $6=((__ZnwjRKSt9nothrow_t($5,8752))|0);
  $7=$6;
  $8=($6|0)==0;
  if (!($8)) {
   label = 3;
   break;
  }
  $11=(((($_07|0))/(2))&-1);
  $12=($_07|0)>1;
  if ($12) {
   $_07=$11;
  } else {
   label = 5;
   break;
  }
 }
 if ((label|0) == 3) {
  HEAP32[(($1)>>2)]=$7;
  HEAP32[(($2)>>2)]=$_07;
  return;
 }
 else if ((label|0) == 5) {
  HEAP32[(($1)>>2)]=$7;
  return;
 }
}


function __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($__first,$__last,$__comp,$__len,$__buff,$__buff_size){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 $__len=($__len)|0;
 $__buff=($__buff)|0;
 $__buff_size=($__buff_size)|0;
 var $__t_i=0,$2=0,$3=0,$4=0,$__t_i_0_cast61=0,$$etemp$0$0=0,$$etemp$0$1=0,$6=0,$7=0,$$etemp$1$0=0,$$etemp$1$1=0,$9=0,$12=0,$13=0,$14=0,$16=0,$17=0,$18=0,$20=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $__t_i=((sp)|0);
 if (((($__len|0))|0)==((2)|0)) {
  $2=((HEAP32[(($__comp)>>2)])|0);
  $3=((($__last)-(60))|0);
  $4=((FUNCTION_TABLE_iii[($2)&63]($3,$__first))|0);
  if (!($4)) {
   STACKTOP=sp;return;
  }
  $__t_i_0_cast61=$__t_i;
  $$etemp$0$0=60;
  $$etemp$0$1=0;

  $6=$__first;
  (_memcpy((($__t_i_0_cast61)|0), (($6)|0), 60)|0);
  $7=$3;
  (_memcpy((($6)|0), (($7)|0), 60)|0);
  (_memcpy((($7)|0), (($__t_i_0_cast61)|0), 60)|0);
  $$etemp$1$0=60;
  $$etemp$1$1=0;

  STACKTOP=sp;return;
 } else if (((($__len|0))|0)==((0)|0)|((($__len|0))|0)==((1)|0)) {
  STACKTOP=sp;return;
 } else {
  $9=($__len|0)<129;
  if ($9) {
   __ZNSt3__116__insertion_sortIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_($__first,$__last,$__comp);
   STACKTOP=sp;return;
  }
  $12=(((($__len|0))/(2))&-1);
  $13=(($__first+((($12)*(60))&-1))|0);
  $14=($__len|0)>($__buff_size|0);
  if ($14) {
   __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($__first,$13,$__comp,$12,$__buff,$__buff_size);
   $20=((($__len)-($12))|0);
   __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($13,$__last,$__comp,$20,$__buff,$__buff_size);
   __ZNSt3__115__inplace_mergeIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEi($__first,$13,$__last,$__comp,$12,$20,$__buff,$__buff_size);
   STACKTOP=sp;return;
  } else {
   __ZNSt3__118__stable_sort_moveIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE($__first,$13,$__comp,$12,$__buff);
   $16=((($__len)-($12))|0);
   $17=(($__buff+((($12)*(60))&-1))|0);
   __ZNSt3__118__stable_sort_moveIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE($13,$__last,$__comp,$16,$17);
   $18=(($__buff+((($__len)*(60))&-1))|0);
   __ZNSt3__119__merge_move_assignIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_($__buff,$17,$17,$18,$__first,$__comp);
   STACKTOP=sp;return;
  }
 }
}


function __ZNSt3__116__insertion_sortIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$1=0,$__i_016=0,$2=0,$3=0,$__i_017=0,$5=0,$6=0,$__k_015=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$__j_0_lcssa=0,$14=0,$__i_0=0,$15=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $__t=((sp)|0);
 $1=($__first|0)==($__last|0);
 if ($1) {
  STACKTOP=sp;return;
 }
 $__i_016=(($__first+60)|0);
 $2=($__i_016|0)==($__last|0);
 if ($2) {
  STACKTOP=sp;return;
 }
 $3=$__t;
 $__i_017=$__i_016;
 while(1) {

  $5=$__i_017;
  (_memcpy((($3)|0), (($5)|0), 60)|0);
  $6=($__i_017|0)==($__first|0);
  L9: do {
   if ($6) {
    $__j_0_lcssa=$__i_017;
   } else {
    $__k_015=$__i_017;
    while(1) {

     $7=((HEAP32[(($__comp)>>2)])|0);
     $8=((($__k_015)-(60))|0);
     $9=((FUNCTION_TABLE_iii[($7)&63]($__t,$8))|0);
     if (!($9)) {
      $__j_0_lcssa=$__k_015;
      break L9;
     }
     $11=$__k_015;
     $12=$8;
     (_memcpy((($11)|0), (($12)|0), 60)|0);
     $13=($8|0)==($__first|0);
     if ($13) {
      $__j_0_lcssa=$8;
      break;
     } else {
      $__k_015=$8;
     }
    }
   }
  } while(0);

  $14=$__j_0_lcssa;
  (_memcpy((($14)|0), (($3)|0), 60)|0);
  $__i_0=(($__i_017+60)|0);
  $15=($__i_0|0)==($__last|0);
  if ($15) {
   break;
  } else {
   $__i_017=$__i_0;
  }
 }
 STACKTOP=sp;return;
}


function __ZNSt3__118__stable_sort_moveIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE($__first1,$__last1,$__comp,$__len,$__first2){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__comp=($__comp)|0;
 $__len=($__len)|0;
 $__first2=($__first2)|0;
 var $2=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$13=0,$14=0,$16=0,$17=0,$19=0,$20=0,$23=0,$24=0,$26=0,$27=0,$29=0,$30=0,$32=0;
 var $35=0,$36=0,$37=0,$38=0,label=0;

 if (((($__len|0))|0)==((2)|0)) {
  $7=((HEAP32[(($__comp)>>2)])|0);
  $8=((($__last1)-(60))|0);
  $9=((FUNCTION_TABLE_iii[($7)&63]($8,$__first1))|0);
  $10=($__first2|0)==0;
  if ($9) {
   if (!($10)) {
    $13=$__first2;
    $14=$8;
    (_memcpy((($13)|0), (($14)|0), 60)|0);
   }
   $16=(($__first2+60)|0);
   $17=($16|0)==0;
   if ($17) {
    return;
   }
   $19=$16;
   $20=$__first1;
   (_memcpy((($19)|0), (($20)|0), 60)|0);
   return;
  } else {
   if (!($10)) {
    $23=$__first2;
    $24=$__first1;
    (_memcpy((($23)|0), (($24)|0), 60)|0);
   }
   $26=(($__first2+60)|0);
   $27=($26|0)==0;
   if ($27) {
    return;
   }
   $29=$26;
   $30=$8;
   (_memcpy((($29)|0), (($30)|0), 60)|0);
   return;
  }
 } else if (((($__len|0))|0)==((0)|0)) {
  return;
 } else if (((($__len|0))|0)==((1)|0)) {
  $2=($__first2|0)==0;
  if ($2) {
   return;
  }
  $4=$__first2;
  $5=$__first1;
  (_memcpy((($4)|0), (($5)|0), 60)|0);
  return;
 } else {
  $32=($__len|0)<9;
  if ($32) {
   __ZNSt3__121__insertion_sort_moveIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_PNS_15iterator_traitsIS9_E10value_typeET_($__first1,$__last1,$__first2,$__comp);
   return;
  } else {
   $35=(((($__len|0))/(2))&-1);
   $36=(($__first1+((($35)*(60))&-1))|0);
   __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($__first1,$36,$__comp,$35,$__first2,$35);
   $37=((($__len)-($35))|0);
   $38=(($__first2+((($35)*(60))&-1))|0);
   __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($36,$__last1,$__comp,$37,$38,$37);
   __ZNSt3__122__merge_move_constructIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_S8_EEvT0_S9_T1_SA_PNS_15iterator_traitsIS9_E10value_typeET_($__first1,$36,$36,$__last1,$__first2,$__comp);
   return;
  }
 }
}


function __ZNSt3__119__merge_move_assignIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_($__first1,$__last1,$__first2,$__last2,$__result,$__comp){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__last2=($__last2)|0;
 $__result=($__result)|0;
 $__comp=($__comp)|0;
 var $1=0,$_025_lcssa=0,$_028_lcssa=0,$2=0,$_043=0,$_02542=0,$_02841=0,$3=0,$4=0,$_136=0,$_12635=0,$5=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$15=0;
 var $16=0,$18=0,$19=0,$_129=0,$_2=0,$21=0,$22=0,$_22732=0,$_23031=0,$23=0,$24=0,$25=0,$26=0,$27=0,label=0;

 $1=($__first1|0)==($__last1|0);
 L1: do {
  if ($1) {
   $_028_lcssa=$__first2;$_025_lcssa=$__result;
  } else {
   $_02841=$__first2;$_02542=$__result;$_043=$__first1;
   while(1) {



    $3=($_02841|0)==($__last2|0);
    if ($3) {
     break;
    }
    $11=((HEAP32[(($__comp)>>2)])|0);
    $12=((FUNCTION_TABLE_iii[($11)&63]($_02841,$_043))|0);
    $13=$_02542;
    if ($12) {
     $15=$_02841;
     (_memcpy((($13)|0), (($15)|0), 60)|0);
     $16=(($_02841+60)|0);
     $_2=$_043;$_129=$16;
    } else {
     $18=$_043;
     (_memcpy((($13)|0), (($18)|0), 60)|0);
     $19=(($_043+60)|0);
     $_2=$19;$_129=$_02841;
    }


    $21=(($_02542+60)|0);
    $22=($_2|0)==($__last1|0);
    if ($22) {
     $_028_lcssa=$_129;$_025_lcssa=$21;
     break L1;
    } else {
     $_02841=$_129;$_02542=$21;$_043=$_2;
    }
   }
   $4=($_043|0)==($__last1|0);
   if ($4) {
    return;
   } else {
    $_12635=$_02542;$_136=$_043;
   }
   while(1) {


    $5=$_12635;
    $6=$_136;
    (_memcpy((($5)|0), (($6)|0), 60)|0);
    $7=(($_136+60)|0);
    $8=(($_12635+60)|0);
    $9=($7|0)==($__last1|0);
    if ($9) {
     break;
    } else {
     $_12635=$8;$_136=$7;
    }
   }
   return;
  }
 } while(0);


 $2=($_028_lcssa|0)==($__last2|0);
 if ($2) {
  return;
 } else {
  $_23031=$_028_lcssa;$_22732=$_025_lcssa;
 }
 while(1) {


  $23=$_22732;
  $24=$_23031;
  (_memcpy((($23)|0), (($24)|0), 60)|0);
  $25=(($_23031+60)|0);
  $26=(($_22732+60)|0);
  $27=($25|0)==($__last2|0);
  if ($27) {
   break;
  } else {
   $_23031=$25;$_22732=$26;
  }
 }
 return;
}


function __ZNSt3__115__inplace_mergeIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEi($__first,$__middle,$__last,$__comp,$__len1,$__len2,$__buff,$__buff_size){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 $__len1=($__len1)|0;
 $__len2=($__len2)|0;
 $__buff=($__buff)|0;
 $__buff_size=($__buff_size)|0;
 var $__t_i=0,$1=0,$_0_ph111=0,$_062_ph110=0,$_063_ph109=0,$_064_ph108=0,$_066_ph107=0,$_0101=0,$_062100=0,$_06499=0,$_06698=0,$2=0,$_180=0,$_16579=0,$3=0,$4=0,$6=0,$7=0,$8=0,$10=0;
 var $11=0,$or_cond=0,$14=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$24=0,$__t_i_0_cast75=0,$$etemp$0$0=0,$$etemp$0$1=0,$26=0,$27=0,$$etemp$1$0=0,$$etemp$1$1=0,$29=0,$30=0;
 var $31=0,$32=0,$33=0,$34=0,$35=0,$37=0,$_06276=0,$__len11_0=0,$__len21_0=0,$38=0,$39=0,$40=0,$42=0,$44=0,$45=0,$47=0,$49=0,$50=0,$52=0,$54=0;
 var $_0_i=0,$55=0,$56=0,$57=0,$59=0,$60=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $__t_i=((sp)|0);
 $1=($__len2|0)==0;
 if ($1) {
  STACKTOP=sp;return;
 } else {
  $_066_ph107=$__len2;$_064_ph108=$__len1;$_063_ph109=$__last;$_062_ph110=$__middle;$_0_ph111=$__first;
 }
 L3: while(1) {





  $_06698=$_066_ph107;$_06499=$_064_ph108;$_062100=$_062_ph110;$_0101=$_0_ph111;
  while(1) {




   $2=($_06499|0)==0;
   if ($2) {
    label = 23;
    break L3;
   } else {
    $_16579=$_06499;$_180=$_0101;
   }
   while(1) {


    $3=((HEAP32[(($__comp)>>2)])|0);
    $4=((FUNCTION_TABLE_iii[($3)&63]($_062100,$_180))|0);
    if ($4) {
     break;
    }
    $6=(($_180+60)|0);
    $7=((($_16579)-(1))|0);
    $8=($7|0)==0;
    if ($8) {
     label = 23;
     break L3;
    } else {
     $_16579=$7;$_180=$6;
    }
   }
   $10=($_16579|0)>($__buff_size|0);
   $11=($_06698|0)>($__buff_size|0);
   $or_cond=$10&$11;
   if (!($or_cond)) {
    label = 7;
    break L3;
   }
   $14=($_16579|0)<($_06698|0);
   if ($14) {
    $16=(((($_06698|0))/(2))&-1);
    $17=(($_062100+((($16)*(60))&-1))|0);
    $18=((__ZNSt3__113__upper_boundIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_S2_EET0_S9_S9_RKT1_T_($_180,$_062100,$17,$__comp))|0);
    $19=$18;
    $20=$_180;
    $21=((($19)-($20))|0);
    $22=(((($21|0))/(60))&-1);
    $__len21_0=$16;$__len11_0=$22;$_06276=$17;$37=$18;
   } else {
    $24=($_16579|0)==1;
    if ($24) {
     label = 11;
     break L3;
    }
    $29=(((($_16579|0))/(2))&-1);
    $30=(($_180+((($29)*(60))&-1))|0);
    $31=((__ZNSt3__113__lower_boundIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_S2_EET0_S9_S9_RKT1_T_($_062100,$_063_ph109,$30,$__comp))|0);
    $32=$31;
    $33=$_062100;
    $34=((($32)-($33))|0);
    $35=(((($34|0))/(60))&-1);
    $__len21_0=$35;$__len11_0=$29;$_06276=$31;$37=$30;
   }




   $38=((($_16579)-($__len11_0))|0);
   $39=((($_06698)-($__len21_0))|0);
   $40=($37|0)==($_062100|0);
   do {
    if ($40) {
     $_0_i=$_06276;
    } else {
     $42=($_062100|0)==($_06276|0);
     if ($42) {
      $_0_i=$37;
      break;
     }
     $44=(($37+60)|0);
     $45=($44|0)==($_062100|0);
     if ($45) {
      $47=((__ZNSt3__113__rotate_leftIPN16b2ParticleSystem5TriadEEET_S4_S4_($37,$_06276))|0);
      $_0_i=$47;
      break;
     }
     $49=(($_062100+60)|0);
     $50=($49|0)==($_06276|0);
     if ($50) {
      $52=((__ZNSt3__114__rotate_rightIPN16b2ParticleSystem5TriadEEET_S4_S4_($37,$_06276))|0);
      $_0_i=$52;
      break;
     } else {
      $54=((__ZNSt3__112__rotate_gcdIPN16b2ParticleSystem5TriadEEET_S4_S4_S4_($37,$_062100,$_06276))|0);
      $_0_i=$54;
      break;
     }
    }
   } while(0);

   $55=((($__len21_0)+($__len11_0))|0);
   $56=((($39)+($38))|0);
   $57=($55|0)<($56|0);
   if (!($57)) {
    break;
   }
   __ZNSt3__115__inplace_mergeIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEi($_180,$37,$_0_i,$__comp,$__len11_0,$__len21_0,$__buff,$__buff_size);
   $59=($_06698|0)==($__len21_0|0);
   if ($59) {
    label = 23;
    break L3;
   } else {
    $_06698=$39;$_06499=$38;$_062100=$_06276;$_0101=$_0_i;
   }
  }
  __ZNSt3__115__inplace_mergeIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEi($_0_i,$_06276,$_063_ph109,$__comp,$38,$39,$__buff,$__buff_size);
  $60=($__len21_0|0)==0;
  if ($60) {
   label = 23;
   break;
  } else {
   $_066_ph107=$__len21_0;$_064_ph108=$__len11_0;$_063_ph109=$_0_i;$_062_ph110=$37;$_0_ph111=$_180;
  }
 }
 if ((label|0) == 7) {
  __ZNSt3__124__buffered_inplace_mergeIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeE($_180,$_062100,$_063_ph109,$__comp,$_16579,$_06698,$__buff);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 11) {
  $__t_i_0_cast75=$__t_i;
  $$etemp$0$0=60;
  $$etemp$0$1=0;

  $26=$_180;
  (_memcpy((($__t_i_0_cast75)|0), (($26)|0), 60)|0);
  $27=$_062100;
  (_memcpy((($26)|0), (($27)|0), 60)|0);
  (_memcpy((($27)|0), (($__t_i_0_cast75)|0), 60)|0);
  $$etemp$1$0=60;
  $$etemp$1$1=0;

  STACKTOP=sp;return;
 }
 else if ((label|0) == 23) {
  STACKTOP=sp;return;
 }
}


function __ZNSt3__124__buffered_inplace_mergeIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeE($__first,$__middle,$__last,$__comp,$__len1,$__len2,$__buff){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 $__len1=($__len1)|0;
 $__len2=($__len2)|0;
 $__buff=($__buff)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$tmpcast=0,$8=0,$tmpcast59=0,$9=0,$tmpcast60=0,$10=0,$tmpcast61=0,$11=0,$12=0,$13=0,$14=0,$15=0,$scevgep73=0;
 var $scevgep7374=0,$16=0,$uglygep75=0,$uglygep7576=0,$17=0,$18=0,$19=0,$scevgep=0,$scevgep70=0,$20=0,$uglygep=0,$uglygep71=0,$21=0,$22=0,$__p_066=0,$__i_065=0,$24=0,$26=0,$27=0,$29=0;
 var $30=0,$31=0,$scevgep77=0,$__p_0_lcssa=0,$33=0,$34=0,$35=0,$36=0,$37=0,$__i2_063=0,$__p1_062=0,$39=0,$41=0,$42=0,$44=0,$45=0,$46=0,$scevgep72=0,$__p1_0_lcssa=0,$_sroa_158_4_insert_ext$0=0;
 var $_sroa_158_4_insert_ext$1=0,$_sroa_158_4_insert_shift$0=0,$_sroa_158_4_insert_shift$1=0,$_sroa_057_0_insert_insert$0=0,$_sroa_057_0_insert_insert$1=0,$st$0$0=0,$st$1$1=0,$_sroa_156_4_insert_ext$0=0,$_sroa_156_4_insert_ext$1=0,$_sroa_156_4_insert_shift$0=0,$_sroa_156_4_insert_shift$1=0,$_sroa_055_0_insert_insert$0=0,$_sroa_055_0_insert_insert$1=0,$st$2$0=0,$st$3$1=0,$48=0,$_sroa_154_4_insert_ext$0=0,$_sroa_154_4_insert_ext$1=0,$_sroa_154_4_insert_shift$0=0,$_sroa_154_4_insert_shift$1=0;
 var $_sroa_053_0_insert_insert$0=0,$_sroa_053_0_insert_insert$1=0,$st$4$0=0,$st$5$1=0,$49=0,$_sroa_152_4_insert_ext$0=0,$_sroa_152_4_insert_ext$1=0,$_sroa_152_4_insert_shift$0=0,$_sroa_152_4_insert_shift$1=0,$_sroa_051_0_insert_insert$0=0,$_sroa_051_0_insert_insert$1=0,$st$6$0=0,$st$7$1=0,$50=0,$51=0,$52=0,label=0;
 var sp=0;sp=STACKTOP;
 $1=$__first;
 $2=$__middle;
 $3=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $4=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $5=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $6=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast59=$8;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast60=$9;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast61=$10;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=($__len1|0)>($__len2|0);
 if ($14) {
  $19=($__middle|0)==($__last|0);
  if ($19) {
   $__p1_0_lcssa=$__buff;
  } else {
   $scevgep=((($__last)-(60))|0);
   $scevgep70=$scevgep;
   $20=(((-$2))|0);
   $uglygep=(($scevgep70+$20)|0);
   $uglygep71=$uglygep;
   $21=(((($uglygep71>>>0))/(60))&-1);
   $22=((($21)+(1))|0);
   $__p1_062=$__buff;$__i2_063=$__middle;
   while(1) {


    $39=($__p1_062|0)==0;
    if (!($39)) {
     $41=$__p1_062;
     $42=$__i2_063;
     (_memcpy((($41)|0), (($42)|0), 60)|0);
    }
    $44=(($__i2_063+60)|0);
    $45=(($__p1_062+60)|0);
    $46=($44|0)==($__last|0);
    if ($46) {
     break;
    } else {
     $__p1_062=$45;$__i2_063=$44;
    }
   }
   $scevgep72=(($__buff+((($22)*(60))&-1))|0);
   $__p1_0_lcssa=$scevgep72;
  }

  $_sroa_158_4_insert_ext$0=$2;
  $_sroa_158_4_insert_ext$1=0;
  $_sroa_158_4_insert_shift$0=0;
  $_sroa_158_4_insert_shift$1=$_sroa_158_4_insert_ext$0;
  $_sroa_057_0_insert_insert$0=$_sroa_158_4_insert_shift$0|$_sroa_158_4_insert_ext$0;
  $_sroa_057_0_insert_insert$1=$_sroa_158_4_insert_shift$1|$_sroa_158_4_insert_ext$1;
  $st$0$0=(($7)|0);
  HEAP32[(($st$0$0)>>2)]=$_sroa_057_0_insert_insert$0;
  $st$1$1=(($7+4)|0);
  HEAP32[(($st$1$1)>>2)]=$_sroa_057_0_insert_insert$1;
  $_sroa_156_4_insert_ext$0=$1;
  $_sroa_156_4_insert_ext$1=0;
  $_sroa_156_4_insert_shift$0=0;
  $_sroa_156_4_insert_shift$1=$_sroa_156_4_insert_ext$0;
  $_sroa_055_0_insert_insert$0=$_sroa_156_4_insert_shift$0|$_sroa_156_4_insert_ext$0;
  $_sroa_055_0_insert_insert$1=$_sroa_156_4_insert_shift$1|$_sroa_156_4_insert_ext$1;
  $st$2$0=(($8)|0);
  HEAP32[(($st$2$0)>>2)]=$_sroa_055_0_insert_insert$0;
  $st$3$1=(($8+4)|0);
  HEAP32[(($st$3$1)>>2)]=$_sroa_055_0_insert_insert$1;
  $48=$__p1_0_lcssa;
  $_sroa_154_4_insert_ext$0=$48;
  $_sroa_154_4_insert_ext$1=0;
  $_sroa_154_4_insert_shift$0=0;
  $_sroa_154_4_insert_shift$1=$_sroa_154_4_insert_ext$0;
  $_sroa_053_0_insert_insert$0=$_sroa_154_4_insert_shift$0|$_sroa_154_4_insert_ext$0;
  $_sroa_053_0_insert_insert$1=$_sroa_154_4_insert_shift$1|$_sroa_154_4_insert_ext$1;
  $st$4$0=(($9)|0);
  HEAP32[(($st$4$0)>>2)]=$_sroa_053_0_insert_insert$0;
  $st$5$1=(($9+4)|0);
  HEAP32[(($st$5$1)>>2)]=$_sroa_053_0_insert_insert$1;
  $49=$__buff;
  $_sroa_152_4_insert_ext$0=$49;
  $_sroa_152_4_insert_ext$1=0;
  $_sroa_152_4_insert_shift$0=0;
  $_sroa_152_4_insert_shift$1=$_sroa_152_4_insert_ext$0;
  $_sroa_051_0_insert_insert$0=$_sroa_152_4_insert_shift$0|$_sroa_152_4_insert_ext$0;
  $_sroa_051_0_insert_insert$1=$_sroa_152_4_insert_shift$1|$_sroa_152_4_insert_ext$1;
  $st$6$0=(($10)|0);
  HEAP32[(($st$6$0)>>2)]=$_sroa_051_0_insert_insert$0;
  $st$7$1=(($10+4)|0);
  HEAP32[(($st$7$1)>>2)]=$_sroa_051_0_insert_insert$1;
  $50=(($11)|0);
  HEAP32[(($50)>>2)]=$__last;
  $51=(($11+4)|0);
  HEAP32[(($51)>>2)]=$__last;
  $52=(($12)|0);
  HEAP32[(($52)>>2)]=$__comp;
  __ZNSt3__17__mergeINS_8__negateIRPFbRKN16b2ParticleSystem5TriadES5_EEENS_13move_iteratorINS_16reverse_iteratorIPS3_EEEESE_SD_EET2_T0_SG_T1_SH_SF_T_($13,$tmpcast,$tmpcast59,$tmpcast60,$tmpcast61,$11,$12);
  STACKTOP=sp;return;
 } else {
  $15=($__first|0)==($__middle|0);
  if ($15) {
   $__p_0_lcssa=$__buff;
  } else {
   $scevgep73=((($__middle)-(60))|0);
   $scevgep7374=$scevgep73;
   $16=(((-$1))|0);
   $uglygep75=(($scevgep7374+$16)|0);
   $uglygep7576=$uglygep75;
   $17=(((($uglygep7576>>>0))/(60))&-1);
   $18=((($17)+(1))|0);
   $__i_065=$__first;$__p_066=$__buff;
   while(1) {


    $24=($__p_066|0)==0;
    if (!($24)) {
     $26=$__p_066;
     $27=$__i_065;
     (_memcpy((($26)|0), (($27)|0), 60)|0);
    }
    $29=(($__i_065+60)|0);
    $30=(($__p_066+60)|0);
    $31=($29|0)==($__middle|0);
    if ($31) {
     break;
    } else {
     $__i_065=$29;$__p_066=$30;
    }
   }
   $scevgep77=(($__buff+((($18)*(60))&-1))|0);
   $__p_0_lcssa=$scevgep77;
  }

  $33=(($3)|0);
  HEAP32[(($33)>>2)]=$__buff;
  $34=(($4)|0);
  HEAP32[(($34)>>2)]=$__p_0_lcssa;
  $35=(($5)|0);
  HEAP32[(($35)>>2)]=$__middle;
  $36=(($6)|0);
  HEAP32[(($36)>>2)]=$__last;
  $37=((__ZNSt3__17__mergeIRPFbRKN16b2ParticleSystem5TriadES4_ENS_13move_iteratorIPS2_EESA_S9_EET2_T0_SC_T1_SD_SB_T_($3,$4,$5,$6,$__first,$__comp))|0);
  STACKTOP=sp;return;
 }
}


function __ZNSt3__113__upper_boundIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_S2_EET0_S9_S9_RKT1_T_($__first,$__last,$__value_,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__value_=($__value_)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$__len_0_ph=0,$_0_ph=0,$__len_0=0,$6=0,$8=0,$9=0,$10=0,$11=0,$_sum=0,$13=0,$_neg12=0,$14=0,label=0;

 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=(((($3|0))/(60))&-1);
 $_0_ph=$__first;$__len_0_ph=$4;
 L1: while(1) {


  $__len_0=$__len_0_ph;
  while(1) {

   $6=($__len_0|0)==0;
   if ($6) {
    break L1;
   }
   $8=(((($__len_0|0))/(2))&-1);
   $9=(($_0_ph+((($8)*(60))&-1))|0);
   $10=((HEAP32[(($__comp)>>2)])|0);
   $11=((FUNCTION_TABLE_iii[($10)&63]($__value_,$9))|0);
   if ($11) {
    $__len_0=$8;
   } else {
    break;
   }
  }
  $_sum=((($8)+(1))|0);
  $13=(($_0_ph+((($_sum)*(60))&-1))|0);
  $_neg12=((($__len_0)-(1))|0);
  $14=((($_neg12)-($8))|0);
  $_0_ph=$13;$__len_0_ph=$14;
 }
 return (($_0_ph)|0);
}


function __ZNSt3__113__lower_boundIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_S2_EET0_S9_S9_RKT1_T_($__first,$__last,$__value_,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__value_=($__value_)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$__len_0_ph=0,$_0_ph=0,$__len_0=0,$6=0,$8=0,$9=0,$10=0,$11=0,$_sum=0,$13=0,$_neg12=0,$14=0,label=0;

 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=(((($3|0))/(60))&-1);
 $_0_ph=$__first;$__len_0_ph=$4;
 L1: while(1) {


  $__len_0=$__len_0_ph;
  while(1) {

   $6=($__len_0|0)==0;
   if ($6) {
    break L1;
   }
   $8=(((($__len_0|0))/(2))&-1);
   $9=(($_0_ph+((($8)*(60))&-1))|0);
   $10=((HEAP32[(($__comp)>>2)])|0);
   $11=((FUNCTION_TABLE_iii[($10)&63]($9,$__value_))|0);
   if ($11) {
    break;
   } else {
    $__len_0=$8;
   }
  }
  $_sum=((($8)+(1))|0);
  $13=(($_0_ph+((($_sum)*(60))&-1))|0);
  $_neg12=((($__len_0)-(1))|0);
  $14=((($_neg12)-($8))|0);
  $_0_ph=$13;$__len_0_ph=$14;
 }
 return (($_0_ph)|0);
}


function __ZNSt3__113__rotate_leftIPN16b2ParticleSystem5TriadEEET_S4_S4_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $__tmp=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $__tmp=((sp)|0);
 $1=$__tmp;
 $2=$__first;
 (_memcpy((($1)|0), (($2)|0), 60)|0);
 $3=(($__first+60)|0);
 $4=$__last;
 $5=$3;
 $6=((($4)-($5))|0);
 $7=(((($6|0))/(60))&-1);
 $8=$3;
 ((_memmove((($2)|0),(($8)|0),(($6)|0)))|0);
 $9=(($__first+((($7)*(60))&-1))|0);
 $10=$9;
 (_memcpy((($10)|0), (($1)|0), 60)|0);
 STACKTOP=sp;return (($9)|0);
}


function __ZNSt3__114__rotate_rightIPN16b2ParticleSystem5TriadEEET_S4_S4_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $__tmp=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $__tmp=((sp)|0);
 $1=((($__last)-(60))|0);
 $2=$__tmp;
 $3=$1;
 (_memcpy((($2)|0), (($3)|0), 60)|0);
 $4=$1;
 $5=$__first;
 $6=((($4)-($5))|0);
 $7=(((($6|0))/(-60))&-1);
 $8=(($__last+((($7)*(60))&-1))|0);
 $9=$8;
 $10=$__first;
 ((_memmove((($9)|0),(($10)|0),(($6)|0)))|0);
 (_memcpy((($10)|0), (($2)|0), 60)|0);
 STACKTOP=sp;return (($8)|0);
}


function __ZNSt3__112__rotate_gcdIPN16b2ParticleSystem5TriadEEET_S4_S4_S4_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $__t_i_i=0,$__t=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$__t_i_0_cast8_i=0,$_010_i=0,$_079_i=0,$$etemp$0$0=0,$$etemp$0$1=0,$12=0,$13=0,$$etemp$1$0=0,$$etemp$1$1=0;
 var $14=0,$15=0,$16=0,$_05_i=0,$_0_i=0,$17=0,$18=0,$19=0,$20=0,$21=0,$_sum=0,$__p_032=0,$23=0,$24=0,$25=0,$__p1_0=0,$__p2_0=0,$27=0,$28=0,$29=0;
 var $30=0,$31=0,$32=0,$34=0,$36=0,$37=0,$__p2_1=0,$39=0,$41=0,$42=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+128)|0;
 $__t_i_i=((sp)|0);
 $__t=(((sp)+(64))|0);
 $1=$__middle;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=(((($3|0))/(60))&-1);
 $5=$__last;
 $6=((($5)-($1))|0);
 $7=(((($6|0))/(60))&-1);
 $8=($4|0)==($7|0);
 if ($8) {
  $10=($__first|0)==($__middle|0);
  if ($10) {
   $_0=$__middle;

   STACKTOP=sp;return (($_0)|0);
  }
  $__t_i_0_cast8_i=$__t_i_i;
  $_079_i=$__first;$_010_i=$__middle;
  while(1) {


   $$etemp$0$0=60;
   $$etemp$0$1=0;

   $12=$_079_i;
   (_memcpy((($__t_i_0_cast8_i)|0), (($12)|0), 60)|0);
   $13=$_010_i;
   (_memcpy((($12)|0), (($13)|0), 60)|0);
   (_memcpy((($13)|0), (($__t_i_0_cast8_i)|0), 60)|0);
   $$etemp$1$0=60;
   $$etemp$1$1=0;

   $14=(($_079_i+60)|0);
   $15=(($_010_i+60)|0);
   $16=($14|0)==($__middle|0);
   if ($16) {
    $_0=$__middle;
    break;
   } else {
    $_079_i=$14;$_010_i=$15;
   }
  }

  STACKTOP=sp;return (($_0)|0);
 } else {
  $_0_i=$4;$_05_i=$7;
 }
 while(1) {


  $17=(((($_0_i|0))%(($_05_i|0)))&-1);
  $18=($17|0)==0;
  if ($18) {
   break;
  } else {
   $_0_i=$_05_i;$_05_i=$17;
  }
 }
 $19=($_05_i|0)==0;
 if (!($19)) {
  $20=(($__first+((($_05_i)*(60))&-1))|0);
  $21=$__t;
  $_sum=((($4)-(1))|0);
  $__p_032=$20;
  while(1) {

   $23=((($__p_032)-(60))|0);
   $24=$23;
   (_memcpy((($21)|0), (($24)|0), 60)|0);
   $25=(($__p_032+((($_sum)*(60))&-1))|0);
   $__p2_0=$25;$__p1_0=$23;
   while(1) {


    $27=$__p1_0;
    $28=$__p2_0;
    (_memcpy((($27)|0), (($28)|0), 60)|0);
    $29=$__p2_0;
    $30=((($5)-($29))|0);
    $31=(((($30|0))/(60))&-1);
    $32=($4|0)<($31|0);
    if ($32) {
     $34=(($__p2_0+((($4)*(60))&-1))|0);
     $__p2_1=$34;
    } else {
     $36=((($4)-($31))|0);
     $37=(($__first+((($36)*(60))&-1))|0);
     $__p2_1=$37;
    }

    $39=($__p2_1|0)==($23|0);
    if ($39) {
     break;
    } else {
     $__p1_0=$__p2_0;$__p2_0=$__p2_1;
    }
   }
   (_memcpy((($28)|0), (($21)|0), 60)|0);
   $41=($23|0)==($__first|0);
   if ($41) {
    break;
   } else {
    $__p_032=$23;
   }
  }
 }
 $42=(($__first+((($7)*(60))&-1))|0);
 $_0=$42;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNSt3__17__mergeIRPFbRKN16b2ParticleSystem5TriadES4_ENS_13move_iteratorIPS2_EESA_S9_EET2_T0_SC_T1_SD_SB_T_($__first1,$__last1,$__first2,$__last2,$__result,$__comp){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__last2=($__last2)|0;
 $__result=($__result)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$_0628=0,$17=0,$19=0,$20=0,$21=0;
 var $22=0,$23=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$34=0,$35=0,$36=0,$37=0,$38=0,$40=0,$41=0,$42=0,$43=0,$_lcssa26=0,$_lcssa=0;
 var $_06_lcssa=0,$44=0,$45=0,$46=0,$47=0,$48=0,$_0622=0,$_sink_in=0,$_sink=0,$50=0,label=0;
 var tempParam=0;
 var sp=0;sp=STACKTOP;
 tempParam = $__first1; $__first1=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__first1)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 tempParam = $__last1; $__last1=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__last1)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 tempParam = $__first2; $__first2=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__first2)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 tempParam = $__last2; $__last2=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__last2)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 $1=(($__first1)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($__last1)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 $6=(($__first2)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($__last2)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 L1: do {
  if ($5) {
   $_06_lcssa=$__result;$_lcssa=$7;$_lcssa26=$9;
  } else {
   $10=((HEAP32[(($3)>>2)])|0);
   $11=((HEAP32[(($8)>>2)])|0);
   $_0628=$__result;$16=$2;$15=$4;$14=$7;$13=$9;
   while(1) {





    $17=($14|0)==($13|0);
    if ($17) {
     break;
    }
    $25=((HEAP32[(($__comp)>>2)])|0);
    $26=((FUNCTION_TABLE_iii[($25)&63]($14,$16))|0);
    if ($26) {
     $28=((HEAP32[(($6)>>2)])|0);
     $29=$_0628;
     $30=$28;
     (_memcpy((($29)|0), (($30)|0), 60)|0);
     $31=((HEAP32[(($6)>>2)])|0);
     $32=(($31+60)|0);
     HEAP32[(($6)>>2)]=$32;
    } else {
     $34=((HEAP32[(($1)>>2)])|0);
     $35=$_0628;
     $36=$34;
     (_memcpy((($35)|0), (($36)|0), 60)|0);
     $37=((HEAP32[(($1)>>2)])|0);
     $38=(($37+60)|0);
     HEAP32[(($1)>>2)]=$38;
    }
    $40=(($_0628+60)|0);
    $41=((HEAP32[(($1)>>2)])|0);
    $42=($41|0)==($10|0);
    $43=((HEAP32[(($6)>>2)])|0);
    if ($42) {
     $_06_lcssa=$40;$_lcssa=$43;$_lcssa26=$11;
     break L1;
    } else {
     $_0628=$40;$16=$41;$15=$10;$14=$43;$13=$11;
    }
   }
   $19=$15;
   $20=$16;
   $21=((($19)-($20))|0);
   $22=$_0628;
   $23=$16;
   ((_memmove((($22)|0),(($23)|0),(($21)|0)))|0);
   $_sink_in=$21;$_0622=$_0628;


   $_sink=(((($_sink_in|0))/(60))&-1);
   $50=(($_0622+((($_sink)*(60))&-1))|0);
   STACKTOP=sp;return (($50)|0);
  }
 } while(0);



 $44=$_lcssa26;
 $45=$_lcssa;
 $46=((($44)-($45))|0);
 $47=$_06_lcssa;
 $48=$_lcssa;
 ((_memmove((($47)|0),(($48)|0),(($46)|0)))|0);
 $_sink_in=$46;$_0622=$_06_lcssa;


 $_sink=(((($_sink_in|0))/(60))&-1);
 $50=(($_0622+((($_sink)*(60))&-1))|0);
 STACKTOP=sp;return (($50)|0);
}


function __ZNSt3__17__mergeINS_8__negateIRPFbRKN16b2ParticleSystem5TriadES5_EEENS_13move_iteratorINS_16reverse_iteratorIPS3_EEEESE_SD_EET2_T0_SG_T1_SH_SF_T_($agg_result,$__first1,$__last1,$__first2,$__last2,$__result,$__comp){
 $agg_result=($agg_result)|0;
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__last2=($__last2)|0;
 $__result=($__result)|0;
 $__comp=($__comp)|0;
 var $1=0,$ld$0$0=0,$2$0=0,$ld$1$1=0,$2$1=0,$_sroa_13_4_extract_shift_i59$0=0,$_sroa_13_4_extract_shift_i59$1=0,$_sroa_13_4_extract_trunc_i60$0=0,$_sroa_13_4_extract_trunc_i60=0,$3=0,$4=0,$ld$2$0=0,$5$0=0,$ld$3$1=0,$5$1=0,$_sroa_1_4_extract_shift_i61$0=0,$_sroa_1_4_extract_shift_i61$1=0,$_sroa_1_4_extract_trunc_i62$0=0,$_sroa_1_4_extract_trunc_i62=0,$6=0;
 var $7=0,$8=0,$ld$4$0=0,$9$0=0,$ld$5$1=0,$9$1=0,$extract68$0=0,$extract68$1=0,$extract_t69$0=0,$extract_t69=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$extract$0=0;
 var $extract$1=0,$extract_t$0=0,$extract_t=0,$_off32=0,$20=0,$_sroa_1_4_extract_trunc_i63=0,$21=0,$22=0,$ld$6$0=0,$23$0=0,$ld$7$1=0,$23$1=0,$_sroa_1_4_extract_shift_i18$0=0,$_sroa_1_4_extract_shift_i18$1=0,$_sroa_1_4_extract_trunc_i19$0=0,$_sroa_1_4_extract_trunc_i19=0,$24=0,$25=0,$27=0,$ld$8$0=0;
 var $28$0=0,$ld$9$1=0,$28$1=0,$_sroa_035_0_extract_trunc_i30$0=0,$_sroa_035_0_extract_trunc_i30=0,$29=0,$_sroa_136_4_extract_shift_i31$0=0,$_sroa_136_4_extract_shift_i31$1=0,$_sroa_136_4_extract_trunc_i32$0=0,$_sroa_136_4_extract_trunc_i32=0,$30=0,$31=0,$scevgep_i37=0,$scevgep38_i38=0,$32=0,$uglygep_i39=0,$uglygep39_i40=0,$33=0,$34=0,$35=0;
 var $36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$scevgep40_i43=0,$42=0,$43=0,$44=0,$45=0,$46=0,$_sroa_136_4_insert_ext_i45$0=0,$_sroa_136_4_insert_ext_i45$1=0,$_sroa_136_4_insert_shift_i46$0=0,$_sroa_136_4_insert_shift_i46$1=0,$_sroa_035_0_insert_ext_i47$0=0,$_sroa_035_0_insert_ext_i47$1=0,$_sroa_035_0_insert_insert_i48$0=0,$_sroa_035_0_insert_insert_i48$1=0;
 var $st$10$0=0,$st$11$1=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$64=0,$65=0,$66=0,$67=0;
 var $68=0,$69=0,$71=0,$72=0,$ld$12$0=0,$73$0=0,$ld$13$1=0,$73$1=0,$_sroa_13_4_extract_shift_i$0=0,$_sroa_13_4_extract_shift_i$1=0,$_sroa_13_4_extract_trunc_i$0=0,$_sroa_13_4_extract_trunc_i=0,$74=0,$ld$14$0=0,$75$0=0,$ld$15$1=0,$75$1=0,$_sroa_1_4_extract_shift_i$0=0,$_sroa_1_4_extract_shift_i$1=0,$_sroa_1_4_extract_trunc_i$0=0;
 var $_sroa_1_4_extract_trunc_i=0,$76=0,$77=0,$ld$16$0=0,$78$0=0,$ld$17$1=0,$78$1=0,$extract64$0=0,$extract64$1=0,$extract_t65$0=0,$extract_t65=0,$extract66$0=0,$extract66$1=0,$extract_t67$0=0,$extract_t67=0,$_lcssa_off32=0,$80=0,$ld$18$0=0,$81$0=0,$ld$19$1=0;
 var $81$1=0,$82=0,$ld$20$0=0,$83$0=0,$ld$21$1=0,$83$1=0,$_sroa_035_0_extract_trunc_i$0=0,$_sroa_035_0_extract_trunc_i=0,$84=0,$_sroa_136_4_extract_shift_i$0=0,$_sroa_136_4_extract_shift_i$1=0,$_sroa_136_4_extract_trunc_i$0=0,$_sroa_136_4_extract_trunc_i=0,$85=0,$86=0,$_sroa_1_4_extract_shift_i3_i_i$0=0,$_sroa_1_4_extract_shift_i3_i_i$1=0,$_sroa_1_4_extract_trunc_i4_i_i$0=0,$_sroa_1_4_extract_trunc_i4_i_i=0,$87=0;
 var $88=0,$scevgep_i=0,$scevgep38_i=0,$89=0,$uglygep_i=0,$uglygep39_i=0,$90=0,$91=0,$92=0,$93=0,$94=0,$95=0,$96=0,$97=0,$98=0,$scevgep40_i=0,$99=0,$100=0,$101=0,$102=0;
 var $103=0,$_sroa_136_4_insert_ext_i$0=0,$_sroa_136_4_insert_ext_i$1=0,$_sroa_136_4_insert_shift_i$0=0,$_sroa_136_4_insert_shift_i$1=0,$_sroa_035_0_insert_ext_i$0=0,$_sroa_035_0_insert_ext_i$1=0,$_sroa_035_0_insert_insert_i$0=0,$_sroa_035_0_insert_insert_i$1=0,$st$22$0=0,$st$23$1=0,label=0;
 var tempParam=0;
 var sp=0;sp=STACKTOP;
 tempParam = $__first1; $__first1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__first1)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__first1)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__last1; $__last1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__last1)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__last1)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__first2; $__first2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__first2)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__first2)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__last2; $__last2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__last2)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__last2)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__result; $__result=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__result)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__result)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__comp; $__comp=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__comp)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 $1=$__first1;
 $ld$0$0=(($1)|0);
 $2$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $2$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $_sroa_13_4_extract_shift_i59$0=$2$1;
 $_sroa_13_4_extract_shift_i59$1=0;
 $_sroa_13_4_extract_trunc_i60$0=$_sroa_13_4_extract_shift_i59$0;
 $_sroa_13_4_extract_trunc_i60=$_sroa_13_4_extract_trunc_i60$0;
 $3=$_sroa_13_4_extract_trunc_i60;
 $4=$__last1;
 $ld$2$0=(($4)|0);
 $5$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($4+4)|0);
 $5$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $_sroa_1_4_extract_shift_i61$0=$5$1;
 $_sroa_1_4_extract_shift_i61$1=0;
 $_sroa_1_4_extract_trunc_i62$0=$_sroa_1_4_extract_shift_i61$0;
 $_sroa_1_4_extract_trunc_i62=$_sroa_1_4_extract_trunc_i62$0;
 $6=$_sroa_1_4_extract_trunc_i62;
 $7=($3|0)==($6|0);
 $8=$__first2;
 $ld$4$0=(($8)|0);
 $9$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($8+4)|0);
 $9$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $extract68$0=$9$1;
 $extract68$1=0;
 $extract_t69$0=$extract68$0;
 $extract_t69=$extract_t69$0;
 do {
  if ($7) {
   $_lcssa_off32=$extract_t69;
  } else {
   $10=$__last2;
   $11=(($__first2+4)|0);
   $12=(($__first2)|0);
   $13=(($__first1+4)|0);
   $14=(($__first1)|0);
   $15=(($__comp)|0);
   $16=((HEAP32[(($15)>>2)])|0);
   $17=(($__result+4)|0);
   $18=(($__result)|0);
   $extract$0=$9$1;
   $extract$1=0;
   $extract_t$0=$extract$0;
   $extract_t=$extract_t$0;
   $21=$3;$_sroa_1_4_extract_trunc_i63=$_sroa_1_4_extract_trunc_i62;$20=$6;$_off32=$extract_t;
   while(1) {




    $22=$_off32;
    $ld$6$0=(($10)|0);
    $23$0=((HEAP32[(($ld$6$0)>>2)])|0);
    $ld$7$1=(($10+4)|0);
    $23$1=((HEAP32[(($ld$7$1)>>2)])|0);
    $_sroa_1_4_extract_shift_i18$0=$23$1;
    $_sroa_1_4_extract_shift_i18$1=0;
    $_sroa_1_4_extract_trunc_i19$0=$_sroa_1_4_extract_shift_i18$0;
    $_sroa_1_4_extract_trunc_i19=$_sroa_1_4_extract_trunc_i19$0;
    $24=$_sroa_1_4_extract_trunc_i19;
    $25=($22|0)==($24|0);
    if ($25) {
     break;
    }
    $48=((HEAP32[(($11)>>2)])|0);
    $49=((($48)-(60))|0);
    HEAP32[(($12)>>2)]=$49;
    $50=((HEAP32[(($13)>>2)])|0);
    $51=((($50)-(60))|0);
    HEAP32[(($14)>>2)]=$51;
    $52=((HEAP32[(($16)>>2)])|0);
    $53=((FUNCTION_TABLE_iii[($52)&63]($49,$51))|0);
    $54=((HEAP32[(($17)>>2)])|0);
    $55=((($54)-(60))|0);
    HEAP32[(($18)>>2)]=$55;
    if ($53) {
     $64=((HEAP32[(($13)>>2)])|0);
     $65=((($64)-(60))|0);
     HEAP32[(($14)>>2)]=$65;
     $66=$55;
     $67=$65;
     (_memcpy((($66)|0), (($67)|0), 60)|0);
     $68=((HEAP32[(($13)>>2)])|0);
     $69=((($68)-(60))|0);
     HEAP32[(($13)>>2)]=$69;
    } else {
     $57=((HEAP32[(($11)>>2)])|0);
     $58=((($57)-(60))|0);
     HEAP32[(($12)>>2)]=$58;
     $59=$55;
     $60=$58;
     (_memcpy((($59)|0), (($60)|0), 60)|0);
     $61=((HEAP32[(($11)>>2)])|0);
     $62=((($61)-(60))|0);
     HEAP32[(($11)>>2)]=$62;
    }
    $71=((HEAP32[(($17)>>2)])|0);
    $72=((($71)-(60))|0);
    HEAP32[(($17)>>2)]=$72;
    $ld$12$0=(($1)|0);
    $73$0=((HEAP32[(($ld$12$0)>>2)])|0);
    $ld$13$1=(($1+4)|0);
    $73$1=((HEAP32[(($ld$13$1)>>2)])|0);
    $_sroa_13_4_extract_shift_i$0=$73$1;
    $_sroa_13_4_extract_shift_i$1=0;
    $_sroa_13_4_extract_trunc_i$0=$_sroa_13_4_extract_shift_i$0;
    $_sroa_13_4_extract_trunc_i=$_sroa_13_4_extract_trunc_i$0;
    $74=$_sroa_13_4_extract_trunc_i;
    $ld$14$0=(($4)|0);
    $75$0=((HEAP32[(($ld$14$0)>>2)])|0);
    $ld$15$1=(($4+4)|0);
    $75$1=((HEAP32[(($ld$15$1)>>2)])|0);
    $_sroa_1_4_extract_shift_i$0=$75$1;
    $_sroa_1_4_extract_shift_i$1=0;
    $_sroa_1_4_extract_trunc_i$0=$_sroa_1_4_extract_shift_i$0;
    $_sroa_1_4_extract_trunc_i=$_sroa_1_4_extract_trunc_i$0;
    $76=$_sroa_1_4_extract_trunc_i;
    $77=($74|0)==($76|0);
    $ld$16$0=(($8)|0);
    $78$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($8+4)|0);
    $78$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $extract64$0=$78$1;
    $extract64$1=0;
    $extract_t65$0=$extract64$0;
    $extract_t65=$extract_t65$0;
    if ($77) {
     label = 13;
     break;
    } else {
     $21=$74;$_sroa_1_4_extract_trunc_i63=$_sroa_1_4_extract_trunc_i;$20=$76;$_off32=$extract_t65;
    }
   }
   if ((label|0) == 13) {
    $extract66$0=$78$1;
    $extract66$1=0;
    $extract_t67$0=$extract66$0;
    $extract_t67=$extract_t67$0;
    $_lcssa_off32=$extract_t67;
    break;
   }
   $27=$__result;
   $ld$8$0=(($27)|0);
   $28$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($27+4)|0);
   $28$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $_sroa_035_0_extract_trunc_i30$0=$28$0;
   $_sroa_035_0_extract_trunc_i30=$_sroa_035_0_extract_trunc_i30$0;
   $29=$_sroa_035_0_extract_trunc_i30;
   $_sroa_136_4_extract_shift_i31$0=$28$1;
   $_sroa_136_4_extract_shift_i31$1=0;
   $_sroa_136_4_extract_trunc_i32$0=$_sroa_136_4_extract_shift_i31$0;
   $_sroa_136_4_extract_trunc_i32=$_sroa_136_4_extract_trunc_i32$0;
   $30=$_sroa_136_4_extract_trunc_i32;
   $31=($21|0)==($20|0);
   if ($31) {
    $43=$29;$42=$30;
   } else {
    $scevgep_i37=((($21)-(60))|0);
    $scevgep38_i38=$scevgep_i37;
    $32=(((-$_sroa_1_4_extract_trunc_i63))|0);
    $uglygep_i39=(($scevgep38_i38+$32)|0);
    $uglygep39_i40=$uglygep_i39;
    $33=(((($uglygep39_i40>>>0))/(60))&-1);
    $35=$30;$34=$21;
    while(1) {


     $36=((($35)-(60))|0);
     $37=((($34)-(60))|0);
     $38=$36;
     $39=$37;
     (_memcpy((($38)|0), (($39)|0), 60)|0);
     $40=($37|0)==($20|0);
     if ($40) {
      break;
     } else {
      $35=$36;$34=$37;
     }
    }
    $41=$33^-1;
    $scevgep40_i43=(($30+((($41)*(60))&-1))|0);
    $43=$scevgep40_i43;$42=$scevgep40_i43;
   }


   $44=$agg_result;
   $45=$43;
   $46=$42;
   $_sroa_136_4_insert_ext_i45$0=$46;
   $_sroa_136_4_insert_ext_i45$1=0;
   $_sroa_136_4_insert_shift_i46$0=0;
   $_sroa_136_4_insert_shift_i46$1=$_sroa_136_4_insert_ext_i45$0;
   $_sroa_035_0_insert_ext_i47$0=$45;
   $_sroa_035_0_insert_ext_i47$1=0;
   $_sroa_035_0_insert_insert_i48$0=$_sroa_136_4_insert_shift_i46$0|$_sroa_035_0_insert_ext_i47$0;
   $_sroa_035_0_insert_insert_i48$1=$_sroa_136_4_insert_shift_i46$1|$_sroa_035_0_insert_ext_i47$1;
   $st$10$0=(($44)|0);
   HEAP32[(($st$10$0)>>2)]=$_sroa_035_0_insert_insert_i48$0;
   $st$11$1=(($44+4)|0);
   HEAP32[(($st$11$1)>>2)]=$_sroa_035_0_insert_insert_i48$1;
   STACKTOP=sp;return;
  }
 } while(0);

 $80=$__last2;
 $ld$18$0=(($80)|0);
 $81$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($80+4)|0);
 $81$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $82=$__result;
 $ld$20$0=(($82)|0);
 $83$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($82+4)|0);
 $83$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $_sroa_035_0_extract_trunc_i$0=$83$0;
 $_sroa_035_0_extract_trunc_i=$_sroa_035_0_extract_trunc_i$0;
 $84=$_sroa_035_0_extract_trunc_i;
 $_sroa_136_4_extract_shift_i$0=$83$1;
 $_sroa_136_4_extract_shift_i$1=0;
 $_sroa_136_4_extract_trunc_i$0=$_sroa_136_4_extract_shift_i$0;
 $_sroa_136_4_extract_trunc_i=$_sroa_136_4_extract_trunc_i$0;
 $85=$_sroa_136_4_extract_trunc_i;
 $86=$_lcssa_off32;
 $_sroa_1_4_extract_shift_i3_i_i$0=$81$1;
 $_sroa_1_4_extract_shift_i3_i_i$1=0;
 $_sroa_1_4_extract_trunc_i4_i_i$0=$_sroa_1_4_extract_shift_i3_i_i$0;
 $_sroa_1_4_extract_trunc_i4_i_i=$_sroa_1_4_extract_trunc_i4_i_i$0;
 $87=$_sroa_1_4_extract_trunc_i4_i_i;
 $88=($86|0)==($87|0);
 if ($88) {
  $100=$84;$99=$85;
 } else {
  $scevgep_i=((($86)-(60))|0);
  $scevgep38_i=$scevgep_i;
  $89=(((-$_sroa_1_4_extract_trunc_i4_i_i))|0);
  $uglygep_i=(($scevgep38_i+$89)|0);
  $uglygep39_i=$uglygep_i;
  $90=(((($uglygep39_i>>>0))/(60))&-1);
  $92=$85;$91=$86;
  while(1) {


   $93=((($92)-(60))|0);
   $94=((($91)-(60))|0);
   $95=$93;
   $96=$94;
   (_memcpy((($95)|0), (($96)|0), 60)|0);
   $97=($94|0)==($87|0);
   if ($97) {
    break;
   } else {
    $92=$93;$91=$94;
   }
  }
  $98=$90^-1;
  $scevgep40_i=(($85+((($98)*(60))&-1))|0);
  $100=$scevgep40_i;$99=$scevgep40_i;
 }


 $101=$agg_result;
 $102=$100;
 $103=$99;
 $_sroa_136_4_insert_ext_i$0=$103;
 $_sroa_136_4_insert_ext_i$1=0;
 $_sroa_136_4_insert_shift_i$0=0;
 $_sroa_136_4_insert_shift_i$1=$_sroa_136_4_insert_ext_i$0;
 $_sroa_035_0_insert_ext_i$0=$102;
 $_sroa_035_0_insert_ext_i$1=0;
 $_sroa_035_0_insert_insert_i$0=$_sroa_136_4_insert_shift_i$0|$_sroa_035_0_insert_ext_i$0;
 $_sroa_035_0_insert_insert_i$1=$_sroa_136_4_insert_shift_i$1|$_sroa_035_0_insert_ext_i$1;
 $st$22$0=(($101)|0);
 HEAP32[(($st$22$0)>>2)]=$_sroa_035_0_insert_insert_i$0;
 $st$23$1=(($101+4)|0);
 HEAP32[(($st$23$1)>>2)]=$_sroa_035_0_insert_insert_i$1;
 STACKTOP=sp;return;
}


function __ZNSt3__121__insertion_sort_moveIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_EEvT0_S9_PNS_15iterator_traitsIS9_E10value_typeET_($__first1,$__last1,$__first2,$__comp){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__comp=($__comp)|0;
 var $1=0,$3=0,$5=0,$6=0,$__first2_pn_ph=0,$7=0,$8=0,$9=0,$__first2_pn_ph_pn=0,$__last2_032=0,$10=0,$11=0,$12=0,$15=0,$16=0,$17=0,$__i2_028=0,$18=0,$19=0,$20=0;
 var $22=0,$23=0,$24=0,$__j2_0_lcssa=0,$25=0,$26=0,$__first2_pn_be=0,$27=0,$28=0,$31=0,$32=0,label=0;

 $1=($__first1|0)==($__last1|0);
 if ($1) {
  return;
 }
 $3=($__first2|0)==0;
 if ($3) {
  $__first2_pn_ph=0;
 } else {
  $5=$__first2;
  $6=$__first1;
  (_memcpy((($5)|0), (($6)|0), 60)|0);
  $__first2_pn_ph=$__first2;
 }

 $7=(($__first1+60)|0);
 $8=($7|0)==($__last1|0);
 if ($8) {
  return;
 } else {
  $__first2_pn_ph_pn=$__first2_pn_ph;$9=$7;
 }
 while(1) {


  $__last2_032=(($__first2_pn_ph_pn+60)|0);
  $10=((HEAP32[(($__comp)>>2)])|0);
  $11=((FUNCTION_TABLE_iii[($10)&63]($9,$__first2_pn_ph_pn))|0);
  $12=($__last2_032|0)==0;
  do {
   if ($11) {
    if (!($12)) {
     $15=$__last2_032;
     $16=$__first2_pn_ph_pn;
     (_memcpy((($15)|0), (($16)|0), 60)|0);
    }
    $17=($__first2_pn_ph_pn|0)==($__first2|0);
    L16: do {
     if ($17) {
      $__j2_0_lcssa=$__first2_pn_ph_pn;
     } else {
      $__i2_028=$__first2_pn_ph_pn;
      while(1) {

       $18=((HEAP32[(($__comp)>>2)])|0);
       $19=((($__i2_028)-(60))|0);
       $20=((FUNCTION_TABLE_iii[($18)&63]($9,$19))|0);
       if (!($20)) {
        $__j2_0_lcssa=$__i2_028;
        break L16;
       }
       $22=$__i2_028;
       $23=$19;
       (_memcpy((($22)|0), (($23)|0), 60)|0);
       $24=($19|0)==($__first2|0);
       if ($24) {
        $__j2_0_lcssa=$19;
        break;
       } else {
        $__i2_028=$19;
       }
      }
     }
    } while(0);

    $25=$__j2_0_lcssa;
    $26=$9;
    (_memcpy((($25)|0), (($26)|0), 60)|0);
    $__first2_pn_be=$__last2_032;
   } else {
    if ($12) {
     $__first2_pn_be=0;
     break;
    }
    $31=$__last2_032;
    $32=$9;
    (_memcpy((($31)|0), (($32)|0), 60)|0);
    $__first2_pn_be=$__last2_032;
   }
  } while(0);

  $27=(($9+60)|0);
  $28=($27|0)==($__last1|0);
  if ($28) {
   break;
  } else {
   $__first2_pn_ph_pn=$__first2_pn_be;$9=$27;
  }
 }
 return;
}


function __ZNSt3__122__merge_move_constructIRPFbRKN16b2ParticleSystem5TriadES4_EPS2_S8_EEvT0_S9_T1_SA_PNS_15iterator_traitsIS9_E10value_typeET_($__first1,$__last1,$__first2,$__last2,$__result,$__comp){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__last2=($__last2)|0;
 $__result=($__result)|0;
 $__comp=($__comp)|0;
 var $1=0,$_028_lcssa=0,$_031_lcssa=0,$2=0,$_12936=0,$_13235=0,$3=0,$5=0,$6=0,$8=0,$9=0,$10=0,$_047=0,$_02846=0,$_03145=0,$11=0,$12=0,$_140=0,$_23339=0,$13=0;
 var $15=0,$16=0,$18=0,$19=0,$20=0,$22=0,$23=0,$24=0,$27=0,$28=0,$30=0,$33=0,$34=0,$36=0,$_230=0,$_2=0,$38=0,$39=0,label=0;

 $1=($__first1|0)==($__last1|0);
 L1: do {
  if ($1) {
   $_031_lcssa=$__result;$_028_lcssa=$__first2;
  } else {
   $_03145=$__result;$_02846=$__first2;$_047=$__first1;
   while(1) {



    $11=($_02846|0)==($__last2|0);
    if ($11) {
     break;
    }
    $22=((HEAP32[(($__comp)>>2)])|0);
    $23=((FUNCTION_TABLE_iii[($22)&63]($_02846,$_047))|0);
    $24=($_03145|0)==0;
    if ($23) {
     if (!($24)) {
      $27=$_03145;
      $28=$_02846;
      (_memcpy((($27)|0), (($28)|0), 60)|0);
     }
     $30=(($_02846+60)|0);
     $_2=$_047;$_230=$30;
    } else {
     if (!($24)) {
      $33=$_03145;
      $34=$_047;
      (_memcpy((($33)|0), (($34)|0), 60)|0);
     }
     $36=(($_047+60)|0);
     $_2=$36;$_230=$_02846;
    }


    $38=(($_03145+60)|0);
    $39=($_2|0)==($__last1|0);
    if ($39) {
     $_031_lcssa=$38;$_028_lcssa=$_230;
     break L1;
    } else {
     $_03145=$38;$_02846=$_230;$_047=$_2;
    }
   }
   $12=($_047|0)==($__last1|0);
   if ($12) {
    return;
   } else {
    $_23339=$_03145;$_140=$_047;
   }
   while(1) {


    $13=($_23339|0)==0;
    if (!($13)) {
     $15=$_23339;
     $16=$_140;
     (_memcpy((($15)|0), (($16)|0), 60)|0);
    }
    $18=(($_140+60)|0);
    $19=(($_23339+60)|0);
    $20=($18|0)==($__last1|0);
    if ($20) {
     break;
    } else {
     $_23339=$19;$_140=$18;
    }
   }
   return;
  }
 } while(0);


 $2=($_028_lcssa|0)==($__last2|0);
 if ($2) {
  return;
 } else {
  $_13235=$_031_lcssa;$_12936=$_028_lcssa;
 }
 while(1) {


  $3=($_13235|0)==0;
  if (!($3)) {
   $5=$_13235;
   $6=$_12936;
   (_memcpy((($5)|0), (($6)|0), 60)|0);
  }
  $8=(($_12936+60)|0);
  $9=(($_13235+60)|0);
  $10=($8|0)==($__last2|0);
  if ($10) {
   break;
  } else {
   $_13235=$9;$_12936=$8;
  }
 }
 return;
}


function __ZNSt3__120get_temporary_bufferIN16b2ParticleSystem4PairEEENS_4pairIPT_iEEi($agg_result,$__n){
 $agg_result=($agg_result)|0;
 $__n=($__n)|0;
 var $1=0,$2=0,$3=0,$___n=0,$4=0,$_07=0,$5=0,$6=0,$7=0,$8=0,$11=0,$12=0,label=0;

 $1=(($agg_result)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($agg_result+4)|0);
 HEAP32[(($2)>>2)]=0;
 $3=($__n|0)>107374182;
 $___n=($3?107374182:$__n);
 $4=($___n|0)>0;
 if ($4) {
  $_07=$___n;
 } else {
  return;
 }
 while(1) {

  $5=((($_07)*(20))&-1);
  $6=((__ZnwjRKSt9nothrow_t($5,8752))|0);
  $7=$6;
  $8=($6|0)==0;
  if (!($8)) {
   label = 3;
   break;
  }
  $11=(((($_07|0))/(2))&-1);
  $12=($_07|0)>1;
  if ($12) {
   $_07=$11;
  } else {
   label = 5;
   break;
  }
 }
 if ((label|0) == 3) {
  HEAP32[(($1)>>2)]=$7;
  HEAP32[(($2)>>2)]=$_07;
  return;
 }
 else if ((label|0) == 5) {
  HEAP32[(($1)>>2)]=$7;
  return;
 }
}


function __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($__first,$__last,$__comp,$__len,$__buff,$__buff_size){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 $__len=($__len)|0;
 $__buff=($__buff)|0;
 $__buff_size=($__buff_size)|0;
 var $__t_i=0,$2=0,$3=0,$4=0,$__t_i_0_cast61=0,$$etemp$0$0=0,$$etemp$0$1=0,$6=0,$7=0,$$etemp$1$0=0,$$etemp$1$1=0,$9=0,$12=0,$13=0,$14=0,$16=0,$17=0,$18=0,$20=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $__t_i=((sp)|0);
 if (((($__len|0))|0)==((2)|0)) {
  $2=((HEAP32[(($__comp)>>2)])|0);
  $3=((($__last)-(20))|0);
  $4=((FUNCTION_TABLE_iii[($2)&63]($3,$__first))|0);
  if (!($4)) {
   STACKTOP=sp;return;
  }
  $__t_i_0_cast61=$__t_i;
  $$etemp$0$0=20;
  $$etemp$0$1=0;

  $6=$__first;
  HEAP32[(($__t_i_0_cast61)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($__t_i_0_cast61)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast61)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);HEAP32[((($__t_i_0_cast61)+(12))>>2)]=((HEAP32[((($6)+(12))>>2)])|0);HEAP32[((($__t_i_0_cast61)+(16))>>2)]=((HEAP32[((($6)+(16))>>2)])|0);
  $7=$3;
  HEAP32[(($6)>>2)]=((HEAP32[(($7)>>2)])|0);HEAP32[((($6)+(4))>>2)]=((HEAP32[((($7)+(4))>>2)])|0);HEAP32[((($6)+(8))>>2)]=((HEAP32[((($7)+(8))>>2)])|0);HEAP32[((($6)+(12))>>2)]=((HEAP32[((($7)+(12))>>2)])|0);HEAP32[((($6)+(16))>>2)]=((HEAP32[((($7)+(16))>>2)])|0);
  HEAP32[(($7)>>2)]=((HEAP32[(($__t_i_0_cast61)>>2)])|0);HEAP32[((($7)+(4))>>2)]=((HEAP32[((($__t_i_0_cast61)+(4))>>2)])|0);HEAP32[((($7)+(8))>>2)]=((HEAP32[((($__t_i_0_cast61)+(8))>>2)])|0);HEAP32[((($7)+(12))>>2)]=((HEAP32[((($__t_i_0_cast61)+(12))>>2)])|0);HEAP32[((($7)+(16))>>2)]=((HEAP32[((($__t_i_0_cast61)+(16))>>2)])|0);
  $$etemp$1$0=20;
  $$etemp$1$1=0;

  STACKTOP=sp;return;
 } else if (((($__len|0))|0)==((0)|0)|((($__len|0))|0)==((1)|0)) {
  STACKTOP=sp;return;
 } else {
  $9=($__len|0)<129;
  if ($9) {
   __ZNSt3__116__insertion_sortIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_($__first,$__last,$__comp);
   STACKTOP=sp;return;
  }
  $12=(((($__len|0))/(2))&-1);
  $13=(($__first+((($12)*(20))&-1))|0);
  $14=($__len|0)>($__buff_size|0);
  if ($14) {
   __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($__first,$13,$__comp,$12,$__buff,$__buff_size);
   $20=((($__len)-($12))|0);
   __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($13,$__last,$__comp,$20,$__buff,$__buff_size);
   __ZNSt3__115__inplace_mergeIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEi($__first,$13,$__last,$__comp,$12,$20,$__buff,$__buff_size);
   STACKTOP=sp;return;
  } else {
   __ZNSt3__118__stable_sort_moveIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE($__first,$13,$__comp,$12,$__buff);
   $16=((($__len)-($12))|0);
   $17=(($__buff+((($12)*(20))&-1))|0);
   __ZNSt3__118__stable_sort_moveIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE($13,$__last,$__comp,$16,$17);
   $18=(($__buff+((($__len)*(20))&-1))|0);
   __ZNSt3__119__merge_move_assignIRPFbRKN16b2ParticleSystem4PairES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_($__buff,$17,$17,$18,$__first,$__comp);
   STACKTOP=sp;return;
  }
 }
}


function __ZNSt3__116__insertion_sortIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$1=0,$__i_016=0,$2=0,$3=0,$__i_017=0,$5=0,$6=0,$__k_015=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$__j_0_lcssa=0,$14=0,$__i_0=0,$15=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $__t=((sp)|0);
 $1=($__first|0)==($__last|0);
 if ($1) {
  STACKTOP=sp;return;
 }
 $__i_016=(($__first+20)|0);
 $2=($__i_016|0)==($__last|0);
 if ($2) {
  STACKTOP=sp;return;
 }
 $3=$__t;
 $__i_017=$__i_016;
 while(1) {

  $5=$__i_017;
  HEAP32[(($3)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($3)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($3)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);HEAP32[((($3)+(12))>>2)]=((HEAP32[((($5)+(12))>>2)])|0);HEAP32[((($3)+(16))>>2)]=((HEAP32[((($5)+(16))>>2)])|0);
  $6=($__i_017|0)==($__first|0);
  L9: do {
   if ($6) {
    $__j_0_lcssa=$__i_017;
   } else {
    $__k_015=$__i_017;
    while(1) {

     $7=((HEAP32[(($__comp)>>2)])|0);
     $8=((($__k_015)-(20))|0);
     $9=((FUNCTION_TABLE_iii[($7)&63]($__t,$8))|0);
     if (!($9)) {
      $__j_0_lcssa=$__k_015;
      break L9;
     }
     $11=$__k_015;
     $12=$8;
     HEAP32[(($11)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($11)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($11)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);HEAP32[((($11)+(12))>>2)]=((HEAP32[((($12)+(12))>>2)])|0);HEAP32[((($11)+(16))>>2)]=((HEAP32[((($12)+(16))>>2)])|0);
     $13=($8|0)==($__first|0);
     if ($13) {
      $__j_0_lcssa=$8;
      break;
     } else {
      $__k_015=$8;
     }
    }
   }
  } while(0);

  $14=$__j_0_lcssa;
  HEAP32[(($14)>>2)]=((HEAP32[(($3)>>2)])|0);HEAP32[((($14)+(4))>>2)]=((HEAP32[((($3)+(4))>>2)])|0);HEAP32[((($14)+(8))>>2)]=((HEAP32[((($3)+(8))>>2)])|0);HEAP32[((($14)+(12))>>2)]=((HEAP32[((($3)+(12))>>2)])|0);HEAP32[((($14)+(16))>>2)]=((HEAP32[((($3)+(16))>>2)])|0);
  $__i_0=(($__i_017+20)|0);
  $15=($__i_0|0)==($__last|0);
  if ($15) {
   break;
  } else {
   $__i_017=$__i_0;
  }
 }
 STACKTOP=sp;return;
}


function __ZNSt3__118__stable_sort_moveIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE($__first1,$__last1,$__comp,$__len,$__first2){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__comp=($__comp)|0;
 $__len=($__len)|0;
 $__first2=($__first2)|0;
 var $2=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$13=0,$14=0,$16=0,$17=0,$19=0,$20=0,$23=0,$24=0,$26=0,$27=0,$29=0,$30=0,$32=0;
 var $35=0,$36=0,$37=0,$38=0,label=0;

 if (((($__len|0))|0)==((2)|0)) {
  $7=((HEAP32[(($__comp)>>2)])|0);
  $8=((($__last1)-(20))|0);
  $9=((FUNCTION_TABLE_iii[($7)&63]($8,$__first1))|0);
  $10=($__first2|0)==0;
  if ($9) {
   if (!($10)) {
    $13=$__first2;
    $14=$8;
    HEAP32[(($13)>>2)]=((HEAP32[(($14)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($14)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($14)+(8))>>2)])|0);HEAP32[((($13)+(12))>>2)]=((HEAP32[((($14)+(12))>>2)])|0);HEAP32[((($13)+(16))>>2)]=((HEAP32[((($14)+(16))>>2)])|0);
   }
   $16=(($__first2+20)|0);
   $17=($16|0)==0;
   if ($17) {
    return;
   }
   $19=$16;
   $20=$__first1;
   HEAP32[(($19)>>2)]=((HEAP32[(($20)>>2)])|0);HEAP32[((($19)+(4))>>2)]=((HEAP32[((($20)+(4))>>2)])|0);HEAP32[((($19)+(8))>>2)]=((HEAP32[((($20)+(8))>>2)])|0);HEAP32[((($19)+(12))>>2)]=((HEAP32[((($20)+(12))>>2)])|0);HEAP32[((($19)+(16))>>2)]=((HEAP32[((($20)+(16))>>2)])|0);
   return;
  } else {
   if (!($10)) {
    $23=$__first2;
    $24=$__first1;
    HEAP32[(($23)>>2)]=((HEAP32[(($24)>>2)])|0);HEAP32[((($23)+(4))>>2)]=((HEAP32[((($24)+(4))>>2)])|0);HEAP32[((($23)+(8))>>2)]=((HEAP32[((($24)+(8))>>2)])|0);HEAP32[((($23)+(12))>>2)]=((HEAP32[((($24)+(12))>>2)])|0);HEAP32[((($23)+(16))>>2)]=((HEAP32[((($24)+(16))>>2)])|0);
   }
   $26=(($__first2+20)|0);
   $27=($26|0)==0;
   if ($27) {
    return;
   }
   $29=$26;
   $30=$8;
   HEAP32[(($29)>>2)]=((HEAP32[(($30)>>2)])|0);HEAP32[((($29)+(4))>>2)]=((HEAP32[((($30)+(4))>>2)])|0);HEAP32[((($29)+(8))>>2)]=((HEAP32[((($30)+(8))>>2)])|0);HEAP32[((($29)+(12))>>2)]=((HEAP32[((($30)+(12))>>2)])|0);HEAP32[((($29)+(16))>>2)]=((HEAP32[((($30)+(16))>>2)])|0);
   return;
  }
 } else if (((($__len|0))|0)==((1)|0)) {
  $2=($__first2|0)==0;
  if ($2) {
   return;
  }
  $4=$__first2;
  $5=$__first1;
  HEAP32[(($4)>>2)]=((HEAP32[(($5)>>2)])|0);HEAP32[((($4)+(4))>>2)]=((HEAP32[((($5)+(4))>>2)])|0);HEAP32[((($4)+(8))>>2)]=((HEAP32[((($5)+(8))>>2)])|0);HEAP32[((($4)+(12))>>2)]=((HEAP32[((($5)+(12))>>2)])|0);HEAP32[((($4)+(16))>>2)]=((HEAP32[((($5)+(16))>>2)])|0);
  return;
 } else if (((($__len|0))|0)==((0)|0)) {
  return;
 } else {
  $32=($__len|0)<9;
  if ($32) {
   __ZNSt3__121__insertion_sort_moveIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_PNS_15iterator_traitsIS9_E10value_typeET_($__first1,$__last1,$__first2,$__comp);
   return;
  } else {
   $35=(((($__len|0))/(2))&-1);
   $36=(($__first1+((($35)*(20))&-1))|0);
   __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($__first1,$36,$__comp,$35,$__first2,$35);
   $37=((($__len)-($35))|0);
   $38=(($__first2+((($35)*(20))&-1))|0);
   __ZNSt3__113__stable_sortIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEi($36,$__last1,$__comp,$37,$38,$37);
   __ZNSt3__122__merge_move_constructIRPFbRKN16b2ParticleSystem4PairES4_EPS2_S8_EEvT0_S9_T1_SA_PNS_15iterator_traitsIS9_E10value_typeET_($__first1,$36,$36,$__last1,$__first2,$__comp);
   return;
  }
 }
}


function __ZNSt3__119__merge_move_assignIRPFbRKN16b2ParticleSystem4PairES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_($__first1,$__last1,$__first2,$__last2,$__result,$__comp){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__last2=($__last2)|0;
 $__result=($__result)|0;
 $__comp=($__comp)|0;
 var $1=0,$_025_lcssa=0,$_028_lcssa=0,$2=0,$_043=0,$_02542=0,$_02841=0,$3=0,$4=0,$_136=0,$_12635=0,$5=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$15=0;
 var $16=0,$18=0,$19=0,$_129=0,$_2=0,$21=0,$22=0,$_22732=0,$_23031=0,$23=0,$24=0,$25=0,$26=0,$27=0,label=0;

 $1=($__first1|0)==($__last1|0);
 L1: do {
  if ($1) {
   $_028_lcssa=$__first2;$_025_lcssa=$__result;
  } else {
   $_02841=$__first2;$_02542=$__result;$_043=$__first1;
   while(1) {



    $3=($_02841|0)==($__last2|0);
    if ($3) {
     break;
    }
    $11=((HEAP32[(($__comp)>>2)])|0);
    $12=((FUNCTION_TABLE_iii[($11)&63]($_02841,$_043))|0);
    $13=$_02542;
    if ($12) {
     $15=$_02841;
     HEAP32[(($13)>>2)]=((HEAP32[(($15)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($15)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($15)+(8))>>2)])|0);HEAP32[((($13)+(12))>>2)]=((HEAP32[((($15)+(12))>>2)])|0);HEAP32[((($13)+(16))>>2)]=((HEAP32[((($15)+(16))>>2)])|0);
     $16=(($_02841+20)|0);
     $_2=$_043;$_129=$16;
    } else {
     $18=$_043;
     HEAP32[(($13)>>2)]=((HEAP32[(($18)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($18)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($18)+(8))>>2)])|0);HEAP32[((($13)+(12))>>2)]=((HEAP32[((($18)+(12))>>2)])|0);HEAP32[((($13)+(16))>>2)]=((HEAP32[((($18)+(16))>>2)])|0);
     $19=(($_043+20)|0);
     $_2=$19;$_129=$_02841;
    }


    $21=(($_02542+20)|0);
    $22=($_2|0)==($__last1|0);
    if ($22) {
     $_028_lcssa=$_129;$_025_lcssa=$21;
     break L1;
    } else {
     $_02841=$_129;$_02542=$21;$_043=$_2;
    }
   }
   $4=($_043|0)==($__last1|0);
   if ($4) {
    return;
   } else {
    $_12635=$_02542;$_136=$_043;
   }
   while(1) {


    $5=$_12635;
    $6=$_136;
    HEAP32[(($5)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);HEAP32[((($5)+(12))>>2)]=((HEAP32[((($6)+(12))>>2)])|0);HEAP32[((($5)+(16))>>2)]=((HEAP32[((($6)+(16))>>2)])|0);
    $7=(($_136+20)|0);
    $8=(($_12635+20)|0);
    $9=($7|0)==($__last1|0);
    if ($9) {
     break;
    } else {
     $_12635=$8;$_136=$7;
    }
   }
   return;
  }
 } while(0);


 $2=($_028_lcssa|0)==($__last2|0);
 if ($2) {
  return;
 } else {
  $_23031=$_028_lcssa;$_22732=$_025_lcssa;
 }
 while(1) {


  $23=$_22732;
  $24=$_23031;
  HEAP32[(($23)>>2)]=((HEAP32[(($24)>>2)])|0);HEAP32[((($23)+(4))>>2)]=((HEAP32[((($24)+(4))>>2)])|0);HEAP32[((($23)+(8))>>2)]=((HEAP32[((($24)+(8))>>2)])|0);HEAP32[((($23)+(12))>>2)]=((HEAP32[((($24)+(12))>>2)])|0);HEAP32[((($23)+(16))>>2)]=((HEAP32[((($24)+(16))>>2)])|0);
  $25=(($_23031+20)|0);
  $26=(($_22732+20)|0);
  $27=($25|0)==($__last2|0);
  if ($27) {
   break;
  } else {
   $_23031=$25;$_22732=$26;
  }
 }
 return;
}


function __ZNSt3__115__inplace_mergeIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEi($__first,$__middle,$__last,$__comp,$__len1,$__len2,$__buff,$__buff_size){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 $__len1=($__len1)|0;
 $__len2=($__len2)|0;
 $__buff=($__buff)|0;
 $__buff_size=($__buff_size)|0;
 var $__t_i=0,$1=0,$_0_ph111=0,$_062_ph110=0,$_063_ph109=0,$_064_ph108=0,$_066_ph107=0,$_0101=0,$_062100=0,$_06499=0,$_06698=0,$2=0,$_180=0,$_16579=0,$3=0,$4=0,$6=0,$7=0,$8=0,$10=0;
 var $11=0,$or_cond=0,$14=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$24=0,$__t_i_0_cast75=0,$$etemp$0$0=0,$$etemp$0$1=0,$26=0,$27=0,$$etemp$1$0=0,$$etemp$1$1=0,$29=0,$30=0;
 var $31=0,$32=0,$33=0,$34=0,$35=0,$37=0,$_06276=0,$__len11_0=0,$__len21_0=0,$38=0,$39=0,$40=0,$42=0,$44=0,$45=0,$47=0,$49=0,$50=0,$52=0,$54=0;
 var $_0_i=0,$55=0,$56=0,$57=0,$59=0,$60=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $__t_i=((sp)|0);
 $1=($__len2|0)==0;
 if ($1) {
  STACKTOP=sp;return;
 } else {
  $_066_ph107=$__len2;$_064_ph108=$__len1;$_063_ph109=$__last;$_062_ph110=$__middle;$_0_ph111=$__first;
 }
 L3: while(1) {





  $_06698=$_066_ph107;$_06499=$_064_ph108;$_062100=$_062_ph110;$_0101=$_0_ph111;
  while(1) {




   $2=($_06499|0)==0;
   if ($2) {
    label = 23;
    break L3;
   } else {
    $_16579=$_06499;$_180=$_0101;
   }
   while(1) {


    $3=((HEAP32[(($__comp)>>2)])|0);
    $4=((FUNCTION_TABLE_iii[($3)&63]($_062100,$_180))|0);
    if ($4) {
     break;
    }
    $6=(($_180+20)|0);
    $7=((($_16579)-(1))|0);
    $8=($7|0)==0;
    if ($8) {
     label = 23;
     break L3;
    } else {
     $_16579=$7;$_180=$6;
    }
   }
   $10=($_16579|0)>($__buff_size|0);
   $11=($_06698|0)>($__buff_size|0);
   $or_cond=$10&$11;
   if (!($or_cond)) {
    label = 7;
    break L3;
   }
   $14=($_16579|0)<($_06698|0);
   if ($14) {
    $16=(((($_06698|0))/(2))&-1);
    $17=(($_062100+((($16)*(20))&-1))|0);
    $18=((__ZNSt3__113__upper_boundIRPFbRKN16b2ParticleSystem4PairES4_EPS2_S2_EET0_S9_S9_RKT1_T_($_180,$_062100,$17,$__comp))|0);
    $19=$18;
    $20=$_180;
    $21=((($19)-($20))|0);
    $22=(((($21|0))/(20))&-1);
    $__len21_0=$16;$__len11_0=$22;$_06276=$17;$37=$18;
   } else {
    $24=($_16579|0)==1;
    if ($24) {
     label = 11;
     break L3;
    }
    $29=(((($_16579|0))/(2))&-1);
    $30=(($_180+((($29)*(20))&-1))|0);
    $31=((__ZNSt3__113__lower_boundIRPFbRKN16b2ParticleSystem4PairES4_EPS2_S2_EET0_S9_S9_RKT1_T_($_062100,$_063_ph109,$30,$__comp))|0);
    $32=$31;
    $33=$_062100;
    $34=((($32)-($33))|0);
    $35=(((($34|0))/(20))&-1);
    $__len21_0=$35;$__len11_0=$29;$_06276=$31;$37=$30;
   }




   $38=((($_16579)-($__len11_0))|0);
   $39=((($_06698)-($__len21_0))|0);
   $40=($37|0)==($_062100|0);
   do {
    if ($40) {
     $_0_i=$_06276;
    } else {
     $42=($_062100|0)==($_06276|0);
     if ($42) {
      $_0_i=$37;
      break;
     }
     $44=(($37+20)|0);
     $45=($44|0)==($_062100|0);
     if ($45) {
      $47=((__ZNSt3__113__rotate_leftIPN16b2ParticleSystem4PairEEET_S4_S4_($37,$_06276))|0);
      $_0_i=$47;
      break;
     }
     $49=(($_062100+20)|0);
     $50=($49|0)==($_06276|0);
     if ($50) {
      $52=((__ZNSt3__114__rotate_rightIPN16b2ParticleSystem4PairEEET_S4_S4_($37,$_06276))|0);
      $_0_i=$52;
      break;
     } else {
      $54=((__ZNSt3__112__rotate_gcdIPN16b2ParticleSystem4PairEEET_S4_S4_S4_($37,$_062100,$_06276))|0);
      $_0_i=$54;
      break;
     }
    }
   } while(0);

   $55=((($__len21_0)+($__len11_0))|0);
   $56=((($39)+($38))|0);
   $57=($55|0)<($56|0);
   if (!($57)) {
    break;
   }
   __ZNSt3__115__inplace_mergeIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEi($_180,$37,$_0_i,$__comp,$__len11_0,$__len21_0,$__buff,$__buff_size);
   $59=($_06698|0)==($__len21_0|0);
   if ($59) {
    label = 23;
    break L3;
   } else {
    $_06698=$39;$_06499=$38;$_062100=$_06276;$_0101=$_0_i;
   }
  }
  __ZNSt3__115__inplace_mergeIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEi($_0_i,$_06276,$_063_ph109,$__comp,$38,$39,$__buff,$__buff_size);
  $60=($__len21_0|0)==0;
  if ($60) {
   label = 23;
   break;
  } else {
   $_066_ph107=$__len21_0;$_064_ph108=$__len11_0;$_063_ph109=$_0_i;$_062_ph110=$37;$_0_ph111=$_180;
  }
 }
 if ((label|0) == 7) {
  __ZNSt3__124__buffered_inplace_mergeIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeE($_180,$_062100,$_063_ph109,$__comp,$_16579,$_06698,$__buff);
  STACKTOP=sp;return;
 }
 else if ((label|0) == 11) {
  $__t_i_0_cast75=$__t_i;
  $$etemp$0$0=20;
  $$etemp$0$1=0;

  $26=$_180;
  HEAP32[(($__t_i_0_cast75)>>2)]=((HEAP32[(($26)>>2)])|0);HEAP32[((($__t_i_0_cast75)+(4))>>2)]=((HEAP32[((($26)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast75)+(8))>>2)]=((HEAP32[((($26)+(8))>>2)])|0);HEAP32[((($__t_i_0_cast75)+(12))>>2)]=((HEAP32[((($26)+(12))>>2)])|0);HEAP32[((($__t_i_0_cast75)+(16))>>2)]=((HEAP32[((($26)+(16))>>2)])|0);
  $27=$_062100;
  HEAP32[(($26)>>2)]=((HEAP32[(($27)>>2)])|0);HEAP32[((($26)+(4))>>2)]=((HEAP32[((($27)+(4))>>2)])|0);HEAP32[((($26)+(8))>>2)]=((HEAP32[((($27)+(8))>>2)])|0);HEAP32[((($26)+(12))>>2)]=((HEAP32[((($27)+(12))>>2)])|0);HEAP32[((($26)+(16))>>2)]=((HEAP32[((($27)+(16))>>2)])|0);
  HEAP32[(($27)>>2)]=((HEAP32[(($__t_i_0_cast75)>>2)])|0);HEAP32[((($27)+(4))>>2)]=((HEAP32[((($__t_i_0_cast75)+(4))>>2)])|0);HEAP32[((($27)+(8))>>2)]=((HEAP32[((($__t_i_0_cast75)+(8))>>2)])|0);HEAP32[((($27)+(12))>>2)]=((HEAP32[((($__t_i_0_cast75)+(12))>>2)])|0);HEAP32[((($27)+(16))>>2)]=((HEAP32[((($__t_i_0_cast75)+(16))>>2)])|0);
  $$etemp$1$0=20;
  $$etemp$1$1=0;

  STACKTOP=sp;return;
 }
 else if ((label|0) == 23) {
  STACKTOP=sp;return;
 }
}


function __ZNSt3__124__buffered_inplace_mergeIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeE($__first,$__middle,$__last,$__comp,$__len1,$__len2,$__buff){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 $__len1=($__len1)|0;
 $__len2=($__len2)|0;
 $__buff=($__buff)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$tmpcast=0,$8=0,$tmpcast59=0,$9=0,$tmpcast60=0,$10=0,$tmpcast61=0,$11=0,$12=0,$13=0,$14=0,$15=0,$scevgep73=0;
 var $scevgep7374=0,$16=0,$uglygep75=0,$uglygep7576=0,$17=0,$18=0,$19=0,$scevgep=0,$scevgep70=0,$20=0,$uglygep=0,$uglygep71=0,$21=0,$22=0,$__p_066=0,$__i_065=0,$24=0,$26=0,$27=0,$29=0;
 var $30=0,$31=0,$scevgep77=0,$__p_0_lcssa=0,$33=0,$34=0,$35=0,$36=0,$37=0,$__i2_063=0,$__p1_062=0,$39=0,$41=0,$42=0,$44=0,$45=0,$46=0,$scevgep72=0,$__p1_0_lcssa=0,$_sroa_158_4_insert_ext$0=0;
 var $_sroa_158_4_insert_ext$1=0,$_sroa_158_4_insert_shift$0=0,$_sroa_158_4_insert_shift$1=0,$_sroa_057_0_insert_insert$0=0,$_sroa_057_0_insert_insert$1=0,$st$0$0=0,$st$1$1=0,$_sroa_156_4_insert_ext$0=0,$_sroa_156_4_insert_ext$1=0,$_sroa_156_4_insert_shift$0=0,$_sroa_156_4_insert_shift$1=0,$_sroa_055_0_insert_insert$0=0,$_sroa_055_0_insert_insert$1=0,$st$2$0=0,$st$3$1=0,$48=0,$_sroa_154_4_insert_ext$0=0,$_sroa_154_4_insert_ext$1=0,$_sroa_154_4_insert_shift$0=0,$_sroa_154_4_insert_shift$1=0;
 var $_sroa_053_0_insert_insert$0=0,$_sroa_053_0_insert_insert$1=0,$st$4$0=0,$st$5$1=0,$49=0,$_sroa_152_4_insert_ext$0=0,$_sroa_152_4_insert_ext$1=0,$_sroa_152_4_insert_shift$0=0,$_sroa_152_4_insert_shift$1=0,$_sroa_051_0_insert_insert$0=0,$_sroa_051_0_insert_insert$1=0,$st$6$0=0,$st$7$1=0,$50=0,$51=0,$52=0,label=0;
 var sp=0;sp=STACKTOP;
 $1=$__first;
 $2=$__middle;
 $3=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $4=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $5=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $6=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast59=$8;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast60=$9;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast61=$10;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=($__len1|0)>($__len2|0);
 if ($14) {
  $19=($__middle|0)==($__last|0);
  if ($19) {
   $__p1_0_lcssa=$__buff;
  } else {
   $scevgep=((($__last)-(20))|0);
   $scevgep70=$scevgep;
   $20=(((-$2))|0);
   $uglygep=(($scevgep70+$20)|0);
   $uglygep71=$uglygep;
   $21=(((($uglygep71>>>0))/(20))&-1);
   $22=((($21)+(1))|0);
   $__p1_062=$__buff;$__i2_063=$__middle;
   while(1) {


    $39=($__p1_062|0)==0;
    if (!($39)) {
     $41=$__p1_062;
     $42=$__i2_063;
     HEAP32[(($41)>>2)]=((HEAP32[(($42)>>2)])|0);HEAP32[((($41)+(4))>>2)]=((HEAP32[((($42)+(4))>>2)])|0);HEAP32[((($41)+(8))>>2)]=((HEAP32[((($42)+(8))>>2)])|0);HEAP32[((($41)+(12))>>2)]=((HEAP32[((($42)+(12))>>2)])|0);HEAP32[((($41)+(16))>>2)]=((HEAP32[((($42)+(16))>>2)])|0);
    }
    $44=(($__i2_063+20)|0);
    $45=(($__p1_062+20)|0);
    $46=($44|0)==($__last|0);
    if ($46) {
     break;
    } else {
     $__p1_062=$45;$__i2_063=$44;
    }
   }
   $scevgep72=(($__buff+((($22)*(20))&-1))|0);
   $__p1_0_lcssa=$scevgep72;
  }

  $_sroa_158_4_insert_ext$0=$2;
  $_sroa_158_4_insert_ext$1=0;
  $_sroa_158_4_insert_shift$0=0;
  $_sroa_158_4_insert_shift$1=$_sroa_158_4_insert_ext$0;
  $_sroa_057_0_insert_insert$0=$_sroa_158_4_insert_shift$0|$_sroa_158_4_insert_ext$0;
  $_sroa_057_0_insert_insert$1=$_sroa_158_4_insert_shift$1|$_sroa_158_4_insert_ext$1;
  $st$0$0=(($7)|0);
  HEAP32[(($st$0$0)>>2)]=$_sroa_057_0_insert_insert$0;
  $st$1$1=(($7+4)|0);
  HEAP32[(($st$1$1)>>2)]=$_sroa_057_0_insert_insert$1;
  $_sroa_156_4_insert_ext$0=$1;
  $_sroa_156_4_insert_ext$1=0;
  $_sroa_156_4_insert_shift$0=0;
  $_sroa_156_4_insert_shift$1=$_sroa_156_4_insert_ext$0;
  $_sroa_055_0_insert_insert$0=$_sroa_156_4_insert_shift$0|$_sroa_156_4_insert_ext$0;
  $_sroa_055_0_insert_insert$1=$_sroa_156_4_insert_shift$1|$_sroa_156_4_insert_ext$1;
  $st$2$0=(($8)|0);
  HEAP32[(($st$2$0)>>2)]=$_sroa_055_0_insert_insert$0;
  $st$3$1=(($8+4)|0);
  HEAP32[(($st$3$1)>>2)]=$_sroa_055_0_insert_insert$1;
  $48=$__p1_0_lcssa;
  $_sroa_154_4_insert_ext$0=$48;
  $_sroa_154_4_insert_ext$1=0;
  $_sroa_154_4_insert_shift$0=0;
  $_sroa_154_4_insert_shift$1=$_sroa_154_4_insert_ext$0;
  $_sroa_053_0_insert_insert$0=$_sroa_154_4_insert_shift$0|$_sroa_154_4_insert_ext$0;
  $_sroa_053_0_insert_insert$1=$_sroa_154_4_insert_shift$1|$_sroa_154_4_insert_ext$1;
  $st$4$0=(($9)|0);
  HEAP32[(($st$4$0)>>2)]=$_sroa_053_0_insert_insert$0;
  $st$5$1=(($9+4)|0);
  HEAP32[(($st$5$1)>>2)]=$_sroa_053_0_insert_insert$1;
  $49=$__buff;
  $_sroa_152_4_insert_ext$0=$49;
  $_sroa_152_4_insert_ext$1=0;
  $_sroa_152_4_insert_shift$0=0;
  $_sroa_152_4_insert_shift$1=$_sroa_152_4_insert_ext$0;
  $_sroa_051_0_insert_insert$0=$_sroa_152_4_insert_shift$0|$_sroa_152_4_insert_ext$0;
  $_sroa_051_0_insert_insert$1=$_sroa_152_4_insert_shift$1|$_sroa_152_4_insert_ext$1;
  $st$6$0=(($10)|0);
  HEAP32[(($st$6$0)>>2)]=$_sroa_051_0_insert_insert$0;
  $st$7$1=(($10+4)|0);
  HEAP32[(($st$7$1)>>2)]=$_sroa_051_0_insert_insert$1;
  $50=(($11)|0);
  HEAP32[(($50)>>2)]=$__last;
  $51=(($11+4)|0);
  HEAP32[(($51)>>2)]=$__last;
  $52=(($12)|0);
  HEAP32[(($52)>>2)]=$__comp;
  __ZNSt3__17__mergeINS_8__negateIRPFbRKN16b2ParticleSystem4PairES5_EEENS_13move_iteratorINS_16reverse_iteratorIPS3_EEEESE_SD_EET2_T0_SG_T1_SH_SF_T_($13,$tmpcast,$tmpcast59,$tmpcast60,$tmpcast61,$11,$12);
  STACKTOP=sp;return;
 } else {
  $15=($__first|0)==($__middle|0);
  if ($15) {
   $__p_0_lcssa=$__buff;
  } else {
   $scevgep73=((($__middle)-(20))|0);
   $scevgep7374=$scevgep73;
   $16=(((-$1))|0);
   $uglygep75=(($scevgep7374+$16)|0);
   $uglygep7576=$uglygep75;
   $17=(((($uglygep7576>>>0))/(20))&-1);
   $18=((($17)+(1))|0);
   $__i_065=$__first;$__p_066=$__buff;
   while(1) {


    $24=($__p_066|0)==0;
    if (!($24)) {
     $26=$__p_066;
     $27=$__i_065;
     HEAP32[(($26)>>2)]=((HEAP32[(($27)>>2)])|0);HEAP32[((($26)+(4))>>2)]=((HEAP32[((($27)+(4))>>2)])|0);HEAP32[((($26)+(8))>>2)]=((HEAP32[((($27)+(8))>>2)])|0);HEAP32[((($26)+(12))>>2)]=((HEAP32[((($27)+(12))>>2)])|0);HEAP32[((($26)+(16))>>2)]=((HEAP32[((($27)+(16))>>2)])|0);
    }
    $29=(($__i_065+20)|0);
    $30=(($__p_066+20)|0);
    $31=($29|0)==($__middle|0);
    if ($31) {
     break;
    } else {
     $__i_065=$29;$__p_066=$30;
    }
   }
   $scevgep77=(($__buff+((($18)*(20))&-1))|0);
   $__p_0_lcssa=$scevgep77;
  }

  $33=(($3)|0);
  HEAP32[(($33)>>2)]=$__buff;
  $34=(($4)|0);
  HEAP32[(($34)>>2)]=$__p_0_lcssa;
  $35=(($5)|0);
  HEAP32[(($35)>>2)]=$__middle;
  $36=(($6)|0);
  HEAP32[(($36)>>2)]=$__last;
  $37=((__ZNSt3__17__mergeIRPFbRKN16b2ParticleSystem4PairES4_ENS_13move_iteratorIPS2_EESA_S9_EET2_T0_SC_T1_SD_SB_T_($3,$4,$5,$6,$__first,$__comp))|0);
  STACKTOP=sp;return;
 }
}


function __ZNSt3__113__upper_boundIRPFbRKN16b2ParticleSystem4PairES4_EPS2_S2_EET0_S9_S9_RKT1_T_($__first,$__last,$__value_,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__value_=($__value_)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$__len_0_ph=0,$_0_ph=0,$__len_0=0,$6=0,$8=0,$9=0,$10=0,$11=0,$_sum=0,$13=0,$_neg12=0,$14=0,label=0;

 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=(((($3|0))/(20))&-1);
 $_0_ph=$__first;$__len_0_ph=$4;
 L1: while(1) {


  $__len_0=$__len_0_ph;
  while(1) {

   $6=($__len_0|0)==0;
   if ($6) {
    break L1;
   }
   $8=(((($__len_0|0))/(2))&-1);
   $9=(($_0_ph+((($8)*(20))&-1))|0);
   $10=((HEAP32[(($__comp)>>2)])|0);
   $11=((FUNCTION_TABLE_iii[($10)&63]($__value_,$9))|0);
   if ($11) {
    $__len_0=$8;
   } else {
    break;
   }
  }
  $_sum=((($8)+(1))|0);
  $13=(($_0_ph+((($_sum)*(20))&-1))|0);
  $_neg12=((($__len_0)-(1))|0);
  $14=((($_neg12)-($8))|0);
  $_0_ph=$13;$__len_0_ph=$14;
 }
 return (($_0_ph)|0);
}


function __ZNSt3__113__lower_boundIRPFbRKN16b2ParticleSystem4PairES4_EPS2_S2_EET0_S9_S9_RKT1_T_($__first,$__last,$__value_,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__value_=($__value_)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$__len_0_ph=0,$_0_ph=0,$__len_0=0,$6=0,$8=0,$9=0,$10=0,$11=0,$_sum=0,$13=0,$_neg12=0,$14=0,label=0;

 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=(((($3|0))/(20))&-1);
 $_0_ph=$__first;$__len_0_ph=$4;
 L1: while(1) {


  $__len_0=$__len_0_ph;
  while(1) {

   $6=($__len_0|0)==0;
   if ($6) {
    break L1;
   }
   $8=(((($__len_0|0))/(2))&-1);
   $9=(($_0_ph+((($8)*(20))&-1))|0);
   $10=((HEAP32[(($__comp)>>2)])|0);
   $11=((FUNCTION_TABLE_iii[($10)&63]($9,$__value_))|0);
   if ($11) {
    break;
   } else {
    $__len_0=$8;
   }
  }
  $_sum=((($8)+(1))|0);
  $13=(($_0_ph+((($_sum)*(20))&-1))|0);
  $_neg12=((($__len_0)-(1))|0);
  $14=((($_neg12)-($8))|0);
  $_0_ph=$13;$__len_0_ph=$14;
 }
 return (($_0_ph)|0);
}


function __ZNSt3__113__rotate_leftIPN16b2ParticleSystem4PairEEET_S4_S4_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $__tmp=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $__tmp=((sp)|0);
 $1=$__tmp;
 $2=$__first;
 HEAP32[(($1)>>2)]=((HEAP32[(($2)>>2)])|0);HEAP32[((($1)+(4))>>2)]=((HEAP32[((($2)+(4))>>2)])|0);HEAP32[((($1)+(8))>>2)]=((HEAP32[((($2)+(8))>>2)])|0);HEAP32[((($1)+(12))>>2)]=((HEAP32[((($2)+(12))>>2)])|0);HEAP32[((($1)+(16))>>2)]=((HEAP32[((($2)+(16))>>2)])|0);
 $3=(($__first+20)|0);
 $4=$__last;
 $5=$3;
 $6=((($4)-($5))|0);
 $7=(((($6|0))/(20))&-1);
 $8=$3;
 ((_memmove((($2)|0),(($8)|0),(($6)|0)))|0);
 $9=(($__first+((($7)*(20))&-1))|0);
 $10=$9;
 HEAP32[(($10)>>2)]=((HEAP32[(($1)>>2)])|0);HEAP32[((($10)+(4))>>2)]=((HEAP32[((($1)+(4))>>2)])|0);HEAP32[((($10)+(8))>>2)]=((HEAP32[((($1)+(8))>>2)])|0);HEAP32[((($10)+(12))>>2)]=((HEAP32[((($1)+(12))>>2)])|0);HEAP32[((($10)+(16))>>2)]=((HEAP32[((($1)+(16))>>2)])|0);
 STACKTOP=sp;return (($9)|0);
}


function __ZNSt3__114__rotate_rightIPN16b2ParticleSystem4PairEEET_S4_S4_($__first,$__last){
 $__first=($__first)|0;
 $__last=($__last)|0;
 var $__tmp=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $__tmp=((sp)|0);
 $1=((($__last)-(20))|0);
 $2=$__tmp;
 $3=$1;
 HEAP32[(($2)>>2)]=((HEAP32[(($3)>>2)])|0);HEAP32[((($2)+(4))>>2)]=((HEAP32[((($3)+(4))>>2)])|0);HEAP32[((($2)+(8))>>2)]=((HEAP32[((($3)+(8))>>2)])|0);HEAP32[((($2)+(12))>>2)]=((HEAP32[((($3)+(12))>>2)])|0);HEAP32[((($2)+(16))>>2)]=((HEAP32[((($3)+(16))>>2)])|0);
 $4=$1;
 $5=$__first;
 $6=((($4)-($5))|0);
 $7=(((($6|0))/(-20))&-1);
 $8=(($__last+((($7)*(20))&-1))|0);
 $9=$8;
 $10=$__first;
 ((_memmove((($9)|0),(($10)|0),(($6)|0)))|0);
 HEAP32[(($10)>>2)]=((HEAP32[(($2)>>2)])|0);HEAP32[((($10)+(4))>>2)]=((HEAP32[((($2)+(4))>>2)])|0);HEAP32[((($10)+(8))>>2)]=((HEAP32[((($2)+(8))>>2)])|0);HEAP32[((($10)+(12))>>2)]=((HEAP32[((($2)+(12))>>2)])|0);HEAP32[((($10)+(16))>>2)]=((HEAP32[((($2)+(16))>>2)])|0);
 STACKTOP=sp;return (($8)|0);
}


function __ZNSt3__112__rotate_gcdIPN16b2ParticleSystem4PairEEET_S4_S4_S4_($__first,$__middle,$__last){
 $__first=($__first)|0;
 $__middle=($__middle)|0;
 $__last=($__last)|0;
 var $__t_i_i=0,$__t=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$__t_i_0_cast8_i=0,$_010_i=0,$_079_i=0,$$etemp$0$0=0,$$etemp$0$1=0,$12=0,$13=0,$$etemp$1$0=0,$$etemp$1$1=0;
 var $14=0,$15=0,$16=0,$_05_i=0,$_0_i=0,$17=0,$18=0,$19=0,$20=0,$21=0,$_sum=0,$__p_032=0,$23=0,$24=0,$25=0,$__p1_0=0,$__p2_0=0,$27=0,$28=0,$29=0;
 var $30=0,$31=0,$32=0,$34=0,$36=0,$37=0,$__p2_1=0,$39=0,$41=0,$42=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $__t_i_i=((sp)|0);
 $__t=(((sp)+(24))|0);
 $1=$__middle;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=(((($3|0))/(20))&-1);
 $5=$__last;
 $6=((($5)-($1))|0);
 $7=(((($6|0))/(20))&-1);
 $8=($4|0)==($7|0);
 if ($8) {
  $10=($__first|0)==($__middle|0);
  if ($10) {
   $_0=$__middle;

   STACKTOP=sp;return (($_0)|0);
  }
  $__t_i_0_cast8_i=$__t_i_i;
  $_079_i=$__first;$_010_i=$__middle;
  while(1) {


   $$etemp$0$0=20;
   $$etemp$0$1=0;

   $12=$_079_i;
   HEAP32[(($__t_i_0_cast8_i)>>2)]=((HEAP32[(($12)>>2)])|0);HEAP32[((($__t_i_0_cast8_i)+(4))>>2)]=((HEAP32[((($12)+(4))>>2)])|0);HEAP32[((($__t_i_0_cast8_i)+(8))>>2)]=((HEAP32[((($12)+(8))>>2)])|0);HEAP32[((($__t_i_0_cast8_i)+(12))>>2)]=((HEAP32[((($12)+(12))>>2)])|0);HEAP32[((($__t_i_0_cast8_i)+(16))>>2)]=((HEAP32[((($12)+(16))>>2)])|0);
   $13=$_010_i;
   HEAP32[(($12)>>2)]=((HEAP32[(($13)>>2)])|0);HEAP32[((($12)+(4))>>2)]=((HEAP32[((($13)+(4))>>2)])|0);HEAP32[((($12)+(8))>>2)]=((HEAP32[((($13)+(8))>>2)])|0);HEAP32[((($12)+(12))>>2)]=((HEAP32[((($13)+(12))>>2)])|0);HEAP32[((($12)+(16))>>2)]=((HEAP32[((($13)+(16))>>2)])|0);
   HEAP32[(($13)>>2)]=((HEAP32[(($__t_i_0_cast8_i)>>2)])|0);HEAP32[((($13)+(4))>>2)]=((HEAP32[((($__t_i_0_cast8_i)+(4))>>2)])|0);HEAP32[((($13)+(8))>>2)]=((HEAP32[((($__t_i_0_cast8_i)+(8))>>2)])|0);HEAP32[((($13)+(12))>>2)]=((HEAP32[((($__t_i_0_cast8_i)+(12))>>2)])|0);HEAP32[((($13)+(16))>>2)]=((HEAP32[((($__t_i_0_cast8_i)+(16))>>2)])|0);
   $$etemp$1$0=20;
   $$etemp$1$1=0;

   $14=(($_079_i+20)|0);
   $15=(($_010_i+20)|0);
   $16=($14|0)==($__middle|0);
   if ($16) {
    $_0=$__middle;
    break;
   } else {
    $_079_i=$14;$_010_i=$15;
   }
  }

  STACKTOP=sp;return (($_0)|0);
 } else {
  $_0_i=$4;$_05_i=$7;
 }
 while(1) {


  $17=(((($_0_i|0))%(($_05_i|0)))&-1);
  $18=($17|0)==0;
  if ($18) {
   break;
  } else {
   $_0_i=$_05_i;$_05_i=$17;
  }
 }
 $19=($_05_i|0)==0;
 if (!($19)) {
  $20=(($__first+((($_05_i)*(20))&-1))|0);
  $21=$__t;
  $_sum=((($4)-(1))|0);
  $__p_032=$20;
  while(1) {

   $23=((($__p_032)-(20))|0);
   $24=$23;
   HEAP32[(($21)>>2)]=((HEAP32[(($24)>>2)])|0);HEAP32[((($21)+(4))>>2)]=((HEAP32[((($24)+(4))>>2)])|0);HEAP32[((($21)+(8))>>2)]=((HEAP32[((($24)+(8))>>2)])|0);HEAP32[((($21)+(12))>>2)]=((HEAP32[((($24)+(12))>>2)])|0);HEAP32[((($21)+(16))>>2)]=((HEAP32[((($24)+(16))>>2)])|0);
   $25=(($__p_032+((($_sum)*(20))&-1))|0);
   $__p2_0=$25;$__p1_0=$23;
   while(1) {


    $27=$__p1_0;
    $28=$__p2_0;
    HEAP32[(($27)>>2)]=((HEAP32[(($28)>>2)])|0);HEAP32[((($27)+(4))>>2)]=((HEAP32[((($28)+(4))>>2)])|0);HEAP32[((($27)+(8))>>2)]=((HEAP32[((($28)+(8))>>2)])|0);HEAP32[((($27)+(12))>>2)]=((HEAP32[((($28)+(12))>>2)])|0);HEAP32[((($27)+(16))>>2)]=((HEAP32[((($28)+(16))>>2)])|0);
    $29=$__p2_0;
    $30=((($5)-($29))|0);
    $31=(((($30|0))/(20))&-1);
    $32=($4|0)<($31|0);
    if ($32) {
     $34=(($__p2_0+((($4)*(20))&-1))|0);
     $__p2_1=$34;
    } else {
     $36=((($4)-($31))|0);
     $37=(($__first+((($36)*(20))&-1))|0);
     $__p2_1=$37;
    }

    $39=($__p2_1|0)==($23|0);
    if ($39) {
     break;
    } else {
     $__p1_0=$__p2_0;$__p2_0=$__p2_1;
    }
   }
   HEAP32[(($28)>>2)]=((HEAP32[(($21)>>2)])|0);HEAP32[((($28)+(4))>>2)]=((HEAP32[((($21)+(4))>>2)])|0);HEAP32[((($28)+(8))>>2)]=((HEAP32[((($21)+(8))>>2)])|0);HEAP32[((($28)+(12))>>2)]=((HEAP32[((($21)+(12))>>2)])|0);HEAP32[((($28)+(16))>>2)]=((HEAP32[((($21)+(16))>>2)])|0);
   $41=($23|0)==($__first|0);
   if ($41) {
    break;
   } else {
    $__p_032=$23;
   }
  }
 }
 $42=(($__first+((($7)*(20))&-1))|0);
 $_0=$42;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNSt3__17__mergeIRPFbRKN16b2ParticleSystem4PairES4_ENS_13move_iteratorIPS2_EESA_S9_EET2_T0_SC_T1_SD_SB_T_($__first1,$__last1,$__first2,$__last2,$__result,$__comp){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__last2=($__last2)|0;
 $__result=($__result)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$_0628=0,$17=0,$19=0,$20=0,$21=0;
 var $22=0,$23=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$34=0,$35=0,$36=0,$37=0,$38=0,$40=0,$41=0,$42=0,$43=0,$_lcssa26=0,$_lcssa=0;
 var $_06_lcssa=0,$44=0,$45=0,$46=0,$47=0,$48=0,$_0622=0,$_sink_in=0,$_sink=0,$50=0,label=0;
 var tempParam=0;
 var sp=0;sp=STACKTOP;
 tempParam = $__first1; $__first1=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__first1)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 tempParam = $__last1; $__last1=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__last1)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 tempParam = $__first2; $__first2=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__first2)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 tempParam = $__last2; $__last2=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__last2)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 $1=(($__first1)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($__last1)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2|0)==($4|0);
 $6=(($__first2)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($__last2)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 L1: do {
  if ($5) {
   $_06_lcssa=$__result;$_lcssa=$7;$_lcssa26=$9;
  } else {
   $10=((HEAP32[(($3)>>2)])|0);
   $11=((HEAP32[(($8)>>2)])|0);
   $_0628=$__result;$16=$2;$15=$4;$14=$7;$13=$9;
   while(1) {





    $17=($14|0)==($13|0);
    if ($17) {
     break;
    }
    $25=((HEAP32[(($__comp)>>2)])|0);
    $26=((FUNCTION_TABLE_iii[($25)&63]($14,$16))|0);
    if ($26) {
     $28=((HEAP32[(($6)>>2)])|0);
     $29=$_0628;
     $30=$28;
     HEAP32[(($29)>>2)]=((HEAP32[(($30)>>2)])|0);HEAP32[((($29)+(4))>>2)]=((HEAP32[((($30)+(4))>>2)])|0);HEAP32[((($29)+(8))>>2)]=((HEAP32[((($30)+(8))>>2)])|0);HEAP32[((($29)+(12))>>2)]=((HEAP32[((($30)+(12))>>2)])|0);HEAP32[((($29)+(16))>>2)]=((HEAP32[((($30)+(16))>>2)])|0);
     $31=((HEAP32[(($6)>>2)])|0);
     $32=(($31+20)|0);
     HEAP32[(($6)>>2)]=$32;
    } else {
     $34=((HEAP32[(($1)>>2)])|0);
     $35=$_0628;
     $36=$34;
     HEAP32[(($35)>>2)]=((HEAP32[(($36)>>2)])|0);HEAP32[((($35)+(4))>>2)]=((HEAP32[((($36)+(4))>>2)])|0);HEAP32[((($35)+(8))>>2)]=((HEAP32[((($36)+(8))>>2)])|0);HEAP32[((($35)+(12))>>2)]=((HEAP32[((($36)+(12))>>2)])|0);HEAP32[((($35)+(16))>>2)]=((HEAP32[((($36)+(16))>>2)])|0);
     $37=((HEAP32[(($1)>>2)])|0);
     $38=(($37+20)|0);
     HEAP32[(($1)>>2)]=$38;
    }
    $40=(($_0628+20)|0);
    $41=((HEAP32[(($1)>>2)])|0);
    $42=($41|0)==($10|0);
    $43=((HEAP32[(($6)>>2)])|0);
    if ($42) {
     $_06_lcssa=$40;$_lcssa=$43;$_lcssa26=$11;
     break L1;
    } else {
     $_0628=$40;$16=$41;$15=$10;$14=$43;$13=$11;
    }
   }
   $19=$15;
   $20=$16;
   $21=((($19)-($20))|0);
   $22=$_0628;
   $23=$16;
   ((_memmove((($22)|0),(($23)|0),(($21)|0)))|0);
   $_sink_in=$21;$_0622=$_0628;


   $_sink=(((($_sink_in|0))/(20))&-1);
   $50=(($_0622+((($_sink)*(20))&-1))|0);
   STACKTOP=sp;return (($50)|0);
  }
 } while(0);



 $44=$_lcssa26;
 $45=$_lcssa;
 $46=((($44)-($45))|0);
 $47=$_06_lcssa;
 $48=$_lcssa;
 ((_memmove((($47)|0),(($48)|0),(($46)|0)))|0);
 $_sink_in=$46;$_0622=$_06_lcssa;


 $_sink=(((($_sink_in|0))/(20))&-1);
 $50=(($_0622+((($_sink)*(20))&-1))|0);
 STACKTOP=sp;return (($50)|0);
}


function __ZNSt3__17__mergeINS_8__negateIRPFbRKN16b2ParticleSystem4PairES5_EEENS_13move_iteratorINS_16reverse_iteratorIPS3_EEEESE_SD_EET2_T0_SG_T1_SH_SF_T_($agg_result,$__first1,$__last1,$__first2,$__last2,$__result,$__comp){
 $agg_result=($agg_result)|0;
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__last2=($__last2)|0;
 $__result=($__result)|0;
 $__comp=($__comp)|0;
 var $1=0,$ld$0$0=0,$2$0=0,$ld$1$1=0,$2$1=0,$_sroa_13_4_extract_shift_i59$0=0,$_sroa_13_4_extract_shift_i59$1=0,$_sroa_13_4_extract_trunc_i60$0=0,$_sroa_13_4_extract_trunc_i60=0,$3=0,$4=0,$ld$2$0=0,$5$0=0,$ld$3$1=0,$5$1=0,$_sroa_1_4_extract_shift_i61$0=0,$_sroa_1_4_extract_shift_i61$1=0,$_sroa_1_4_extract_trunc_i62$0=0,$_sroa_1_4_extract_trunc_i62=0,$6=0;
 var $7=0,$8=0,$ld$4$0=0,$9$0=0,$ld$5$1=0,$9$1=0,$extract68$0=0,$extract68$1=0,$extract_t69$0=0,$extract_t69=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$extract$0=0;
 var $extract$1=0,$extract_t$0=0,$extract_t=0,$_off32=0,$20=0,$_sroa_1_4_extract_trunc_i63=0,$21=0,$22=0,$ld$6$0=0,$23$0=0,$ld$7$1=0,$23$1=0,$_sroa_1_4_extract_shift_i18$0=0,$_sroa_1_4_extract_shift_i18$1=0,$_sroa_1_4_extract_trunc_i19$0=0,$_sroa_1_4_extract_trunc_i19=0,$24=0,$25=0,$27=0,$ld$8$0=0;
 var $28$0=0,$ld$9$1=0,$28$1=0,$_sroa_035_0_extract_trunc_i30$0=0,$_sroa_035_0_extract_trunc_i30=0,$29=0,$_sroa_136_4_extract_shift_i31$0=0,$_sroa_136_4_extract_shift_i31$1=0,$_sroa_136_4_extract_trunc_i32$0=0,$_sroa_136_4_extract_trunc_i32=0,$30=0,$31=0,$scevgep_i37=0,$scevgep38_i38=0,$32=0,$uglygep_i39=0,$uglygep39_i40=0,$33=0,$34=0,$35=0;
 var $36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$scevgep40_i43=0,$42=0,$43=0,$44=0,$45=0,$46=0,$_sroa_136_4_insert_ext_i45$0=0,$_sroa_136_4_insert_ext_i45$1=0,$_sroa_136_4_insert_shift_i46$0=0,$_sroa_136_4_insert_shift_i46$1=0,$_sroa_035_0_insert_ext_i47$0=0,$_sroa_035_0_insert_ext_i47$1=0,$_sroa_035_0_insert_insert_i48$0=0,$_sroa_035_0_insert_insert_i48$1=0;
 var $st$10$0=0,$st$11$1=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$64=0,$65=0,$66=0,$67=0;
 var $68=0,$69=0,$71=0,$72=0,$ld$12$0=0,$73$0=0,$ld$13$1=0,$73$1=0,$_sroa_13_4_extract_shift_i$0=0,$_sroa_13_4_extract_shift_i$1=0,$_sroa_13_4_extract_trunc_i$0=0,$_sroa_13_4_extract_trunc_i=0,$74=0,$ld$14$0=0,$75$0=0,$ld$15$1=0,$75$1=0,$_sroa_1_4_extract_shift_i$0=0,$_sroa_1_4_extract_shift_i$1=0,$_sroa_1_4_extract_trunc_i$0=0;
 var $_sroa_1_4_extract_trunc_i=0,$76=0,$77=0,$ld$16$0=0,$78$0=0,$ld$17$1=0,$78$1=0,$extract64$0=0,$extract64$1=0,$extract_t65$0=0,$extract_t65=0,$extract66$0=0,$extract66$1=0,$extract_t67$0=0,$extract_t67=0,$_lcssa_off32=0,$80=0,$ld$18$0=0,$81$0=0,$ld$19$1=0;
 var $81$1=0,$82=0,$ld$20$0=0,$83$0=0,$ld$21$1=0,$83$1=0,$_sroa_035_0_extract_trunc_i$0=0,$_sroa_035_0_extract_trunc_i=0,$84=0,$_sroa_136_4_extract_shift_i$0=0,$_sroa_136_4_extract_shift_i$1=0,$_sroa_136_4_extract_trunc_i$0=0,$_sroa_136_4_extract_trunc_i=0,$85=0,$86=0,$_sroa_1_4_extract_shift_i3_i_i$0=0,$_sroa_1_4_extract_shift_i3_i_i$1=0,$_sroa_1_4_extract_trunc_i4_i_i$0=0,$_sroa_1_4_extract_trunc_i4_i_i=0,$87=0;
 var $88=0,$scevgep_i=0,$scevgep38_i=0,$89=0,$uglygep_i=0,$uglygep39_i=0,$90=0,$91=0,$92=0,$93=0,$94=0,$95=0,$96=0,$97=0,$98=0,$scevgep40_i=0,$99=0,$100=0,$101=0,$102=0;
 var $103=0,$_sroa_136_4_insert_ext_i$0=0,$_sroa_136_4_insert_ext_i$1=0,$_sroa_136_4_insert_shift_i$0=0,$_sroa_136_4_insert_shift_i$1=0,$_sroa_035_0_insert_ext_i$0=0,$_sroa_035_0_insert_ext_i$1=0,$_sroa_035_0_insert_insert_i$0=0,$_sroa_035_0_insert_insert_i$1=0,$st$22$0=0,$st$23$1=0,label=0;
 var tempParam=0;
 var sp=0;sp=STACKTOP;
 tempParam = $__first1; $__first1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__first1)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__first1)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__last1; $__last1=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__last1)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__last1)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__first2; $__first2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__first2)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__first2)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__last2; $__last2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__last2)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__last2)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__result; $__result=STACKTOP;STACKTOP = (STACKTOP + 8)|0;HEAP32[(($__result)>>2)]=((HEAP32[((tempParam)>>2)])|0);HEAP32[((($__result)+(4))>>2)]=((HEAP32[(((tempParam)+(4))>>2)])|0);
 tempParam = $__comp; $__comp=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);HEAP32[(($__comp)>>2)]=((HEAP32[((tempParam)>>2)])|0);
 $1=$__first1;
 $ld$0$0=(($1)|0);
 $2$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $2$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $_sroa_13_4_extract_shift_i59$0=$2$1;
 $_sroa_13_4_extract_shift_i59$1=0;
 $_sroa_13_4_extract_trunc_i60$0=$_sroa_13_4_extract_shift_i59$0;
 $_sroa_13_4_extract_trunc_i60=$_sroa_13_4_extract_trunc_i60$0;
 $3=$_sroa_13_4_extract_trunc_i60;
 $4=$__last1;
 $ld$2$0=(($4)|0);
 $5$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($4+4)|0);
 $5$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $_sroa_1_4_extract_shift_i61$0=$5$1;
 $_sroa_1_4_extract_shift_i61$1=0;
 $_sroa_1_4_extract_trunc_i62$0=$_sroa_1_4_extract_shift_i61$0;
 $_sroa_1_4_extract_trunc_i62=$_sroa_1_4_extract_trunc_i62$0;
 $6=$_sroa_1_4_extract_trunc_i62;
 $7=($3|0)==($6|0);
 $8=$__first2;
 $ld$4$0=(($8)|0);
 $9$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($8+4)|0);
 $9$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $extract68$0=$9$1;
 $extract68$1=0;
 $extract_t69$0=$extract68$0;
 $extract_t69=$extract_t69$0;
 do {
  if ($7) {
   $_lcssa_off32=$extract_t69;
  } else {
   $10=$__last2;
   $11=(($__first2+4)|0);
   $12=(($__first2)|0);
   $13=(($__first1+4)|0);
   $14=(($__first1)|0);
   $15=(($__comp)|0);
   $16=((HEAP32[(($15)>>2)])|0);
   $17=(($__result+4)|0);
   $18=(($__result)|0);
   $extract$0=$9$1;
   $extract$1=0;
   $extract_t$0=$extract$0;
   $extract_t=$extract_t$0;
   $21=$3;$_sroa_1_4_extract_trunc_i63=$_sroa_1_4_extract_trunc_i62;$20=$6;$_off32=$extract_t;
   while(1) {




    $22=$_off32;
    $ld$6$0=(($10)|0);
    $23$0=((HEAP32[(($ld$6$0)>>2)])|0);
    $ld$7$1=(($10+4)|0);
    $23$1=((HEAP32[(($ld$7$1)>>2)])|0);
    $_sroa_1_4_extract_shift_i18$0=$23$1;
    $_sroa_1_4_extract_shift_i18$1=0;
    $_sroa_1_4_extract_trunc_i19$0=$_sroa_1_4_extract_shift_i18$0;
    $_sroa_1_4_extract_trunc_i19=$_sroa_1_4_extract_trunc_i19$0;
    $24=$_sroa_1_4_extract_trunc_i19;
    $25=($22|0)==($24|0);
    if ($25) {
     break;
    }
    $48=((HEAP32[(($11)>>2)])|0);
    $49=((($48)-(20))|0);
    HEAP32[(($12)>>2)]=$49;
    $50=((HEAP32[(($13)>>2)])|0);
    $51=((($50)-(20))|0);
    HEAP32[(($14)>>2)]=$51;
    $52=((HEAP32[(($16)>>2)])|0);
    $53=((FUNCTION_TABLE_iii[($52)&63]($49,$51))|0);
    $54=((HEAP32[(($17)>>2)])|0);
    $55=((($54)-(20))|0);
    HEAP32[(($18)>>2)]=$55;
    if ($53) {
     $64=((HEAP32[(($13)>>2)])|0);
     $65=((($64)-(20))|0);
     HEAP32[(($14)>>2)]=$65;
     $66=$55;
     $67=$65;
     HEAP32[(($66)>>2)]=((HEAP32[(($67)>>2)])|0);HEAP32[((($66)+(4))>>2)]=((HEAP32[((($67)+(4))>>2)])|0);HEAP32[((($66)+(8))>>2)]=((HEAP32[((($67)+(8))>>2)])|0);HEAP32[((($66)+(12))>>2)]=((HEAP32[((($67)+(12))>>2)])|0);HEAP32[((($66)+(16))>>2)]=((HEAP32[((($67)+(16))>>2)])|0);
     $68=((HEAP32[(($13)>>2)])|0);
     $69=((($68)-(20))|0);
     HEAP32[(($13)>>2)]=$69;
    } else {
     $57=((HEAP32[(($11)>>2)])|0);
     $58=((($57)-(20))|0);
     HEAP32[(($12)>>2)]=$58;
     $59=$55;
     $60=$58;
     HEAP32[(($59)>>2)]=((HEAP32[(($60)>>2)])|0);HEAP32[((($59)+(4))>>2)]=((HEAP32[((($60)+(4))>>2)])|0);HEAP32[((($59)+(8))>>2)]=((HEAP32[((($60)+(8))>>2)])|0);HEAP32[((($59)+(12))>>2)]=((HEAP32[((($60)+(12))>>2)])|0);HEAP32[((($59)+(16))>>2)]=((HEAP32[((($60)+(16))>>2)])|0);
     $61=((HEAP32[(($11)>>2)])|0);
     $62=((($61)-(20))|0);
     HEAP32[(($11)>>2)]=$62;
    }
    $71=((HEAP32[(($17)>>2)])|0);
    $72=((($71)-(20))|0);
    HEAP32[(($17)>>2)]=$72;
    $ld$12$0=(($1)|0);
    $73$0=((HEAP32[(($ld$12$0)>>2)])|0);
    $ld$13$1=(($1+4)|0);
    $73$1=((HEAP32[(($ld$13$1)>>2)])|0);
    $_sroa_13_4_extract_shift_i$0=$73$1;
    $_sroa_13_4_extract_shift_i$1=0;
    $_sroa_13_4_extract_trunc_i$0=$_sroa_13_4_extract_shift_i$0;
    $_sroa_13_4_extract_trunc_i=$_sroa_13_4_extract_trunc_i$0;
    $74=$_sroa_13_4_extract_trunc_i;
    $ld$14$0=(($4)|0);
    $75$0=((HEAP32[(($ld$14$0)>>2)])|0);
    $ld$15$1=(($4+4)|0);
    $75$1=((HEAP32[(($ld$15$1)>>2)])|0);
    $_sroa_1_4_extract_shift_i$0=$75$1;
    $_sroa_1_4_extract_shift_i$1=0;
    $_sroa_1_4_extract_trunc_i$0=$_sroa_1_4_extract_shift_i$0;
    $_sroa_1_4_extract_trunc_i=$_sroa_1_4_extract_trunc_i$0;
    $76=$_sroa_1_4_extract_trunc_i;
    $77=($74|0)==($76|0);
    $ld$16$0=(($8)|0);
    $78$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($8+4)|0);
    $78$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $extract64$0=$78$1;
    $extract64$1=0;
    $extract_t65$0=$extract64$0;
    $extract_t65=$extract_t65$0;
    if ($77) {
     label = 13;
     break;
    } else {
     $21=$74;$_sroa_1_4_extract_trunc_i63=$_sroa_1_4_extract_trunc_i;$20=$76;$_off32=$extract_t65;
    }
   }
   if ((label|0) == 13) {
    $extract66$0=$78$1;
    $extract66$1=0;
    $extract_t67$0=$extract66$0;
    $extract_t67=$extract_t67$0;
    $_lcssa_off32=$extract_t67;
    break;
   }
   $27=$__result;
   $ld$8$0=(($27)|0);
   $28$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($27+4)|0);
   $28$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $_sroa_035_0_extract_trunc_i30$0=$28$0;
   $_sroa_035_0_extract_trunc_i30=$_sroa_035_0_extract_trunc_i30$0;
   $29=$_sroa_035_0_extract_trunc_i30;
   $_sroa_136_4_extract_shift_i31$0=$28$1;
   $_sroa_136_4_extract_shift_i31$1=0;
   $_sroa_136_4_extract_trunc_i32$0=$_sroa_136_4_extract_shift_i31$0;
   $_sroa_136_4_extract_trunc_i32=$_sroa_136_4_extract_trunc_i32$0;
   $30=$_sroa_136_4_extract_trunc_i32;
   $31=($21|0)==($20|0);
   if ($31) {
    $43=$29;$42=$30;
   } else {
    $scevgep_i37=((($21)-(20))|0);
    $scevgep38_i38=$scevgep_i37;
    $32=(((-$_sroa_1_4_extract_trunc_i63))|0);
    $uglygep_i39=(($scevgep38_i38+$32)|0);
    $uglygep39_i40=$uglygep_i39;
    $33=(((($uglygep39_i40>>>0))/(20))&-1);
    $35=$30;$34=$21;
    while(1) {


     $36=((($35)-(20))|0);
     $37=((($34)-(20))|0);
     $38=$36;
     $39=$37;
     HEAP32[(($38)>>2)]=((HEAP32[(($39)>>2)])|0);HEAP32[((($38)+(4))>>2)]=((HEAP32[((($39)+(4))>>2)])|0);HEAP32[((($38)+(8))>>2)]=((HEAP32[((($39)+(8))>>2)])|0);HEAP32[((($38)+(12))>>2)]=((HEAP32[((($39)+(12))>>2)])|0);HEAP32[((($38)+(16))>>2)]=((HEAP32[((($39)+(16))>>2)])|0);
     $40=($37|0)==($20|0);
     if ($40) {
      break;
     } else {
      $35=$36;$34=$37;
     }
    }
    $41=$33^-1;
    $scevgep40_i43=(($30+((($41)*(20))&-1))|0);
    $43=$scevgep40_i43;$42=$scevgep40_i43;
   }


   $44=$agg_result;
   $45=$43;
   $46=$42;
   $_sroa_136_4_insert_ext_i45$0=$46;
   $_sroa_136_4_insert_ext_i45$1=0;
   $_sroa_136_4_insert_shift_i46$0=0;
   $_sroa_136_4_insert_shift_i46$1=$_sroa_136_4_insert_ext_i45$0;
   $_sroa_035_0_insert_ext_i47$0=$45;
   $_sroa_035_0_insert_ext_i47$1=0;
   $_sroa_035_0_insert_insert_i48$0=$_sroa_136_4_insert_shift_i46$0|$_sroa_035_0_insert_ext_i47$0;
   $_sroa_035_0_insert_insert_i48$1=$_sroa_136_4_insert_shift_i46$1|$_sroa_035_0_insert_ext_i47$1;
   $st$10$0=(($44)|0);
   HEAP32[(($st$10$0)>>2)]=$_sroa_035_0_insert_insert_i48$0;
   $st$11$1=(($44+4)|0);
   HEAP32[(($st$11$1)>>2)]=$_sroa_035_0_insert_insert_i48$1;
   STACKTOP=sp;return;
  }
 } while(0);

 $80=$__last2;
 $ld$18$0=(($80)|0);
 $81$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($80+4)|0);
 $81$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $82=$__result;
 $ld$20$0=(($82)|0);
 $83$0=((HEAP32[(($ld$20$0)>>2)])|0);
 $ld$21$1=(($82+4)|0);
 $83$1=((HEAP32[(($ld$21$1)>>2)])|0);
 $_sroa_035_0_extract_trunc_i$0=$83$0;
 $_sroa_035_0_extract_trunc_i=$_sroa_035_0_extract_trunc_i$0;
 $84=$_sroa_035_0_extract_trunc_i;
 $_sroa_136_4_extract_shift_i$0=$83$1;
 $_sroa_136_4_extract_shift_i$1=0;
 $_sroa_136_4_extract_trunc_i$0=$_sroa_136_4_extract_shift_i$0;
 $_sroa_136_4_extract_trunc_i=$_sroa_136_4_extract_trunc_i$0;
 $85=$_sroa_136_4_extract_trunc_i;
 $86=$_lcssa_off32;
 $_sroa_1_4_extract_shift_i3_i_i$0=$81$1;
 $_sroa_1_4_extract_shift_i3_i_i$1=0;
 $_sroa_1_4_extract_trunc_i4_i_i$0=$_sroa_1_4_extract_shift_i3_i_i$0;
 $_sroa_1_4_extract_trunc_i4_i_i=$_sroa_1_4_extract_trunc_i4_i_i$0;
 $87=$_sroa_1_4_extract_trunc_i4_i_i;
 $88=($86|0)==($87|0);
 if ($88) {
  $100=$84;$99=$85;
 } else {
  $scevgep_i=((($86)-(20))|0);
  $scevgep38_i=$scevgep_i;
  $89=(((-$_sroa_1_4_extract_trunc_i4_i_i))|0);
  $uglygep_i=(($scevgep38_i+$89)|0);
  $uglygep39_i=$uglygep_i;
  $90=(((($uglygep39_i>>>0))/(20))&-1);
  $92=$85;$91=$86;
  while(1) {


   $93=((($92)-(20))|0);
   $94=((($91)-(20))|0);
   $95=$93;
   $96=$94;
   HEAP32[(($95)>>2)]=((HEAP32[(($96)>>2)])|0);HEAP32[((($95)+(4))>>2)]=((HEAP32[((($96)+(4))>>2)])|0);HEAP32[((($95)+(8))>>2)]=((HEAP32[((($96)+(8))>>2)])|0);HEAP32[((($95)+(12))>>2)]=((HEAP32[((($96)+(12))>>2)])|0);HEAP32[((($95)+(16))>>2)]=((HEAP32[((($96)+(16))>>2)])|0);
   $97=($94|0)==($87|0);
   if ($97) {
    break;
   } else {
    $92=$93;$91=$94;
   }
  }
  $98=$90^-1;
  $scevgep40_i=(($85+((($98)*(20))&-1))|0);
  $100=$scevgep40_i;$99=$scevgep40_i;
 }


 $101=$agg_result;
 $102=$100;
 $103=$99;
 $_sroa_136_4_insert_ext_i$0=$103;
 $_sroa_136_4_insert_ext_i$1=0;
 $_sroa_136_4_insert_shift_i$0=0;
 $_sroa_136_4_insert_shift_i$1=$_sroa_136_4_insert_ext_i$0;
 $_sroa_035_0_insert_ext_i$0=$102;
 $_sroa_035_0_insert_ext_i$1=0;
 $_sroa_035_0_insert_insert_i$0=$_sroa_136_4_insert_shift_i$0|$_sroa_035_0_insert_ext_i$0;
 $_sroa_035_0_insert_insert_i$1=$_sroa_136_4_insert_shift_i$1|$_sroa_035_0_insert_ext_i$1;
 $st$22$0=(($101)|0);
 HEAP32[(($st$22$0)>>2)]=$_sroa_035_0_insert_insert_i$0;
 $st$23$1=(($101+4)|0);
 HEAP32[(($st$23$1)>>2)]=$_sroa_035_0_insert_insert_i$1;
 STACKTOP=sp;return;
}


function __ZNSt3__121__insertion_sort_moveIRPFbRKN16b2ParticleSystem4PairES4_EPS2_EEvT0_S9_PNS_15iterator_traitsIS9_E10value_typeET_($__first1,$__last1,$__first2,$__comp){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__comp=($__comp)|0;
 var $1=0,$3=0,$5=0,$6=0,$__first2_pn_ph=0,$7=0,$8=0,$9=0,$__first2_pn_ph_pn=0,$__last2_032=0,$10=0,$11=0,$12=0,$15=0,$16=0,$17=0,$__i2_028=0,$18=0,$19=0,$20=0;
 var $22=0,$23=0,$24=0,$__j2_0_lcssa=0,$25=0,$26=0,$__first2_pn_be=0,$27=0,$28=0,$31=0,$32=0,label=0;

 $1=($__first1|0)==($__last1|0);
 if ($1) {
  return;
 }
 $3=($__first2|0)==0;
 if ($3) {
  $__first2_pn_ph=0;
 } else {
  $5=$__first2;
  $6=$__first1;
  HEAP32[(($5)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);HEAP32[((($5)+(12))>>2)]=((HEAP32[((($6)+(12))>>2)])|0);HEAP32[((($5)+(16))>>2)]=((HEAP32[((($6)+(16))>>2)])|0);
  $__first2_pn_ph=$__first2;
 }

 $7=(($__first1+20)|0);
 $8=($7|0)==($__last1|0);
 if ($8) {
  return;
 } else {
  $__first2_pn_ph_pn=$__first2_pn_ph;$9=$7;
 }
 while(1) {


  $__last2_032=(($__first2_pn_ph_pn+20)|0);
  $10=((HEAP32[(($__comp)>>2)])|0);
  $11=((FUNCTION_TABLE_iii[($10)&63]($9,$__first2_pn_ph_pn))|0);
  $12=($__last2_032|0)==0;
  do {
   if ($11) {
    if (!($12)) {
     $15=$__last2_032;
     $16=$__first2_pn_ph_pn;
     HEAP32[(($15)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($15)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($15)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($15)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);HEAP32[((($15)+(16))>>2)]=((HEAP32[((($16)+(16))>>2)])|0);
    }
    $17=($__first2_pn_ph_pn|0)==($__first2|0);
    L16: do {
     if ($17) {
      $__j2_0_lcssa=$__first2_pn_ph_pn;
     } else {
      $__i2_028=$__first2_pn_ph_pn;
      while(1) {

       $18=((HEAP32[(($__comp)>>2)])|0);
       $19=((($__i2_028)-(20))|0);
       $20=((FUNCTION_TABLE_iii[($18)&63]($9,$19))|0);
       if (!($20)) {
        $__j2_0_lcssa=$__i2_028;
        break L16;
       }
       $22=$__i2_028;
       $23=$19;
       HEAP32[(($22)>>2)]=((HEAP32[(($23)>>2)])|0);HEAP32[((($22)+(4))>>2)]=((HEAP32[((($23)+(4))>>2)])|0);HEAP32[((($22)+(8))>>2)]=((HEAP32[((($23)+(8))>>2)])|0);HEAP32[((($22)+(12))>>2)]=((HEAP32[((($23)+(12))>>2)])|0);HEAP32[((($22)+(16))>>2)]=((HEAP32[((($23)+(16))>>2)])|0);
       $24=($19|0)==($__first2|0);
       if ($24) {
        $__j2_0_lcssa=$19;
        break;
       } else {
        $__i2_028=$19;
       }
      }
     }
    } while(0);

    $25=$__j2_0_lcssa;
    $26=$9;
    HEAP32[(($25)>>2)]=((HEAP32[(($26)>>2)])|0);HEAP32[((($25)+(4))>>2)]=((HEAP32[((($26)+(4))>>2)])|0);HEAP32[((($25)+(8))>>2)]=((HEAP32[((($26)+(8))>>2)])|0);HEAP32[((($25)+(12))>>2)]=((HEAP32[((($26)+(12))>>2)])|0);HEAP32[((($25)+(16))>>2)]=((HEAP32[((($26)+(16))>>2)])|0);
    $__first2_pn_be=$__last2_032;
   } else {
    if ($12) {
     $__first2_pn_be=0;
     break;
    }
    $31=$__last2_032;
    $32=$9;
    HEAP32[(($31)>>2)]=((HEAP32[(($32)>>2)])|0);HEAP32[((($31)+(4))>>2)]=((HEAP32[((($32)+(4))>>2)])|0);HEAP32[((($31)+(8))>>2)]=((HEAP32[((($32)+(8))>>2)])|0);HEAP32[((($31)+(12))>>2)]=((HEAP32[((($32)+(12))>>2)])|0);HEAP32[((($31)+(16))>>2)]=((HEAP32[((($32)+(16))>>2)])|0);
    $__first2_pn_be=$__last2_032;
   }
  } while(0);

  $27=(($9+20)|0);
  $28=($27|0)==($__last1|0);
  if ($28) {
   break;
  } else {
   $__first2_pn_ph_pn=$__first2_pn_be;$9=$27;
  }
 }
 return;
}


function __ZNSt3__122__merge_move_constructIRPFbRKN16b2ParticleSystem4PairES4_EPS2_S8_EEvT0_S9_T1_SA_PNS_15iterator_traitsIS9_E10value_typeET_($__first1,$__last1,$__first2,$__last2,$__result,$__comp){
 $__first1=($__first1)|0;
 $__last1=($__last1)|0;
 $__first2=($__first2)|0;
 $__last2=($__last2)|0;
 $__result=($__result)|0;
 $__comp=($__comp)|0;
 var $1=0,$_028_lcssa=0,$_031_lcssa=0,$2=0,$_12936=0,$_13235=0,$3=0,$5=0,$6=0,$8=0,$9=0,$10=0,$_047=0,$_02846=0,$_03145=0,$11=0,$12=0,$_140=0,$_23339=0,$13=0;
 var $15=0,$16=0,$18=0,$19=0,$20=0,$22=0,$23=0,$24=0,$27=0,$28=0,$30=0,$33=0,$34=0,$36=0,$_230=0,$_2=0,$38=0,$39=0,label=0;

 $1=($__first1|0)==($__last1|0);
 L1: do {
  if ($1) {
   $_031_lcssa=$__result;$_028_lcssa=$__first2;
  } else {
   $_03145=$__result;$_02846=$__first2;$_047=$__first1;
   while(1) {



    $11=($_02846|0)==($__last2|0);
    if ($11) {
     break;
    }
    $22=((HEAP32[(($__comp)>>2)])|0);
    $23=((FUNCTION_TABLE_iii[($22)&63]($_02846,$_047))|0);
    $24=($_03145|0)==0;
    if ($23) {
     if (!($24)) {
      $27=$_03145;
      $28=$_02846;
      HEAP32[(($27)>>2)]=((HEAP32[(($28)>>2)])|0);HEAP32[((($27)+(4))>>2)]=((HEAP32[((($28)+(4))>>2)])|0);HEAP32[((($27)+(8))>>2)]=((HEAP32[((($28)+(8))>>2)])|0);HEAP32[((($27)+(12))>>2)]=((HEAP32[((($28)+(12))>>2)])|0);HEAP32[((($27)+(16))>>2)]=((HEAP32[((($28)+(16))>>2)])|0);
     }
     $30=(($_02846+20)|0);
     $_2=$_047;$_230=$30;
    } else {
     if (!($24)) {
      $33=$_03145;
      $34=$_047;
      HEAP32[(($33)>>2)]=((HEAP32[(($34)>>2)])|0);HEAP32[((($33)+(4))>>2)]=((HEAP32[((($34)+(4))>>2)])|0);HEAP32[((($33)+(8))>>2)]=((HEAP32[((($34)+(8))>>2)])|0);HEAP32[((($33)+(12))>>2)]=((HEAP32[((($34)+(12))>>2)])|0);HEAP32[((($33)+(16))>>2)]=((HEAP32[((($34)+(16))>>2)])|0);
     }
     $36=(($_047+20)|0);
     $_2=$36;$_230=$_02846;
    }


    $38=(($_03145+20)|0);
    $39=($_2|0)==($__last1|0);
    if ($39) {
     $_031_lcssa=$38;$_028_lcssa=$_230;
     break L1;
    } else {
     $_03145=$38;$_02846=$_230;$_047=$_2;
    }
   }
   $12=($_047|0)==($__last1|0);
   if ($12) {
    return;
   } else {
    $_23339=$_03145;$_140=$_047;
   }
   while(1) {


    $13=($_23339|0)==0;
    if (!($13)) {
     $15=$_23339;
     $16=$_140;
     HEAP32[(($15)>>2)]=((HEAP32[(($16)>>2)])|0);HEAP32[((($15)+(4))>>2)]=((HEAP32[((($16)+(4))>>2)])|0);HEAP32[((($15)+(8))>>2)]=((HEAP32[((($16)+(8))>>2)])|0);HEAP32[((($15)+(12))>>2)]=((HEAP32[((($16)+(12))>>2)])|0);HEAP32[((($15)+(16))>>2)]=((HEAP32[((($16)+(16))>>2)])|0);
    }
    $18=(($_140+20)|0);
    $19=(($_23339+20)|0);
    $20=($18|0)==($__last1|0);
    if ($20) {
     break;
    } else {
     $_23339=$19;$_140=$18;
    }
   }
   return;
  }
 } while(0);


 $2=($_028_lcssa|0)==($__last2|0);
 if ($2) {
  return;
 } else {
  $_13235=$_031_lcssa;$_12936=$_028_lcssa;
 }
 while(1) {


  $3=($_13235|0)==0;
  if (!($3)) {
   $5=$_13235;
   $6=$_12936;
   HEAP32[(($5)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);HEAP32[((($5)+(12))>>2)]=((HEAP32[((($6)+(12))>>2)])|0);HEAP32[((($5)+(16))>>2)]=((HEAP32[((($6)+(16))>>2)])|0);
  }
  $8=(($_12936+20)|0);
  $9=(($_13235+20)|0);
  $10=($8|0)==($__last2|0);
  if ($10) {
   break;
  } else {
   $_13235=$9;$_12936=$8;
  }
 }
 return;
}


function __ZN16b2ParticleSystem16ReallocateBufferINS_4PairEEEPT_S3_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=((($newCapacity)*(20))&-1);
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=((($oldCapacity)*(20))&-1);
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZNK19b2IntrusiveListNode7IsEmptyEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=((__ZNK19b2IntrusiveListNode7GetNextEv($this))|0);
 $2=($1|0)==($this|0);
 return (($2)|0);
}


function __ZN15b2SlabAllocatorI16b2ParticleHandleE12BlockGetSlabEPv($this,$memory){
 $this=($this)|0;
 $memory=($memory)|0;
 var $1=0,label=0;

 $1=$memory;
 return (($1)|0);
}


function __ZNK15b2SlabAllocatorI16b2ParticleHandleE4Slab12GetFirstItemEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+32)|0);
 $2=$1;
 return (($2)|0);
}


function __ZN19b2IntrusiveListNodeC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN19b2IntrusiveListNodeC2Ev($this);
 return;
}


function __ZN19b2IntrusiveListNodeC2Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN19b2IntrusiveListNode10InitializeEv($this);
 return;
}


function __ZN19b2IntrusiveListNode10InitializeEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+4)|0);
 HEAP32[(($1)>>2)]=$this;
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=$this;
 return;
}


function __ZNK19b2IntrusiveListNode7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferINS_5ProxyEEEPT_S3_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=$newCapacity<<3;
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=$oldCapacity<<3;
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIPvEEPT_S3_iiib($this,$buffer,$userSuppliedCapacity,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $userSuppliedCapacity=($userSuppliedCapacity)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$or_cond=0,$or_cond_not=0,$2=0,$or_cond8=0,$4=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 $or_cond=$1&$deferred;
 $or_cond_not=$or_cond^1;
 $2=($userSuppliedCapacity|0)==0;
 $or_cond8=$2&$or_cond_not;
 if (!($or_cond8)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=((__ZN16b2ParticleSystem16ReallocateBufferIPvEEPT_S3_ii($this,$buffer,$oldCapacity,$newCapacity))|0);
 $_0=$4;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIPvEEPT_S3_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=$newCapacity<<2;
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=$oldCapacity<<2;
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIP15b2ParticleGroupEEPT_S4_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=$newCapacity<<2;
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=$oldCapacity<<2;
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferI15b2ParticleColorEEPT_S3_iiib($this,$buffer,$userSuppliedCapacity,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $userSuppliedCapacity=($userSuppliedCapacity)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$or_cond=0,$or_cond_not=0,$2=0,$or_cond8=0,$4=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 $or_cond=$1&$deferred;
 $or_cond_not=$or_cond^1;
 $2=($userSuppliedCapacity|0)==0;
 $or_cond8=$2&$or_cond_not;
 if (!($or_cond8)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=((__ZN16b2ParticleSystem16ReallocateBufferI15b2ParticleColorEEPT_S3_ii($this,$buffer,$oldCapacity,$newCapacity))|0);
 $_0=$4;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferI15b2ParticleColorEEPT_S3_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=$newCapacity<<2;
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=(($oldBuffer)|0);
 $10=$oldCapacity<<2;
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIfEEPT_S2_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=$newCapacity<<2;
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=$oldCapacity<<2;
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferI6b2Vec2EEPT_S3_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=$newCapacity<<3;
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=$oldCapacity<<3;
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIiEEPT_S2_iiib($this,$buffer,$userSuppliedCapacity,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $userSuppliedCapacity=($userSuppliedCapacity)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$or_cond=0,$or_cond_not=0,$2=0,$or_cond8=0,$4=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 $or_cond=$1&$deferred;
 $or_cond_not=$or_cond^1;
 $2=($userSuppliedCapacity|0)==0;
 $or_cond8=$2&$or_cond_not;
 if (!($or_cond8)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=((__ZN16b2ParticleSystem16ReallocateBufferIiEEPT_S2_ii($this,$buffer,$oldCapacity,$newCapacity))|0);
 $_0=$4;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIjEEPT_S2_iiib($this,$buffer,$userSuppliedCapacity,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $userSuppliedCapacity=($userSuppliedCapacity)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$or_cond=0,$or_cond_not=0,$2=0,$or_cond8=0,$4=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 $or_cond=$1&$deferred;
 $or_cond_not=$or_cond^1;
 $2=($userSuppliedCapacity|0)==0;
 $or_cond8=$2&$or_cond_not;
 if (!($or_cond8)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=((__ZN16b2ParticleSystem16ReallocateBufferIjEEPT_S2_ii($this,$buffer,$oldCapacity,$newCapacity))|0);
 $_0=$4;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIjEEPT_S2_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=$newCapacity<<2;
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=$oldCapacity<<2;
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIP16b2ParticleHandleEEPT_S4_iiib($this,$buffer,$userSuppliedCapacity,$oldCapacity,$newCapacity,$deferred){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $userSuppliedCapacity=($userSuppliedCapacity)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 $deferred=($deferred)|0;
 var $1=0,$or_cond=0,$or_cond_not=0,$2=0,$or_cond8=0,$4=0,$_0=0,label=0;

 $1=($buffer|0)==0;
 $or_cond=$1&$deferred;
 $or_cond_not=$or_cond^1;
 $2=($userSuppliedCapacity|0)==0;
 $or_cond8=$2&$or_cond_not;
 if (!($or_cond8)) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=((__ZN16b2ParticleSystem16ReallocateBufferIP16b2ParticleHandleEEPT_S4_ii($this,$buffer,$oldCapacity,$newCapacity))|0);
 $_0=$4;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferIP16b2ParticleHandleEEPT_S4_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=$newCapacity<<2;
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=$oldCapacity<<2;
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN16b2ParticleSystem10FreeBufferIPvEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=$capacity<<2;
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferI15b2ParticleColorEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=(($1)|0);
 $8=$capacity<<2;
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferIjEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=$capacity<<2;
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem10FreeBufferIP16b2ParticleHandleEEvPPT_i($this,$b,$capacity){
 $this=($this)|0;
 $b=($b)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=((HEAP32[(($b)>>2)])|0);
 $2=($1|0)==0;
 if ($2) {
  return;
 }
 $4=(($this+376)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=(($5)|0);
 $7=$1;
 $8=$capacity<<2;
 __ZN16b2BlockAllocator4FreeEPvi($6,$7,$8);
 HEAP32[(($b)>>2)]=0;
 return;
}


function __ZN15b2SlabAllocatorI16b2ParticleHandleED2Ev($this){
 $this=($this)|0;
 var $2=0,$4=0,$7=0,$8=0,$9=0,$12=0,$13=0,$_03=0,$_0=0,$15=0,$17$0=0,$17$1=0,$18$0=0,$18$1=0,$6$0=0,$6$1=0,$11$0=0,$11$1=0,$20$0=0,$20$1=0;
 var label=0;

 __ZN15b2SlabAllocatorI16b2ParticleHandleE12FreeAllSlabsEv($this);
 $2=(($this+12)|0);
 __ZN15b2TypedFreeListI16b2ParticleHandleED1Ev($2);
 $4=(($this)|0);
 __ZN23b2TrackedBlockAllocatorD1Ev($4);
 return;
}


function __ZN15b2SlabAllocatorI16b2ParticleHandleE12FreeAllSlabsEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK23b2TrackedBlockAllocator7GetListEv($1))|0);
 $3=((__ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE7IsEmptyEv($2))|0);
 if ($3) {
  return;
 }
 while(1) {
  $4=((__ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE7GetNextEv($2))|0);
  $5=((__ZNK14b2TrackedBlock9GetMemoryEv($4))|0);
  $6=((__ZN15b2SlabAllocatorI16b2ParticleHandleE12BlockGetSlabEPv(0,$5))|0);
  __ZN15b2SlabAllocatorI16b2ParticleHandleE8FreeSlabEPNS1_4SlabE($this,$6);
  $7=((__ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE7IsEmptyEv($2))|0);
  if ($7) {
   break;
  }
 }
 return;
}


function __ZN15b2TypedFreeListI16b2ParticleHandleED1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2TypedFreeListI16b2ParticleHandleED2Ev($this);
 return;
}


function __ZN23b2TrackedBlockAllocatorD1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN23b2TrackedBlockAllocatorD2Ev($this);
 return;
}


function __ZN23b2TrackedBlockAllocatorD2Ev($this){
 $this=($this)|0;
 var $2=0,$5=0,$4$0=0,$4$1=0,label=0;

 __ZN23b2TrackedBlockAllocator7FreeAllEv($this);
 $2=(($this)|0);
 __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockED1Ev($2);
 return;
}


function __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockED1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockED2Ev($this);
 return;
}


function __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockED2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN19b2IntrusiveListNodeD1Ev($1);
 return;
}


function __ZN19b2IntrusiveListNodeD1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN19b2IntrusiveListNodeD2Ev($this);
 return;
}


function __ZN19b2IntrusiveListNodeD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=((__ZN19b2IntrusiveListNode6RemoveEv($this))|0);
 return;
}


function __ZN19b2IntrusiveListNode6RemoveEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=(($4+4)|0);
 HEAP32[(($5)>>2)]=$2;
 $6=((HEAP32[(($3)>>2)])|0);
 $7=((HEAP32[(($1)>>2)])|0);
 $8=(($7)|0);
 HEAP32[(($8)>>2)]=$6;
 __ZN19b2IntrusiveListNode10InitializeEv($this);
 return (($this)|0);
}


function __ZN15b2TypedFreeListI16b2ParticleHandleED2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN10b2FreeListD1Ev($1);
 return;
}


function __ZN10b2FreeListD1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN10b2FreeListD2Ev($this);
 return;
}


function __ZN10b2FreeListD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this+8)|0);
 __ZN19b2IntrusiveListNodeD1Ev($1);
 $2=(($this)|0);
 __ZN19b2IntrusiveListNodeD1Ev($2);
 return;
}


function __ZNK23b2TrackedBlockAllocator7GetListEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 return (($1)|0);
}


function __ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE7IsEmptyEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=((__ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE11GetListNodeEv($this))|0);
 $2=((__ZNK19b2IntrusiveListNode7IsEmptyEv($1))|0);
 return (($2)|0);
}


function __ZN15b2SlabAllocatorI16b2ParticleHandleE8FreeSlabEPNS1_4SlabE($this,$slab){
 $this=($this)|0;
 $slab=($slab)|0;
 var $1=0,$2=0,$3=0,$i_08=0,$item_07=0,$5=0,$6=0,$7=0,$8=0,$9=0,label=0;

 $1=((__ZNK15b2SlabAllocatorI16b2ParticleHandleE4Slab16GetNumberOfItemsEv($slab))|0);
 $2=($1|0)==0;
 if (!($2)) {
  $3=((__ZNK15b2SlabAllocatorI16b2ParticleHandleE4Slab12GetFirstItemEv($slab))|0);
  $item_07=$3;$i_08=0;
  while(1) {


   __ZN16b2ParticleHandleD1Ev($item_07);
   $5=((($i_08)+(1))|0);
   $6=(($item_07+12)|0);
   $7=($5>>>0)<($1>>>0);
   if ($7) {
    $item_07=$6;$i_08=$5;
   } else {
    break;
   }
  }
 }
 $8=(($this)|0);
 $9=$slab;
 __ZN23b2TrackedBlockAllocator4FreeEPv($8,$9);
 return;
}


function __ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE7GetNextEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=((__ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE11GetListNodeEv($this))|0);
 $2=((__ZNK19b2IntrusiveListNode7GetNextEv($1))|0);
 $3=((__ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockE23GetInstanceFromListNodeEP19b2IntrusiveListNode($2))|0);
 return (($3)|0);
}


function __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockE23GetInstanceFromListNodeEP19b2IntrusiveListNode($node){
 $node=($node)|0;
 var $1=0,label=0;

 $1=$node;
 return (($1)|0);
}


function __ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE11GetListNodeEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 return (($1)|0);
}


function __ZNK15b2SlabAllocatorI16b2ParticleHandleE4Slab16GetNumberOfItemsEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN16b2ParticleHandleD1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN16b2ParticleHandleD2Ev($this);
 return;
}


function __ZN16b2ParticleHandleD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN24b2TypedIntrusiveListNodeI16b2ParticleHandleED2Ev($1);
 return;
}


function __ZN24b2TypedIntrusiveListNodeI16b2ParticleHandleED2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN19b2IntrusiveListNodeD1Ev($1);
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferIiEC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferIPvEC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferI15b2ParticleColorEC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferI6b2Vec2EC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferIjEC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=0;
 return;
}


function __ZN16b2ParticleSystem21UserOverridableBufferIP16b2ParticleHandleEC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=0;
 return;
}


function __ZN15b2SlabAllocatorI16b2ParticleHandleEC2Ej($this,$itemsPerSlab){
 $this=($this)|0;
 $itemsPerSlab=($itemsPerSlab)|0;
 var $1=0,$2=0,$3=0,$6$0=0,$6$1=0,$9$0=0,$9$1=0,label=0;

 $1=(($this)|0);
 __ZN23b2TrackedBlockAllocatorC1Ev($1);
 $2=(($this+8)|0);
 HEAP32[(($2)>>2)]=$itemsPerSlab;
 $3=(($this+12)|0);
 __ZN15b2TypedFreeListI16b2ParticleHandleEC1Ev($3);
 return;
}


function __ZN23b2TrackedBlockAllocatorC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN23b2TrackedBlockAllocatorC2Ev($this);
 return;
}


function __ZN15b2TypedFreeListI16b2ParticleHandleEC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN15b2TypedFreeListI16b2ParticleHandleEC2Ev($this);
 return;
}


function __ZN15b2TypedFreeListI16b2ParticleHandleEC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN10b2FreeListC1Ev($1);
 return;
}


function __ZN10b2FreeListC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN10b2FreeListC2Ev($this);
 return;
}


function __ZN10b2FreeListC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN19b2IntrusiveListNodeC1Ev($1);
 $2=(($this+8)|0);
 __ZN19b2IntrusiveListNodeC1Ev($2);
 return;
}


function __ZN23b2TrackedBlockAllocatorC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockEC1Ev($1);
 return;
}


function __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockEC1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockEC2Ev($this);
 return;
}


function __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockEC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN19b2IntrusiveListNodeC1Ev($1);
 return;
}


function __ZN12_GLOBAL__N_124ExpirationTimeComparatorC2EPKi($this,$expirationTimes){
 $this=($this)|0;
 $expirationTimes=($expirationTimes)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=$expirationTimes;
 return;
}


function __Z5b2MulRK5b2RotS1_($agg_result,$q,$r){
 $agg_result=($agg_result)|0;
 $q=($q)|0;
 $r=($r)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=.0,$16=.0,$17=.0,$18=.0,$19=.0,$20=0;
 var label=0;

 $1=(($q)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($r+4)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($q+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($r)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 $12=(($agg_result)|0);
 HEAPF32[(($12)>>2)]=$11;
 $13=(+(HEAPF32[(($6)>>2)]));
 $14=(+(HEAPF32[(($3)>>2)]));
 $15=($13)*($14);
 $16=(+(HEAPF32[(($1)>>2)]));
 $17=(+(HEAPF32[(($8)>>2)]));
 $18=($16)*($17);
 $19=($15)-($18);
 $20=(($agg_result+4)|0);
 HEAPF32[(($20)>>2)]=$19;
 return;
}


function __ZN11b2TransformC2ERK6b2Vec2RK5b2Rot($this,$position,$rotation){
 $this=($this)|0;
 $position=($position)|0;
 $rotation=($rotation)|0;
 var $1=0,$2=0,$ld$0$0=0,$3$0=0,$ld$1$1=0,$3$1=0,$st$2$0=0,$st$3$1=0,$4=0,$5=0,$6=0,$ld$4$0=0,$7$0=0,$ld$5$1=0,$7$1=0,$st$6$0=0,$st$7$1=0,label=0;

 $1=$position;
 $2=$this;
 $ld$0$0=(($1)|0);
 $3$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $3$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($2)|0);
 HEAP32[(($st$2$0)>>2)]=$3$0;
 $st$3$1=(($2+4)|0);
 HEAP32[(($st$3$1)>>2)]=$3$1;
 $4=(($this+8)|0);
 $5=$rotation;
 $6=$4;
 $ld$4$0=(($5)|0);
 $7$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($5+4)|0);
 $7$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($6)|0);
 HEAP32[(($st$6$0)>>2)]=$7$0;
 $st$7$1=(($6+4)|0);
 HEAP32[(($st$7$1)>>2)]=$7$1;
 return;
}


function __ZZN16b2ParticleSystem14SolveCollisionERK10b2TimeStepEN22SolveCollisionCallbackD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZZN16b2ParticleSystem14SolveCollisionERK10b2TimeStepEN22SolveCollisionCallbackC2EPS_S2_($this,$system,$step){
 $this=($this)|0;
 $system=($system)|0;
 $step=($step)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this)|0);
 __ZN15b2QueryCallbackC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4408;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=$system;
 $4=(($this+8)|0);
 $5=$4;
 $6=$step;
 HEAP32[(($5)>>2)]=((HEAP32[(($6)>>2)])|0);HEAP32[((($5)+(4))>>2)]=((HEAP32[((($6)+(4))>>2)])|0);HEAP32[((($5)+(8))>>2)]=((HEAP32[((($6)+(8))>>2)])|0);HEAP32[((($5)+(12))>>2)]=((HEAP32[((($6)+(12))>>2)])|0);HEAP32[((($5)+(16))>>2)]=((HEAP32[((($6)+(16))>>2)])|0);HEAP32[((($5)+(20))>>2)]=((HEAP32[((($6)+(20))>>2)])|0);HEAP32[((($5)+(24))>>2)]=((HEAP32[((($6)+(24))>>2)])|0);
 return;
}


function __ZN15b2QueryCallbackC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=5136;
 return;
}


function __ZZN16b2ParticleSystem14SolveCollisionERK10b2TimeStepEN22SolveCollisionCallbackD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZZN16b2ParticleSystem14SolveCollisionERK10b2TimeStepEN22SolveCollisionCallback13ReportFixtureEP9b2Fixture($this,$fixture){
 $this=($this)|0;
 $fixture=($fixture)|0;
 var $1=0,$2=0,$3=0,$4=0,$ap=0,$tmpcast=0,$av=0,$tmpcast30=0,$output=0,$input=0,$5=0,$tmpcast34=0,$6=0,$7=0,$tmpcast31=0,$8=0,$n=0,$tmpcast32=0,$p=0,$9=0;
 var $10=0,$11=0,$12=0,$v=0,$tmpcast33=0,$13=0,$f=0,$14=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0;
 var $28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0;
 var $childIndex_037=0,$49=0,$aabb_sroa_0_0__idx=0,$aabb_sroa_0_0_copyload=.0,$aabb_sroa_1_4__idx9=0,$aabb_sroa_1_4_copyload=.0,$aabb_sroa_2_8__idx12=0,$aabb_sroa_2_8_copyload=.0,$aabb_sroa_3_12__idx15=0,$aabb_sroa_3_12_copyload=.0,$50=0,$51=0,$52=.0,$53=.0,$54=.0,$55=.0,$56=.0,$57=0,$58=.0,$59=.0;
 var $60=.0,$61=0,$62=0,$63=0,$64=0,$65=.0,$66=.0,$67=.0,$68=0,$69=0,$70=0,$proxy_036=0,$71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$ld$0$0=0;
 var $78$0=0,$ld$1$1=0,$78$1=0,$st$2$0=0,$st$3$1=0,$79=.0,$80=0,$81=0,$or_cond=0,$83=.0,$84=0,$85=0,$or_cond35=0,$87=0,$88=0,$89=0,$90=0,$91=0,$ld$4$0=0,$92$0=0;
 var $ld$5$1=0,$92$1=0,$st$6$0=0,$st$7$1=0,$93=0,$94=0,$95=0,$96=0,$ld$8$0=0,$98$0=0,$ld$9$1=0,$98$1=0,$st$10$0=0,$st$11$1=0,$ld$12$0=0,$100$0=0,$ld$13$1=0,$100$1=0,$st$14$0=0,$st$15$1=0;
 var $102=.0,$ld$16$0=0,$103$0=0,$ld$17$1=0,$103$1=0,$st$18$0=0,$st$19$1=0,$104=0,$ld$20$0=0,$106$0=0,$ld$21$1=0,$106$1=0,$st$22$0=0,$st$23$1=0,$107=.0,$108=.0,$109=.0,$110=.0,$111=0,$112=0;
 var $113=0,$114=0,$115=0,$ld$24$0=0,$116$0=0,$ld$25$1=0,$116$1=0,$st$26$0=0,$st$27$1=0,$117=.0,$118=0,$119=.0,$120=.0,$121=0,$123=0,$124=0,$125=0,$126=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $3=(((sp)+(16))|0);
 $4=(((sp)+(24))|0);
 $ap=(((sp)+(32))|0);
 $tmpcast=$ap;
 $av=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast30=$av;
 $output=STACKTOP;STACKTOP = (STACKTOP + 12)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $input=STACKTOP;STACKTOP = (STACKTOP + 20)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast34=$5;
 $6=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $7=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast31=$7;
 $8=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $n=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast32=$n;
 $p=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $9=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $10=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $11=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $12=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $v=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast33=$v;
 $13=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $f=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $14=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $15=((__ZNK9b2Fixture8IsSensorEv($fixture))|0);
 if ($15) {
  STACKTOP=sp;return ((1)|0);
 }
 $17=((__ZN9b2Fixture8GetShapeEv($fixture))|0);
 $18=((__ZN9b2Fixture7GetBodyEv($fixture))|0);
 $19=(($this+4)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($20+220)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=(($20+212)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($22+($24<<3))|0);
 $26=$17;
 $27=((HEAP32[(($26)>>2)])|0);
 $28=(($27+12)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=((FUNCTION_TABLE_ii[($29)&31]($17))|0);
 $31=($30|0)>0;
 if (!($31)) {
  STACKTOP=sp;return ((1)|0);
 }
 $32=(($2)|0);
 $33=(($1)|0);
 $34=$ap;
 $35=(($tmpcast+4)|0);
 $36=(($input)|0);
 $37=(($18+12)|0);
 $38=(($18+28)|0);
 $39=$input;
 $40=(($input+8)|0);
 $41=(($this+8)|0);
 $42=$40;
 $43=(($input+16)|0);
 $44=$output;
 $45=(($output+8)|0);
 $46=(($this+12)|0);
 $47=$input;
 $childIndex_037=0;
 while(1) {

  $49=((__ZNK9b2Fixture7GetAABBEi($fixture,$childIndex_037))|0);
  $aabb_sroa_0_0__idx=(($49)|0);
  $aabb_sroa_0_0_copyload=(+(HEAPF32[(($aabb_sroa_0_0__idx)>>2)]));
  $aabb_sroa_1_4__idx9=(($49+4)|0);
  $aabb_sroa_1_4_copyload=(+(HEAPF32[(($aabb_sroa_1_4__idx9)>>2)]));
  $aabb_sroa_2_8__idx12=(($49+8)|0);
  $aabb_sroa_2_8_copyload=(+(HEAPF32[(($aabb_sroa_2_8__idx12)>>2)]));
  $aabb_sroa_3_12__idx15=(($49+12)|0);
  $aabb_sroa_3_12_copyload=(+(HEAPF32[(($aabb_sroa_3_12__idx15)>>2)]));
  $50=((HEAP32[(($19)>>2)])|0);
  $51=(($50+40)|0);
  $52=(+(HEAPF32[(($51)>>2)]));
  $53=($aabb_sroa_0_0_copyload)-($52);
  $54=($aabb_sroa_1_4_copyload)-($52);
  $55=($aabb_sroa_2_8_copyload)+($52);
  $56=($aabb_sroa_3_12_copyload)+($52);
  $57=(($50+44)|0);
  $58=(+(HEAPF32[(($57)>>2)]));
  $59=($58)*($53);
  $60=($58)*($54);
  $61=((__ZL10computeTagff($59,$60))|0);
  HEAP32[(($3)>>2)]=$61;
  $62=((__ZNSt3__113__lower_boundIRNS_6__lessIN16b2ParticleSystem5ProxyEjEEPS3_jEET0_S7_S7_RKT1_T_($22,$25,$3,$2))|0);
  $63=((HEAP32[(($19)>>2)])|0);
  $64=(($63+44)|0);
  $65=(+(HEAPF32[(($64)>>2)]));
  $66=($55)*($65);
  $67=($56)*($65);
  $68=((__ZL10computeTagff($66,$67))|0);
  HEAP32[(($4)>>2)]=$68;
  $69=((__ZNSt3__113__upper_boundIRNS_6__lessIjN16b2ParticleSystem5ProxyEEEPS3_jEET0_S7_S7_RKT1_T_($62,$25,$4,$1))|0);
  $70=($62|0)==($69|0);
  if (!($70)) {
   $proxy_036=$62;
   while(1) {

    $71=(($proxy_036)|0);
    $72=((HEAP32[(($71)>>2)])|0);
    $73=((HEAP32[(($19)>>2)])|0);
    $74=(($73+112)|0);
    $75=((HEAP32[(($74)>>2)])|0);
    $76=(($75+($72<<3))|0);
    $77=$76;
    $ld$0$0=(($77)|0);
    $78$0=((HEAP32[(($ld$0$0)>>2)])|0);
    $ld$1$1=(($77+4)|0);
    $78$1=((HEAP32[(($ld$1$1)>>2)])|0);
    $st$2$0=(($ap)|0);
    HEAP32[(($st$2$0)>>2)]=$78$0;
    $st$3$1=(($ap+4)|0);
    HEAP32[(($st$3$1)>>2)]=$78$1;
    $79=(+(HEAPF32[(($34)>>2)]));
    $80=$53>$79;
    $81=$79>$55;
    $or_cond=$80|$81;
    do {
     if (!($or_cond)) {
      $83=(+(HEAPF32[(($35)>>2)]));
      $84=$54>$83;
      $85=$83>$56;
      $or_cond35=$84|$85;
      if ($or_cond35) {
       break;
      }
      $87=((HEAP32[(($19)>>2)])|0);
      $88=(($87+120)|0);
      $89=((HEAP32[(($88)>>2)])|0);
      $90=(($89+($72<<3))|0);
      $91=$90;
      $ld$4$0=(($91)|0);
      $92$0=((HEAP32[(($ld$4$0)>>2)])|0);
      $ld$5$1=(($91+4)|0);
      $92$1=((HEAP32[(($ld$5$1)>>2)])|0);
      $st$6$0=(($av)|0);
      HEAP32[(($st$6$0)>>2)]=$92$0;
      $st$7$1=(($av+4)|0);
      HEAP32[(($st$7$1)>>2)]=$92$1;
      $93=((HEAP32[(($19)>>2)])|0);
      $94=(($93+24)|0);
      $95=((HEAP32[(($94)>>2)])|0);
      $96=($95|0)==0;
      if ($96) {
       __Z6b2MulTRK11b2TransformRK6b2Vec2($6,$38,$tmpcast);
       __Z5b2MulRK11b2TransformRK6b2Vec2($tmpcast34,$37,$6);
       $ld$8$0=(($5)|0);
       $98$0=((HEAP32[(($ld$8$0)>>2)])|0);
       $ld$9$1=(($5+4)|0);
       $98$1=((HEAP32[(($ld$9$1)>>2)])|0);
       $st$10$0=(($39)|0);
       HEAP32[(($st$10$0)>>2)]=$98$0;
       $st$11$1=(($39+4)|0);
       HEAP32[(($st$11$1)>>2)]=$98$1;
      } else {
       $ld$12$0=(($ap)|0);
       $100$0=((HEAP32[(($ld$12$0)>>2)])|0);
       $ld$13$1=(($ap+4)|0);
       $100$1=((HEAP32[(($ld$13$1)>>2)])|0);
       $st$14$0=(($47)|0);
       HEAP32[(($st$14$0)>>2)]=$100$0;
       $st$15$1=(($47+4)|0);
       HEAP32[(($st$15$1)>>2)]=$100$1;
      }
      $102=(+(HEAPF32[(($41)>>2)]));
      __ZmlfRK6b2Vec2($8,$102,$tmpcast30);
      __ZplRK6b2Vec2S1_($tmpcast31,$tmpcast,$8);
      $ld$16$0=(($7)|0);
      $103$0=((HEAP32[(($ld$16$0)>>2)])|0);
      $ld$17$1=(($7+4)|0);
      $103$1=((HEAP32[(($ld$17$1)>>2)])|0);
      $st$18$0=(($42)|0);
      HEAP32[(($st$18$0)>>2)]=$103$0;
      $st$19$1=(($42+4)|0);
      HEAP32[(($st$19$1)>>2)]=$103$1;
      HEAPF32[(($43)>>2)]=1.0;
      $104=((__ZNK9b2Fixture7RayCastEP15b2RayCastOutputRK14b2RayCastInputi($fixture,$output,$input,$childIndex_037))|0);
      if (!($104)) {
       break;
      }
      $ld$20$0=(($44)|0);
      $106$0=((HEAP32[(($ld$20$0)>>2)])|0);
      $ld$21$1=(($44+4)|0);
      $106$1=((HEAP32[(($ld$21$1)>>2)])|0);
      $st$22$0=(($n)|0);
      HEAP32[(($st$22$0)>>2)]=$106$0;
      $st$23$1=(($n+4)|0);
      HEAP32[(($st$23$1)>>2)]=$106$1;
      $107=(+(HEAPF32[(($45)>>2)]));
      $108=((1.0))-($107);
      __ZmlfRK6b2Vec2($10,$108,$36);
      $109=(+(HEAPF32[(($45)>>2)]));
      __ZmlfRK6b2Vec2($11,$109,$40);
      __ZplRK6b2Vec2S1_($9,$10,$11);
      __ZmlfRK6b2Vec2($12,0.004999999888241291,$tmpcast32);
      __ZplRK6b2Vec2S1_($p,$9,$12);
      $110=(+(HEAPF32[(($46)>>2)]));
      __ZmiRK6b2Vec2S1_($13,$p,$tmpcast);
      __ZmlfRK6b2Vec2($tmpcast33,$110,$13);
      $111=((HEAP32[(($19)>>2)])|0);
      $112=(($111+120)|0);
      $113=((HEAP32[(($112)>>2)])|0);
      $114=(($113+($72<<3))|0);
      $115=$114;
      $ld$24$0=(($v)|0);
      $116$0=((HEAP32[(($ld$24$0)>>2)])|0);
      $ld$25$1=(($v+4)|0);
      $116$1=((HEAP32[(($ld$25$1)>>2)])|0);
      $st$26$0=(($115)|0);
      HEAP32[(($st$26$0)>>2)]=$116$0;
      $st$27$1=(($115+4)|0);
      HEAP32[(($st$27$1)>>2)]=$116$1;
      $117=(+(HEAPF32[(($46)>>2)]));
      $118=((HEAP32[(($19)>>2)])|0);
      $119=(+(__ZNK16b2ParticleSystem15GetParticleMassEv($118)));
      $120=($117)*($119);
      __ZmiRK6b2Vec2S1_($14,$tmpcast30,$tmpcast33);
      __ZmlfRK6b2Vec2($f,$120,$14);
      $121=((HEAP32[(($19)>>2)])|0);
      __ZN16b2ParticleSystem18ParticleApplyForceEiRK6b2Vec2($121,$72,$f);
     }
    } while(0);
    $123=(($proxy_036+8)|0);
    $124=($123|0)==($69|0);
    if ($124) {
     break;
    } else {
     $proxy_036=$123;
    }
   }
  }
  $125=((($childIndex_037)+(1))|0);
  $126=($125|0)<($30|0);
  if ($126) {
   $childIndex_037=$125;
  } else {
   break;
  }
 }
 STACKTOP=sp;return ((1)|0);
}


function __ZN15b2QueryCallback14ReportParticleEPK16b2ParticleSystemi($this,$particleSystem,$index){
 $this=($this)|0;
 $particleSystem=($particleSystem)|0;
 $index=($index)|0;
 var label=0;

 return ((0)|0);
}


function __ZN15b2QueryCallback25ShouldQueryParticleSystemEPK16b2ParticleSystem($this,$particleSystem){
 $this=($this)|0;
 $particleSystem=($particleSystem)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK9b2Fixture7GetAABBEi($this,$childIndex){
 $this=($this)|0;
 $childIndex=($childIndex)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+24)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+((($childIndex)*(28))&-1))|0);
 return (($3)|0);
}


function __ZN15b2QueryCallbackD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN15b2QueryCallbackD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZN36b2ParticleBodyContactRemovePredicateC2EP16b2ParticleSystemPi($this,$system,$discarded){
 $this=($this)|0;
 $system=($system)|0;
 $discarded=($discarded)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=$system;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=-1;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$discarded;
 return;
}


function __ZN12_GLOBAL__N_117FixedSetAllocatorD2Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN12_GLOBAL__N_117FixedSetAllocator5ClearEv($this);
 return;
}


function __ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallbackD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallbackC2EPS_P7b2WorldP15b2ContactFilterP17b2ContactListenerPN12_GLOBAL__N_118FixtureParticleSetE($this,$system,$world,$contactFilter,$contactListener,$fixtureSet){
 $this=($this)|0;
 $system=($system)|0;
 $world=($world)|0;
 $contactFilter=($contactFilter)|0;
 $contactListener=($contactListener)|0;
 $fixtureSet=($fixtureSet)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,label=0;

 $1=(($this)|0);
 __ZN15b2QueryCallbackC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4328;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=$system;
 $4=(($this+8)|0);
 HEAP32[(($4)>>2)]=$world;
 $5=(($this+12)|0);
 HEAP32[(($5)>>2)]=$contactFilter;
 $6=(($this+16)|0);
 HEAP32[(($6)>>2)]=$contactListener;
 $7=(($this+20)|0);
 HEAP32[(($7)>>2)]=$fixtureSet;
 return;
}


function __ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallbackD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallback13ReportFixtureEP9b2Fixture($this,$fixture){
 $this=($this)|0;
 $fixture=($fixture)|0;
 var $1=0,$2=0,$bp=0,$tmpcast=0,$3=0,$4=0,$ap=0,$tmpcast47=0,$d=0,$n=0,$rp=0,$5=0,$tmpcast48=0,$6=0,$8=0,$9=0,$10=0,$11=0,$ld$0$0=0,$12$0=0;
 var $ld$1$1=0,$12$1=0,$st$2$0=0,$st$3$1=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=.0,$19=0,$21=.0,$23=.0,$24=0,$26=.0,$28=.0,$29=0,$30=0,$31=0,$32=0;
 var $33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$childIndex_051=0,$41=0,$aabb_sroa_0_0__idx=0,$aabb_sroa_0_0_copyload=.0,$aabb_sroa_1_4__idx20=0,$aabb_sroa_1_4_copyload=.0,$aabb_sroa_2_8__idx23=0,$aabb_sroa_2_8_copyload=.0,$aabb_sroa_3_12__idx26=0,$aabb_sroa_3_12_copyload=.0,$42=0,$43=0,$44=.0;
 var $45=.0,$46=.0,$47=.0,$48=.0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=.0,$56=.0,$57=.0,$58=0,$59=0,$60=0,$61=0,$62=.0,$63=.0,$64=.0;
 var $65=0,$66=0,$67=0,$proxy_050=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$74=0,$ld$4$0=0,$75$0=0,$ld$5$1=0,$75$1=0,$st$6$0=0,$st$7$1=0,$76=.0,$77=0,$78=0;
 var $or_cond=0,$80=.0,$81=0,$82=0,$or_cond49=0,$84=.0,$85=0,$86=0,$87=.0,$88=0,$90=0,$92=0,$93=0,$94=0,$95=0,$96=0,$97=0,$98=0,$100=.0,$102=.0;
 var $103=.0,$104=.0,$105=.0,$106=.0,$107=.0,$108=0,$109=0,$110=0,$111=0,$112=0,$113=0,$114=0,$115=0,$116=0,$117=0,$118=0,$119=0,$120=0,$121=0,$122=0;
 var $123=0,$124=0,$125=0,$126=.0,$127=0,$128=0,$129=.0,$130=.0,$131=.0,$132=0,$133=0,$134=0,$ld$8$0=0,$135$0=0,$ld$9$1=0,$135$1=0,$st$10$0=0,$st$11$1=0,$136=0,$138=.0;
 var $140=.0,$141=0,$142=0,$143=0,$144=0,$145=0,$146=0,$148=0,$149=0,$150=0,$151=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $1=((sp)|0);
 $2=(((sp)+(8))|0);
 $bp=(((sp)+(16))|0);
 $tmpcast=$bp;
 $3=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $4=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $ap=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast47=$ap;
 $d=STACKTOP;STACKTOP = (STACKTOP + 4)|0;STACKTOP = (((STACKTOP)+7)&-8);
 $n=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $rp=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast48=$5;
 $6=((__ZNK9b2Fixture8IsSensorEv($fixture))|0);
 if ($6) {
  STACKTOP=sp;return ((1)|0);
 }
 $8=((__ZN9b2Fixture8GetShapeEv($fixture))|0);
 $9=((__ZN9b2Fixture7GetBodyEv($fixture))|0);
 $10=((__ZNK6b2Body14GetWorldCenterEv($9))|0);
 $11=$10;
 $ld$0$0=(($11)|0);
 $12$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($11+4)|0);
 $12$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($bp)|0);
 HEAP32[(($st$2$0)>>2)]=$12$0;
 $st$3$1=(($bp+4)|0);
 HEAP32[(($st$3$1)>>2)]=$12$1;
 $13=(+(__ZNK6b2Body7GetMassEv($9)));
 $14=(+(__ZNK6b2Body10GetInertiaEv($9)));
 $15=((__ZNK6b2Body14GetLocalCenterEv($9))|0);
 $16=(+(__ZNK6b2Vec213LengthSquaredEv($15)));
 $17=($13)*($16);
 $18=($14)-($17);
 $19=$13>(0.0);
 if ($19) {
  $21=((1.0))/($13);
  $23=$21;
 } else {
  $23=0.0;
 }

 $24=$18>(0.0);
 if ($24) {
  $26=((1.0))/($18);
  $28=$26;
 } else {
  $28=0.0;
 }

 $29=$8;
 $30=((HEAP32[(($29)>>2)])|0);
 $31=(($30+12)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 $33=((FUNCTION_TABLE_ii[($32)&31]($8))|0);
 $34=($33|0)>0;
 if (!($34)) {
  STACKTOP=sp;return ((1)|0);
 }
 $35=(($this+4)|0);
 $36=(($2)|0);
 $37=(($1)|0);
 $38=$ap;
 $39=(($tmpcast47+4)|0);
 $childIndex_051=0;
 while(1) {

  $41=((__ZNK9b2Fixture7GetAABBEi($fixture,$childIndex_051))|0);
  $aabb_sroa_0_0__idx=(($41)|0);
  $aabb_sroa_0_0_copyload=(+(HEAPF32[(($aabb_sroa_0_0__idx)>>2)]));
  $aabb_sroa_1_4__idx20=(($41+4)|0);
  $aabb_sroa_1_4_copyload=(+(HEAPF32[(($aabb_sroa_1_4__idx20)>>2)]));
  $aabb_sroa_2_8__idx23=(($41+8)|0);
  $aabb_sroa_2_8_copyload=(+(HEAPF32[(($aabb_sroa_2_8__idx23)>>2)]));
  $aabb_sroa_3_12__idx26=(($41+12)|0);
  $aabb_sroa_3_12_copyload=(+(HEAPF32[(($aabb_sroa_3_12__idx26)>>2)]));
  $42=((HEAP32[(($35)>>2)])|0);
  $43=(($42+40)|0);
  $44=(+(HEAPF32[(($43)>>2)]));
  $45=($aabb_sroa_0_0_copyload)-($44);
  $46=($aabb_sroa_1_4_copyload)-($44);
  $47=($aabb_sroa_2_8_copyload)+($44);
  $48=($aabb_sroa_3_12_copyload)+($44);
  $49=(($42+220)|0);
  $50=((HEAP32[(($49)>>2)])|0);
  $51=(($42+212)|0);
  $52=((HEAP32[(($51)>>2)])|0);
  $53=(($50+($52<<3))|0);
  $54=(($42+44)|0);
  $55=(+(HEAPF32[(($54)>>2)]));
  $56=($45)*($55);
  $57=($46)*($55);
  $58=((__ZL10computeTagff($56,$57))|0);
  HEAP32[(($3)>>2)]=$58;
  $59=((__ZNSt3__113__lower_boundIRNS_6__lessIN16b2ParticleSystem5ProxyEjEEPS3_jEET0_S7_S7_RKT1_T_($50,$53,$3,$2))|0);
  $60=((HEAP32[(($35)>>2)])|0);
  $61=(($60+44)|0);
  $62=(+(HEAPF32[(($61)>>2)]));
  $63=($47)*($62);
  $64=($48)*($62);
  $65=((__ZL10computeTagff($63,$64))|0);
  HEAP32[(($4)>>2)]=$65;
  $66=((__ZNSt3__113__upper_boundIRNS_6__lessIjN16b2ParticleSystem5ProxyEEEPS3_jEET0_S7_S7_RKT1_T_($59,$53,$4,$1))|0);
  $67=($59|0)==($66|0);
  if (!($67)) {
   $proxy_050=$59;
   while(1) {

    $68=(($proxy_050)|0);
    $69=((HEAP32[(($68)>>2)])|0);
    $70=((HEAP32[(($35)>>2)])|0);
    $71=(($70+112)|0);
    $72=((HEAP32[(($71)>>2)])|0);
    $73=(($72+($69<<3))|0);
    $74=$73;
    $ld$4$0=(($74)|0);
    $75$0=((HEAP32[(($ld$4$0)>>2)])|0);
    $ld$5$1=(($74+4)|0);
    $75$1=((HEAP32[(($ld$5$1)>>2)])|0);
    $st$6$0=(($ap)|0);
    HEAP32[(($st$6$0)>>2)]=$75$0;
    $st$7$1=(($ap+4)|0);
    HEAP32[(($st$7$1)>>2)]=$75$1;
    $76=(+(HEAPF32[(($38)>>2)]));
    $77=$45>$76;
    $78=$76>$47;
    $or_cond=$77|$78;
    do {
     if (!($or_cond)) {
      $80=(+(HEAPF32[(($39)>>2)]));
      $81=$46>$80;
      $82=$80>$48;
      $or_cond49=$81|$82;
      if ($or_cond49) {
       break;
      }
      __ZNK9b2Fixture15ComputeDistanceERK6b2Vec2PfPS0_i($fixture,$tmpcast47,$d,$n,$childIndex_051);
      $84=(+(HEAPF32[(($d)>>2)]));
      $85=((HEAP32[(($35)>>2)])|0);
      $86=(($85+40)|0);
      $87=(+(HEAPF32[(($86)>>2)]));
      $88=$84<$87;
      if (!($88)) {
       break;
      }
      $90=((__ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallback13ShouldCollideEP9b2Fixturei($this,$fixture,$69))|0);
      if (!($90)) {
       break;
      }
      $92=((HEAP32[(($35)>>2)])|0);
      $93=(($92+104)|0);
      $94=((HEAP32[(($93)>>2)])|0);
      $95=(($94+($69<<2))|0);
      $96=((HEAP32[(($95)>>2)])|0);
      $97=$96&4;
      $98=($97|0)==0;
      if ($98) {
       $100=(+(__ZNK16b2ParticleSystem18GetParticleInvMassEv($92)));
       $102=$100;
      } else {
       $102=0.0;
      }

      __ZmiRK6b2Vec2S1_($rp,$tmpcast47,$tmpcast);
      $103=(+(__Z7b2CrossRK6b2Vec2S1_($rp,$n)));
      $104=($23)+($102);
      $105=($28)*($103);
      $106=($103)*($105);
      $107=($104)+($106);
      $108=((HEAP32[(($35)>>2)])|0);
      $109=(($108+244)|0);
      $110=((HEAP32[(($109)>>2)])|0);
      $111=(($108+236)|0);
      $112=((HEAP32[(($111)>>2)])|0);
      $113=(($108+240)|0);
      $114=((__ZN16b2ParticleSystem21RequestGrowableBufferI21b2ParticleBodyContactEEPT_S3_iPi($108,$110,$112,$113))|0);
      $115=((HEAP32[(($35)>>2)])|0);
      $116=(($115+244)|0);
      HEAP32[(($116)>>2)]=$114;
      $117=((HEAP32[(($35)>>2)])|0);
      $118=(($117+236)|0);
      $119=((HEAP32[(($118)>>2)])|0);
      $120=(($117+244)|0);
      $121=((HEAP32[(($120)>>2)])|0);
      $122=(($121+((($119)*(28))&-1))|0);
      $123=(($122)|0);
      HEAP32[(($123)>>2)]=$69;
      $124=(($121+((($119)*(28))&-1)+4)|0);
      HEAP32[(($124)>>2)]=$9;
      $125=(($121+((($119)*(28))&-1)+8)|0);
      HEAP32[(($125)>>2)]=$fixture;
      $126=(+(HEAPF32[(($d)>>2)]));
      $127=((HEAP32[(($35)>>2)])|0);
      $128=(($127+44)|0);
      $129=(+(HEAPF32[(($128)>>2)]));
      $130=($126)*($129);
      $131=((1.0))-($130);
      $132=(($121+((($119)*(28))&-1)+12)|0);
      HEAPF32[(($132)>>2)]=$131;
      $133=(($121+((($119)*(28))&-1)+16)|0);
      __ZNK6b2Vec2ngEv($tmpcast48,$n);
      $134=$133;
      $ld$8$0=(($5)|0);
      $135$0=((HEAP32[(($ld$8$0)>>2)])|0);
      $ld$9$1=(($5+4)|0);
      $135$1=((HEAP32[(($ld$9$1)>>2)])|0);
      $st$10$0=(($134)|0);
      HEAP32[(($st$10$0)>>2)]=$135$0;
      $st$11$1=(($134+4)|0);
      HEAP32[(($st$11$1)>>2)]=$135$1;
      $136=$107>(0.0);
      if ($136) {
       $138=((1.0))/($107);
       $140=$138;
      } else {
       $140=0.0;
      }

      $141=(($121+((($119)*(28))&-1)+24)|0);
      HEAPF32[(($141)>>2)]=$140;
      __ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallback13ReportContactEP21b2ParticleBodyContact($this,$122);
      $142=((HEAP32[(($35)>>2)])|0);
      $143=(($142+236)|0);
      $144=((HEAP32[(($143)>>2)])|0);
      $145=((($144)+(1))|0);
      HEAP32[(($143)>>2)]=$145;
      $146=((HEAP32[(($35)>>2)])|0);
      __ZN16b2ParticleSystem19DetectStuckParticleEi($146,$69);
     }
    } while(0);
    $148=(($proxy_050+8)|0);
    $149=($148|0)==($66|0);
    if ($149) {
     break;
    } else {
     $proxy_050=$148;
    }
   }
  }
  $150=((($childIndex_051)+(1))|0);
  $151=($150|0)<($33|0);
  if ($151) {
   $childIndex_051=$150;
  } else {
   break;
  }
 }
 STACKTOP=sp;return ((1)|0);
}


function __ZNK6b2Body14GetLocalCenterEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this+44)|0);
 return (($1)|0);
}


function __ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallback13ShouldCollideEP9b2Fixturei($this,$fixture,$particleIndex){
 $this=($this)|0;
 $fixture=($fixture)|0;
 $particleIndex=($particleIndex)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=0,$_0=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  $_0=1;

  return (($_0)|0);
 }
 $5=(($this+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((__ZNK16b2ParticleSystem14GetFlagsBufferEv($6))|0);
 $8=(($7+($particleIndex<<2))|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=$9&65536;
 $11=($10|0)==0;
 if ($11) {
  $_0=1;

  return (($_0)|0);
 }
 $13=$2;
 $14=((HEAP32[(($13)>>2)])|0);
 $15=(($14+12)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=((FUNCTION_TABLE_iiiii[($16)&15]($2,$fixture,$6,$particleIndex))|0);
 $_0=$17;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem21RequestGrowableBufferI21b2ParticleBodyContactEEPT_S3_iPi($this,$buffer,$count,$capacity){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $count=($count)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$_=0,$6=0,$_0=0,label=0;

 $1=((HEAP32[(($capacity)>>2)])|0);
 $2=($1|0)>($count|0);
 if ($2) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=($count|0)==0;
 $5=$count<<1;
 $_=($4?256:$5);
 $6=((__ZN16b2ParticleSystem16ReallocateBufferI21b2ParticleBodyContactEEPT_S3_ii($this,$buffer,$1,$_))|0);
 HEAP32[(($capacity)>>2)]=$_;
 $_0=$6;

 return (($_0)|0);
}


function __ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallback13ReportContactEP21b2ParticleBodyContact($this,$particleBodyContact){
 $this=($this)|0;
 $particleBodyContact=($particleBodyContact)|0;
 var $fixtureParticleToFind=0,$1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $fixtureParticleToFind=((sp)|0);
 $1=(($this+16)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==0;
 if ($3) {
  STACKTOP=sp;return;
 }
 $5=(($particleBodyContact+8)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($fixtureParticleToFind)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=(($particleBodyContact)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($fixtureParticleToFind+4)|0);
 HEAP32[(($10)>>2)]=$9;
 $11=(($this+20)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=((__ZNK12_GLOBAL__N_118FixtureParticleSet4FindERKNS_15LightweightPairIP9b2FixtureiEE($12,$fixtureParticleToFind))|0);
 $14=($13|0)>-1;
 if ($14) {
  $16=((HEAP32[(($11)>>2)])|0);
  $17=(($16)|0);
  __ZN12_GLOBAL__N_117FixedSetAllocator10InvalidateEi($17,$13);
  STACKTOP=sp;return;
 } else {
  $19=((HEAP32[(($1)>>2)])|0);
  $20=$19;
  $21=((HEAP32[(($20)>>2)])|0);
  $22=(($21+16)|0);
  $23=((HEAP32[(($22)>>2)])|0);
  $24=(($this+4)|0);
  $25=((HEAP32[(($24)>>2)])|0);
  FUNCTION_TABLE_viii[($23)&31]($19,$25,$particleBodyContact);
  STACKTOP=sp;return;
 }
}


function __ZNK12_GLOBAL__N_118FixtureParticleSet4FindERKNS_15LightweightPairIP9b2FixtureiEE($this,$fixtureParticle){
 $this=($this)|0;
 $fixtureParticle=($fixtureParticle)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((__ZL23FindItemIndexInFixedSetIN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEEEiRKNS0_22TypedFixedSetAllocatorIT_EERKS6_($1,$fixtureParticle))|0);
 return (($2)|0);
}


function __ZN12_GLOBAL__N_117FixedSetAllocator10InvalidateEi($this,$itemIndex){
 $this=($this)|0;
 $itemIndex=($itemIndex)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+$itemIndex)|0);
 HEAP8[($3)]=0;
 return;
}


function __ZL23FindItemIndexInFixedSetIN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEEEiRKNS0_22TypedFixedSetAllocatorIT_EERKS6_($set,$item){
 $set=($set)|0;
 $item=($item)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$10=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($set)|0);
 $3=((__ZNK12_GLOBAL__N_117FixedSetAllocator8GetCountEv($2))|0);
 $4=($3|0)==0;
 if ($4) {
  $_0=-1;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=((__ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE9GetBufferEv($set))|0);
 $7=(($6+($3<<3))|0);
 $8=$1;
 HEAP32[(($1)>>2)]=38;
 $9=((__ZNSt3__113__lower_boundIRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS6_S5_EET0_SC_SC_RKT1_T_($6,$7,$item,$1))|0);
 $10=((__ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE8GetIndexEPKS4_($set,$9))|0);
 $_0=$10;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE9GetBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK12_GLOBAL__N_117FixedSetAllocator9GetBufferEv($1))|0);
 $3=$2;
 return (($3)|0);
}


function __ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE8GetIndexEPKS4_($this,$item){
 $this=($this)|0;
 $item=($item)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$_0=0,label=0;

 $1=($item|0)==0;
 do {
  if (!($1)) {
   $3=((__ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE9GetBufferEv($this))|0);
   $4=$item;
   $5=$3;
   $6=((($4)-($5))|0);
   $7=$6>>>3;
   $8=(($this)|0);
   $9=((__ZNK12_GLOBAL__N_117FixedSetAllocator14GetValidBufferEv($8))|0);
   $10=(($9+$7)|0);
   $11=((HEAP8[($10)])|0);
   $12=(($11<<24)>>24)==0;
   if ($12) {
    break;
   } else {
    $_0=$7;
   }

   return (($_0)|0);
  }
 } while(0);
 $_0=-1;

 return (($_0)|0);
}


function __ZN12_GLOBAL__N_115LightweightPairIP9b2FixtureiE7CompareERKS3_S5_($left,$right){
 $left=($left)|0;
 $right=($right)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$13=0,label=0;

 $1=(($left)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($right)|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=($2>>>0)<($4>>>0);
 if (!($5)) {
  $13=0;

  return (($13)|0);
 }
 $7=(($left+4)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($right+4)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)<($10|0);
 $13=$11;

 return (($13)|0);
}


function __ZNSt3__113__lower_boundIRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS6_S5_EET0_SC_SC_RKT1_T_($__first,$__last,$__value_,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__value_=($__value_)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$__len_0_ph=0,$_0_ph=0,$__len_0=0,$6=0,$8=0,$9=0,$10=0,$11=0,$_sum=0,$13=0,$_neg12=0,$14=0,label=0;

 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>3;
 $_0_ph=$__first;$__len_0_ph=$4;
 L1: while(1) {


  $__len_0=$__len_0_ph;
  while(1) {

   $6=($__len_0|0)==0;
   if ($6) {
    break L1;
   }
   $8=(((($__len_0|0))/(2))&-1);
   $9=(($_0_ph+($8<<3))|0);
   $10=((HEAP32[(($__comp)>>2)])|0);
   $11=((FUNCTION_TABLE_iii[($10)&63]($9,$__value_))|0);
   if ($11) {
    break;
   } else {
    $__len_0=$8;
   }
  }
  $_sum=((($8)+(1))|0);
  $13=(($_0_ph+($_sum<<3))|0);
  $_neg12=((($__len_0)-(1))|0);
  $14=((($_neg12)-($8))|0);
  $_0_ph=$13;$__len_0_ph=$14;
 }
 return (($_0_ph)|0);
}


function __ZNK12_GLOBAL__N_117FixedSetAllocator9GetBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 return (($2)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferI21b2ParticleBodyContactEEPT_S3_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=((($newCapacity)*(28))&-1);
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=((($oldCapacity)*(28))&-1);
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEE8AllocateEi($this,$numberOfObjects){
 $this=($this)|0;
 $numberOfObjects=($numberOfObjects)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZN12_GLOBAL__N_117FixedSetAllocator5ClearEv($1);
 $2=((__ZN12_GLOBAL__N_117FixedSetAllocator8AllocateEii($1,$numberOfObjects))|0);
 return (($2)|0);
}


function __ZNSt3__16__sortIRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEvT0_SC_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $_0129_ph=0,$_0_ph=0,$1=0,$2=0,$3=0,$_0=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$12=0,$ld$0$0=0,$13$0=0,$ld$1$1=0,$13$1=0,$14=0,$ld$2$0=0,$15$0=0;
 var $ld$3$1=0,$15$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0,$24=0,$26=0,$27=0,$28=0,$29=0,$30=0,$32=0,$35=0;
 var $36=0,$37=0,$39=0,$40=0,$_sum=0,$41=0,$42=0,$44=0,$__n_swaps_0=0,$46=0,$47=0,$__j_0=0,$48=0,$49=0,$51=0,$52=0,$53=0,$__i_0=0,$54=0,$56=0;
 var $57=0,$58=0,$60=0,$ld$8$0=0,$61$0=0,$ld$9$1=0,$61$1=0,$ld$10$0=0,$62$0=0,$ld$11$1=0,$62$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$63=0,$__i_1=0,$65=0,$__i_2_ph=0,$__j_1_ph=0;
 var $__i_2=0,$67=0,$68=0,$69=0,$__j_2=0,$70=0,$71=0,$72=0,$74=0,$76=0,$ld$16$0=0,$77$0=0,$ld$17$1=0,$77$1=0,$78=0,$ld$18$0=0,$79$0=0,$ld$19$1=0,$79$1=0,$st$20$0=0;
 var $st$21$1=0,$st$22$0=0,$st$23$1=0,$80=0,$82=0,$83=0,$85=0,$ld$24$0=0,$86$0=0,$ld$25$1=0,$86$1=0,$87=0,$ld$26$0=0,$88$0=0,$ld$27$1=0,$88$1=0,$st$28$0=0,$st$29$1=0,$st$30$0=0,$st$31$1=0;
 var $89=0,$__n_swaps_3=0,$__j_3=0,$91=0,$92=0,$__m_0_ph=0,$__n_swaps_4_ph=0,$__i_3_ph=0,$__j_4_ph=0,$__i_3=0,$94=0,$95=0,$96=0,$__j_5=0,$97=0,$98=0,$99=0,$101=0,$103=0,$ld$32$0=0;
 var $104$0=0,$ld$33$1=0,$104$1=0,$105=0,$ld$34$0=0,$106$0=0,$ld$35$1=0,$106$1=0,$st$36$0=0,$st$37$1=0,$st$38$0=0,$st$39$1=0,$107=0,$108=0,$___m_0=0,$109=0,$__m_2=0,$__n_swaps_5=0,$__i_4=0,$110=0;
 var $112=0,$113=0,$115=0,$ld$40$0=0,$116$0=0,$ld$41$1=0,$116$1=0,$117=0,$ld$42$0=0,$118$0=0,$ld$43$1=0,$118$1=0,$st$44$0=0,$st$45$1=0,$st$46$0=0,$st$47$1=0,$119=0,$__n_swaps_6=0,$121=0,$123=0;
 var $124=0,$125=0,$129=0,$130=0,$131=0,$132=0,$134=0,$136=0,label=0;

 $_0_ph=$__first;$_0129_ph=$__last;
 L1: while(1) {


  $1=$_0129_ph;
  $2=((($_0129_ph)-(8))|0);
  $3=$2;
  $_0=$_0_ph;
  L3: while(1) {

   $4=$_0;
   $5=((($1)-($4))|0);
   $6=$5>>3;
   switch (($6|0)) {
   case 2: {
    label = 4;
    break L1;
    break;
   }
   case 4: {
    label = 7;
    break L1;
    break;
   }
   case 3: {
    label = 6;
    break L1;
    break;
   }
   case 5: {
    label = 8;
    break L1;
    break;
   }
   case 0:case 1: {
    label = 44;
    break L1;
    break;
   }
   default: {
   }
   }
   $32=($5|0)<248;
   if ($32) {
    label = 10;
    break L1;
   }
   $35=($5|0)>7992;
   $36=(((($6|0))/(2))&-1);
   $37=(($_0+($36<<3))|0);
   if ($35) {
    $39=(((($6|0))/(4))&-1);
    $40=(($_0+($39<<3))|0);
    $_sum=((($39)+($36))|0);
    $41=(($_0+($_sum<<3))|0);
    $42=((__ZNSt3__17__sort5IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_SC_SC_T_($_0,$40,$37,$41,$2,$__comp))|0);
    $__n_swaps_0=$42;
   } else {
    $44=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_T_($_0,$37,$2,$__comp))|0);
    $__n_swaps_0=$44;
   }

   $46=((HEAP32[(($__comp)>>2)])|0);
   $47=((FUNCTION_TABLE_iii[($46)&63]($_0,$37))|0);
   do {
    if ($47) {
     $__j_3=$2;$__n_swaps_3=$__n_swaps_0;
    } else {
     $__j_0=$2;
     while(1) {

      $48=((($__j_0)-(8))|0);
      $49=($_0|0)==($48|0);
      if ($49) {
       break;
      }
      $82=((HEAP32[(($__comp)>>2)])|0);
      $83=((FUNCTION_TABLE_iii[($82)&63]($48,$37))|0);
      if ($83) {
       label = 27;
       break;
      } else {
       $__j_0=$48;
      }
     }
     if ((label|0) == 27) {
      label = 0;
      $85=$_0;
      $ld$24$0=(($85)|0);
      $86$0=((HEAP32[(($ld$24$0)>>2)])|0);
      $ld$25$1=(($85+4)|0);
      $86$1=((HEAP32[(($ld$25$1)>>2)])|0);
      $87=$48;
      $ld$26$0=(($87)|0);
      $88$0=((HEAP32[(($ld$26$0)>>2)])|0);
      $ld$27$1=(($87+4)|0);
      $88$1=((HEAP32[(($ld$27$1)>>2)])|0);
      $st$28$0=(($85)|0);
      HEAP32[(($st$28$0)>>2)]=$88$0;
      $st$29$1=(($85+4)|0);
      HEAP32[(($st$29$1)>>2)]=$88$1;
      $st$30$0=(($87)|0);
      HEAP32[(($st$30$0)>>2)]=$86$0;
      $st$31$1=(($87+4)|0);
      HEAP32[(($st$31$1)>>2)]=$86$1;
      $89=((($__n_swaps_0)+(1))|0);
      $__j_3=$48;$__n_swaps_3=$89;
      break;
     }
     $51=(($_0+8)|0);
     $52=((HEAP32[(($__comp)>>2)])|0);
     $53=((FUNCTION_TABLE_iii[($52)&63]($_0,$2))|0);
     if ($53) {
      $__i_1=$51;
     } else {
      $__i_0=$51;
      while(1) {

       $54=($__i_0|0)==($2|0);
       if ($54) {
        label = 44;
        break L1;
       }
       $56=((HEAP32[(($__comp)>>2)])|0);
       $57=((FUNCTION_TABLE_iii[($56)&63]($_0,$__i_0))|0);
       $58=(($__i_0+8)|0);
       if ($57) {
        break;
       } else {
        $__i_0=$58;
       }
      }
      $60=$__i_0;
      $ld$8$0=(($60)|0);
      $61$0=((HEAP32[(($ld$8$0)>>2)])|0);
      $ld$9$1=(($60+4)|0);
      $61$1=((HEAP32[(($ld$9$1)>>2)])|0);
      $ld$10$0=(($3)|0);
      $62$0=((HEAP32[(($ld$10$0)>>2)])|0);
      $ld$11$1=(($3+4)|0);
      $62$1=((HEAP32[(($ld$11$1)>>2)])|0);
      $st$12$0=(($60)|0);
      HEAP32[(($st$12$0)>>2)]=$62$0;
      $st$13$1=(($60+4)|0);
      HEAP32[(($st$13$1)>>2)]=$62$1;
      $st$14$0=(($3)|0);
      HEAP32[(($st$14$0)>>2)]=$61$0;
      $st$15$1=(($3+4)|0);
      HEAP32[(($st$15$1)>>2)]=$61$1;
      $63=(($__i_0+8)|0);
      $__i_1=$63;
     }

     $65=($__i_1|0)==($2|0);
     if ($65) {
      label = 44;
      break L1;
     } else {
      $__j_1_ph=$2;$__i_2_ph=$__i_1;
     }
     while(1) {


      $__i_2=$__i_2_ph;
      while(1) {

       $67=((HEAP32[(($__comp)>>2)])|0);
       $68=((FUNCTION_TABLE_iii[($67)&63]($_0,$__i_2))|0);
       $69=(($__i_2+8)|0);
       if ($68) {
        $__j_2=$__j_1_ph;
        break;
       } else {
        $__i_2=$69;
       }
      }
      while(1) {

       $70=((HEAP32[(($__comp)>>2)])|0);
       $71=((($__j_2)-(8))|0);
       $72=((FUNCTION_TABLE_iii[($70)&63]($_0,$71))|0);
       if ($72) {
        $__j_2=$71;
       } else {
        break;
       }
      }
      $74=($__i_2>>>0)<($71>>>0);
      if (!($74)) {
       $_0=$__i_2;
       continue L3;
      }
      $76=$__i_2;
      $ld$16$0=(($76)|0);
      $77$0=((HEAP32[(($ld$16$0)>>2)])|0);
      $ld$17$1=(($76+4)|0);
      $77$1=((HEAP32[(($ld$17$1)>>2)])|0);
      $78=$71;
      $ld$18$0=(($78)|0);
      $79$0=((HEAP32[(($ld$18$0)>>2)])|0);
      $ld$19$1=(($78+4)|0);
      $79$1=((HEAP32[(($ld$19$1)>>2)])|0);
      $st$20$0=(($76)|0);
      HEAP32[(($st$20$0)>>2)]=$79$0;
      $st$21$1=(($76+4)|0);
      HEAP32[(($st$21$1)>>2)]=$79$1;
      $st$22$0=(($78)|0);
      HEAP32[(($st$22$0)>>2)]=$77$0;
      $st$23$1=(($78+4)|0);
      HEAP32[(($st$23$1)>>2)]=$77$1;
      $80=(($__i_2+8)|0);
      $__j_1_ph=$71;$__i_2_ph=$80;
     }
    }
   } while(0);


   $91=(($_0+8)|0);
   $92=($91>>>0)<($__j_3>>>0);
   L33: do {
    if ($92) {
     $__j_4_ph=$__j_3;$__i_3_ph=$91;$__n_swaps_4_ph=$__n_swaps_3;$__m_0_ph=$37;
     while(1) {




      $__i_3=$__i_3_ph;
      while(1) {

       $94=((HEAP32[(($__comp)>>2)])|0);
       $95=((FUNCTION_TABLE_iii[($94)&63]($__i_3,$__m_0_ph))|0);
       $96=(($__i_3+8)|0);
       if ($95) {
        $__i_3=$96;
       } else {
        $__j_5=$__j_4_ph;
        break;
       }
      }
      while(1) {

       $97=((HEAP32[(($__comp)>>2)])|0);
       $98=((($__j_5)-(8))|0);
       $99=((FUNCTION_TABLE_iii[($97)&63]($98,$__m_0_ph))|0);
       if ($99) {
        break;
       } else {
        $__j_5=$98;
       }
      }
      $101=($__i_3>>>0)>($98>>>0);
      if ($101) {
       $__i_4=$__i_3;$__n_swaps_5=$__n_swaps_4_ph;$__m_2=$__m_0_ph;
       break L33;
      }
      $103=$__i_3;
      $ld$32$0=(($103)|0);
      $104$0=((HEAP32[(($ld$32$0)>>2)])|0);
      $ld$33$1=(($103+4)|0);
      $104$1=((HEAP32[(($ld$33$1)>>2)])|0);
      $105=$98;
      $ld$34$0=(($105)|0);
      $106$0=((HEAP32[(($ld$34$0)>>2)])|0);
      $ld$35$1=(($105+4)|0);
      $106$1=((HEAP32[(($ld$35$1)>>2)])|0);
      $st$36$0=(($103)|0);
      HEAP32[(($st$36$0)>>2)]=$106$0;
      $st$37$1=(($103+4)|0);
      HEAP32[(($st$37$1)>>2)]=$106$1;
      $st$38$0=(($105)|0);
      HEAP32[(($st$38$0)>>2)]=$104$0;
      $st$39$1=(($105+4)|0);
      HEAP32[(($st$39$1)>>2)]=$104$1;
      $107=((($__n_swaps_4_ph)+(1))|0);
      $108=($__m_0_ph|0)==($__i_3|0);
      $___m_0=($108?$98:$__m_0_ph);
      $109=(($__i_3+8)|0);
      $__j_4_ph=$98;$__i_3_ph=$109;$__n_swaps_4_ph=$107;$__m_0_ph=$___m_0;
     }
    } else {
     $__i_4=$91;$__n_swaps_5=$__n_swaps_3;$__m_2=$37;
    }
   } while(0);



   $110=($__i_4|0)==($__m_2|0);
   do {
    if ($110) {
     $__n_swaps_6=$__n_swaps_5;
    } else {
     $112=((HEAP32[(($__comp)>>2)])|0);
     $113=((FUNCTION_TABLE_iii[($112)&63]($__m_2,$__i_4))|0);
     if (!($113)) {
      $__n_swaps_6=$__n_swaps_5;
      break;
     }
     $115=$__i_4;
     $ld$40$0=(($115)|0);
     $116$0=((HEAP32[(($ld$40$0)>>2)])|0);
     $ld$41$1=(($115+4)|0);
     $116$1=((HEAP32[(($ld$41$1)>>2)])|0);
     $117=$__m_2;
     $ld$42$0=(($117)|0);
     $118$0=((HEAP32[(($ld$42$0)>>2)])|0);
     $ld$43$1=(($117+4)|0);
     $118$1=((HEAP32[(($ld$43$1)>>2)])|0);
     $st$44$0=(($115)|0);
     HEAP32[(($st$44$0)>>2)]=$118$0;
     $st$45$1=(($115+4)|0);
     HEAP32[(($st$45$1)>>2)]=$118$1;
     $st$46$0=(($117)|0);
     HEAP32[(($st$46$0)>>2)]=$116$0;
     $st$47$1=(($117+4)|0);
     HEAP32[(($st$47$1)>>2)]=$116$1;
     $119=((($__n_swaps_5)+(1))|0);
     $__n_swaps_6=$119;
    }
   } while(0);

   $121=($__n_swaps_6|0)==0;
   if ($121) {
    $123=((__ZNSt3__127__insertion_sort_incompleteIRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEbT0_SC_T_($_0,$__i_4,$__comp))|0);
    $124=(($__i_4+8)|0);
    $125=((__ZNSt3__127__insertion_sort_incompleteIRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEbT0_SC_T_($124,$_0129_ph,$__comp))|0);
    if ($125) {
     label = 39;
     break;
    }
    if ($123) {
     $_0=$124;
     continue;
    }
   }
   $129=$__i_4;
   $130=((($129)-($4))|0);
   $131=((($1)-($129))|0);
   $132=($130|0)<($131|0);
   if (!($132)) {
    label = 43;
    break;
   }
   __ZNSt3__16__sortIRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEvT0_SC_T_($_0,$__i_4,$__comp);
   $134=(($__i_4+8)|0);
   $_0=$134;
  }
  if ((label|0) == 39) {
   label = 0;
   if ($123) {
    label = 44;
    break;
   } else {
    $_0_ph=$_0;$_0129_ph=$__i_4;
    continue;
   }
  }
  else if ((label|0) == 43) {
   label = 0;
   $136=(($__i_4+8)|0);
   __ZNSt3__16__sortIRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEvT0_SC_T_($136,$_0129_ph,$__comp);
   $_0_ph=$_0;$_0129_ph=$__i_4;
   continue;
  }
 }
 if ((label|0) == 4) {
  $8=((HEAP32[(($__comp)>>2)])|0);
  $9=((($_0129_ph)-(8))|0);
  $10=((FUNCTION_TABLE_iii[($8)&63]($9,$_0))|0);
  if (!($10)) {
   return;
  }
  $12=$_0;
  $ld$0$0=(($12)|0);
  $13$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($12+4)|0);
  $13$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $14=$9;
  $ld$2$0=(($14)|0);
  $15$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($14+4)|0);
  $15$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($12)|0);
  HEAP32[(($st$4$0)>>2)]=$15$0;
  $st$5$1=(($12+4)|0);
  HEAP32[(($st$5$1)>>2)]=$15$1;
  $st$6$0=(($14)|0);
  HEAP32[(($st$6$0)>>2)]=$13$0;
  $st$7$1=(($14+4)|0);
  HEAP32[(($st$7$1)>>2)]=$13$1;
  return;
 }
 else if ((label|0) == 6) {
  $17=(($_0+8)|0);
  $18=((($_0129_ph)-(8))|0);
  $19=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_T_($_0,$17,$18,$__comp))|0);
  return;
 }
 else if ((label|0) == 7) {
  $21=(($_0+8)|0);
  $22=(($_0+16)|0);
  $23=((($_0129_ph)-(8))|0);
  $24=((__ZNSt3__17__sort4IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_SC_T_($_0,$21,$22,$23,$__comp))|0);
  return;
 }
 else if ((label|0) == 8) {
  $26=(($_0+8)|0);
  $27=(($_0+16)|0);
  $28=(($_0+24)|0);
  $29=((($_0129_ph)-(8))|0);
  $30=((__ZNSt3__17__sort5IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_SC_SC_T_($_0,$26,$27,$28,$29,$__comp))|0);
  return;
 }
 else if ((label|0) == 10) {
  __ZNSt3__118__insertion_sort_3IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEvT0_SC_T_($_0,$_0129_ph,$__comp);
  return;
 }
 else if ((label|0) == 44) {
  return;
 }
}


function __ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_T_($__x,$__y,$__z,$__c){
 $__x=($__x)|0;
 $__y=($__y)|0;
 $__z=($__z)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$4=0,$7=0,$ld$0$0=0,$8$0=0,$ld$1$1=0,$8$1=0,$9=0,$ld$2$0=0,$10$0=0,$ld$3$1=0,$10$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$11=0,$12=0;
 var $14=0,$ld$8$0=0,$15$0=0,$ld$9$1=0,$15$1=0,$ld$10$0=0,$16$0=0,$ld$11$1=0,$16$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$18=0,$ld$16$0=0,$19$0=0,$ld$17$1=0,$19$1=0,$21=0,$ld$18$0=0;
 var $22$0=0,$ld$19$1=0,$22$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$24=0,$ld$24$0=0,$25$0=0,$ld$25$1=0,$25$1=0,$st$26$0=0,$st$27$1=0,$st$28$0=0,$st$29$1=0,$26=0,$27=0,$ld$30$0=0,$29$0=0;
 var $ld$31$1=0,$29$1=0,$30=0,$ld$32$0=0,$31$0=0,$ld$33$1=0,$31$1=0,$st$34$0=0,$st$35$1=0,$st$36$0=0,$st$37$1=0,$_0=0,label=0;

 $1=((HEAP32[(($__c)>>2)])|0);
 $2=((FUNCTION_TABLE_iii[($1)&63]($__y,$__x))|0);
 $3=((HEAP32[(($__c)>>2)])|0);
 $4=((FUNCTION_TABLE_iii[($3)&63]($__z,$__y))|0);
 if (!($2)) {
  if (!($4)) {
   $_0=0;

   return (($_0)|0);
  }
  $7=$__y;
  $ld$0$0=(($7)|0);
  $8$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($7+4)|0);
  $8$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $9=$__z;
  $ld$2$0=(($9)|0);
  $10$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($9+4)|0);
  $10$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($7)|0);
  HEAP32[(($st$4$0)>>2)]=$10$0;
  $st$5$1=(($7+4)|0);
  HEAP32[(($st$5$1)>>2)]=$10$1;
  $st$6$0=(($9)|0);
  HEAP32[(($st$6$0)>>2)]=$8$0;
  $st$7$1=(($9+4)|0);
  HEAP32[(($st$7$1)>>2)]=$8$1;
  $11=((HEAP32[(($__c)>>2)])|0);
  $12=((FUNCTION_TABLE_iii[($11)&63]($__y,$__x))|0);
  if (!($12)) {
   $_0=1;

   return (($_0)|0);
  }
  $14=$__x;
  $ld$8$0=(($14)|0);
  $15$0=((HEAP32[(($ld$8$0)>>2)])|0);
  $ld$9$1=(($14+4)|0);
  $15$1=((HEAP32[(($ld$9$1)>>2)])|0);
  $ld$10$0=(($7)|0);
  $16$0=((HEAP32[(($ld$10$0)>>2)])|0);
  $ld$11$1=(($7+4)|0);
  $16$1=((HEAP32[(($ld$11$1)>>2)])|0);
  $st$12$0=(($14)|0);
  HEAP32[(($st$12$0)>>2)]=$16$0;
  $st$13$1=(($14+4)|0);
  HEAP32[(($st$13$1)>>2)]=$16$1;
  $st$14$0=(($7)|0);
  HEAP32[(($st$14$0)>>2)]=$15$0;
  $st$15$1=(($7+4)|0);
  HEAP32[(($st$15$1)>>2)]=$15$1;
  $_0=2;

  return (($_0)|0);
 }
 $18=$__x;
 $ld$16$0=(($18)|0);
 $19$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($18+4)|0);
 $19$1=((HEAP32[(($ld$17$1)>>2)])|0);
 if ($4) {
  $21=$__z;
  $ld$18$0=(($21)|0);
  $22$0=((HEAP32[(($ld$18$0)>>2)])|0);
  $ld$19$1=(($21+4)|0);
  $22$1=((HEAP32[(($ld$19$1)>>2)])|0);
  $st$20$0=(($18)|0);
  HEAP32[(($st$20$0)>>2)]=$22$0;
  $st$21$1=(($18+4)|0);
  HEAP32[(($st$21$1)>>2)]=$22$1;
  $st$22$0=(($21)|0);
  HEAP32[(($st$22$0)>>2)]=$19$0;
  $st$23$1=(($21+4)|0);
  HEAP32[(($st$23$1)>>2)]=$19$1;
  $_0=1;

  return (($_0)|0);
 }
 $24=$__y;
 $ld$24$0=(($24)|0);
 $25$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($24+4)|0);
 $25$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $st$26$0=(($18)|0);
 HEAP32[(($st$26$0)>>2)]=$25$0;
 $st$27$1=(($18+4)|0);
 HEAP32[(($st$27$1)>>2)]=$25$1;
 $st$28$0=(($24)|0);
 HEAP32[(($st$28$0)>>2)]=$19$0;
 $st$29$1=(($24+4)|0);
 HEAP32[(($st$29$1)>>2)]=$19$1;
 $26=((HEAP32[(($__c)>>2)])|0);
 $27=((FUNCTION_TABLE_iii[($26)&63]($__z,$__y))|0);
 if (!($27)) {
  $_0=1;

  return (($_0)|0);
 }
 $ld$30$0=(($24)|0);
 $29$0=((HEAP32[(($ld$30$0)>>2)])|0);
 $ld$31$1=(($24+4)|0);
 $29$1=((HEAP32[(($ld$31$1)>>2)])|0);
 $30=$__z;
 $ld$32$0=(($30)|0);
 $31$0=((HEAP32[(($ld$32$0)>>2)])|0);
 $ld$33$1=(($30+4)|0);
 $31$1=((HEAP32[(($ld$33$1)>>2)])|0);
 $st$34$0=(($24)|0);
 HEAP32[(($st$34$0)>>2)]=$31$0;
 $st$35$1=(($24+4)|0);
 HEAP32[(($st$35$1)>>2)]=$31$1;
 $st$36$0=(($30)|0);
 HEAP32[(($st$36$0)>>2)]=$29$0;
 $st$37$1=(($30+4)|0);
 HEAP32[(($st$37$1)>>2)]=$29$1;
 $_0=2;

 return (($_0)|0);
}


function __ZNSt3__17__sort4IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_SC_T_($__x1,$__x2,$__x3,$__x4,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$7=0,$ld$2$0=0,$8$0=0,$ld$3$1=0,$8$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$9=0,$10=0,$11=0;
 var $13=0,$ld$8$0=0,$14$0=0,$ld$9$1=0,$14$1=0,$ld$10$0=0,$15$0=0,$ld$11$1=0,$15$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$16=0,$17=0,$18=0,$20=0,$ld$16$0=0,$21$0=0,$ld$17$1=0;
 var $21$1=0,$ld$18$0=0,$22$0=0,$ld$19$1=0,$22$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$23=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_T_($__x1,$__x2,$__x3,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&63]($__x4,$__x3))|0);
 if (!($3)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 $5=$__x3;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $7=$__x4;
 $ld$2$0=(($7)|0);
 $8$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($7+4)|0);
 $8$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $st$4$0=(($5)|0);
 HEAP32[(($st$4$0)>>2)]=$8$0;
 $st$5$1=(($5+4)|0);
 HEAP32[(($st$5$1)>>2)]=$8$1;
 $st$6$0=(($7)|0);
 HEAP32[(($st$6$0)>>2)]=$6$0;
 $st$7$1=(($7+4)|0);
 HEAP32[(($st$7$1)>>2)]=$6$1;
 $9=((($1)+(1))|0);
 $10=((HEAP32[(($__c)>>2)])|0);
 $11=((FUNCTION_TABLE_iii[($10)&63]($__x3,$__x2))|0);
 if (!($11)) {
  $__r_0=$9;

  return (($__r_0)|0);
 }
 $13=$__x2;
 $ld$8$0=(($13)|0);
 $14$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $ld$10$0=(($5)|0);
 $15$0=((HEAP32[(($ld$10$0)>>2)])|0);
 $ld$11$1=(($5+4)|0);
 $15$1=((HEAP32[(($ld$11$1)>>2)])|0);
 $st$12$0=(($13)|0);
 HEAP32[(($st$12$0)>>2)]=$15$0;
 $st$13$1=(($13+4)|0);
 HEAP32[(($st$13$1)>>2)]=$15$1;
 $st$14$0=(($5)|0);
 HEAP32[(($st$14$0)>>2)]=$14$0;
 $st$15$1=(($5+4)|0);
 HEAP32[(($st$15$1)>>2)]=$14$1;
 $16=((($1)+(2))|0);
 $17=((HEAP32[(($__c)>>2)])|0);
 $18=((FUNCTION_TABLE_iii[($17)&63]($__x2,$__x1))|0);
 if (!($18)) {
  $__r_0=$16;

  return (($__r_0)|0);
 }
 $20=$__x1;
 $ld$16$0=(($20)|0);
 $21$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $ld$18$0=(($13)|0);
 $22$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($13+4)|0);
 $22$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $st$20$0=(($20)|0);
 HEAP32[(($st$20$0)>>2)]=$22$0;
 $st$21$1=(($20+4)|0);
 HEAP32[(($st$21$1)>>2)]=$22$1;
 $st$22$0=(($13)|0);
 HEAP32[(($st$22$0)>>2)]=$21$0;
 $st$23$1=(($13+4)|0);
 HEAP32[(($st$23$1)>>2)]=$21$1;
 $23=((($1)+(3))|0);
 $__r_0=$23;

 return (($__r_0)|0);
}


function __ZNSt3__17__sort5IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_SC_SC_T_($__x1,$__x2,$__x3,$__x4,$__x5,$__c){
 $__x1=($__x1)|0;
 $__x2=($__x2)|0;
 $__x3=($__x3)|0;
 $__x4=($__x4)|0;
 $__x5=($__x5)|0;
 $__c=($__c)|0;
 var $1=0,$2=0,$3=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$7=0,$ld$2$0=0,$8$0=0,$ld$3$1=0,$8$1=0,$st$4$0=0,$st$5$1=0,$st$6$0=0,$st$7$1=0,$9=0,$10=0,$11=0;
 var $13=0,$ld$8$0=0,$14$0=0,$ld$9$1=0,$14$1=0,$ld$10$0=0,$15$0=0,$ld$11$1=0,$15$1=0,$st$12$0=0,$st$13$1=0,$st$14$0=0,$st$15$1=0,$16=0,$17=0,$18=0,$20=0,$ld$16$0=0,$21$0=0,$ld$17$1=0;
 var $21$1=0,$ld$18$0=0,$22$0=0,$ld$19$1=0,$22$1=0,$st$20$0=0,$st$21$1=0,$st$22$0=0,$st$23$1=0,$23=0,$24=0,$25=0,$27=0,$ld$24$0=0,$28$0=0,$ld$25$1=0,$28$1=0,$ld$26$0=0,$29$0=0,$ld$27$1=0;
 var $29$1=0,$st$28$0=0,$st$29$1=0,$st$30$0=0,$st$31$1=0,$30=0,$__r_0=0,label=0;

 $1=((__ZNSt3__17__sort4IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_SC_T_($__x1,$__x2,$__x3,$__x4,$__c))|0);
 $2=((HEAP32[(($__c)>>2)])|0);
 $3=((FUNCTION_TABLE_iii[($2)&63]($__x5,$__x4))|0);
 if (!($3)) {
  $__r_0=$1;

  return (($__r_0)|0);
 }
 $5=$__x4;
 $ld$0$0=(($5)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($5+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $7=$__x5;
 $ld$2$0=(($7)|0);
 $8$0=((HEAP32[(($ld$2$0)>>2)])|0);
 $ld$3$1=(($7+4)|0);
 $8$1=((HEAP32[(($ld$3$1)>>2)])|0);
 $st$4$0=(($5)|0);
 HEAP32[(($st$4$0)>>2)]=$8$0;
 $st$5$1=(($5+4)|0);
 HEAP32[(($st$5$1)>>2)]=$8$1;
 $st$6$0=(($7)|0);
 HEAP32[(($st$6$0)>>2)]=$6$0;
 $st$7$1=(($7+4)|0);
 HEAP32[(($st$7$1)>>2)]=$6$1;
 $9=((($1)+(1))|0);
 $10=((HEAP32[(($__c)>>2)])|0);
 $11=((FUNCTION_TABLE_iii[($10)&63]($__x4,$__x3))|0);
 if (!($11)) {
  $__r_0=$9;

  return (($__r_0)|0);
 }
 $13=$__x3;
 $ld$8$0=(($13)|0);
 $14$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($13+4)|0);
 $14$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $ld$10$0=(($5)|0);
 $15$0=((HEAP32[(($ld$10$0)>>2)])|0);
 $ld$11$1=(($5+4)|0);
 $15$1=((HEAP32[(($ld$11$1)>>2)])|0);
 $st$12$0=(($13)|0);
 HEAP32[(($st$12$0)>>2)]=$15$0;
 $st$13$1=(($13+4)|0);
 HEAP32[(($st$13$1)>>2)]=$15$1;
 $st$14$0=(($5)|0);
 HEAP32[(($st$14$0)>>2)]=$14$0;
 $st$15$1=(($5+4)|0);
 HEAP32[(($st$15$1)>>2)]=$14$1;
 $16=((($1)+(2))|0);
 $17=((HEAP32[(($__c)>>2)])|0);
 $18=((FUNCTION_TABLE_iii[($17)&63]($__x3,$__x2))|0);
 if (!($18)) {
  $__r_0=$16;

  return (($__r_0)|0);
 }
 $20=$__x2;
 $ld$16$0=(($20)|0);
 $21$0=((HEAP32[(($ld$16$0)>>2)])|0);
 $ld$17$1=(($20+4)|0);
 $21$1=((HEAP32[(($ld$17$1)>>2)])|0);
 $ld$18$0=(($13)|0);
 $22$0=((HEAP32[(($ld$18$0)>>2)])|0);
 $ld$19$1=(($13+4)|0);
 $22$1=((HEAP32[(($ld$19$1)>>2)])|0);
 $st$20$0=(($20)|0);
 HEAP32[(($st$20$0)>>2)]=$22$0;
 $st$21$1=(($20+4)|0);
 HEAP32[(($st$21$1)>>2)]=$22$1;
 $st$22$0=(($13)|0);
 HEAP32[(($st$22$0)>>2)]=$21$0;
 $st$23$1=(($13+4)|0);
 HEAP32[(($st$23$1)>>2)]=$21$1;
 $23=((($1)+(3))|0);
 $24=((HEAP32[(($__c)>>2)])|0);
 $25=((FUNCTION_TABLE_iii[($24)&63]($__x2,$__x1))|0);
 if (!($25)) {
  $__r_0=$23;

  return (($__r_0)|0);
 }
 $27=$__x1;
 $ld$24$0=(($27)|0);
 $28$0=((HEAP32[(($ld$24$0)>>2)])|0);
 $ld$25$1=(($27+4)|0);
 $28$1=((HEAP32[(($ld$25$1)>>2)])|0);
 $ld$26$0=(($20)|0);
 $29$0=((HEAP32[(($ld$26$0)>>2)])|0);
 $ld$27$1=(($20+4)|0);
 $29$1=((HEAP32[(($ld$27$1)>>2)])|0);
 $st$28$0=(($27)|0);
 HEAP32[(($st$28$0)>>2)]=$29$0;
 $st$29$1=(($27+4)|0);
 HEAP32[(($st$29$1)>>2)]=$29$1;
 $st$30$0=(($20)|0);
 HEAP32[(($st$30$0)>>2)]=$28$0;
 $st$31$1=(($20+4)|0);
 HEAP32[(($st$31$1)>>2)]=$28$1;
 $30=((($1)+(4))|0);
 $__r_0=$30;

 return (($__r_0)|0);
}


function __ZNSt3__118__insertion_sort_3IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEvT0_SC_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$5=0,$__i_022=0,$__j_021=0,$6=0,$7=0,$9=0,$ld$0$0=0,$10$0=0,$ld$1$1=0,$10$1=0,$st$2$0=0,$st$3$1=0,$__j_1=0,$__k_0=0;
 var $12=0,$13=0,$ld$4$0=0,$14$0=0,$ld$5$1=0,$14$1=0,$st$6$0=0,$st$7$1=0,$15=0,$17=0,$18=0,$19=0,$ld$8$0=0,$20$0=0,$ld$9$1=0,$20$1=0,$st$10$0=0,$st$11$1=0,$22=0,$23=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $__t=((sp)|0);
 $tmpcast=$__t;
 $1=(($__first+16)|0);
 $2=(($__first+8)|0);
 $3=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_T_($__first,$2,$1,$__comp))|0);
 $4=(($__first+24)|0);
 $5=($4|0)==($__last|0);
 if ($5) {
  STACKTOP=sp;return;
 } else {
  $__j_021=$1;$__i_022=$4;
 }
 while(1) {


  $6=((HEAP32[(($__comp)>>2)])|0);
  $7=((FUNCTION_TABLE_iii[($6)&63]($__i_022,$__j_021))|0);
  if ($7) {
   $9=$__i_022;
   $ld$0$0=(($9)|0);
   $10$0=((HEAP32[(($ld$0$0)>>2)])|0);
   $ld$1$1=(($9+4)|0);
   $10$1=((HEAP32[(($ld$1$1)>>2)])|0);
   $st$2$0=(($__t)|0);
   HEAP32[(($st$2$0)>>2)]=$10$0;
   $st$3$1=(($__t+4)|0);
   HEAP32[(($st$3$1)>>2)]=$10$1;
   $__k_0=$__j_021;$__j_1=$__i_022;
   while(1) {


    $12=$__k_0;
    $13=$__j_1;
    $ld$4$0=(($12)|0);
    $14$0=((HEAP32[(($ld$4$0)>>2)])|0);
    $ld$5$1=(($12+4)|0);
    $14$1=((HEAP32[(($ld$5$1)>>2)])|0);
    $st$6$0=(($13)|0);
    HEAP32[(($st$6$0)>>2)]=$14$0;
    $st$7$1=(($13+4)|0);
    HEAP32[(($st$7$1)>>2)]=$14$1;
    $15=($__k_0|0)==($__first|0);
    if ($15) {
     break;
    }
    $17=((HEAP32[(($__comp)>>2)])|0);
    $18=((($__k_0)-(8))|0);
    $19=((FUNCTION_TABLE_iii[($17)&63]($tmpcast,$18))|0);
    if ($19) {
     $__j_1=$__k_0;$__k_0=$18;
    } else {
     break;
    }
   }
   $ld$8$0=(($__t)|0);
   $20$0=((HEAP32[(($ld$8$0)>>2)])|0);
   $ld$9$1=(($__t+4)|0);
   $20$1=((HEAP32[(($ld$9$1)>>2)])|0);
   $st$10$0=(($12)|0);
   HEAP32[(($st$10$0)>>2)]=$20$0;
   $st$11$1=(($12+4)|0);
   HEAP32[(($st$11$1)>>2)]=$20$1;
  }
  $22=(($__i_022+8)|0);
  $23=($22|0)==($__last|0);
  if ($23) {
   break;
  } else {
   $__j_021=$__i_022;$__i_022=$22;
  }
 }
 STACKTOP=sp;return;
}


function __ZNSt3__127__insertion_sort_incompleteIRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEbT0_SC_T_($__first,$__last,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__comp=($__comp)|0;
 var $__t=0,$tmpcast=0,$1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$10=0,$ld$0$0=0,$11$0=0,$ld$1$1=0,$11$1=0,$12=0,$ld$2$0=0,$13$0=0,$ld$3$1=0,$13$1=0,$st$4$0=0;
 var $st$5$1=0,$st$6$0=0,$st$7$1=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0,$24=0,$25=0,$26=0,$27=0,$28=0,$30=0,$31=0,$32=0,$33=0,$34=0;
 var $__i_049=0,$__count_048=0,$__j_047=0,$35=0,$36=0,$38=0,$ld$8$0=0,$39$0=0,$ld$9$1=0,$39$1=0,$st$10$0=0,$st$11$1=0,$__j_1=0,$__k_0=0,$41=0,$42=0,$ld$12$0=0,$43$0=0,$ld$13$1=0,$43$1=0;
 var $st$14$0=0,$st$15$1=0,$44=0,$46=0,$47=0,$48=0,$ld$16$0=0,$49$0=0,$ld$17$1=0,$49$1=0,$st$18$0=0,$st$19$1=0,$50=0,$51=0,$53=0,$54=0,$__count_1=0,$56=0,$57=0,$_0=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $__t=((sp)|0);
 $tmpcast=$__t;
 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>3;
 switch (($4|0)) {
 case 2: {
  $6=((HEAP32[(($__comp)>>2)])|0);
  $7=((($__last)-(8))|0);
  $8=((FUNCTION_TABLE_iii[($6)&63]($7,$__first))|0);
  if (!($8)) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  }
  $10=$__first;
  $ld$0$0=(($10)|0);
  $11$0=((HEAP32[(($ld$0$0)>>2)])|0);
  $ld$1$1=(($10+4)|0);
  $11$1=((HEAP32[(($ld$1$1)>>2)])|0);
  $12=$7;
  $ld$2$0=(($12)|0);
  $13$0=((HEAP32[(($ld$2$0)>>2)])|0);
  $ld$3$1=(($12+4)|0);
  $13$1=((HEAP32[(($ld$3$1)>>2)])|0);
  $st$4$0=(($10)|0);
  HEAP32[(($st$4$0)>>2)]=$13$0;
  $st$5$1=(($10+4)|0);
  HEAP32[(($st$5$1)>>2)]=$13$1;
  $st$6$0=(($12)|0);
  HEAP32[(($st$6$0)>>2)]=$11$0;
  $st$7$1=(($12+4)|0);
  HEAP32[(($st$7$1)>>2)]=$11$1;
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 5: {
  $24=(($__first+8)|0);
  $25=(($__first+16)|0);
  $26=(($__first+24)|0);
  $27=((($__last)-(8))|0);
  $28=((__ZNSt3__17__sort5IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_SC_SC_T_($__first,$24,$25,$26,$27,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 4: {
  $19=(($__first+8)|0);
  $20=(($__first+16)|0);
  $21=((($__last)-(8))|0);
  $22=((__ZNSt3__17__sort4IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_SC_T_($__first,$19,$20,$21,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 3: {
  $15=(($__first+8)|0);
  $16=((($__last)-(8))|0);
  $17=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_T_($__first,$15,$16,$__comp))|0);
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 case 0:case 1: {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
  break;
 }
 default: {
  $30=(($__first+16)|0);
  $31=(($__first+8)|0);
  $32=((__ZNSt3__17__sort3IRPFbRKN12_GLOBAL__N_115LightweightPairIP9b2FixtureiEES7_EPS5_EEjT0_SC_SC_T_($__first,$31,$30,$__comp))|0);
  $33=(($__first+24)|0);
  $34=($33|0)==($__last|0);
  if ($34) {
   $_0=1;

   STACKTOP=sp;return (($_0)|0);
  } else {
   $__j_047=$30;$__count_048=0;$__i_049=$33;
  }
  while(1) {



   $35=((HEAP32[(($__comp)>>2)])|0);
   $36=((FUNCTION_TABLE_iii[($35)&63]($__i_049,$__j_047))|0);
   if ($36) {
    $38=$__i_049;
    $ld$8$0=(($38)|0);
    $39$0=((HEAP32[(($ld$8$0)>>2)])|0);
    $ld$9$1=(($38+4)|0);
    $39$1=((HEAP32[(($ld$9$1)>>2)])|0);
    $st$10$0=(($__t)|0);
    HEAP32[(($st$10$0)>>2)]=$39$0;
    $st$11$1=(($__t+4)|0);
    HEAP32[(($st$11$1)>>2)]=$39$1;
    $__k_0=$__j_047;$__j_1=$__i_049;
    while(1) {


     $41=$__k_0;
     $42=$__j_1;
     $ld$12$0=(($41)|0);
     $43$0=((HEAP32[(($ld$12$0)>>2)])|0);
     $ld$13$1=(($41+4)|0);
     $43$1=((HEAP32[(($ld$13$1)>>2)])|0);
     $st$14$0=(($42)|0);
     HEAP32[(($st$14$0)>>2)]=$43$0;
     $st$15$1=(($42+4)|0);
     HEAP32[(($st$15$1)>>2)]=$43$1;
     $44=($__k_0|0)==($__first|0);
     if ($44) {
      break;
     }
     $46=((HEAP32[(($__comp)>>2)])|0);
     $47=((($__k_0)-(8))|0);
     $48=((FUNCTION_TABLE_iii[($46)&63]($tmpcast,$47))|0);
     if ($48) {
      $__j_1=$__k_0;$__k_0=$47;
     } else {
      break;
     }
    }
    $ld$16$0=(($__t)|0);
    $49$0=((HEAP32[(($ld$16$0)>>2)])|0);
    $ld$17$1=(($__t+4)|0);
    $49$1=((HEAP32[(($ld$17$1)>>2)])|0);
    $st$18$0=(($41)|0);
    HEAP32[(($st$18$0)>>2)]=$49$0;
    $st$19$1=(($41+4)|0);
    HEAP32[(($st$19$1)>>2)]=$49$1;
    $50=((($__count_048)+(1))|0);
    $51=($50|0)==8;
    if ($51) {
     break;
    } else {
     $__count_1=$50;
    }
   } else {
    $__count_1=$__count_048;
   }

   $56=(($__i_049+8)|0);
   $57=($56|0)==($__last|0);
   if ($57) {
    $_0=1;
    label = 15;
    break;
   } else {
    $__j_047=$__i_049;$__count_048=$__count_1;$__i_049=$56;
   }
  }
  if ((label|0) == 15) {

   STACKTOP=sp;return (($_0)|0);
  }
  $53=(($__i_049+8)|0);
  $54=($53|0)==($__last|0);
  $_0=$54;

  STACKTOP=sp;return (($_0)|0);
 }
 }
  return 0;
}


function __ZN12_GLOBAL__N_118FixtureParticleSetC2EP16b2StackAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEEC2EP16b2StackAllocator($1,$allocator);
 return;
}


function __ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIP9b2FixtureiEEEC2EP16b2StackAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN12_GLOBAL__N_117FixedSetAllocatorC2EP16b2StackAllocator($1,$allocator);
 return;
}


function __ZN12_GLOBAL__N_117FixedSetAllocatorC2EP16b2StackAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+4)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+8)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+12)|0);
 HEAP32[(($4)>>2)]=$allocator;
 return;
}


function __ZN17b2ParticlePairSetD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN12_GLOBAL__N_117FixedSetAllocatorD2Ev($1);
 return;
}


function __ZN16b2ParticleSystem21RequestGrowableBufferI17b2ParticleContactEEPT_S3_iPi($this,$buffer,$count,$capacity){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $count=($count)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$_=0,$6=0,$_0=0,label=0;

 $1=((HEAP32[(($capacity)>>2)])|0);
 $2=($1|0)>($count|0);
 if ($2) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=($count|0)==0;
 $5=$count<<1;
 $_=($4?256:$5);
 $6=((__ZN16b2ParticleSystem16ReallocateBufferI17b2ParticleContactEEPT_S3_ii($this,$buffer,$1,$_))|0);
 HEAP32[(($capacity)>>2)]=$_;
 $_0=$6;

 return (($_0)|0);
}


function __ZNK17b2ParticlePairSet4FindERKN12_GLOBAL__N_115LightweightPairIiiEE($this,$pair){
 $this=($this)|0;
 $pair=($pair)|0;
 var $swapped=0,$1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$index_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $swapped=((sp)|0);
 $1=(($this)|0);
 $2=((__ZL23FindItemIndexInFixedSetIN12_GLOBAL__N_115LightweightPairIiiEEEiRKNS0_22TypedFixedSetAllocatorIT_EERKS4_($1,$pair))|0);
 $3=($2|0)<0;
 if (!($3)) {
  $index_0=$2;

  STACKTOP=sp;return (($index_0)|0);
 }
 $5=(($pair+4)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=(($swapped)|0);
 HEAP32[(($7)>>2)]=$6;
 $8=(($pair)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($swapped+4)|0);
 HEAP32[(($10)>>2)]=$9;
 $11=((__ZL23FindItemIndexInFixedSetIN12_GLOBAL__N_115LightweightPairIiiEEEiRKNS0_22TypedFixedSetAllocatorIT_EERKS4_($1,$swapped))|0);
 $index_0=$11;

 STACKTOP=sp;return (($index_0)|0);
}


function __ZL23FindItemIndexInFixedSetIN12_GLOBAL__N_115LightweightPairIiiEEEiRKNS0_22TypedFixedSetAllocatorIT_EERKS4_($set,$item){
 $set=($set)|0;
 $item=($item)|0;
 var $1=0,$2=0,$3=0,$4=0,$6=0,$7=0,$8=0,$9=0,$10=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $2=(($set)|0);
 $3=((__ZNK12_GLOBAL__N_117FixedSetAllocator8GetCountEv($2))|0);
 $4=($3|0)==0;
 if ($4) {
  $_0=-1;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=((__ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE9GetBufferEv($set))|0);
 $7=(($6+($3<<3))|0);
 $8=$1;
 HEAP32[(($1)>>2)]=26;
 $9=((__ZNSt3__113__lower_boundIRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS4_S3_EET0_SA_SA_RKT1_T_($6,$7,$item,$1))|0);
 $10=((__ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE8GetIndexEPKS2_($set,$9))|0);
 $_0=$10;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE9GetBufferEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK12_GLOBAL__N_117FixedSetAllocator9GetBufferEv($1))|0);
 $3=$2;
 return (($3)|0);
}


function __ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE8GetIndexEPKS2_($this,$item){
 $this=($this)|0;
 $item=($item)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$_0=0,label=0;

 $1=($item|0)==0;
 do {
  if (!($1)) {
   $3=((__ZNK12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEE9GetBufferEv($this))|0);
   $4=$item;
   $5=$3;
   $6=((($4)-($5))|0);
   $7=$6>>>3;
   $8=(($this)|0);
   $9=((__ZNK12_GLOBAL__N_117FixedSetAllocator14GetValidBufferEv($8))|0);
   $10=(($9+$7)|0);
   $11=((HEAP8[($10)])|0);
   $12=(($11<<24)>>24)==0;
   if ($12) {
    break;
   } else {
    $_0=$7;
   }

   return (($_0)|0);
  }
 } while(0);
 $_0=-1;

 return (($_0)|0);
}


function __ZNSt3__113__lower_boundIRPFbRKN12_GLOBAL__N_115LightweightPairIiiEES5_EPS4_S3_EET0_SA_SA_RKT1_T_($__first,$__last,$__value_,$__comp){
 $__first=($__first)|0;
 $__last=($__last)|0;
 $__value_=($__value_)|0;
 $__comp=($__comp)|0;
 var $1=0,$2=0,$3=0,$4=0,$__len_0_ph=0,$_0_ph=0,$__len_0=0,$6=0,$8=0,$9=0,$10=0,$11=0,$_sum=0,$13=0,$_neg12=0,$14=0,label=0;

 $1=$__last;
 $2=$__first;
 $3=((($1)-($2))|0);
 $4=$3>>3;
 $_0_ph=$__first;$__len_0_ph=$4;
 L1: while(1) {


  $__len_0=$__len_0_ph;
  while(1) {

   $6=($__len_0|0)==0;
   if ($6) {
    break L1;
   }
   $8=(((($__len_0|0))/(2))&-1);
   $9=(($_0_ph+($8<<3))|0);
   $10=((HEAP32[(($__comp)>>2)])|0);
   $11=((FUNCTION_TABLE_iii[($10)&63]($9,$__value_))|0);
   if ($11) {
    break;
   } else {
    $__len_0=$8;
   }
  }
  $_sum=((($8)+(1))|0);
  $13=(($_0_ph+($_sum<<3))|0);
  $_neg12=((($__len_0)-(1))|0);
  $14=((($_neg12)-($8))|0);
  $_0_ph=$13;$__len_0_ph=$14;
 }
 return (($_0_ph)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferI17b2ParticleContactEEPT_S3_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=((($newCapacity)*(24))&-1);
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=((($oldCapacity)*(24))&-1);
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN17b2ParticlePairSetC2EP16b2StackAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEEC2EP16b2StackAllocator($1,$allocator);
 return;
}


function __ZN12_GLOBAL__N_122TypedFixedSetAllocatorINS_15LightweightPairIiiEEEC2EP16b2StackAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN12_GLOBAL__N_117FixedSetAllocatorC2EP16b2StackAllocator($1,$allocator);
 return;
}


function __ZZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterEEN20UpdateTriadsCallbackD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterEEN20UpdateTriadsCallbackC2EPS_PS1_($this,$system,$filter){
 $this=($this)|0;
 $system=($system)|0;
 $filter=($filter)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this)|0);
 __ZN16b2VoronoiDiagram12NodeCallbackC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4296;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=$system;
 $4=(($this+8)|0);
 HEAP32[(($4)>>2)]=$filter;
 return;
}


function __ZN16b2VoronoiDiagram12NodeCallbackC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=4480;
 return;
}


function __ZZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterEEN20UpdateTriadsCallbackD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterEEN20UpdateTriadsCallbackclEiii($this,$a,$b,$c){
 $this=($this)|0;
 $a=($a)|0;
 $b=($b)|0;
 $c=($c)|0;
 var $dab=0,$dbc=0,$dca=0,$midPoint=0,$1=0,$2=0,$3=0,$tmpcast=0,$4=0,$tmpcast50=0,$5=0,$tmpcast51=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0;
 var $14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0;
 var $36=0,$37=.0,$38=.0,$39=.0,$40=0,$42=.0,$43=0,$45=.0,$46=0,$48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0;
 var $59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$75=0,$76=.0,$78=.0,$79=0,$81=0;
 var $82=.0,$84=.0,$85=.0,$86=0,$88=0,$89=.0,$91=.0,$92=.0,$93=0,$94=0,$95=0,$ld$0$0=0,$96$0=0,$ld$1$1=0,$96$1=0,$st$2$0=0,$st$3$1=0,$97=0,$98=0,$ld$4$0=0;
 var $99$0=0,$ld$5$1=0,$99$1=0,$st$6$0=0,$st$7$1=0,$100=0,$101=0,$ld$8$0=0,$102$0=0,$ld$9$1=0,$102$1=0,$st$10$0=0,$st$11$1=0,$103=.0,$104=.0,$105=0,$106=.0,$107=.0,$108=0,$109=.0;
 var $110=.0,$111=0,$112=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=0,$118=0,$119=0,$120=0,$121=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $dab=((sp)|0);
 $dbc=(((sp)+(8))|0);
 $dca=(((sp)+(16))|0);
 $midPoint=(((sp)+(24))|0);
 $1=(((sp)+(32))|0);
 $2=(((sp)+(40))|0);
 $3=(((sp)+(48))|0);
 $tmpcast=$3;
 $4=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast50=$4;
 $5=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast51=$5;
 $6=(($this+4)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=(($7+104)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=(($9+($a<<2))|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=(($9+($b<<2))|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=(($9+($c<<2))|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=$13|$11;
 $17=$16|$15;
 $18=$17&16;
 $19=($18|0)==0;
 if ($19) {
  STACKTOP=sp;return;
 }
 $21=(($this+8)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=$22;
 $24=((HEAP32[(($23)>>2)])|0);
 $25=(($24+16)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=((FUNCTION_TABLE_iiiii[($26)&15]($22,$a,$b,$c))|0);
 if (!($27)) {
  STACKTOP=sp;return;
 }
 $29=((HEAP32[(($6)>>2)])|0);
 $30=(($29+112)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 $32=(($31+($a<<3))|0);
 $33=(($31+($b<<3))|0);
 $34=(($31+($c<<3))|0);
 __ZmiRK6b2Vec2S1_($dab,$32,$33);
 __ZmiRK6b2Vec2S1_($dbc,$33,$34);
 __ZmiRK6b2Vec2S1_($dca,$34,$32);
 $35=((HEAP32[(($6)>>2)])|0);
 $36=(($35+48)|0);
 $37=(+(HEAPF32[(($36)>>2)]));
 $38=($37)*((4.0));
 $39=(+(__Z5b2DotRK6b2Vec2S1_($dab,$dab)));
 $40=$39>$38;
 if ($40) {
  STACKTOP=sp;return;
 }
 $42=(+(__Z5b2DotRK6b2Vec2S1_($dbc,$dbc)));
 $43=$42>$38;
 if ($43) {
  STACKTOP=sp;return;
 }
 $45=(+(__Z5b2DotRK6b2Vec2S1_($dca,$dca)));
 $46=$45>$38;
 if ($46) {
  STACKTOP=sp;return;
 }
 $48=(($35+268)|0);
 $49=((HEAP32[(($48)>>2)])|0);
 $50=(($35+260)|0);
 $51=((HEAP32[(($50)>>2)])|0);
 $52=(($35+264)|0);
 $53=((__ZN16b2ParticleSystem21RequestGrowableBufferINS_5TriadEEEPT_S3_iPi($35,$49,$51,$52))|0);
 $54=((HEAP32[(($6)>>2)])|0);
 $55=(($54+268)|0);
 HEAP32[(($55)>>2)]=$53;
 $56=((HEAP32[(($6)>>2)])|0);
 $57=(($56+160)|0);
 $58=((HEAP32[(($57)>>2)])|0);
 $59=(($58+($a<<2))|0);
 $60=((HEAP32[(($59)>>2)])|0);
 $61=(($58+($b<<2))|0);
 $62=((HEAP32[(($61)>>2)])|0);
 $63=(($58+($c<<2))|0);
 $64=((HEAP32[(($63)>>2)])|0);
 $65=(($56+260)|0);
 $66=((HEAP32[(($65)>>2)])|0);
 $67=(($56+268)|0);
 $68=((HEAP32[(($67)>>2)])|0);
 $69=(($68+((($66)*(60))&-1))|0);
 HEAP32[(($69)>>2)]=$a;
 $70=(($68+((($66)*(60))&-1)+4)|0);
 HEAP32[(($70)>>2)]=$b;
 $71=(($68+((($66)*(60))&-1)+8)|0);
 HEAP32[(($71)>>2)]=$c;
 $72=(($68+((($66)*(60))&-1)+12)|0);
 HEAP32[(($72)>>2)]=$17;
 $73=($60|0)==0;
 if ($73) {
  $78=1.0;
 } else {
  $75=(($60+16)|0);
  $76=(+(HEAPF32[(($75)>>2)]));
  $78=$76;
 }

 $79=($62|0)==0;
 if ($79) {
  $84=1.0;
 } else {
  $81=(($62+16)|0);
  $82=(+(HEAPF32[(($81)>>2)]));
  $84=$82;
 }

 $85=(+(__Z5b2MinIfET_S0_S0_($78,$84)));
 $86=($64|0)==0;
 if ($86) {
  $91=1.0;
 } else {
  $88=(($64+16)|0);
  $89=(+(HEAPF32[(($88)>>2)]));
  $91=$89;
 }

 $92=(+(__Z5b2MinIfET_S0_S0_($85,$91)));
 $93=(($68+((($66)*(60))&-1)+16)|0);
 HEAPF32[(($93)>>2)]=$92;
 __ZplRK6b2Vec2S1_($2,$32,$33);
 __ZplRK6b2Vec2S1_($1,$2,$34);
 __ZmlfRK6b2Vec2($midPoint,0.3333333432674408,$1);
 $94=(($68+((($66)*(60))&-1)+20)|0);
 __ZmiRK6b2Vec2S1_($tmpcast,$32,$midPoint);
 $95=$94;
 $ld$0$0=(($3)|0);
 $96$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($3+4)|0);
 $96$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($95)|0);
 HEAP32[(($st$2$0)>>2)]=$96$0;
 $st$3$1=(($95+4)|0);
 HEAP32[(($st$3$1)>>2)]=$96$1;
 $97=(($68+((($66)*(60))&-1)+28)|0);
 __ZmiRK6b2Vec2S1_($tmpcast50,$33,$midPoint);
 $98=$97;
 $ld$4$0=(($4)|0);
 $99$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($4+4)|0);
 $99$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($98)|0);
 HEAP32[(($st$6$0)>>2)]=$99$0;
 $st$7$1=(($98+4)|0);
 HEAP32[(($st$7$1)>>2)]=$99$1;
 $100=(($68+((($66)*(60))&-1)+36)|0);
 __ZmiRK6b2Vec2S1_($tmpcast51,$34,$midPoint);
 $101=$100;
 $ld$8$0=(($5)|0);
 $102$0=((HEAP32[(($ld$8$0)>>2)])|0);
 $ld$9$1=(($5+4)|0);
 $102$1=((HEAP32[(($ld$9$1)>>2)])|0);
 $st$10$0=(($101)|0);
 HEAP32[(($st$10$0)>>2)]=$102$0;
 $st$11$1=(($101+4)|0);
 HEAP32[(($st$11$1)>>2)]=$102$1;
 $103=(+(__Z5b2DotRK6b2Vec2S1_($dca,$dab)));
 $104=((-.0))-($103);
 $105=(($68+((($66)*(60))&-1)+44)|0);
 HEAPF32[(($105)>>2)]=$104;
 $106=(+(__Z5b2DotRK6b2Vec2S1_($dab,$dbc)));
 $107=((-.0))-($106);
 $108=(($68+((($66)*(60))&-1)+48)|0);
 HEAPF32[(($108)>>2)]=$107;
 $109=(+(__Z5b2DotRK6b2Vec2S1_($dbc,$dca)));
 $110=((-.0))-($109);
 $111=(($68+((($66)*(60))&-1)+52)|0);
 HEAPF32[(($111)>>2)]=$110;
 $112=(+(__Z7b2CrossRK6b2Vec2S1_($32,$33)));
 $113=(+(__Z7b2CrossRK6b2Vec2S1_($33,$34)));
 $114=($112)+($113);
 $115=(+(__Z7b2CrossRK6b2Vec2S1_($34,$32)));
 $116=($114)+($115);
 $117=(($68+((($66)*(60))&-1)+56)|0);
 HEAPF32[(($117)>>2)]=$116;
 $118=((HEAP32[(($6)>>2)])|0);
 $119=(($118+260)|0);
 $120=((HEAP32[(($119)>>2)])|0);
 $121=((($120)+(1))|0);
 HEAP32[(($119)>>2)]=$121;
 STACKTOP=sp;return;
}


function __ZN16b2ParticleSystem21RequestGrowableBufferINS_5TriadEEEPT_S3_iPi($this,$buffer,$count,$capacity){
 $this=($this)|0;
 $buffer=($buffer)|0;
 $count=($count)|0;
 $capacity=($capacity)|0;
 var $1=0,$2=0,$4=0,$5=0,$_=0,$6=0,$_0=0,label=0;

 $1=((HEAP32[(($capacity)>>2)])|0);
 $2=($1|0)>($count|0);
 if ($2) {
  $_0=$buffer;

  return (($_0)|0);
 }
 $4=($count|0)==0;
 $5=$count<<1;
 $_=($4?256:$5);
 $6=((__ZN16b2ParticleSystem16ReallocateBufferINS_5TriadEEEPT_S3_ii($this,$buffer,$1,$_))|0);
 HEAP32[(($capacity)>>2)]=$_;
 $_0=$6;

 return (($_0)|0);
}


function __ZN16b2ParticleSystem16ReallocateBufferINS_5TriadEEEPT_S3_ii($this,$oldBuffer,$oldCapacity,$newCapacity){
 $this=($this)|0;
 $oldBuffer=($oldBuffer)|0;
 $oldCapacity=($oldCapacity)|0;
 $newCapacity=($newCapacity)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$12=0,label=0;

 $1=(($this+376)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2)|0);
 $4=((($newCapacity)*(60))&-1);
 $5=((__ZN16b2BlockAllocator8AllocateEi($3,$4))|0);
 $6=$5;
 $7=($oldBuffer|0)==0;
 if ($7) {
  return (($6)|0);
 }
 $9=$oldBuffer;
 $10=((($oldCapacity)*(60))&-1);
 (_memcpy((($5)|0), (($9)|0), $10)|0);
 $11=((HEAP32[(($1)>>2)])|0);
 $12=(($11)|0);
 __ZN16b2BlockAllocator4FreeEPvi($12,$9,$10);
 return (($6)|0);
}


function __ZN16b2VoronoiDiagram12NodeCallbackD1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN16b2VoronoiDiagram12NodeCallbackD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZNK15b2ParticleGroup13GetGroupFlagsEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this+12)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=$2&-25;
 return (($3)|0);
}


function __ZZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEvEN14ReactiveFilterD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEvEN14ReactiveFilterC2EPj($this,$flagsBuffer){
 $this=($this)|0;
 $flagsBuffer=($flagsBuffer)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 __ZN16b2ParticleSystem16ConnectionFilterC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4200;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=$flagsBuffer;
 return;
}


function __ZN16b2ParticleSystem16ConnectionFilterC2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 HEAP32[(($1)>>2)]=4512;
 return;
}


function __ZZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEvEN14ReactiveFilterD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEvENK14ReactiveFilter11IsNecessaryEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($2+($index<<2))|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$4&4096;
 $6=($5|0)!=0;
 return (($6)|0);
}


function __ZNK16b2ParticleSystem16ConnectionFilter16ShouldCreatePairEii($this,$a,$b){
 $this=($this)|0;
 $a=($a)|0;
 $b=($b)|0;
 var label=0;

 return ((1)|0);
}


function __ZNK16b2ParticleSystem16ConnectionFilter17ShouldCreateTriadEiii($this,$a,$b,$c){
 $this=($this)|0;
 $a=($a)|0;
 $b=($b)|0;
 $c=($c)|0;
 var label=0;

 return ((1)|0);
}


function __ZN16b2ParticleSystem16ConnectionFilterD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZNK16b2ParticleSystem16ConnectionFilter11IsNecessaryEi($this,$index){
 $this=($this)|0;
 $index=($index)|0;
 var label=0;

 return ((1)|0);
}


function __ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_EN24JoinParticleGroupsFilterD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_EN24JoinParticleGroupsFilterC2Ei($this,$threshold){
 $this=($this)|0;
 $threshold=($threshold)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=(($this)|0);
 __ZN16b2ParticleSystem16ConnectionFilterC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4368;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=$threshold;
 return;
}


function __ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_EN24JoinParticleGroupsFilterD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_ENK24JoinParticleGroupsFilter16ShouldCreatePairEii($this,$a,$b){
 $this=($this)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$4=0,$or_cond=0,$_=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)<=($a|0);
 $4=($2|0)>($b|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_=$4&$3;
  return (($_)|0);
 } else {
  return ((1)|0);
 }
  return 0;
}


function __ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_ENK24JoinParticleGroupsFilter17ShouldCreateTriadEiii($this,$a,$b,$c){
 $this=($this)|0;
 $a=($a)|0;
 $b=($b)|0;
 $c=($c)|0;
 var $1=0,$2=0,$3=0,$4=0,$or_cond=0,$5=0,$or_cond7=0,$or_cond8=0,$7=0,$not_or_cond8=0,$_=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>($a|0);
 $4=($2|0)>($b|0);
 $or_cond=$3|$4;
 $5=($2|0)>($c|0);
 $or_cond7=$or_cond|$5;
 if ($or_cond7) {
  $or_cond8=$3&$4;
  $7=($2|0)<=($c|0);
  $not_or_cond8=$or_cond8^1;
  $_=$7|$not_or_cond8;
  return (($_)|0);
 } else {
  return ((0)|0);
 }
  return 0;
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformEN14CompositeShapeD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformEN14CompositeShapeC2ES4_i($this,$shapes,$shapeCount){
 $this=($this)|0;
 $shapes=($shapes)|0;
 $shapeCount=($shapeCount)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this)|0);
 __ZN7b2ShapeC2Ev($1);
 $2=(($this)|0);
 HEAP32[(($2)>>2)]=4240;
 $3=(($this+12)|0);
 HEAP32[(($3)>>2)]=$shapes;
 $4=(($this+16)|0);
 HEAP32[(($4)>>2)]=$shapeCount;
 return;
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformEN14CompositeShapeD0Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=$this;
 __ZdlPv($1);
 return;
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape5CloneEP16b2BlockAllocator($this,$allocator){
 $this=($this)|0;
 $allocator=($allocator)|0;
 var label=0;

 return ((0)|0);
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape13GetChildCountEv($this){
 $this=($this)|0;
 var label=0;

 return ((1)|0);
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape9TestPointESA_RK6b2Vec2($this,$xf,$p){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 var $1=0,$2=0,$i_0=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$_0=0,label=0;

 $1=(($this+16)|0);
 $2=(($this+12)|0);
 $i_0=0;
 while(1) {

  $4=((HEAP32[(($1)>>2)])|0);
  $5=($i_0|0)<($4|0);
  if (!($5)) {
   $_0=0;
   label = 4;
   break;
  }
  $7=((HEAP32[(($2)>>2)])|0);
  $8=(($7+($i_0<<2))|0);
  $9=((HEAP32[(($8)>>2)])|0);
  $10=$9;
  $11=((HEAP32[(($10)>>2)])|0);
  $12=(($11+16)|0);
  $13=((HEAP32[(($12)>>2)])|0);
  $14=((FUNCTION_TABLE_iiii[($13)&31]($9,$xf,$p))|0);
  $15=((($i_0)+(1))|0);
  if ($14) {
   $_0=1;
   label = 4;
   break;
  } else {
   $i_0=$15;
  }
 }
 if ((label|0) == 4) {

  return (($_0)|0);
 }
  return 0;
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape15ComputeDistanceESA_RK6b2Vec2PfPSC_i($this,$xf,$p,$distance,$normal,$childIndex){
 $this=($this)|0;
 $xf=($xf)|0;
 $p=($p)|0;
 $distance=($distance)|0;
 $normal=($normal)|0;
 $childIndex=($childIndex)|0;
 var label=0;

 return;
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputSA_i($this,$output,$input,$transform,$childIndex){
 $this=($this)|0;
 $output=($output)|0;
 $input=($input)|0;
 $transform=($transform)|0;
 $childIndex=($childIndex)|0;
 var label=0;

 return ((0)|0);
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape11ComputeAABBEP6b2AABBSA_i($this,$aabb,$xf,$childIndex){
 $this=($this)|0;
 $aabb=($aabb)|0;
 $xf=($xf)|0;
 $childIndex=($childIndex)|0;
 var $subaabb=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$i_013=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$j_012=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $subaabb=((sp)|0);
 $1=(($aabb)|0);
 HEAPF32[(($1)>>2)]=3.4028234663852886e+38;
 $2=(($aabb+4)|0);
 HEAPF32[(($2)>>2)]=3.4028234663852886e+38;
 $3=(($aabb+8)|0);
 HEAPF32[(($3)>>2)]=-3.4028234663852886e+38;
 $4=(($aabb+12)|0);
 HEAPF32[(($4)>>2)]=-3.4028234663852886e+38;
 $5=(($this+16)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)>0;
 if (!($7)) {
  STACKTOP=sp;return;
 }
 $8=(($this+12)|0);
 $i_013=0;
 while(1) {

  $10=((HEAP32[(($8)>>2)])|0);
  $11=(($10+($i_013<<2))|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=$12;
  $14=((HEAP32[(($13)>>2)])|0);
  $15=(($14+12)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  $17=((FUNCTION_TABLE_ii[($16)&31]($12))|0);
  $18=($17|0)>0;
  if ($18) {
   $j_012=0;
   while(1) {

    $19=((HEAP32[(($8)>>2)])|0);
    $20=(($19+($i_013<<2))|0);
    $21=((HEAP32[(($20)>>2)])|0);
    $22=$21;
    $23=((HEAP32[(($22)>>2)])|0);
    $24=(($23+28)|0);
    $25=((HEAP32[(($24)>>2)])|0);
    FUNCTION_TABLE_viiii[($25)&63]($21,$subaabb,$xf,$j_012);
    __ZN6b2AABB7CombineERKS_($aabb,$subaabb);
    $26=((($j_012)+(1))|0);
    $27=($26|0)<($17|0);
    if ($27) {
     $j_012=$26;
    } else {
     break;
    }
   }
  }
  $28=((($i_013)+(1))|0);
  $29=((HEAP32[(($5)>>2)])|0);
  $30=($28|0)<($29|0);
  if ($30) {
   $i_013=$28;
  } else {
   break;
  }
 }
 STACKTOP=sp;return;
}


function __ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape11ComputeMassEP10b2MassDataf($this,$massData,$density){
 $this=($this)|0;
 $massData=($massData)|0;
 $density=+($density);
 var label=0;

 return;
}


function __ZN6b2AABB7CombineERKS_($this,$aabb){
 $this=($this)|0;
 $aabb=($aabb)|0;
 var $1=0,$tmpcast=0,$2=0,$tmpcast3=0,$3=0,$4=0,$5=0,$ld$0$0=0,$6$0=0,$ld$1$1=0,$6$1=0,$st$2$0=0,$st$3$1=0,$7=0,$8=0,$9=0,$ld$4$0=0,$10$0=0,$ld$5$1=0,$10$1=0;
 var $st$6$0=0,$st$7$1=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+8)|0;
 $1=((sp)|0);
 $tmpcast=$1;
 $2=STACKTOP;STACKTOP = (STACKTOP + 8)|0;
 $tmpcast3=$2;
 $3=(($this)|0);
 $4=(($aabb)|0);
 __Z5b2MinRK6b2Vec2S1_($tmpcast,$3,$4);
 $5=$this;
 $ld$0$0=(($1)|0);
 $6$0=((HEAP32[(($ld$0$0)>>2)])|0);
 $ld$1$1=(($1+4)|0);
 $6$1=((HEAP32[(($ld$1$1)>>2)])|0);
 $st$2$0=(($5)|0);
 HEAP32[(($st$2$0)>>2)]=$6$0;
 $st$3$1=(($5+4)|0);
 HEAP32[(($st$3$1)>>2)]=$6$1;
 $7=(($this+8)|0);
 $8=(($aabb+8)|0);
 __Z5b2MaxRK6b2Vec2S1_($tmpcast3,$7,$8);
 $9=$7;
 $ld$4$0=(($2)|0);
 $10$0=((HEAP32[(($ld$4$0)>>2)])|0);
 $ld$5$1=(($2+4)|0);
 $10$1=((HEAP32[(($ld$5$1)>>2)])|0);
 $st$6$0=(($9)|0);
 HEAP32[(($st$6$0)>>2)]=$10$0;
 $st$7$1=(($9+4)|0);
 HEAP32[(($st$7$1)>>2)]=$10$1;
 STACKTOP=sp;return;
}


function __ZN19b2IntrusiveListNode12InsertBeforeEPS_($this,$node){
 $this=($this)|0;
 $node=($node)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($node+4)|0);
 HEAP32[(($1)>>2)]=$this;
 $2=(($this)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($node)|0);
 HEAP32[(($4)>>2)]=$3;
 $5=((HEAP32[(($2)>>2)])|0);
 $6=(($5+4)|0);
 HEAP32[(($6)>>2)]=$node;
 HEAP32[(($2)>>2)]=$node;
 return;
}


function __ZN10b2FreeList4FreeEP19b2IntrusiveListNode($this,$node){
 $this=($this)|0;
 $node=($node)|0;
 var $1=0,$2=0,label=0;

 $1=((__ZN19b2IntrusiveListNode6RemoveEv($node))|0);
 $2=(($this+8)|0);
 __ZN19b2IntrusiveListNode11InsertAfterEPS_($2,$node);
 return;
}


function __ZN19b2IntrusiveListNode11InsertAfterEPS_($this,$node){
 $this=($this)|0;
 $node=($node)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($node+4)|0);
 HEAP32[(($3)>>2)]=$2;
 $4=(($node)|0);
 HEAP32[(($4)>>2)]=$this;
 $5=((HEAP32[(($1)>>2)])|0);
 $6=(($5)|0);
 HEAP32[(($6)>>2)]=$node;
 HEAP32[(($1)>>2)]=$node;
 return;
}


function __ZN16b2BlockAllocatorC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$i_010=0,$j_09=0,$16=0,$17=0,$18=0,$20=0;
 var $21=0,$25=0,$26=0,$27=0,$j_1=0,$29=0,$30=0,$23$0=0,$23$1=0,$35$0=0,$35$1=0,label=0;

 $1=(($this+68)|0);
 __ZN23b2TrackedBlockAllocatorC1Ev($1);
 $2=(($this+8)|0);
 HEAP32[(($2)>>2)]=128;
 $3=(($this+4)|0);
 HEAP32[(($3)>>2)]=0;
 $4=((HEAP32[(($2)>>2)])|0);
 $5=$4<<3;
 $6=((__Z7b2Alloci($5))|0);
 $8=$6;
 $9=(($this)|0);
 HEAP32[(($9)>>2)]=$8;
 $10=((HEAP32[(($2)>>2)])|0);
 $11=$10<<3;
 _memset((((($6)|0))|0), ((((0)|0))|0), (((($11)|0))|0))|0;
 $12=(($this+12)|0);
 $13=$12;
 _memset((((($13)|0))|0), ((((0)|0))|0), ((((56)|0))|0))|0;
 $14=((HEAP8[(8960)])|0);
 $15=(($14<<24)>>24)==0;
 if ($15) {
  $j_09=0;$i_010=1;
 } else {
  return;
 }
 while(1) {


  $16=((8096+($j_09<<2))|0);
  $17=((HEAP32[(($16)>>2)])|0);
  $18=($i_010|0)>($17|0);
  if ($18) {
   $25=((($j_09)+(1))|0);
   $26=(($25)&255);
   $27=((8968+$i_010)|0);
   HEAP8[($27)]=$26;
   $j_1=$25;
  } else {
   $20=(($j_09)&255);
   $21=((8968+$i_010)|0);
   HEAP8[($21)]=$20;
   $j_1=$j_09;
  }

  $29=((($i_010)+(1))|0);
  $30=($29|0)<641;
  if ($30) {
   $j_09=$j_1;$i_010=$29;
  } else {
   break;
  }
 }
 HEAP8[(8960)]=1;
 return;
}


function __ZN16b2BlockAllocatorD2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i_06=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$14=0,$lpad_phi$0=0,$lpad_phi$1=0,$16=0,$_lcssa=0,$17=0,$19=0;
 var $lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,$22$0=0,$22$1=0,label=0;

 $1=(($this+4)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)>0;
 $4=(($this)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 if ($3) {
  $i_06=0;$6=$5;
  while(1) {


   $7=(($6+($i_06<<3)+4)|0);
   $8=((HEAP32[(($7)>>2)])|0);
   $9=$8;
   __Z6b2FreePv($9);
   $11=((($i_06)+(1))|0);
   $12=((HEAP32[(($1)>>2)])|0);
   $13=($11|0)<($12|0);
   $14=((HEAP32[(($4)>>2)])|0);
   if ($13) {
    $i_06=$11;$6=$14;
   } else {
    $_lcssa=$14;
    break;
   }
  }
 } else {
  $_lcssa=$5;
 }

 $17=$_lcssa;
 __Z6b2FreePv($17);
 $19=(($this+68)|0);
 __ZN23b2TrackedBlockAllocatorD1Ev($19);
 return;
}


function __ZN16b2BlockAllocator8AllocateEi($this,$size){
 $this=($this)|0;
 $size=($size)|0;
 var $1=0,$3=0,$5=0,$6=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0,$23=0,$25=0,$26=0;
 var $27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0;
 var $48=0,$49=0,$50=0,$51=0,$52=0,$53=0,$i_025=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$_lcssa24=0,$64=0,$65=0;
 var $66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=0,$73=0,$_0=0,label=0;

 $1=($size|0)==0;
 if ($1) {
  $_0=0;

  return (($_0)|0);
 }
 $3=($size|0)>640;
 if ($3) {
  $5=(($this+68)|0);
  $6=((__ZN23b2TrackedBlockAllocator8AllocateEj($5,$size))|0);
  $_0=$6;

  return (($_0)|0);
 }
 $8=((8968+$size)|0);
 $9=((HEAP8[($8)])|0);
 $10=($9&255);
 $11=(($this+12+($10<<2))|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($12|0)==0;
 if (!($13)) {
  $15=(($12)|0);
  $16=((HEAP32[(($15)>>2)])|0);
  HEAP32[(($11)>>2)]=$16;
  $17=$12;
  $_0=$17;

  return (($_0)|0);
 }
 $19=(($this+4)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($this+8)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=($20|0)==($22|0);
 if ($23) {
  $25=(($this)|0);
  $26=((HEAP32[(($25)>>2)])|0);
  $27=((($22)+(128))|0);
  HEAP32[(($21)>>2)]=$27;
  $28=$27<<3;
  $29=((__Z7b2Alloci($28))|0);
  $30=$29;
  HEAP32[(($25)>>2)]=$30;
  $31=$26;
  $32=((HEAP32[(($19)>>2)])|0);
  $33=$32<<3;
  (_memcpy((($29)|0), (($31)|0), $33)|0);
  $34=((HEAP32[(($25)>>2)])|0);
  $35=((HEAP32[(($19)>>2)])|0);
  $36=(($34+($35<<3))|0);
  $37=$36;
  _memset((((($37)|0))|0), ((((0)|0))|0), ((((1024)|0))|0))|0;
  __Z6b2FreePv($31);
 }
 $39=(($this)|0);
 $40=((HEAP32[(($39)>>2)])|0);
 $41=((HEAP32[(($19)>>2)])|0);
 $42=((__Z7b2Alloci(16384))|0);
 $43=$42;
 $44=(($40+($41<<3)+4)|0);
 HEAP32[(($44)>>2)]=$43;
 $45=((8096+($10<<2))|0);
 $46=((HEAP32[(($45)>>2)])|0);
 $47=(($40+($41<<3))|0);
 HEAP32[(($47)>>2)]=$46;
 $48=(((16384)/(($46|0)))&-1);
 $49=((($48)-(1))|0);
 $50=($49|0)>0;
 $51=((HEAP32[(($44)>>2)])|0);
 $52=$51;
 if ($50) {
  $i_025=0;$53=$52;
  while(1) {


   $54=(Math_imul($i_025,$46)|0);
   $55=(($53+$54)|0);
   $56=((($i_025)+(1))|0);
   $57=(Math_imul($56,$46)|0);
   $58=(($53+$57)|0);
   $59=$58;
   $60=$55;
   HEAP32[(($60)>>2)]=$59;
   $61=($56|0)<($49|0);
   $62=((HEAP32[(($44)>>2)])|0);
   $63=$62;
   if ($61) {
    $i_025=$56;$53=$63;
   } else {
    $_lcssa24=$63;
    break;
   }
  }
 } else {
  $_lcssa24=$52;
 }

 $64=(Math_imul($49,$46)|0);
 $65=(($_lcssa24+$64)|0);
 $66=$65;
 HEAP32[(($66)>>2)]=0;
 $67=((HEAP32[(($44)>>2)])|0);
 $68=(($67)|0);
 $69=((HEAP32[(($68)>>2)])|0);
 HEAP32[(($11)>>2)]=$69;
 $70=((HEAP32[(($19)>>2)])|0);
 $71=((($70)+(1))|0);
 HEAP32[(($19)>>2)]=$71;
 $72=((HEAP32[(($44)>>2)])|0);
 $73=$72;
 $_0=$73;

 return (($_0)|0);
}


function __ZN16b2BlockAllocator4FreeEPvi($this,$p,$size){
 $this=($this)|0;
 $p=($p)|0;
 $size=($size)|0;
 var $1=0,$3=0,$5=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,label=0;

 $1=($size|0)==0;
 if ($1) {
  return;
 }
 $3=($size|0)>640;
 if ($3) {
  $5=(($this+68)|0);
  __ZN23b2TrackedBlockAllocator4FreeEPv($5,$p);
  return;
 } else {
  $7=((8968+$size)|0);
  $8=((HEAP8[($7)])|0);
  $9=($8&255);
  $10=$p;
  $11=(($this+12+($9<<2))|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=$p;
  HEAP32[(($13)>>2)]=$12;
  HEAP32[(($11)>>2)]=$10;
  return;
 }
}


function __ZNK7b2Mat337Solve33ERK6b2Vec3($agg_result,$this,$b){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=.0,$9=0,$11=.0,$det_0=.0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0,$21=0;
 var label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+64)|0;
 $1=((sp)|0);
 $2=(((sp)+(16))|0);
 $3=(((sp)+(32))|0);
 $4=(((sp)+(48))|0);
 $5=(($this)|0);
 $6=(($this+12)|0);
 $7=(($this+24)|0);
 __Z7b2CrossRK6b2Vec3S1_($1,$6,$7);
 $8=(+(__Z5b2DotRK6b2Vec3S1_($5,$1)));
 $9=$8!=(0.0);
 if ($9) {
  $11=((1.0))/($8);
  $det_0=$11;
 } else {
  $det_0=$8;
 }

 __Z7b2CrossRK6b2Vec3S1_($2,$6,$7);
 $13=(+(__Z5b2DotRK6b2Vec3S1_($b,$2)));
 $14=($det_0)*($13);
 $15=(($agg_result)|0);
 HEAPF32[(($15)>>2)]=$14;
 __Z7b2CrossRK6b2Vec3S1_($3,$b,$7);
 $16=(+(__Z5b2DotRK6b2Vec3S1_($5,$3)));
 $17=($det_0)*($16);
 $18=(($agg_result+4)|0);
 HEAPF32[(($18)>>2)]=$17;
 __Z7b2CrossRK6b2Vec3S1_($4,$6,$b);
 $19=(+(__Z5b2DotRK6b2Vec3S1_($5,$4)));
 $20=($det_0)*($19);
 $21=(($agg_result+8)|0);
 HEAPF32[(($21)>>2)]=$20;
 STACKTOP=sp;return;
}


function __Z5b2DotRK6b2Vec3S1_($a,$b){
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=0,$15=.0,$16=.0,$17=.0,label=0;

 $1=(($a)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($a+4)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)+($10);
 $12=(($a+8)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=(($b+8)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=($13)*($15);
 $17=($11)+($16);
 return (+($17));
}


function __Z7b2CrossRK6b2Vec3S1_($agg_result,$a,$b){
 $agg_result=($agg_result)|0;
 $a=($a)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=.0,$6=0,$7=.0,$8=0,$9=.0,$10=.0,$11=.0,$12=0,$13=.0,$14=.0,$15=0,$16=.0,$17=.0,$18=.0,$19=.0,$20=.0;
 var $21=.0,label=0;

 $1=(($a+4)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($b+8)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=($2)*($4);
 $6=(($a+8)|0);
 $7=(+(HEAPF32[(($6)>>2)]));
 $8=(($b+4)|0);
 $9=(+(HEAPF32[(($8)>>2)]));
 $10=($7)*($9);
 $11=($5)-($10);
 $12=(($b)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=($7)*($13);
 $15=(($a)|0);
 $16=(+(HEAPF32[(($15)>>2)]));
 $17=($4)*($16);
 $18=($14)-($17);
 $19=($9)*($16);
 $20=($2)*($13);
 $21=($19)-($20);
 __ZN6b2Vec3C1Efff($agg_result,$11,$18,$21);
 return;
}


function __ZNK7b2Mat337Solve22ERK6b2Vec2($agg_result,$this,$b){
 $agg_result=($agg_result)|0;
 $this=($this)|0;
 $b=($b)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=.0,$12=0,$14=.0,$det_0=.0,$16=0,$17=.0,$18=.0,$19=0,$20=.0,$21=.0;
 var $22=.0,$23=.0,$24=0,$25=.0,$26=.0,$27=.0,$28=.0,$29=.0,$30=.0,$31=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+12)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+16)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($2)*($8);
 $10=($4)*($6);
 $11=($9)-($10);
 $12=$11!=(0.0);
 if ($12) {
  $14=((1.0))/($11);
  $det_0=$14;
 } else {
  $det_0=$11;
 }

 $16=(($b)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=($8)*($17);
 $19=(($b+4)|0);
 $20=(+(HEAPF32[(($19)>>2)]));
 $21=($4)*($20);
 $22=($18)-($21);
 $23=($det_0)*($22);
 $24=(($agg_result)|0);
 HEAPF32[(($24)>>2)]=$23;
 $25=(+(HEAPF32[(($19)>>2)]));
 $26=($2)*($25);
 $27=(+(HEAPF32[(($16)>>2)]));
 $28=($6)*($27);
 $29=($26)-($28);
 $30=($det_0)*($29);
 $31=(($agg_result+4)|0);
 HEAPF32[(($31)>>2)]=$30;
 return;
}


function __ZNK7b2Mat3312GetInverse22EPS_($this,$M){
 $this=($this)|0;
 $M=($M)|0;
 var $1=0,$2=.0,$3=0,$4=.0,$5=0,$6=.0,$7=0,$8=.0,$9=.0,$10=.0,$11=.0,$12=0,$14=.0,$det_0=.0,$16=.0,$17=0,$18=.0,$19=.0,$20=0,$21=0;
 var $22=.0,$23=0,$24=.0,$25=0,$26=0,$27=0,label=0;

 $1=(($this)|0);
 $2=(+(HEAPF32[(($1)>>2)]));
 $3=(($this+12)|0);
 $4=(+(HEAPF32[(($3)>>2)]));
 $5=(($this+4)|0);
 $6=(+(HEAPF32[(($5)>>2)]));
 $7=(($this+16)|0);
 $8=(+(HEAPF32[(($7)>>2)]));
 $9=($2)*($8);
 $10=($4)*($6);
 $11=($9)-($10);
 $12=$11!=(0.0);
 if ($12) {
  $14=((1.0))/($11);
  $det_0=$14;
 } else {
  $det_0=$11;
 }

 $16=($8)*($det_0);
 $17=(($M)|0);
 HEAPF32[(($17)>>2)]=$16;
 $18=((-.0))-($det_0);
 $19=($4)*($18);
 $20=(($M+12)|0);
 HEAPF32[(($20)>>2)]=$19;
 $21=(($M+8)|0);
 HEAPF32[(($21)>>2)]=0.0;
 $22=($6)*($18);
 $23=(($M+4)|0);
 HEAPF32[(($23)>>2)]=$22;
 $24=($2)*($det_0);
 $25=(($M+16)|0);
 HEAPF32[(($25)>>2)]=$24;
 $26=(($M+20)|0);
 $27=$26;
 _memset((((($27)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 return;
}


function __ZNK7b2Mat3315GetSymInverse33EPS_($this,$M){
 $this=($this)|0;
 $M=($M)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=.0,$6=0,$8=.0,$det_0=.0,$10=0,$11=.0,$12=0,$13=.0,$14=0,$15=.0,$16=0,$17=.0,$18=0,$19=.0,$20=0,$21=.0;
 var $22=.0,$23=.0,$24=.0,$25=.0,$26=0,$27=.0,$28=.0,$29=.0,$30=.0,$31=0,$32=.0,$33=.0,$34=.0,$35=.0,$36=0,$37=.0,$38=0,$39=.0,$40=.0,$41=.0;
 var $42=.0,$43=0,$44=.0,$45=.0,$46=.0,$47=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$53=.0,$54=.0,$55=.0,$56=.0,$57=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $1=((sp)|0);
 $2=(($this)|0);
 $3=(($this+12)|0);
 $4=(($this+24)|0);
 __Z7b2CrossRK6b2Vec3S1_($1,$3,$4);
 $5=(+(__Z5b2DotRK6b2Vec3S1_($2,$1)));
 $6=$5!=(0.0);
 if ($6) {
  $8=((1.0))/($5);
  $det_0=$8;
 } else {
  $det_0=$5;
 }

 $10=(($this)|0);
 $11=(+(HEAPF32[(($10)>>2)]));
 $12=(($3)|0);
 $13=(+(HEAPF32[(($12)>>2)]));
 $14=(($4)|0);
 $15=(+(HEAPF32[(($14)>>2)]));
 $16=(($this+16)|0);
 $17=(+(HEAPF32[(($16)>>2)]));
 $18=(($this+28)|0);
 $19=(+(HEAPF32[(($18)>>2)]));
 $20=(($this+32)|0);
 $21=(+(HEAPF32[(($20)>>2)]));
 $22=($17)*($21);
 $23=($19)*($19);
 $24=($22)-($23);
 $25=($det_0)*($24);
 $26=(($M)|0);
 HEAPF32[(($26)>>2)]=$25;
 $27=($15)*($19);
 $28=($13)*($21);
 $29=($27)-($28);
 $30=($det_0)*($29);
 $31=(($M+4)|0);
 HEAPF32[(($31)>>2)]=$30;
 $32=($13)*($19);
 $33=($15)*($17);
 $34=($32)-($33);
 $35=($det_0)*($34);
 $36=(($M+8)|0);
 HEAPF32[(($36)>>2)]=$35;
 $37=(+(HEAPF32[(($31)>>2)]));
 $38=(($M+12)|0);
 HEAPF32[(($38)>>2)]=$37;
 $39=($11)*($21);
 $40=($15)*($15);
 $41=($39)-($40);
 $42=($det_0)*($41);
 $43=(($M+16)|0);
 HEAPF32[(($43)>>2)]=$42;
 $44=($13)*($15);
 $45=($11)*($19);
 $46=($44)-($45);
 $47=($det_0)*($46);
 $48=(($M+20)|0);
 HEAPF32[(($48)>>2)]=$47;
 $49=(+(HEAPF32[(($36)>>2)]));
 $50=(($M+24)|0);
 HEAPF32[(($50)>>2)]=$49;
 $51=(+(HEAPF32[(($48)>>2)]));
 $52=(($M+28)|0);
 HEAPF32[(($52)>>2)]=$51;
 $53=($11)*($17);
 $54=($13)*($13);
 $55=($53)-($54);
 $56=($det_0)*($55);
 $57=(($M+32)|0);
 HEAPF32[(($57)>>2)]=$56;
 STACKTOP=sp;return;
}


function __ZN7b2TimerC2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN7b2Timer5ResetEv($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZNK7b2Timer15GetMillisecondsEv($this){
 $this=($this)|0;
 var label=0;

 return 0.0;
}


function __ZL14b2AllocDefaultiPv($size,$callbackData){
 $size=($size)|0;
 $callbackData=($callbackData)|0;
 var $1=0,label=0;

 $1=((_malloc($size))|0);
 return (($1)|0);
}


function __ZL13b2FreeDefaultPvS_($mem,$callbackData){
 $mem=($mem)|0;
 $callbackData=($callbackData)|0;
 var label=0;

 _free($mem);
 return;
}


function __Z7b2Alloci($size){
 $size=($size)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=((HEAP32[((9632)>>2)])|0);
 $2=((($1)+(1))|0);
 HEAP32[((9632)>>2)]=$2;
 $3=((HEAP32[((8160)>>2)])|0);
 $4=((HEAP32[((9616)>>2)])|0);
 $5=((FUNCTION_TABLE_iii[($3)&63]($size,$4))|0);
 return (($5)|0);
}


function __Z6b2FreePv($mem){
 $mem=($mem)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((9632)>>2)])|0);
 $2=((($1)-(1))|0);
 HEAP32[((9632)>>2)]=$2;
 $3=((HEAP32[((8168)>>2)])|0);
 $4=((HEAP32[((9616)>>2)])|0);
 FUNCTION_TABLE_vii[($3)&255]($mem,$4);
 return;
}


function __Z5b2LogPKcz($string,varrp){
 $string=($string)|0;
 varrp=(varrp)|0;
 var label=0;

 return;
}


function __ZN14b2TrackedBlockC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this)|0);
 __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockEC2Ev($1);
 $2=((__ZNK14b2TrackedBlock9GetMemoryEv($this))|0);
 $3=((($2)-(4))|0);
 $4=$3;
 HEAP32[(($4)>>2)]=$this;
 return;
}


function __ZNK14b2TrackedBlock9GetMemoryEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=$this;
 $2=((($1)+(43))|0);
 $3=$2&-32;
 $4=$3;
 return (($4)|0);
}


function __ZN14b2TrackedBlock8AllocateEj($size){
 $size=($size)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$_0=0,label=0;

 $1=((($size)+(44))|0);
 $2=((__Z7b2Alloci($1))|0);
 $3=($2|0)==0;
 if ($3) {
  $_0=0;

  return (($_0)|0);
 }
 $5=$2;
 __ZN14b2TrackedBlockC2Ev($5);
 $6=((__ZNK14b2TrackedBlock9GetMemoryEv($5))|0);
 $_0=$6;

 return (($_0)|0);
}


function __ZN14b2TrackedBlock13GetFromMemoryEPv($memory){
 $memory=($memory)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=((($memory)-(4))|0);
 $2=$1;
 $3=((HEAP32[(($2)>>2)])|0);
 return (($3)|0);
}


function __ZN14b2TrackedBlock4FreeEPv($memory){
 $memory=($memory)|0;
 var $1=0,label=0;

 $1=((__ZN14b2TrackedBlock13GetFromMemoryEPv($memory))|0);
 __ZN14b2TrackedBlock4FreeEPS_($1);
 return;
}


function __ZN14b2TrackedBlock4FreeEPS_($block){
 $block=($block)|0;
 var $1=0,label=0;

 __ZN14b2TrackedBlockD1Ev($block);
 $1=$block;
 __Z6b2FreePv($1);
 return;
}


function __ZN14b2TrackedBlockD1Ev($this){
 $this=($this)|0;
 var label=0;

 __ZN14b2TrackedBlockD2Ev($this);
 return;
}


function __ZN23b2TrackedBlockAllocator8AllocateEj($this,$size){
 $this=($this)|0;
 $size=($size)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=((__ZN14b2TrackedBlock8AllocateEj($size))|0);
 $2=(($this)|0);
 $3=((__ZN14b2TrackedBlock13GetFromMemoryEPv($1))|0);
 __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockE12InsertBeforeEPS0_($2,$3);
 return (($1)|0);
}


function __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockE12InsertBeforeEPS0_($this,$obj){
 $this=($this)|0;
 $obj=($obj)|0;
 var $1=0,$2=0,$3=0,label=0;

 $1=((__ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockE11GetListNodeEv($this))|0);
 $2=(($obj)|0);
 $3=((__ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockE11GetListNodeEv($2))|0);
 __ZN19b2IntrusiveListNode12InsertBeforeEPS_($1,$3);
 return;
}


function __ZN23b2TrackedBlockAllocator4FreeEPv($this,$memory){
 $this=($this)|0;
 $memory=($memory)|0;
 var label=0;

 __ZN14b2TrackedBlock4FreeEPv($memory);
 return;
}


function __ZN23b2TrackedBlockAllocator7FreeAllEv($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this)|0);
 $2=((__ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE7IsEmptyEv($1))|0);
 if ($2) {
  return;
 }
 while(1) {
  $3=((__ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE7GetNextEv($1))|0);
  __ZN14b2TrackedBlock4FreeEPS_($3);
  $4=((__ZNK24b2TypedIntrusiveListNodeI14b2TrackedBlockE7IsEmptyEv($1))|0);
  if ($4) {
   break;
  }
 }
 return;
}


function __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockE11GetListNodeEv($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 return (($1)|0);
}


function __ZN14b2TrackedBlockD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZN24b2TypedIntrusiveListNodeI14b2TrackedBlockED2Ev($1);
 return;
}


function __ZN16b2StackAllocatorC2Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=(($this+102400)|0);
 HEAP32[(($1)>>2)]=0;
 $2=(($this+102404)|0);
 HEAP32[(($2)>>2)]=0;
 $3=(($this+102408)|0);
 HEAP32[(($3)>>2)]=0;
 $4=(($this+102796)|0);
 HEAP32[(($4)>>2)]=0;
 return;
}


function __ZN16b2StackAllocatorD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN16b2StackAllocator8AllocateEi($this,$size){
 $this=($this)|0;
 $size=($size)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$10=0,$11=0,$12=0,$14=0,$15=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$26=0,$27=0,$28=0,$29=0,label=0;

 $1=(($this+102796)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=(($this+102412+((($2)*(12))&-1))|0);
 $4=(($this+102412+((($2)*(12))&-1)+4)|0);
 HEAP32[(($4)>>2)]=$size;
 $5=(($this+102400)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=((($6)+($size))|0);
 $8=($7|0)>102400;
 if ($8) {
  $10=((__Z7b2Alloci($size))|0);
  $11=(($3)|0);
  HEAP32[(($11)>>2)]=$10;
  $12=(($this+102412+((($2)*(12))&-1)+8)|0);
  HEAP8[($12)]=1;
 } else {
  $14=(($this+$6)|0);
  $15=(($3)|0);
  HEAP32[(($15)>>2)]=$14;
  $16=(($this+102412+((($2)*(12))&-1)+8)|0);
  HEAP8[($16)]=0;
  $17=((HEAP32[(($5)>>2)])|0);
  $18=((($17)+($size))|0);
  HEAP32[(($5)>>2)]=$18;
 }
 $20=(($this+102404)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=((($21)+($size))|0);
 HEAP32[(($20)>>2)]=$22;
 $23=(($this+102408)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=((__Z5b2MaxIiET_S0_S0_($24,$22))|0);
 HEAP32[(($23)>>2)]=$25;
 $26=((HEAP32[(($1)>>2)])|0);
 $27=((($26)+(1))|0);
 HEAP32[(($1)>>2)]=$27;
 $28=(($3)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 return (($29)|0);
}


function __ZN16b2StackAllocator10ReallocateEPvi($this,$p,$size){
 $this=($this)|0;
 $p=($p)|0;
 $size=($size)|0;
 var $1=0,$2=0,$_sum=0,$3=0,$4=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$13=0,$14=0,$15=0,$16=0,$17=0,$19=0,$20=0,$21=0,$22=0;
 var $24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$40=0,$41=0,label=0;

 $1=(($this+102796)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $_sum=((($2)-(1))|0);
 $3=(($this+102412+((($_sum)*(12))&-1))|0);
 $4=(($this+102412+((($_sum)*(12))&-1)+4)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=((($size)-($5))|0);
 $7=($6|0)>0;
 if (!($7)) {
  $40=(($3)|0);
  $41=((HEAP32[(($40)>>2)])|0);
  return (($41)|0);
 }
 $9=(($this+102412+((($_sum)*(12))&-1)+8)|0);
 $10=((HEAP8[($9)])|0);
 $11=(($10<<24)>>24)==0;
 do {
  if ($11) {
   $19=(($this+102400)|0);
   $20=((HEAP32[(($19)>>2)])|0);
   $21=((($20)+($6))|0);
   $22=($21|0)>102400;
   if ($22) {
    $24=((__Z7b2Alloci($size))|0);
    $25=(($3)|0);
    $26=((HEAP32[(($25)>>2)])|0);
    $27=((HEAP32[(($4)>>2)])|0);
    (_memcpy((($24)|0), (($26)|0), $27)|0);
    $28=((HEAP32[(($4)>>2)])|0);
    $29=((HEAP32[(($19)>>2)])|0);
    $30=((($29)-($28))|0);
    HEAP32[(($19)>>2)]=$30;
    HEAP32[(($25)>>2)]=$24;
    HEAP8[($9)]=1;
    break;
   } else {
    HEAP32[(($19)>>2)]=$21;
    $32=(($this+102404)|0);
    $33=((HEAP32[(($32)>>2)])|0);
    $34=((($33)+($6))|0);
    HEAP32[(($32)>>2)]=$34;
    $35=(($this+102408)|0);
    $36=((HEAP32[(($35)>>2)])|0);
    $37=((__Z5b2MaxIiET_S0_S0_($36,$34))|0);
    HEAP32[(($35)>>2)]=$37;
    break;
   }
  } else {
   $13=((__Z7b2Alloci($size))|0);
   $14=(($3)|0);
   $15=((HEAP32[(($14)>>2)])|0);
   $16=((HEAP32[(($4)>>2)])|0);
   (_memcpy((($13)|0), (($15)|0), $16)|0);
   $17=((HEAP32[(($14)>>2)])|0);
   __Z6b2FreePv($17);
   HEAP32[(($14)>>2)]=$13;
  }
 } while(0);
 HEAP32[(($4)>>2)]=$size;
 $40=(($3)|0);
 $41=((HEAP32[(($40)>>2)])|0);
 return (($41)|0);
}


function __ZN16b2StackAllocator4FreeEPv($this,$p){
 $this=($this)|0;
 $p=($p)|0;
 var $1=0,$2=0,$_sum=0,$3=0,$4=0,$5=0,$8=0,$9=0,$10=0,$11=0,$12=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,label=0;

 $1=(($this+102796)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $_sum=((($2)-(1))|0);
 $3=(($this+102412+((($_sum)*(12))&-1)+8)|0);
 $4=((HEAP8[($3)])|0);
 $5=(($4<<24)>>24)==0;
 if ($5) {
  $8=(($this+102412+((($_sum)*(12))&-1)+4)|0);
  $9=((HEAP32[(($8)>>2)])|0);
  $10=(($this+102400)|0);
  $11=((HEAP32[(($10)>>2)])|0);
  $12=((($11)-($9))|0);
  HEAP32[(($10)>>2)]=$12;
 } else {
  __Z6b2FreePv($p);
 }
 $14=(($this+102412+((($_sum)*(12))&-1)+4)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=(($this+102404)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=((($17)-($15))|0);
 HEAP32[(($16)>>2)]=$18;
 $19=((HEAP32[(($1)>>2)])|0);
 $20=((($19)-(1))|0);
 HEAP32[(($1)>>2)]=$20;
 return;
}


function __ZNSt9type_infoD2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN10__cxxabiv116__shim_type_infoD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);
 __ZNSt9type_infoD2Ev($1);
 return;
}


function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this){
 $this=($this)|0;
 var label=0;

 return;
}


function __ZN10__cxxabiv117__class_type_infoD0Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZNSt9type_infoD2Ev($1);
 $2=$this;
 __ZdlPv($2);
 return;
}


function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);
 __ZNSt9type_infoD2Ev($1);
 $2=$this;
 __ZdlPv($2);
 return;
}


function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr){
 $this=($this)|0;
 $thrown_type=($thrown_type)|0;
 $adjustedPtr=($adjustedPtr)|0;
 var $info=0,$1=0,$2=0,$3=0,$5=0,$7=0,$8=0,$9=0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0;
 var $23=0,$24=0,$26=0,$27=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $info=((sp)|0);
 $1=(($this)|0);
 $2=(($thrown_type)|0);
 $3=($1|0)==($2|0);
 if ($3) {
  $_0=1;

  STACKTOP=sp;return (($_0)|0);
 }
 $5=($thrown_type|0)==0;
 if ($5) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $7=$thrown_type;
 $8=((___dynamic_cast($7,7664,7648,-1))|0);
 $9=$8;
 $10=($8|0)==0;
 if ($10) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=$info;
 _memset((((($12)|0))|0), ((((0)|0))|0), ((((56)|0))|0))|0;
 $13=(($info)|0);
 HEAP32[(($13)>>2)]=$9;
 $14=(($info+8)|0);
 HEAP32[(($14)>>2)]=$this;
 $15=(($info+12)|0);
 HEAP32[(($15)>>2)]=-1;
 $16=(($info+48)|0);
 HEAP32[(($16)>>2)]=1;
 $17=$8;
 $18=((HEAP32[(($17)>>2)])|0);
 $19=(($18+28)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((HEAP32[(($adjustedPtr)>>2)])|0);
 FUNCTION_TABLE_viiii[($20)&63]($9,$info,$21,1);
 $22=(($info+24)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=($23|0)==1;
 if (!($24)) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $26=(($info+16)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 HEAP32[(($adjustedPtr)>>2)]=$27;
 $_0=1;

 STACKTOP=sp;return (($_0)|0);
}


function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){
 $this=($this)|0;
 $info=($info)|0;
 $adjustedPtr=($adjustedPtr)|0;
 $path_below=($path_below)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$10=0,$12=0,$14=0,$15=0,$16=0,$19=0,$20=0,$21=0,$22=0,$23=0,label=0;

 $1=(($info+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($this|0);
 if (!($3)) {
  return;
 }
 $5=(($info+16)|0);
 $6=((HEAP32[(($5)>>2)])|0);
 $7=($6|0)==0;
 if ($7) {
  HEAP32[(($5)>>2)]=$adjustedPtr;
  $9=(($info+24)|0);
  HEAP32[(($9)>>2)]=$path_below;
  $10=(($info+36)|0);
  HEAP32[(($10)>>2)]=1;
  return;
 }
 $12=($6|0)==($adjustedPtr|0);
 if (!($12)) {
  $19=(($info+36)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  $21=((($20)+(1))|0);
  HEAP32[(($19)>>2)]=$21;
  $22=(($info+24)|0);
  HEAP32[(($22)>>2)]=2;
  $23=(($info+54)|0);
  HEAP8[($23)]=1;
  return;
 }
 $14=(($info+24)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=($15|0)==2;
 if (!($16)) {
  return;
 }
 HEAP32[(($14)>>2)]=$path_below;
 return;
}


function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){
 $this=($this)|0;
 $info=($info)|0;
 $adjustedPtr=($adjustedPtr)|0;
 $path_below=($path_below)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$11=0,$12=0,$14=0,$16=0,$17=0,$18=0,$21=0,$22=0,$23=0,$24=0,$25=0,$27=0;
 var $28=0,$29=0,$30=0,$31=0,$32=0,label=0;

 $1=(($this)|0);
 $2=(($info+8)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3)|0);
 $5=($1|0)==($4|0);
 if (!($5)) {
  $27=(($this+8)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  $29=$28;
  $30=((HEAP32[(($29)>>2)])|0);
  $31=(($30+28)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  FUNCTION_TABLE_viiii[($32)&63]($28,$info,$adjustedPtr,$path_below);
  return;
 }
 $7=(($info+16)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($8|0)==0;
 if ($9) {
  HEAP32[(($7)>>2)]=$adjustedPtr;
  $11=(($info+24)|0);
  HEAP32[(($11)>>2)]=$path_below;
  $12=(($info+36)|0);
  HEAP32[(($12)>>2)]=1;
  return;
 }
 $14=($8|0)==($adjustedPtr|0);
 if (!($14)) {
  $21=(($info+36)|0);
  $22=((HEAP32[(($21)>>2)])|0);
  $23=((($22)+(1))|0);
  HEAP32[(($21)>>2)]=$23;
  $24=(($info+24)|0);
  HEAP32[(($24)>>2)]=2;
  $25=(($info+54)|0);
  HEAP8[($25)]=1;
  return;
 }
 $16=(($info+24)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=($17|0)==2;
 if (!($18)) {
  return;
 }
 HEAP32[(($16)>>2)]=$path_below;
 return;
}


function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset){
 $static_ptr=($static_ptr)|0;
 $static_type=($static_type)|0;
 $dst_type=($dst_type)|0;
 $src2dst_offset=($src2dst_offset)|0;
 var $info=0,$1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$_=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$40=0,$41=0;
 var $43=0,$44=0,$46=0,$47=0,$48=0,$_13=0,$50=0,$51=0,$53=0,$54=0,$56=0,$57=0,$59=0,$60=0,$62=0,$dst_ptr_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+56)|0;
 $info=((sp)|0);
 $1=$static_ptr;
 $2=((HEAP32[(($1)>>2)])|0);
 $3=((($2)-(8))|0);
 $4=((HEAP32[(($3)>>2)])|0);
 $5=$4;
 $6=(($static_ptr+$5)|0);
 $7=((($2)-(4))|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=$8;
 $10=(($info)|0);
 HEAP32[(($10)>>2)]=$dst_type;
 $11=(($info+4)|0);
 HEAP32[(($11)>>2)]=$static_ptr;
 $12=(($info+8)|0);
 HEAP32[(($12)>>2)]=$static_type;
 $13=(($info+12)|0);
 HEAP32[(($13)>>2)]=$src2dst_offset;
 $14=(($info+16)|0);
 $15=(($info+20)|0);
 $16=(($info+24)|0);
 $17=(($info+28)|0);
 $18=(($info+32)|0);
 $19=(($info+40)|0);
 $20=$8;
 $21=(($dst_type)|0);
 $22=($20|0)==($21|0);
 $23=$14;
 _memset((((($23)|0))|0), ((((0)|0))|0), ((((39)|0))|0))|0;
 if ($22) {
  $25=(($info+48)|0);
  HEAP32[(($25)>>2)]=1;
  $26=$8;
  $27=((HEAP32[(($26)>>2)])|0);
  $28=(($27+20)|0);
  $29=((HEAP32[(($28)>>2)])|0);
  FUNCTION_TABLE_viiiiii[($29)&31]($9,$info,$6,$6,1,0);
  $30=((HEAP32[(($16)>>2)])|0);
  $31=($30|0)==1;
  $_=($31?$6:0);
  STACKTOP=sp;return (($_)|0);
 }
 $33=(($info+36)|0);
 $34=$8;
 $35=((HEAP32[(($34)>>2)])|0);
 $36=(($35+24)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 FUNCTION_TABLE_viiiii[($37)&7]($9,$info,$6,1,0);
 $38=((HEAP32[(($33)>>2)])|0);
 if (((($38|0))|0)==((1)|0)) {
  $50=((HEAP32[(($16)>>2)])|0);
  $51=($50|0)==1;
  do {
   if (!($51)) {
    $53=((HEAP32[(($19)>>2)])|0);
    $54=($53|0)==0;
    if (!($54)) {
     $dst_ptr_0=0;

     STACKTOP=sp;return (($dst_ptr_0)|0);
    }
    $56=((HEAP32[(($17)>>2)])|0);
    $57=($56|0)==1;
    if (!($57)) {
     $dst_ptr_0=0;

     STACKTOP=sp;return (($dst_ptr_0)|0);
    }
    $59=((HEAP32[(($18)>>2)])|0);
    $60=($59|0)==1;
    if ($60) {
     break;
    } else {
     $dst_ptr_0=0;
    }

    STACKTOP=sp;return (($dst_ptr_0)|0);
   }
  } while(0);
  $62=((HEAP32[(($14)>>2)])|0);
  $dst_ptr_0=$62;

  STACKTOP=sp;return (($dst_ptr_0)|0);
 } else if (((($38|0))|0)==((0)|0)) {
  $40=((HEAP32[(($19)>>2)])|0);
  $41=($40|0)==1;
  if (!($41)) {
   $dst_ptr_0=0;

   STACKTOP=sp;return (($dst_ptr_0)|0);
  }
  $43=((HEAP32[(($17)>>2)])|0);
  $44=($43|0)==1;
  if (!($44)) {
   $dst_ptr_0=0;

   STACKTOP=sp;return (($dst_ptr_0)|0);
  }
  $46=((HEAP32[(($18)>>2)])|0);
  $47=($46|0)==1;
  $48=((HEAP32[(($15)>>2)])|0);
  $_13=($47?$48:0);
  $dst_ptr_0=$_13;

  STACKTOP=sp;return (($dst_ptr_0)|0);
 } else {
  $dst_ptr_0=0;

  STACKTOP=sp;return (($dst_ptr_0)|0);
 }
  return 0;
}


function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){
 $this=($this)|0;
 $info=($info)|0;
 $current_ptr=($current_ptr)|0;
 $path_below=($path_below)|0;
 $use_strcmp=($use_strcmp)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$16=0,$17=0,$18=0,$19=0,$21=0,$22=0,$23=0,$25=0,$26=0;
 var $27=0,$29=0,$31=0,$33=0,$34=0,$35=0,$36=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$49=0,$not_=0,$is_dst_type_derived_from_static_type_0_off036=0;
 var $50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$57=0,$58=0,$59=0,$61=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,label=0;

 $1=(($this)|0);
 $2=(($info+8)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3)|0);
 $5=($1|0)==($4|0);
 if ($5) {
  $7=(($info+4)|0);
  $8=((HEAP32[(($7)>>2)])|0);
  $9=($8|0)==($current_ptr|0);
  if (!($9)) {
   return;
  }
  $11=(($info+28)|0);
  $12=((HEAP32[(($11)>>2)])|0);
  $13=($12|0)==1;
  if ($13) {
   return;
  }
  HEAP32[(($11)>>2)]=$path_below;
  return;
 }
 $16=(($info)|0);
 $17=((HEAP32[(($16)>>2)])|0);
 $18=(($17)|0);
 $19=($1|0)==($18|0);
 if (!($19)) {
  $65=(($this+8)|0);
  $66=((HEAP32[(($65)>>2)])|0);
  $67=$66;
  $68=((HEAP32[(($67)>>2)])|0);
  $69=(($68+24)|0);
  $70=((HEAP32[(($69)>>2)])|0);
  FUNCTION_TABLE_viiiii[($70)&7]($66,$info,$current_ptr,$path_below,$use_strcmp);
  return;
 }
 $21=(($info+16)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=($22|0)==($current_ptr|0);
 do {
  if (!($23)) {
   $25=(($info+20)|0);
   $26=((HEAP32[(($25)>>2)])|0);
   $27=($26|0)==($current_ptr|0);
   if ($27) {
    break;
   }
   $33=(($info+32)|0);
   HEAP32[(($33)>>2)]=$path_below;
   $34=(($info+44)|0);
   $35=((HEAP32[(($34)>>2)])|0);
   $36=($35|0)==4;
   if ($36) {
    return;
   }
   $38=(($info+52)|0);
   HEAP8[($38)]=0;
   $39=(($info+53)|0);
   HEAP8[($39)]=0;
   $40=(($this+8)|0);
   $41=((HEAP32[(($40)>>2)])|0);
   $42=$41;
   $43=((HEAP32[(($42)>>2)])|0);
   $44=(($43+20)|0);
   $45=((HEAP32[(($44)>>2)])|0);
   FUNCTION_TABLE_viiiiii[($45)&31]($41,$info,$current_ptr,$current_ptr,1,$use_strcmp);
   $46=((HEAP8[($39)])|0);
   $47=(($46<<24)>>24)==0;
   if ($47) {
    $is_dst_type_derived_from_static_type_0_off036=0;
    label = 13;
   } else {
    $49=((HEAP8[($38)])|0);
    $not_=(($49<<24)>>24)==0;
    if ($not_) {
     $is_dst_type_derived_from_static_type_0_off036=1;
     label = 13;
    }
   }
   L23: do {
    if ((label|0) == 13) {

     HEAP32[(($25)>>2)]=$current_ptr;
     $50=(($info+40)|0);
     $51=((HEAP32[(($50)>>2)])|0);
     $52=((($51)+(1))|0);
     HEAP32[(($50)>>2)]=$52;
     $53=(($info+36)|0);
     $54=((HEAP32[(($53)>>2)])|0);
     $55=($54|0)==1;
     do {
      if ($55) {
       $57=(($info+24)|0);
       $58=((HEAP32[(($57)>>2)])|0);
       $59=($58|0)==2;
       if (!($59)) {
        label = 16;
        break;
       }
       $61=(($info+54)|0);
       HEAP8[($61)]=1;
       if ($is_dst_type_derived_from_static_type_0_off036) {
        break L23;
       }
      } else {
       label = 16;
      }
     } while(0);
     if ((label|0) == 16) {
      if ($is_dst_type_derived_from_static_type_0_off036) {
       break;
      }
     }
     HEAP32[(($34)>>2)]=4;
     return;
    }
   } while(0);
   HEAP32[(($34)>>2)]=3;
   return;
  }
 } while(0);
 $29=($path_below|0)==1;
 if (!($29)) {
  return;
 }
 $31=(($info+32)|0);
 HEAP32[(($31)>>2)]=1;
 return;
}


function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){
 $this=($this)|0;
 $info=($info)|0;
 $current_ptr=($current_ptr)|0;
 $path_below=($path_below)|0;
 $use_strcmp=($use_strcmp)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$9=0,$10=0,$11=0,$14=0,$15=0,$16=0,$18=0,$19=0,$20=0,$22=0,$23=0,$24=0,$26=0,$28=0;
 var $30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$38=0,$39=0,$40=0,$42=0,$44=0,label=0;

 $1=(($info+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($this|0);
 if ($3) {
  $5=(($info+4)|0);
  $6=((HEAP32[(($5)>>2)])|0);
  $7=($6|0)==($current_ptr|0);
  if (!($7)) {
   return;
  }
  $9=(($info+28)|0);
  $10=((HEAP32[(($9)>>2)])|0);
  $11=($10|0)==1;
  if ($11) {
   return;
  }
  HEAP32[(($9)>>2)]=$path_below;
  return;
 }
 $14=(($info)|0);
 $15=((HEAP32[(($14)>>2)])|0);
 $16=($15|0)==($this|0);
 if (!($16)) {
  return;
 }
 $18=(($info+16)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=($19|0)==($current_ptr|0);
 do {
  if (!($20)) {
   $22=(($info+20)|0);
   $23=((HEAP32[(($22)>>2)])|0);
   $24=($23|0)==($current_ptr|0);
   if ($24) {
    break;
   }
   $30=(($info+32)|0);
   HEAP32[(($30)>>2)]=$path_below;
   HEAP32[(($22)>>2)]=$current_ptr;
   $31=(($info+40)|0);
   $32=((HEAP32[(($31)>>2)])|0);
   $33=((($32)+(1))|0);
   HEAP32[(($31)>>2)]=$33;
   $34=(($info+36)|0);
   $35=((HEAP32[(($34)>>2)])|0);
   $36=($35|0)==1;
   do {
    if ($36) {
     $38=(($info+24)|0);
     $39=((HEAP32[(($38)>>2)])|0);
     $40=($39|0)==2;
     if (!($40)) {
      break;
     }
     $42=(($info+54)|0);
     HEAP8[($42)]=1;
    }
   } while(0);
   $44=(($info+44)|0);
   HEAP32[(($44)>>2)]=4;
   return;
  }
 } while(0);
 $26=($path_below|0)==1;
 if (!($26)) {
  return;
 }
 $28=(($info+32)|0);
 HEAP32[(($28)>>2)]=1;
 return;
}


function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){
 $this=($this)|0;
 $info=($info)|0;
 $dst_ptr=($dst_ptr)|0;
 $current_ptr=($current_ptr)|0;
 $path_below=($path_below)|0;
 $use_strcmp=($use_strcmp)|0;
 var $1=0,$2=0,$3=0,$4=0,$5=0,$7=0,$8=0,$9=0,$10=0,$12=0,$13=0,$14=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$or_cond_i=0;
 var $24=0,$26=0,$28=0,$29=0,$30=0,$33=0,$34=0,$35=0,$36=0,$37=0,$or_cond23_i=0,$39=0,$41=0,$42=0,$43=0,$44=0,$46=0,$47=0,$48=0,$49=0;
 var $50=0,$51=0,label=0;

 $1=(($this)|0);
 $2=(($info+8)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($3)|0);
 $5=($1|0)==($4|0);
 if (!($5)) {
  $46=(($this+8)|0);
  $47=((HEAP32[(($46)>>2)])|0);
  $48=$47;
  $49=((HEAP32[(($48)>>2)])|0);
  $50=(($49+20)|0);
  $51=((HEAP32[(($50)>>2)])|0);
  FUNCTION_TABLE_viiiiii[($51)&31]($47,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  return;
 }
 $7=(($info+53)|0);
 HEAP8[($7)]=1;
 $8=(($info+4)|0);
 $9=((HEAP32[(($8)>>2)])|0);
 $10=($9|0)==($current_ptr|0);
 if (!($10)) {
  return;
 }
 $12=(($info+52)|0);
 HEAP8[($12)]=1;
 $13=(($info+16)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=($14|0)==0;
 if ($15) {
  HEAP32[(($13)>>2)]=$dst_ptr;
  $17=(($info+24)|0);
  HEAP32[(($17)>>2)]=$path_below;
  $18=(($info+36)|0);
  HEAP32[(($18)>>2)]=1;
  $19=(($info+48)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  $21=($20|0)==1;
  $22=($path_below|0)==1;
  $or_cond_i=$21&$22;
  if (!($or_cond_i)) {
   return;
  }
  $24=(($info+54)|0);
  HEAP8[($24)]=1;
  return;
 }
 $26=($14|0)==($dst_ptr|0);
 if (!($26)) {
  $41=(($info+36)|0);
  $42=((HEAP32[(($41)>>2)])|0);
  $43=((($42)+(1))|0);
  HEAP32[(($41)>>2)]=$43;
  $44=(($info+54)|0);
  HEAP8[($44)]=1;
  return;
 }
 $28=(($info+24)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=($29|0)==2;
 if ($30) {
  HEAP32[(($28)>>2)]=$path_below;
  $33=$path_below;
 } else {
  $33=$29;
 }

 $34=(($info+48)|0);
 $35=((HEAP32[(($34)>>2)])|0);
 $36=($35|0)==1;
 $37=($33|0)==1;
 $or_cond23_i=$36&$37;
 if (!($or_cond23_i)) {
  return;
 }
 $39=(($info+54)|0);
 HEAP8[($39)]=1;
 return;
}


function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){
 $this=($this)|0;
 $info=($info)|0;
 $dst_ptr=($dst_ptr)|0;
 $current_ptr=($current_ptr)|0;
 $path_below=($path_below)|0;
 $use_strcmp=($use_strcmp)|0;
 var $1=0,$2=0,$3=0,$5=0,$6=0,$7=0,$8=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$or_cond_i=0,$22=0,$24=0;
 var $26=0,$27=0,$28=0,$31=0,$32=0,$33=0,$34=0,$35=0,$or_cond23_i=0,$37=0,$39=0,$40=0,$41=0,$42=0,label=0;

 $1=(($info+8)|0);
 $2=((HEAP32[(($1)>>2)])|0);
 $3=($2|0)==($this|0);
 if (!($3)) {
  return;
 }
 $5=(($info+53)|0);
 HEAP8[($5)]=1;
 $6=(($info+4)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=($7|0)==($current_ptr|0);
 if (!($8)) {
  return;
 }
 $10=(($info+52)|0);
 HEAP8[($10)]=1;
 $11=(($info+16)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($12|0)==0;
 if ($13) {
  HEAP32[(($11)>>2)]=$dst_ptr;
  $15=(($info+24)|0);
  HEAP32[(($15)>>2)]=$path_below;
  $16=(($info+36)|0);
  HEAP32[(($16)>>2)]=1;
  $17=(($info+48)|0);
  $18=((HEAP32[(($17)>>2)])|0);
  $19=($18|0)==1;
  $20=($path_below|0)==1;
  $or_cond_i=$19&$20;
  if (!($or_cond_i)) {
   return;
  }
  $22=(($info+54)|0);
  HEAP8[($22)]=1;
  return;
 }
 $24=($12|0)==($dst_ptr|0);
 if (!($24)) {
  $39=(($info+36)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $41=((($40)+(1))|0);
  HEAP32[(($39)>>2)]=$41;
  $42=(($info+54)|0);
  HEAP8[($42)]=1;
  return;
 }
 $26=(($info+24)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=($27|0)==2;
 if ($28) {
  HEAP32[(($26)>>2)]=$path_below;
  $31=$path_below;
 } else {
  $31=$27;
 }

 $32=(($info+48)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=($33|0)==1;
 $35=($31|0)==1;
 $or_cond23_i=$34&$35;
 if (!($or_cond23_i)) {
  return;
 }
 $37=(($info+54)|0);
 HEAP8[($37)]=1;
 return;
}


function _malloc($bytes){
 $bytes=($bytes)|0;
 var $1=0,$3=0,$5=0,$6=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$_sum111=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$27=0,$28=0,$29=0,$31=0,$32=0,$33=0,$35=0,$36=0,$37=0,$40=0,$41=0,$42=0,$43=0,$_sum113114=0,$44=0,$45=0,$46=0,$47=0;
 var $48=0,$50=0,$51=0,$53=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0;
 var $71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$_sum104=0,$86=0,$87=0,$88=0,$89=0;
 var $90=0,$92=0,$93=0,$94=0,$96=0,$97=0,$98=0,$100=0,$101=0,$102=0,$105=0,$106=0,$107=0,$108=0,$109=0,$110=0,$111=0,$112=0,$_sum106107=0,$113=0;
 var $114=0,$115=0,$116=0,$117=0,$118=0,$120=0,$121=0,$122=0,$123=0,$124=0,$125=0,$126=0,$127=0,$128=0,$130=0,$_sum109_pre=0,$_pre=0,$_sum110=0,$132=0,$133=0;
 var $134=0,$135=0,$136=0,$_pre_phi=0,$F4_0=0,$139=0,$140=0,$141=0,$143=0,$145=0,$146=0,$148=0,$149=0,$150=0,$151=0,$152=0,$153=0,$154=0,$155=0,$156=0;
 var $157=0,$158=0,$159=0,$160=0,$161=0,$162=0,$163=0,$164=0,$165=0,$166=0,$167=0,$168=0,$169=0,$170=0,$171=0,$172=0,$173=0,$174=0,$175=0,$176=0;
 var $rsize_0_i=0,$v_0_i=0,$t_0_i=0,$178=0,$179=0,$180=0,$182=0,$183=0,$184=0,$185=0,$186=0,$187=0,$188=0,$189=0,$190=0,$_rsize_0_i=0,$_v_0_i=0,$192=0,$193=0,$194=0;
 var $196=0,$197=0,$198=0,$200=0,$201=0,$202=0,$203=0,$204=0,$206=0,$207=0,$208=0,$209=0,$211=0,$212=0,$213=0,$215=0,$216=0,$217=0,$220=0,$221=0;
 var $222=0,$224=0,$225=0,$226=0,$RP_0_i=0,$R_0_i=0,$227=0,$228=0,$229=0,$231=0,$232=0,$233=0,$235=0,$236=0,$R_1_i=0,$240=0,$242=0,$243=0,$244=0,$245=0;
 var $246=0,$cond_i=0,$248=0,$249=0,$250=0,$251=0,$253=0,$254=0,$255=0,$257=0,$258=0,$259=0,$262=0,$265=0,$267=0,$268=0,$269=0,$271=0,$272=0,$273=0;
 var $274=0,$276=0,$277=0,$278=0,$280=0,$281=0,$284=0,$285=0,$286=0,$288=0,$289=0,$290=0,$292=0,$293=0,$297=0,$299=0,$300=0,$301=0,$_sum4_i=0,$302=0;
 var $303=0,$304=0,$305=0,$307=0,$308=0,$309=0,$_sum_i137=0,$310=0,$311=0,$_sum1_i=0,$312=0,$313=0,$314=0,$315=0,$317=0,$318=0,$319=0,$320=0,$321=0,$322=0;
 var $323=0,$324=0,$325=0,$327=0,$_sum2_pre_i=0,$_pre_i=0,$_sum3_i=0,$329=0,$330=0,$331=0,$332=0,$333=0,$_pre_phi_i=0,$F1_0_i=0,$336=0,$337=0,$338=0,$341=0,$342=0,$343=0;
 var $345=0,$347=0,$348=0,$349=0,$350=0,$352=0,$353=0,$354=0,$356=0,$358=0,$359=0,$360=0,$361=0,$362=0,$363=0,$364=0,$365=0,$366=0,$367=0,$368=0;
 var $369=0,$370=0,$371=0,$372=0,$373=0,$374=0,$375=0,$376=0,$377=0,$378=0,$379=0,$idx_0_i=0,$381=0,$382=0,$383=0,$385=0,$387=0,$388=0,$390=0,$391=0;
 var $rst_0_i=0,$sizebits_0_i=0,$t_0_i116=0,$rsize_0_i117=0,$v_0_i118=0,$393=0,$394=0,$395=0,$396=0,$397=0,$399=0,$rsize_1_i=0,$v_1_i=0,$401=0,$402=0,$403=0,$404=0,$405=0,$406=0,$407=0;
 var $or_cond_i=0,$rst_1_i=0,$408=0,$409=0,$t_1_i=0,$rsize_2_i=0,$v_2_i=0,$410=0,$411=0,$or_cond21_i=0,$413=0,$414=0,$415=0,$416=0,$417=0,$419=0,$420=0,$421=0,$422=0,$423=0;
 var $424=0,$425=0,$426=0,$427=0,$428=0,$429=0,$430=0,$431=0,$432=0,$433=0,$434=0,$435=0,$436=0,$437=0,$438=0,$439=0,$440=0,$441=0,$442=0,$443=0;
 var $t_2_ph_i=0,$444=0,$v_330_i=0,$rsize_329_i=0,$t_228_i=0,$445=0,$446=0,$447=0,$448=0,$449=0,$_rsize_3_i=0,$t_2_v_3_i=0,$450=0,$451=0,$452=0,$453=0,$454=0,$455=0,$v_3_lcssa_i=0,$rsize_3_lcssa_i=0;
 var $456=0,$458=0,$459=0,$460=0,$462=0,$463=0,$464=0,$466=0,$467=0,$468=0,$470=0,$471=0,$472=0,$473=0,$474=0,$476=0,$477=0,$478=0,$479=0,$481=0;
 var $482=0,$483=0,$485=0,$486=0,$487=0,$490=0,$491=0,$492=0,$494=0,$495=0,$496=0,$RP_0_i119=0,$R_0_i120=0,$497=0,$498=0,$499=0,$501=0,$502=0,$503=0,$505=0;
 var $506=0,$R_1_i122=0,$510=0,$512=0,$513=0,$514=0,$515=0,$516=0,$cond_i123=0,$518=0,$519=0,$520=0,$521=0,$523=0,$524=0,$525=0,$527=0,$528=0,$529=0,$532=0;
 var $535=0,$537=0,$538=0,$539=0,$541=0,$542=0,$543=0,$544=0,$546=0,$547=0,$548=0,$550=0,$551=0,$554=0,$555=0,$556=0,$558=0,$559=0,$560=0,$562=0;
 var $563=0,$567=0,$569=0,$570=0,$571=0,$_sum19_i=0,$572=0,$573=0,$574=0,$575=0,$577=0,$578=0,$579=0,$_sum_i125136=0,$580=0,$581=0,$_sum1_i126=0,$582=0,$583=0,$584=0;
 var $585=0,$587=0,$588=0,$589=0,$590=0,$591=0,$592=0,$593=0,$595=0,$_sum15_pre_i=0,$_pre_i127=0,$_sum18_i=0,$597=0,$598=0,$599=0,$600=0,$601=0,$_pre_phi_i128=0,$F5_0_i=0,$604=0;
 var $_sum16_i=0,$605=0,$606=0,$_sum17_i=0,$607=0,$608=0,$610=0,$611=0,$612=0,$614=0,$616=0,$617=0,$618=0,$619=0,$620=0,$621=0,$622=0,$623=0,$624=0,$625=0;
 var $626=0,$627=0,$628=0,$629=0,$630=0,$631=0,$632=0,$633=0,$634=0,$635=0,$636=0,$637=0,$I7_0_i=0,$639=0,$_sum2_i=0,$640=0,$641=0,$_sum3_i129=0,$642=0,$_sum4_i130=0;
 var $643=0,$644=0,$645=0,$646=0,$647=0,$648=0,$649=0,$651=0,$652=0,$_sum5_i=0,$653=0,$654=0,$_sum6_i=0,$655=0,$656=0,$_sum7_i=0,$657=0,$658=0,$660=0,$661=0;
 var $663=0,$664=0,$666=0,$667=0,$T_0_i=0,$K12_0_i=0,$669=0,$670=0,$671=0,$672=0,$674=0,$675=0,$676=0,$677=0,$678=0,$680=0,$681=0,$682=0,$_sum12_i=0,$684=0;
 var $685=0,$_sum13_i=0,$686=0,$687=0,$_sum14_i=0,$688=0,$689=0,$692=0,$693=0,$694=0,$695=0,$696=0,$698=0,$699=0,$701=0,$_sum9_i=0,$702=0,$703=0,$_sum10_i=0,$704=0;
 var $705=0,$_sum11_i=0,$706=0,$707=0,$709=0,$710=0,$711=0,$nb_0=0,$712=0,$713=0,$715=0,$716=0,$717=0,$719=0,$720=0,$721=0,$722=0,$_sum102=0,$723=0,$724=0;
 var $725=0,$726=0,$727=0,$728=0,$730=0,$731=0,$732=0,$_sum101=0,$733=0,$734=0,$735=0,$736=0,$738=0,$739=0,$741=0,$742=0,$744=0,$745=0,$746=0,$747=0;
 var $748=0,$749=0,$_sum=0,$750=0,$751=0,$752=0,$753=0,$754=0,$755=0,$757=0,$758=0,$760=0,$761=0,$762=0,$763=0,$765=0,$766=0,$767=0,$769=0,$770=0;
 var $771=0,$772=0,$773=0,$774=0,$775=0,$777=0,$778=0,$780=0,$781=0,$782=0,$783=0,$or_cond1_i=0,$785=0,$786=0,$787=0,$789=0,$790=0,$792=0,$sp_0_i_i=0,$794=0;
 var $795=0,$796=0,$798=0,$799=0,$800=0,$801=0,$803=0,$804=0,$805=0,$806=0,$807=0,$808=0,$810=0,$811=0,$812=0,$813=0,$814=0,$816=0,$817=0,$818=0;
 var $819=0,$820=0,$ssize_0_i=0,$822=0,$823=0,$824=0,$825=0,$or_cond_i131=0,$827=0,$828=0,$830=0,$831=0,$or_cond2_i=0,$833=0,$834=0,$ssize_0__i=0,$__i=0,$836=0,$837=0,$838=0;
 var $839=0,$841=0,$842=0,$843=0,$844=0,$845=0,$_3_i=0,$_4_i=0,$ssize_1_i=0,$br_0_i=0,$tsize_0_i=0,$tbase_0_i=0,$847=0,$848=0,$850=0,$851=0,$or_cond5_i=0,$852=0,$or_cond6_i=0,$854=0;
 var $855=0,$856=0,$857=0,$858=0,$859=0,$861=0,$862=0,$864=0,$866=0,$ssize_2_i=0,$868=0,$tsize_0303639_i=0,$869=0,$870=0,$tsize_1_i=0,$872=0,$874=0,$875=0,$notlhs_i=0,$notrhs_i=0;
 var $or_cond8_not_i=0,$876=0,$or_cond9_i=0,$877=0,$878=0,$879=0,$880=0,$881=0,$_tsize_1_i=0,$_tbase_1_i=0,$882=0,$tbase_245_i=0,$tsize_244_i=0,$883=0,$884=0,$885=0,$886=0,$888=0,$889=0,$891=0;
 var $892=0,$893=0,$or_cond10_i=0,$895=0,$i_02_i_i=0,$897=0,$898=0,$899=0,$_sum_i_i=0,$900=0,$_sum1_i_i=0,$901=0,$902=0,$903=0,$904=0,$905=0,$906=0,$907=0,$908=0,$910=0;
 var $911=0,$912=0,$913=0,$914=0,$915=0,$916=0,$_sum_i14_i=0,$917=0,$918=0,$_sum2_i_i=0,$919=0,$920=0,$921=0,$sp_067_i=0,$922=0,$923=0,$924=0,$925=0,$926=0,$927=0;
 var $929=0,$930=0,$931=0,$932=0,$933=0,$934=0,$935=0,$937=0,$938=0,$939=0,$or_cond47_i=0,$941=0,$942=0,$943=0,$944=0,$945=0,$946=0,$947=0,$949=0,$950=0;
 var $951=0,$952=0,$953=0,$954=0,$955=0,$_sum_i18_i=0,$956=0,$957=0,$_sum2_i19_i=0,$958=0,$959=0,$960=0,$961=0,$962=0,$964=0,$sp_160_i=0,$966=0,$967=0,$968=0,$970=0;
 var $971=0,$972=0,$973=0,$974=0,$975=0,$976=0,$978=0,$979=0,$980=0,$981=0,$982=0,$983=0,$984=0,$986=0,$987=0,$989=0,$990=0,$_sum93_i=0,$991=0,$992=0;
 var $993=0,$994=0,$996=0,$997=0,$999=0,$_sum94_i=0,$1000=0,$1001=0,$1002=0,$1003=0,$1004=0,$_sum_i21_i=0,$1005=0,$1006=0,$1007=0,$1008=0,$_sum1_i22_i=0,$1009=0,$1010=0,$1011=0;
 var $1012=0,$1014=0,$1015=0,$1016=0,$_sum46_i_i=0,$1017=0,$1018=0,$1020=0,$1021=0,$1023=0,$1024=0,$1025=0,$_sum44_i_i=0,$1026=0,$1027=0,$_sum45_i_i=0,$1028=0,$1029=0,$_sum2_i23_i=0,$_sum95_i=0;
 var $1031=0,$1032=0,$1033=0,$1034=0,$1035=0,$1037=0,$1038=0,$1039=0,$_sum3940_i_i=0,$_sum105_i=0,$1041=0,$1042=0,$1043=0,$_sum41_i_i=0,$_sum106_i=0,$1044=0,$1045=0,$1046=0,$1047=0,$1048=0;
 var $1049=0,$1050=0,$1052=0,$1053=0,$1054=0,$1056=0,$1057=0,$1058=0,$1059=0,$1061=0,$1062=0,$1063=0,$1064=0,$1066=0,$_pre56_i_i=0,$1068=0,$1069=0,$1070=0,$1072=0,$1073=0;
 var $1074=0,$_pre_phi57_i_i=0,$1075=0,$1077=0,$_sum34_i_i=0,$_sum96_i=0,$1078=0,$1079=0,$1080=0,$_sum5_i_i=0,$_sum97_i=0,$1081=0,$1082=0,$1083=0,$1084=0,$_sum3637_i_i=0,$_sum98_i=0,$1086=0,$1087=0,$1088=0;
 var $1089=0,$1090=0,$1091=0,$1093=0,$1094=0,$1095=0,$1097=0,$1098=0,$1099=0,$_sum67_i_i=0,$_sum103_i=0,$1102=0,$1103=0,$1104=0,$1105=0,$_sum104_i=0,$1107=0,$1108=0,$1109=0,$1110=0;
 var $RP_0_i_i=0,$R_0_i_i=0,$1111=0,$1112=0,$1113=0,$1115=0,$1116=0,$1117=0,$1119=0,$1120=0,$1121=0,$R_1_i_i=0,$1125=0,$_sum31_i_i=0,$_sum99_i=0,$1127=0,$1128=0,$1129=0,$1130=0,$1131=0;
 var $1132=0,$cond_i_i=0,$1134=0,$1135=0,$1136=0,$1137=0,$1139=0,$1140=0,$1141=0,$1143=0,$1144=0,$1145=0,$1148=0,$1151=0,$1153=0,$1154=0,$1155=0,$1157=0,$_sum3233_i_i=0,$_sum100_i=0;
 var $1158=0,$1159=0,$1160=0,$1161=0,$1163=0,$1164=0,$1165=0,$1167=0,$1168=0,$_sum101_i=0,$1171=0,$1172=0,$1173=0,$1174=0,$1176=0,$1177=0,$1178=0,$1180=0,$1181=0,$_sum9_i_i=0;
 var $_sum102_i=0,$1185=0,$1186=0,$1187=0,$qsize_0_i_i=0,$oldfirst_0_i_i=0,$1189=0,$1190=0,$1191=0,$1192=0,$_sum10_i_i=0,$1193=0,$1194=0,$_sum11_i_i=0,$1195=0,$1196=0,$1197=0,$1198=0,$1200=0,$1201=0;
 var $1202=0,$1203=0,$1204=0,$1205=0,$1206=0,$1208=0,$_sum27_pre_i_i=0,$_pre_i24_i=0,$_sum30_i_i=0,$1210=0,$1211=0,$1212=0,$1213=0,$1214=0,$_pre_phi_i25_i=0,$F4_0_i_i=0,$1217=0,$_sum28_i_i=0,$1218=0,$1219=0;
 var $_sum29_i_i=0,$1220=0,$1221=0,$1223=0,$1224=0,$1225=0,$1227=0,$1229=0,$1230=0,$1231=0,$1232=0,$1233=0,$1234=0,$1235=0,$1236=0,$1237=0,$1238=0,$1239=0,$1240=0,$1241=0;
 var $1242=0,$1243=0,$1244=0,$1245=0,$1246=0,$1247=0,$1248=0,$1249=0,$1250=0,$I7_0_i_i=0,$1252=0,$_sum12_i26_i=0,$1253=0,$1254=0,$_sum13_i_i=0,$1255=0,$_sum14_i_i=0,$1256=0,$1257=0,$1258=0;
 var $1259=0,$1260=0,$1261=0,$1262=0,$1264=0,$1265=0,$_sum15_i_i=0,$1266=0,$1267=0,$_sum16_i_i=0,$1268=0,$1269=0,$_sum17_i_i=0,$1270=0,$1271=0,$1273=0,$1274=0,$1276=0,$1277=0,$1279=0;
 var $1280=0,$T_0_i27_i=0,$K8_0_i_i=0,$1282=0,$1283=0,$1284=0,$1285=0,$1287=0,$1288=0,$1289=0,$1290=0,$1291=0,$1293=0,$1294=0,$1295=0,$_sum24_i_i=0,$1297=0,$1298=0,$_sum25_i_i=0,$1299=0;
 var $1300=0,$_sum26_i_i=0,$1301=0,$1302=0,$1305=0,$1306=0,$1307=0,$1308=0,$1309=0,$1311=0,$1312=0,$1314=0,$_sum21_i_i=0,$1315=0,$1316=0,$_sum22_i_i=0,$1317=0,$1318=0,$_sum23_i_i=0,$1319=0;
 var $1320=0,$_sum1819_i_i=0,$1321=0,$1322=0,$sp_0_i_i_i=0,$1324=0,$1325=0,$1326=0,$1328=0,$1329=0,$1330=0,$1331=0,$1333=0,$1334=0,$_sum_i15_i=0,$_sum1_i16_i=0,$1335=0,$1336=0,$1337=0,$1338=0;
 var $1340=0,$1341=0,$1343=0,$_sum2_i17_i=0,$1344=0,$1345=0,$1346=0,$1347=0,$1348=0,$1349=0,$1350=0,$1351=0,$1352=0,$1353=0,$1354=0,$1355=0,$1357=0,$1358=0,$1359=0,$1360=0;
 var $1361=0,$1362=0,$1363=0,$_sum_i_i_i=0,$1364=0,$1365=0,$_sum2_i_i_i=0,$1366=0,$1367=0,$1368=0,$1369=0,$1370=0,$1371=0,$1372=0,$1373=0,$1374=0,$1375=0,$1376=0,$1377=0,$1378=0;
 var $1379=0,$1380=0,$1382=0,$1383=0,$1384=0,$1385=0,$_sum3_i_i=0,$1386=0,$1387=0,$1388=0,$1389=0,$1390=0,$1391=0,$1392=0,$1393=0,$1394=0,$1396=0,$1397=0,$1398=0,$1399=0;
 var $1400=0,$1401=0,$1402=0,$1404=0,$_sum11_pre_i_i=0,$_pre_i_i=0,$_sum12_i_i=0,$1406=0,$1407=0,$1408=0,$1409=0,$1410=0,$_pre_phi_i_i=0,$F_0_i_i=0,$1413=0,$1414=0,$1415=0,$1417=0,$1418=0,$1419=0;
 var $1421=0,$1423=0,$1424=0,$1425=0,$1426=0,$1427=0,$1428=0,$1429=0,$1430=0,$1431=0,$1432=0,$1433=0,$1434=0,$1435=0,$1436=0,$1437=0,$1438=0,$1439=0,$1440=0,$1441=0;
 var $1442=0,$1443=0,$1444=0,$I1_0_i_i=0,$1446=0,$1447=0,$I1_0_c_i_i=0,$1448=0,$1449=0,$1450=0,$1451=0,$1452=0,$1453=0,$1455=0,$1456=0,$_c_i_i=0,$1457=0,$1458=0,$1460=0,$1461=0;
 var $1463=0,$1464=0,$1466=0,$1467=0,$T_0_i_i=0,$K2_0_i_i=0,$1469=0,$1470=0,$1471=0,$1472=0,$1474=0,$1475=0,$1476=0,$1477=0,$1478=0,$1480=0,$1481=0,$1482=0,$1484=0,$T_0_c8_i_i=0;
 var $1485=0,$1486=0,$1489=0,$1490=0,$1491=0,$1492=0,$1493=0,$1495=0,$1496=0,$1498=0,$1499=0,$_c7_i_i=0,$1500=0,$T_0_c_i_i=0,$1501=0,$1502=0,$1503=0,$1505=0,$1506=0,$1507=0;
 var $1508=0,$1509=0,$1510=0,$_sum_i134=0,$1511=0,$1512=0,$1513=0,$1514=0,$1515=0,$1516=0,$1517=0,$mem_0=0,label=0;

 $1=($bytes>>>0)<((245)>>>0);
 do {
  if ($1) {
   $3=($bytes>>>0)<((11)>>>0);
   if ($3) {
    $8=16;
   } else {
    $5=((($bytes)+(11))|0);
    $6=$5&-8;
    $8=$6;
   }

   $9=$8>>>3;
   $10=((HEAP32[((8280)>>2)])|0);
   $11=$10>>>($9>>>0);
   $12=$11&3;
   $13=($12|0)==0;
   if (!($13)) {
    $15=$11&1;
    $16=$15^1;
    $17=((($16)+($9))|0);
    $18=$17<<1;
    $19=((8320+($18<<2))|0);
    $20=$19;
    $_sum111=((($18)+(2))|0);
    $21=((8320+($_sum111<<2))|0);
    $22=((HEAP32[(($21)>>2)])|0);
    $23=(($22+8)|0);
    $24=((HEAP32[(($23)>>2)])|0);
    $25=($20|0)==($24|0);
    do {
     if ($25) {
      $27=1<<$17;
      $28=$27^-1;
      $29=$10&$28;
      HEAP32[((8280)>>2)]=$29;
     } else {
      $31=$24;
      $32=((HEAP32[((8296)>>2)])|0);
      $33=($31>>>0)<($32>>>0);
      if ($33) {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
      $35=(($24+12)|0);
      $36=((HEAP32[(($35)>>2)])|0);
      $37=($36|0)==($22|0);
      if ($37) {
       HEAP32[(($35)>>2)]=$20;
       HEAP32[(($21)>>2)]=$24;
       break;
      } else {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     }
    } while(0);
    $40=$17<<3;
    $41=$40|3;
    $42=(($22+4)|0);
    HEAP32[(($42)>>2)]=$41;
    $43=$22;
    $_sum113114=$40|4;
    $44=(($43+$_sum113114)|0);
    $45=$44;
    $46=((HEAP32[(($45)>>2)])|0);
    $47=$46|1;
    HEAP32[(($45)>>2)]=$47;
    $48=$23;
    $mem_0=$48;

    return (($mem_0)|0);
   }
   $50=((HEAP32[((8288)>>2)])|0);
   $51=($8>>>0)>($50>>>0);
   if (!($51)) {
    $nb_0=$8;
    break;
   }
   $53=($11|0)==0;
   if (!($53)) {
    $55=$11<<$9;
    $56=2<<$9;
    $57=(((-$56))|0);
    $58=$56|$57;
    $59=$55&$58;
    $60=(((-$59))|0);
    $61=$59&$60;
    $62=((($61)-(1))|0);
    $63=$62>>>12;
    $64=$63&16;
    $65=$62>>>($64>>>0);
    $66=$65>>>5;
    $67=$66&8;
    $68=$67|$64;
    $69=$65>>>($67>>>0);
    $70=$69>>>2;
    $71=$70&4;
    $72=$68|$71;
    $73=$69>>>($71>>>0);
    $74=$73>>>1;
    $75=$74&2;
    $76=$72|$75;
    $77=$73>>>($75>>>0);
    $78=$77>>>1;
    $79=$78&1;
    $80=$76|$79;
    $81=$77>>>($79>>>0);
    $82=((($80)+($81))|0);
    $83=$82<<1;
    $84=((8320+($83<<2))|0);
    $85=$84;
    $_sum104=((($83)+(2))|0);
    $86=((8320+($_sum104<<2))|0);
    $87=((HEAP32[(($86)>>2)])|0);
    $88=(($87+8)|0);
    $89=((HEAP32[(($88)>>2)])|0);
    $90=($85|0)==($89|0);
    do {
     if ($90) {
      $92=1<<$82;
      $93=$92^-1;
      $94=$10&$93;
      HEAP32[((8280)>>2)]=$94;
     } else {
      $96=$89;
      $97=((HEAP32[((8296)>>2)])|0);
      $98=($96>>>0)<($97>>>0);
      if ($98) {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
      $100=(($89+12)|0);
      $101=((HEAP32[(($100)>>2)])|0);
      $102=($101|0)==($87|0);
      if ($102) {
       HEAP32[(($100)>>2)]=$85;
       HEAP32[(($86)>>2)]=$89;
       break;
      } else {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     }
    } while(0);
    $105=$82<<3;
    $106=((($105)-($8))|0);
    $107=$8|3;
    $108=(($87+4)|0);
    HEAP32[(($108)>>2)]=$107;
    $109=$87;
    $110=(($109+$8)|0);
    $111=$110;
    $112=$106|1;
    $_sum106107=$8|4;
    $113=(($109+$_sum106107)|0);
    $114=$113;
    HEAP32[(($114)>>2)]=$112;
    $115=(($109+$105)|0);
    $116=$115;
    HEAP32[(($116)>>2)]=$106;
    $117=((HEAP32[((8288)>>2)])|0);
    $118=($117|0)==0;
    if (!($118)) {
     $120=((HEAP32[((8300)>>2)])|0);
     $121=$117>>>3;
     $122=$121<<1;
     $123=((8320+($122<<2))|0);
     $124=$123;
     $125=((HEAP32[((8280)>>2)])|0);
     $126=1<<$121;
     $127=$125&$126;
     $128=($127|0)==0;
     do {
      if ($128) {
       $130=$125|$126;
       HEAP32[((8280)>>2)]=$130;
       $_sum109_pre=((($122)+(2))|0);
       $_pre=((8320+($_sum109_pre<<2))|0);
       $F4_0=$124;$_pre_phi=$_pre;
      } else {
       $_sum110=((($122)+(2))|0);
       $132=((8320+($_sum110<<2))|0);
       $133=((HEAP32[(($132)>>2)])|0);
       $134=$133;
       $135=((HEAP32[((8296)>>2)])|0);
       $136=($134>>>0)<($135>>>0);
       if (!($136)) {
        $F4_0=$133;$_pre_phi=$132;
        break;
       }
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     } while(0);


     HEAP32[(($_pre_phi)>>2)]=$120;
     $139=(($F4_0+12)|0);
     HEAP32[(($139)>>2)]=$120;
     $140=(($120+8)|0);
     HEAP32[(($140)>>2)]=$F4_0;
     $141=(($120+12)|0);
     HEAP32[(($141)>>2)]=$124;
    }
    HEAP32[((8288)>>2)]=$106;
    HEAP32[((8300)>>2)]=$111;
    $143=$88;
    $mem_0=$143;

    return (($mem_0)|0);
   }
   $145=((HEAP32[((8284)>>2)])|0);
   $146=($145|0)==0;
   if ($146) {
    $nb_0=$8;
    break;
   }
   $148=(((-$145))|0);
   $149=$145&$148;
   $150=((($149)-(1))|0);
   $151=$150>>>12;
   $152=$151&16;
   $153=$150>>>($152>>>0);
   $154=$153>>>5;
   $155=$154&8;
   $156=$155|$152;
   $157=$153>>>($155>>>0);
   $158=$157>>>2;
   $159=$158&4;
   $160=$156|$159;
   $161=$157>>>($159>>>0);
   $162=$161>>>1;
   $163=$162&2;
   $164=$160|$163;
   $165=$161>>>($163>>>0);
   $166=$165>>>1;
   $167=$166&1;
   $168=$164|$167;
   $169=$165>>>($167>>>0);
   $170=((($168)+($169))|0);
   $171=((8584+($170<<2))|0);
   $172=((HEAP32[(($171)>>2)])|0);
   $173=(($172+4)|0);
   $174=((HEAP32[(($173)>>2)])|0);
   $175=$174&-8;
   $176=((($175)-($8))|0);
   $t_0_i=$172;$v_0_i=$172;$rsize_0_i=$176;
   while(1) {



    $178=(($t_0_i+16)|0);
    $179=((HEAP32[(($178)>>2)])|0);
    $180=($179|0)==0;
    if ($180) {
     $182=(($t_0_i+20)|0);
     $183=((HEAP32[(($182)>>2)])|0);
     $184=($183|0)==0;
     if ($184) {
      break;
     } else {
      $185=$183;
     }
    } else {
     $185=$179;
    }

    $186=(($185+4)|0);
    $187=((HEAP32[(($186)>>2)])|0);
    $188=$187&-8;
    $189=((($188)-($8))|0);
    $190=($189>>>0)<($rsize_0_i>>>0);
    $_rsize_0_i=($190?$189:$rsize_0_i);
    $_v_0_i=($190?$185:$v_0_i);
    $t_0_i=$185;$v_0_i=$_v_0_i;$rsize_0_i=$_rsize_0_i;
   }
   $192=$v_0_i;
   $193=((HEAP32[((8296)>>2)])|0);
   $194=($192>>>0)<($193>>>0);
   if ($194) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $196=(($192+$8)|0);
   $197=$196;
   $198=($192>>>0)<($196>>>0);
   if (!($198)) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $200=(($v_0_i+24)|0);
   $201=((HEAP32[(($200)>>2)])|0);
   $202=(($v_0_i+12)|0);
   $203=((HEAP32[(($202)>>2)])|0);
   $204=($203|0)==($v_0_i|0);
   do {
    if ($204) {
     $220=(($v_0_i+20)|0);
     $221=((HEAP32[(($220)>>2)])|0);
     $222=($221|0)==0;
     if ($222) {
      $224=(($v_0_i+16)|0);
      $225=((HEAP32[(($224)>>2)])|0);
      $226=($225|0)==0;
      if ($226) {
       $R_1_i=0;
       break;
      } else {
       $R_0_i=$225;$RP_0_i=$224;
      }
     } else {
      $R_0_i=$221;$RP_0_i=$220;
     }
     while(1) {


      $227=(($R_0_i+20)|0);
      $228=((HEAP32[(($227)>>2)])|0);
      $229=($228|0)==0;
      if (!($229)) {
       $R_0_i=$228;$RP_0_i=$227;
       continue;
      }
      $231=(($R_0_i+16)|0);
      $232=((HEAP32[(($231)>>2)])|0);
      $233=($232|0)==0;
      if ($233) {
       break;
      } else {
       $R_0_i=$232;$RP_0_i=$231;
      }
     }
     $235=$RP_0_i;
     $236=($235>>>0)<($193>>>0);
     if ($236) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      HEAP32[(($RP_0_i)>>2)]=0;
      $R_1_i=$R_0_i;
      break;
     }
    } else {
     $206=(($v_0_i+8)|0);
     $207=((HEAP32[(($206)>>2)])|0);
     $208=$207;
     $209=($208>>>0)<($193>>>0);
     if ($209) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $211=(($207+12)|0);
     $212=((HEAP32[(($211)>>2)])|0);
     $213=($212|0)==($v_0_i|0);
     if (!($213)) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $215=(($203+8)|0);
     $216=((HEAP32[(($215)>>2)])|0);
     $217=($216|0)==($v_0_i|0);
     if ($217) {
      HEAP32[(($211)>>2)]=$203;
      HEAP32[(($215)>>2)]=$207;
      $R_1_i=$203;
      break;
     } else {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
    }
   } while(0);

   $240=($201|0)==0;
   L78: do {
    if (!($240)) {
     $242=(($v_0_i+28)|0);
     $243=((HEAP32[(($242)>>2)])|0);
     $244=((8584+($243<<2))|0);
     $245=((HEAP32[(($244)>>2)])|0);
     $246=($v_0_i|0)==($245|0);
     do {
      if ($246) {
       HEAP32[(($244)>>2)]=$R_1_i;
       $cond_i=($R_1_i|0)==0;
       if (!($cond_i)) {
        break;
       }
       $248=1<<$243;
       $249=$248^-1;
       $250=((HEAP32[((8284)>>2)])|0);
       $251=$250&$249;
       HEAP32[((8284)>>2)]=$251;
       break L78;
      } else {
       $253=$201;
       $254=((HEAP32[((8296)>>2)])|0);
       $255=($253>>>0)<($254>>>0);
       if ($255) {
        _abort(); return ((0)|0);
        return ((0)|0);
       }
       $257=(($201+16)|0);
       $258=((HEAP32[(($257)>>2)])|0);
       $259=($258|0)==($v_0_i|0);
       if ($259) {
        HEAP32[(($257)>>2)]=$R_1_i;
       } else {
        $262=(($201+20)|0);
        HEAP32[(($262)>>2)]=$R_1_i;
       }
       $265=($R_1_i|0)==0;
       if ($265) {
        break L78;
       }
      }
     } while(0);
     $267=$R_1_i;
     $268=((HEAP32[((8296)>>2)])|0);
     $269=($267>>>0)<($268>>>0);
     if ($269) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $271=(($R_1_i+24)|0);
     HEAP32[(($271)>>2)]=$201;
     $272=(($v_0_i+16)|0);
     $273=((HEAP32[(($272)>>2)])|0);
     $274=($273|0)==0;
     do {
      if (!($274)) {
       $276=$273;
       $277=((HEAP32[((8296)>>2)])|0);
       $278=($276>>>0)<($277>>>0);
       if ($278) {
        _abort(); return ((0)|0);
        return ((0)|0);
       } else {
        $280=(($R_1_i+16)|0);
        HEAP32[(($280)>>2)]=$273;
        $281=(($273+24)|0);
        HEAP32[(($281)>>2)]=$R_1_i;
        break;
       }
      }
     } while(0);
     $284=(($v_0_i+20)|0);
     $285=((HEAP32[(($284)>>2)])|0);
     $286=($285|0)==0;
     if ($286) {
      break;
     }
     $288=$285;
     $289=((HEAP32[((8296)>>2)])|0);
     $290=($288>>>0)<($289>>>0);
     if ($290) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $292=(($R_1_i+20)|0);
      HEAP32[(($292)>>2)]=$285;
      $293=(($285+24)|0);
      HEAP32[(($293)>>2)]=$R_1_i;
      break;
     }
    }
   } while(0);
   $297=($rsize_0_i>>>0)<((16)>>>0);
   if ($297) {
    $299=((($rsize_0_i)+($8))|0);
    $300=$299|3;
    $301=(($v_0_i+4)|0);
    HEAP32[(($301)>>2)]=$300;
    $_sum4_i=((($299)+(4))|0);
    $302=(($192+$_sum4_i)|0);
    $303=$302;
    $304=((HEAP32[(($303)>>2)])|0);
    $305=$304|1;
    HEAP32[(($303)>>2)]=$305;
   } else {
    $307=$8|3;
    $308=(($v_0_i+4)|0);
    HEAP32[(($308)>>2)]=$307;
    $309=$rsize_0_i|1;
    $_sum_i137=$8|4;
    $310=(($192+$_sum_i137)|0);
    $311=$310;
    HEAP32[(($311)>>2)]=$309;
    $_sum1_i=((($rsize_0_i)+($8))|0);
    $312=(($192+$_sum1_i)|0);
    $313=$312;
    HEAP32[(($313)>>2)]=$rsize_0_i;
    $314=((HEAP32[((8288)>>2)])|0);
    $315=($314|0)==0;
    if (!($315)) {
     $317=((HEAP32[((8300)>>2)])|0);
     $318=$314>>>3;
     $319=$318<<1;
     $320=((8320+($319<<2))|0);
     $321=$320;
     $322=((HEAP32[((8280)>>2)])|0);
     $323=1<<$318;
     $324=$322&$323;
     $325=($324|0)==0;
     do {
      if ($325) {
       $327=$322|$323;
       HEAP32[((8280)>>2)]=$327;
       $_sum2_pre_i=((($319)+(2))|0);
       $_pre_i=((8320+($_sum2_pre_i<<2))|0);
       $F1_0_i=$321;$_pre_phi_i=$_pre_i;
      } else {
       $_sum3_i=((($319)+(2))|0);
       $329=((8320+($_sum3_i<<2))|0);
       $330=((HEAP32[(($329)>>2)])|0);
       $331=$330;
       $332=((HEAP32[((8296)>>2)])|0);
       $333=($331>>>0)<($332>>>0);
       if (!($333)) {
        $F1_0_i=$330;$_pre_phi_i=$329;
        break;
       }
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     } while(0);


     HEAP32[(($_pre_phi_i)>>2)]=$317;
     $336=(($F1_0_i+12)|0);
     HEAP32[(($336)>>2)]=$317;
     $337=(($317+8)|0);
     HEAP32[(($337)>>2)]=$F1_0_i;
     $338=(($317+12)|0);
     HEAP32[(($338)>>2)]=$321;
    }
    HEAP32[((8288)>>2)]=$rsize_0_i;
    HEAP32[((8300)>>2)]=$197;
   }
   $341=(($v_0_i+8)|0);
   $342=$341;
   $343=($341|0)==0;
   if ($343) {
    $nb_0=$8;
    break;
   } else {
    $mem_0=$342;
   }

   return (($mem_0)|0);
  } else {
   $345=($bytes>>>0)>((4294967231)>>>0);
   if ($345) {
    $nb_0=-1;
    break;
   }
   $347=((($bytes)+(11))|0);
   $348=$347&-8;
   $349=((HEAP32[((8284)>>2)])|0);
   $350=($349|0)==0;
   if ($350) {
    $nb_0=$348;
    break;
   }
   $352=(((-$348))|0);
   $353=$347>>>8;
   $354=($353|0)==0;
   do {
    if ($354) {
     $idx_0_i=0;
    } else {
     $356=($348>>>0)>((16777215)>>>0);
     if ($356) {
      $idx_0_i=31;
      break;
     }
     $358=((($353)+(1048320))|0);
     $359=$358>>>16;
     $360=$359&8;
     $361=$353<<$360;
     $362=((($361)+(520192))|0);
     $363=$362>>>16;
     $364=$363&4;
     $365=$364|$360;
     $366=$361<<$364;
     $367=((($366)+(245760))|0);
     $368=$367>>>16;
     $369=$368&2;
     $370=$365|$369;
     $371=(((14)-($370))|0);
     $372=$366<<$369;
     $373=$372>>>15;
     $374=((($371)+($373))|0);
     $375=$374<<1;
     $376=((($374)+(7))|0);
     $377=$348>>>($376>>>0);
     $378=$377&1;
     $379=$378|$375;
     $idx_0_i=$379;
    }
   } while(0);

   $381=((8584+($idx_0_i<<2))|0);
   $382=((HEAP32[(($381)>>2)])|0);
   $383=($382|0)==0;
   L126: do {
    if ($383) {
     $v_2_i=0;$rsize_2_i=$352;$t_1_i=0;
    } else {
     $385=($idx_0_i|0)==31;
     if ($385) {
      $390=0;
     } else {
      $387=$idx_0_i>>>1;
      $388=(((25)-($387))|0);
      $390=$388;
     }

     $391=$348<<$390;
     $v_0_i118=0;$rsize_0_i117=$352;$t_0_i116=$382;$sizebits_0_i=$391;$rst_0_i=0;
     while(1) {





      $393=(($t_0_i116+4)|0);
      $394=((HEAP32[(($393)>>2)])|0);
      $395=$394&-8;
      $396=((($395)-($348))|0);
      $397=($396>>>0)<($rsize_0_i117>>>0);
      if ($397) {
       $399=($395|0)==($348|0);
       if ($399) {
        $v_2_i=$t_0_i116;$rsize_2_i=$396;$t_1_i=$t_0_i116;
        break L126;
       } else {
        $v_1_i=$t_0_i116;$rsize_1_i=$396;
       }
      } else {
       $v_1_i=$v_0_i118;$rsize_1_i=$rsize_0_i117;
      }


      $401=(($t_0_i116+20)|0);
      $402=((HEAP32[(($401)>>2)])|0);
      $403=$sizebits_0_i>>>31;
      $404=(($t_0_i116+16+($403<<2))|0);
      $405=((HEAP32[(($404)>>2)])|0);
      $406=($402|0)==0;
      $407=($402|0)==($405|0);
      $or_cond_i=$406|$407;
      $rst_1_i=($or_cond_i?$rst_0_i:$402);
      $408=($405|0)==0;
      $409=$sizebits_0_i<<1;
      if ($408) {
       $v_2_i=$v_1_i;$rsize_2_i=$rsize_1_i;$t_1_i=$rst_1_i;
       break;
      } else {
       $v_0_i118=$v_1_i;$rsize_0_i117=$rsize_1_i;$t_0_i116=$405;$sizebits_0_i=$409;$rst_0_i=$rst_1_i;
      }
     }
    }
   } while(0);



   $410=($t_1_i|0)==0;
   $411=($v_2_i|0)==0;
   $or_cond21_i=$410&$411;
   if ($or_cond21_i) {
    $413=2<<$idx_0_i;
    $414=(((-$413))|0);
    $415=$413|$414;
    $416=$349&$415;
    $417=($416|0)==0;
    if ($417) {
     $nb_0=$348;
     break;
    }
    $419=(((-$416))|0);
    $420=$416&$419;
    $421=((($420)-(1))|0);
    $422=$421>>>12;
    $423=$422&16;
    $424=$421>>>($423>>>0);
    $425=$424>>>5;
    $426=$425&8;
    $427=$426|$423;
    $428=$424>>>($426>>>0);
    $429=$428>>>2;
    $430=$429&4;
    $431=$427|$430;
    $432=$428>>>($430>>>0);
    $433=$432>>>1;
    $434=$433&2;
    $435=$431|$434;
    $436=$432>>>($434>>>0);
    $437=$436>>>1;
    $438=$437&1;
    $439=$435|$438;
    $440=$436>>>($438>>>0);
    $441=((($439)+($440))|0);
    $442=((8584+($441<<2))|0);
    $443=((HEAP32[(($442)>>2)])|0);
    $t_2_ph_i=$443;
   } else {
    $t_2_ph_i=$t_1_i;
   }

   $444=($t_2_ph_i|0)==0;
   if ($444) {
    $rsize_3_lcssa_i=$rsize_2_i;$v_3_lcssa_i=$v_2_i;
   } else {
    $t_228_i=$t_2_ph_i;$rsize_329_i=$rsize_2_i;$v_330_i=$v_2_i;
    while(1) {



     $445=(($t_228_i+4)|0);
     $446=((HEAP32[(($445)>>2)])|0);
     $447=$446&-8;
     $448=((($447)-($348))|0);
     $449=($448>>>0)<($rsize_329_i>>>0);
     $_rsize_3_i=($449?$448:$rsize_329_i);
     $t_2_v_3_i=($449?$t_228_i:$v_330_i);
     $450=(($t_228_i+16)|0);
     $451=((HEAP32[(($450)>>2)])|0);
     $452=($451|0)==0;
     if (!($452)) {
      $t_228_i=$451;$rsize_329_i=$_rsize_3_i;$v_330_i=$t_2_v_3_i;
      continue;
     }
     $453=(($t_228_i+20)|0);
     $454=((HEAP32[(($453)>>2)])|0);
     $455=($454|0)==0;
     if ($455) {
      $rsize_3_lcssa_i=$_rsize_3_i;$v_3_lcssa_i=$t_2_v_3_i;
      break;
     } else {
      $t_228_i=$454;$rsize_329_i=$_rsize_3_i;$v_330_i=$t_2_v_3_i;
     }
    }
   }


   $456=($v_3_lcssa_i|0)==0;
   if ($456) {
    $nb_0=$348;
    break;
   }
   $458=((HEAP32[((8288)>>2)])|0);
   $459=((($458)-($348))|0);
   $460=($rsize_3_lcssa_i>>>0)<($459>>>0);
   if (!($460)) {
    $nb_0=$348;
    break;
   }
   $462=$v_3_lcssa_i;
   $463=((HEAP32[((8296)>>2)])|0);
   $464=($462>>>0)<($463>>>0);
   if ($464) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $466=(($462+$348)|0);
   $467=$466;
   $468=($462>>>0)<($466>>>0);
   if (!($468)) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $470=(($v_3_lcssa_i+24)|0);
   $471=((HEAP32[(($470)>>2)])|0);
   $472=(($v_3_lcssa_i+12)|0);
   $473=((HEAP32[(($472)>>2)])|0);
   $474=($473|0)==($v_3_lcssa_i|0);
   do {
    if ($474) {
     $490=(($v_3_lcssa_i+20)|0);
     $491=((HEAP32[(($490)>>2)])|0);
     $492=($491|0)==0;
     if ($492) {
      $494=(($v_3_lcssa_i+16)|0);
      $495=((HEAP32[(($494)>>2)])|0);
      $496=($495|0)==0;
      if ($496) {
       $R_1_i122=0;
       break;
      } else {
       $R_0_i120=$495;$RP_0_i119=$494;
      }
     } else {
      $R_0_i120=$491;$RP_0_i119=$490;
     }
     while(1) {


      $497=(($R_0_i120+20)|0);
      $498=((HEAP32[(($497)>>2)])|0);
      $499=($498|0)==0;
      if (!($499)) {
       $R_0_i120=$498;$RP_0_i119=$497;
       continue;
      }
      $501=(($R_0_i120+16)|0);
      $502=((HEAP32[(($501)>>2)])|0);
      $503=($502|0)==0;
      if ($503) {
       break;
      } else {
       $R_0_i120=$502;$RP_0_i119=$501;
      }
     }
     $505=$RP_0_i119;
     $506=($505>>>0)<($463>>>0);
     if ($506) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      HEAP32[(($RP_0_i119)>>2)]=0;
      $R_1_i122=$R_0_i120;
      break;
     }
    } else {
     $476=(($v_3_lcssa_i+8)|0);
     $477=((HEAP32[(($476)>>2)])|0);
     $478=$477;
     $479=($478>>>0)<($463>>>0);
     if ($479) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $481=(($477+12)|0);
     $482=((HEAP32[(($481)>>2)])|0);
     $483=($482|0)==($v_3_lcssa_i|0);
     if (!($483)) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $485=(($473+8)|0);
     $486=((HEAP32[(($485)>>2)])|0);
     $487=($486|0)==($v_3_lcssa_i|0);
     if ($487) {
      HEAP32[(($481)>>2)]=$473;
      HEAP32[(($485)>>2)]=$477;
      $R_1_i122=$473;
      break;
     } else {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
    }
   } while(0);

   $510=($471|0)==0;
   L176: do {
    if (!($510)) {
     $512=(($v_3_lcssa_i+28)|0);
     $513=((HEAP32[(($512)>>2)])|0);
     $514=((8584+($513<<2))|0);
     $515=((HEAP32[(($514)>>2)])|0);
     $516=($v_3_lcssa_i|0)==($515|0);
     do {
      if ($516) {
       HEAP32[(($514)>>2)]=$R_1_i122;
       $cond_i123=($R_1_i122|0)==0;
       if (!($cond_i123)) {
        break;
       }
       $518=1<<$513;
       $519=$518^-1;
       $520=((HEAP32[((8284)>>2)])|0);
       $521=$520&$519;
       HEAP32[((8284)>>2)]=$521;
       break L176;
      } else {
       $523=$471;
       $524=((HEAP32[((8296)>>2)])|0);
       $525=($523>>>0)<($524>>>0);
       if ($525) {
        _abort(); return ((0)|0);
        return ((0)|0);
       }
       $527=(($471+16)|0);
       $528=((HEAP32[(($527)>>2)])|0);
       $529=($528|0)==($v_3_lcssa_i|0);
       if ($529) {
        HEAP32[(($527)>>2)]=$R_1_i122;
       } else {
        $532=(($471+20)|0);
        HEAP32[(($532)>>2)]=$R_1_i122;
       }
       $535=($R_1_i122|0)==0;
       if ($535) {
        break L176;
       }
      }
     } while(0);
     $537=$R_1_i122;
     $538=((HEAP32[((8296)>>2)])|0);
     $539=($537>>>0)<($538>>>0);
     if ($539) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $541=(($R_1_i122+24)|0);
     HEAP32[(($541)>>2)]=$471;
     $542=(($v_3_lcssa_i+16)|0);
     $543=((HEAP32[(($542)>>2)])|0);
     $544=($543|0)==0;
     do {
      if (!($544)) {
       $546=$543;
       $547=((HEAP32[((8296)>>2)])|0);
       $548=($546>>>0)<($547>>>0);
       if ($548) {
        _abort(); return ((0)|0);
        return ((0)|0);
       } else {
        $550=(($R_1_i122+16)|0);
        HEAP32[(($550)>>2)]=$543;
        $551=(($543+24)|0);
        HEAP32[(($551)>>2)]=$R_1_i122;
        break;
       }
      }
     } while(0);
     $554=(($v_3_lcssa_i+20)|0);
     $555=((HEAP32[(($554)>>2)])|0);
     $556=($555|0)==0;
     if ($556) {
      break;
     }
     $558=$555;
     $559=((HEAP32[((8296)>>2)])|0);
     $560=($558>>>0)<($559>>>0);
     if ($560) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $562=(($R_1_i122+20)|0);
      HEAP32[(($562)>>2)]=$555;
      $563=(($555+24)|0);
      HEAP32[(($563)>>2)]=$R_1_i122;
      break;
     }
    }
   } while(0);
   $567=($rsize_3_lcssa_i>>>0)<((16)>>>0);
   do {
    if ($567) {
     $569=((($rsize_3_lcssa_i)+($348))|0);
     $570=$569|3;
     $571=(($v_3_lcssa_i+4)|0);
     HEAP32[(($571)>>2)]=$570;
     $_sum19_i=((($569)+(4))|0);
     $572=(($462+$_sum19_i)|0);
     $573=$572;
     $574=((HEAP32[(($573)>>2)])|0);
     $575=$574|1;
     HEAP32[(($573)>>2)]=$575;
    } else {
     $577=$348|3;
     $578=(($v_3_lcssa_i+4)|0);
     HEAP32[(($578)>>2)]=$577;
     $579=$rsize_3_lcssa_i|1;
     $_sum_i125136=$348|4;
     $580=(($462+$_sum_i125136)|0);
     $581=$580;
     HEAP32[(($581)>>2)]=$579;
     $_sum1_i126=((($rsize_3_lcssa_i)+($348))|0);
     $582=(($462+$_sum1_i126)|0);
     $583=$582;
     HEAP32[(($583)>>2)]=$rsize_3_lcssa_i;
     $584=$rsize_3_lcssa_i>>>3;
     $585=($rsize_3_lcssa_i>>>0)<((256)>>>0);
     if ($585) {
      $587=$584<<1;
      $588=((8320+($587<<2))|0);
      $589=$588;
      $590=((HEAP32[((8280)>>2)])|0);
      $591=1<<$584;
      $592=$590&$591;
      $593=($592|0)==0;
      do {
       if ($593) {
        $595=$590|$591;
        HEAP32[((8280)>>2)]=$595;
        $_sum15_pre_i=((($587)+(2))|0);
        $_pre_i127=((8320+($_sum15_pre_i<<2))|0);
        $F5_0_i=$589;$_pre_phi_i128=$_pre_i127;
       } else {
        $_sum18_i=((($587)+(2))|0);
        $597=((8320+($_sum18_i<<2))|0);
        $598=((HEAP32[(($597)>>2)])|0);
        $599=$598;
        $600=((HEAP32[((8296)>>2)])|0);
        $601=($599>>>0)<($600>>>0);
        if (!($601)) {
         $F5_0_i=$598;$_pre_phi_i128=$597;
         break;
        }
        _abort(); return ((0)|0);
        return ((0)|0);
       }
      } while(0);


      HEAP32[(($_pre_phi_i128)>>2)]=$467;
      $604=(($F5_0_i+12)|0);
      HEAP32[(($604)>>2)]=$467;
      $_sum16_i=((($348)+(8))|0);
      $605=(($462+$_sum16_i)|0);
      $606=$605;
      HEAP32[(($606)>>2)]=$F5_0_i;
      $_sum17_i=((($348)+(12))|0);
      $607=(($462+$_sum17_i)|0);
      $608=$607;
      HEAP32[(($608)>>2)]=$589;
      break;
     }
     $610=$466;
     $611=$rsize_3_lcssa_i>>>8;
     $612=($611|0)==0;
     do {
      if ($612) {
       $I7_0_i=0;
      } else {
       $614=($rsize_3_lcssa_i>>>0)>((16777215)>>>0);
       if ($614) {
        $I7_0_i=31;
        break;
       }
       $616=((($611)+(1048320))|0);
       $617=$616>>>16;
       $618=$617&8;
       $619=$611<<$618;
       $620=((($619)+(520192))|0);
       $621=$620>>>16;
       $622=$621&4;
       $623=$622|$618;
       $624=$619<<$622;
       $625=((($624)+(245760))|0);
       $626=$625>>>16;
       $627=$626&2;
       $628=$623|$627;
       $629=(((14)-($628))|0);
       $630=$624<<$627;
       $631=$630>>>15;
       $632=((($629)+($631))|0);
       $633=$632<<1;
       $634=((($632)+(7))|0);
       $635=$rsize_3_lcssa_i>>>($634>>>0);
       $636=$635&1;
       $637=$636|$633;
       $I7_0_i=$637;
      }
     } while(0);

     $639=((8584+($I7_0_i<<2))|0);
     $_sum2_i=((($348)+(28))|0);
     $640=(($462+$_sum2_i)|0);
     $641=$640;
     HEAP32[(($641)>>2)]=$I7_0_i;
     $_sum3_i129=((($348)+(16))|0);
     $642=(($462+$_sum3_i129)|0);
     $_sum4_i130=((($348)+(20))|0);
     $643=(($462+$_sum4_i130)|0);
     $644=$643;
     HEAP32[(($644)>>2)]=0;
     $645=$642;
     HEAP32[(($645)>>2)]=0;
     $646=((HEAP32[((8284)>>2)])|0);
     $647=1<<$I7_0_i;
     $648=$646&$647;
     $649=($648|0)==0;
     if ($649) {
      $651=$646|$647;
      HEAP32[((8284)>>2)]=$651;
      HEAP32[(($639)>>2)]=$610;
      $652=$639;
      $_sum5_i=((($348)+(24))|0);
      $653=(($462+$_sum5_i)|0);
      $654=$653;
      HEAP32[(($654)>>2)]=$652;
      $_sum6_i=((($348)+(12))|0);
      $655=(($462+$_sum6_i)|0);
      $656=$655;
      HEAP32[(($656)>>2)]=$610;
      $_sum7_i=((($348)+(8))|0);
      $657=(($462+$_sum7_i)|0);
      $658=$657;
      HEAP32[(($658)>>2)]=$610;
      break;
     }
     $660=((HEAP32[(($639)>>2)])|0);
     $661=($I7_0_i|0)==31;
     if ($661) {
      $666=0;
     } else {
      $663=$I7_0_i>>>1;
      $664=(((25)-($663))|0);
      $666=$664;
     }

     $667=$rsize_3_lcssa_i<<$666;
     $K12_0_i=$667;$T_0_i=$660;
     while(1) {


      $669=(($T_0_i+4)|0);
      $670=((HEAP32[(($669)>>2)])|0);
      $671=$670&-8;
      $672=($671|0)==($rsize_3_lcssa_i|0);
      if ($672) {
       break;
      }
      $674=$K12_0_i>>>31;
      $675=(($T_0_i+16+($674<<2))|0);
      $676=((HEAP32[(($675)>>2)])|0);
      $677=($676|0)==0;
      $678=$K12_0_i<<1;
      if ($677) {
       label = 151;
       break;
      } else {
       $K12_0_i=$678;$T_0_i=$676;
      }
     }
     if ((label|0) == 151) {
      $680=$675;
      $681=((HEAP32[((8296)>>2)])|0);
      $682=($680>>>0)<($681>>>0);
      if ($682) {
       _abort(); return ((0)|0);
       return ((0)|0);
      } else {
       HEAP32[(($675)>>2)]=$610;
       $_sum12_i=((($348)+(24))|0);
       $684=(($462+$_sum12_i)|0);
       $685=$684;
       HEAP32[(($685)>>2)]=$T_0_i;
       $_sum13_i=((($348)+(12))|0);
       $686=(($462+$_sum13_i)|0);
       $687=$686;
       HEAP32[(($687)>>2)]=$610;
       $_sum14_i=((($348)+(8))|0);
       $688=(($462+$_sum14_i)|0);
       $689=$688;
       HEAP32[(($689)>>2)]=$610;
       break;
      }
     }
     $692=(($T_0_i+8)|0);
     $693=((HEAP32[(($692)>>2)])|0);
     $694=$T_0_i;
     $695=((HEAP32[((8296)>>2)])|0);
     $696=($694>>>0)<($695>>>0);
     if ($696) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $698=$693;
     $699=($698>>>0)<($695>>>0);
     if ($699) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $701=(($693+12)|0);
      HEAP32[(($701)>>2)]=$610;
      HEAP32[(($692)>>2)]=$610;
      $_sum9_i=((($348)+(8))|0);
      $702=(($462+$_sum9_i)|0);
      $703=$702;
      HEAP32[(($703)>>2)]=$693;
      $_sum10_i=((($348)+(12))|0);
      $704=(($462+$_sum10_i)|0);
      $705=$704;
      HEAP32[(($705)>>2)]=$T_0_i;
      $_sum11_i=((($348)+(24))|0);
      $706=(($462+$_sum11_i)|0);
      $707=$706;
      HEAP32[(($707)>>2)]=0;
      break;
     }
    }
   } while(0);
   $709=(($v_3_lcssa_i+8)|0);
   $710=$709;
   $711=($709|0)==0;
   if ($711) {
    $nb_0=$348;
    break;
   } else {
    $mem_0=$710;
   }

   return (($mem_0)|0);
  }
 } while(0);

 $712=((HEAP32[((8288)>>2)])|0);
 $713=($nb_0>>>0)>($712>>>0);
 if (!($713)) {
  $715=((($712)-($nb_0))|0);
  $716=((HEAP32[((8300)>>2)])|0);
  $717=($715>>>0)>((15)>>>0);
  if ($717) {
   $719=$716;
   $720=(($719+$nb_0)|0);
   $721=$720;
   HEAP32[((8300)>>2)]=$721;
   HEAP32[((8288)>>2)]=$715;
   $722=$715|1;
   $_sum102=((($nb_0)+(4))|0);
   $723=(($719+$_sum102)|0);
   $724=$723;
   HEAP32[(($724)>>2)]=$722;
   $725=(($719+$712)|0);
   $726=$725;
   HEAP32[(($726)>>2)]=$715;
   $727=$nb_0|3;
   $728=(($716+4)|0);
   HEAP32[(($728)>>2)]=$727;
  } else {
   HEAP32[((8288)>>2)]=0;
   HEAP32[((8300)>>2)]=0;
   $730=$712|3;
   $731=(($716+4)|0);
   HEAP32[(($731)>>2)]=$730;
   $732=$716;
   $_sum101=((($712)+(4))|0);
   $733=(($732+$_sum101)|0);
   $734=$733;
   $735=((HEAP32[(($734)>>2)])|0);
   $736=$735|1;
   HEAP32[(($734)>>2)]=$736;
  }
  $738=(($716+8)|0);
  $739=$738;
  $mem_0=$739;

  return (($mem_0)|0);
 }
 $741=((HEAP32[((8292)>>2)])|0);
 $742=($nb_0>>>0)<($741>>>0);
 if ($742) {
  $744=((($741)-($nb_0))|0);
  HEAP32[((8292)>>2)]=$744;
  $745=((HEAP32[((8304)>>2)])|0);
  $746=$745;
  $747=(($746+$nb_0)|0);
  $748=$747;
  HEAP32[((8304)>>2)]=$748;
  $749=$744|1;
  $_sum=((($nb_0)+(4))|0);
  $750=(($746+$_sum)|0);
  $751=$750;
  HEAP32[(($751)>>2)]=$749;
  $752=$nb_0|3;
  $753=(($745+4)|0);
  HEAP32[(($753)>>2)]=$752;
  $754=(($745+8)|0);
  $755=$754;
  $mem_0=$755;

  return (($mem_0)|0);
 }
 $757=((HEAP32[((8176)>>2)])|0);
 $758=($757|0)==0;
 do {
  if ($758) {
   $760=((_sysconf(((30)|0)))|0);
   $761=((($760)-(1))|0);
   $762=$761&$760;
   $763=($762|0)==0;
   if ($763) {
    HEAP32[((8184)>>2)]=$760;
    HEAP32[((8180)>>2)]=$760;
    HEAP32[((8188)>>2)]=-1;
    HEAP32[((8192)>>2)]=-1;
    HEAP32[((8196)>>2)]=0;
    HEAP32[((8724)>>2)]=0;
    $765=((_time(((0)|0)))|0);
    $766=$765&-16;
    $767=$766^1431655768;
    HEAP32[((8176)>>2)]=$767;
    break;
   } else {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
  }
 } while(0);
 $769=((($nb_0)+(48))|0);
 $770=((HEAP32[((8184)>>2)])|0);
 $771=((($nb_0)+(47))|0);
 $772=((($770)+($771))|0);
 $773=(((-$770))|0);
 $774=$772&$773;
 $775=($774>>>0)>($nb_0>>>0);
 if (!($775)) {
  $mem_0=0;

  return (($mem_0)|0);
 }
 $777=((HEAP32[((8720)>>2)])|0);
 $778=($777|0)==0;
 do {
  if (!($778)) {
   $780=((HEAP32[((8712)>>2)])|0);
   $781=((($780)+($774))|0);
   $782=($781>>>0)<=($780>>>0);
   $783=($781>>>0)>($777>>>0);
   $or_cond1_i=$782|$783;
   if ($or_cond1_i) {
    $mem_0=0;
   } else {
    break;
   }

   return (($mem_0)|0);
  }
 } while(0);
 $785=((HEAP32[((8724)>>2)])|0);
 $786=$785&4;
 $787=($786|0)==0;
 L268: do {
  if ($787) {
   $789=((HEAP32[((8304)>>2)])|0);
   $790=($789|0)==0;
   L270: do {
    if ($790) {
     label = 181;
    } else {
     $792=$789;
     $sp_0_i_i=8728;
     while(1) {

      $794=(($sp_0_i_i)|0);
      $795=((HEAP32[(($794)>>2)])|0);
      $796=($795>>>0)>($792>>>0);
      if (!($796)) {
       $798=(($sp_0_i_i+4)|0);
       $799=((HEAP32[(($798)>>2)])|0);
       $800=(($795+$799)|0);
       $801=($800>>>0)>($792>>>0);
       if ($801) {
        break;
       }
      }
      $803=(($sp_0_i_i+8)|0);
      $804=((HEAP32[(($803)>>2)])|0);
      $805=($804|0)==0;
      if ($805) {
       label = 181;
       break L270;
      } else {
       $sp_0_i_i=$804;
      }
     }
     $806=($sp_0_i_i|0)==0;
     if ($806) {
      label = 181;
      break;
     }
     $836=((HEAP32[((8292)>>2)])|0);
     $837=((($772)-($836))|0);
     $838=$837&$773;
     $839=($838>>>0)<((2147483647)>>>0);
     if (!($839)) {
      $tsize_0303639_i=0;
      break;
     }
     $841=((_sbrk((($838)|0)))|0);
     $842=((HEAP32[(($794)>>2)])|0);
     $843=((HEAP32[(($798)>>2)])|0);
     $844=(($842+$843)|0);
     $845=($841|0)==($844|0);
     $_3_i=($845?$838:0);
     $_4_i=($845?$841:-1);
     $tbase_0_i=$_4_i;$tsize_0_i=$_3_i;$br_0_i=$841;$ssize_1_i=$838;
     label = 190;
    }
   } while(0);
   do {
    if ((label|0) == 181) {
     $807=((_sbrk(((0)|0)))|0);
     $808=($807|0)==-1;
     if ($808) {
      $tsize_0303639_i=0;
      break;
     }
     $810=$807;
     $811=((HEAP32[((8180)>>2)])|0);
     $812=((($811)-(1))|0);
     $813=$812&$810;
     $814=($813|0)==0;
     if ($814) {
      $ssize_0_i=$774;
     } else {
      $816=((($812)+($810))|0);
      $817=(((-$811))|0);
      $818=$816&$817;
      $819=((($774)-($810))|0);
      $820=((($819)+($818))|0);
      $ssize_0_i=$820;
     }

     $822=((HEAP32[((8712)>>2)])|0);
     $823=((($822)+($ssize_0_i))|0);
     $824=($ssize_0_i>>>0)>($nb_0>>>0);
     $825=($ssize_0_i>>>0)<((2147483647)>>>0);
     $or_cond_i131=$824&$825;
     if (!($or_cond_i131)) {
      $tsize_0303639_i=0;
      break;
     }
     $827=((HEAP32[((8720)>>2)])|0);
     $828=($827|0)==0;
     if (!($828)) {
      $830=($823>>>0)<=($822>>>0);
      $831=($823>>>0)>($827>>>0);
      $or_cond2_i=$830|$831;
      if ($or_cond2_i) {
       $tsize_0303639_i=0;
       break;
      }
     }
     $833=((_sbrk((($ssize_0_i)|0)))|0);
     $834=($833|0)==($807|0);
     $ssize_0__i=($834?$ssize_0_i:0);
     $__i=($834?$807:-1);
     $tbase_0_i=$__i;$tsize_0_i=$ssize_0__i;$br_0_i=$833;$ssize_1_i=$ssize_0_i;
     label = 190;
    }
   } while(0);
   L290: do {
    if ((label|0) == 190) {




     $847=(((-$ssize_1_i))|0);
     $848=($tbase_0_i|0)==-1;
     if (!($848)) {
      $tsize_244_i=$tsize_0_i;$tbase_245_i=$tbase_0_i;
      label = 201;
      break L268;
     }
     $850=($br_0_i|0)!=-1;
     $851=($ssize_1_i>>>0)<((2147483647)>>>0);
     $or_cond5_i=$850&$851;
     $852=($ssize_1_i>>>0)<($769>>>0);
     $or_cond6_i=$or_cond5_i&$852;
     do {
      if ($or_cond6_i) {
       $854=((HEAP32[((8184)>>2)])|0);
       $855=((($771)-($ssize_1_i))|0);
       $856=((($855)+($854))|0);
       $857=(((-$854))|0);
       $858=$856&$857;
       $859=($858>>>0)<((2147483647)>>>0);
       if (!($859)) {
        $ssize_2_i=$ssize_1_i;
        break;
       }
       $861=((_sbrk((($858)|0)))|0);
       $862=($861|0)==-1;
       if ($862) {
        $866=((_sbrk((($847)|0)))|0);
        $tsize_0303639_i=$tsize_0_i;
        break L290;
       } else {
        $864=((($858)+($ssize_1_i))|0);
        $ssize_2_i=$864;
        break;
       }
      } else {
       $ssize_2_i=$ssize_1_i;
      }
     } while(0);

     $868=($br_0_i|0)==-1;
     if ($868) {
      $tsize_0303639_i=$tsize_0_i;
     } else {
      $tsize_244_i=$ssize_2_i;$tbase_245_i=$br_0_i;
      label = 201;
      break L268;
     }
    }
   } while(0);

   $869=((HEAP32[((8724)>>2)])|0);
   $870=$869|4;
   HEAP32[((8724)>>2)]=$870;
   $tsize_1_i=$tsize_0303639_i;
   label = 198;
  } else {
   $tsize_1_i=0;
   label = 198;
  }
 } while(0);
 do {
  if ((label|0) == 198) {

   $872=($774>>>0)<((2147483647)>>>0);
   if (!($872)) {
    break;
   }
   $874=((_sbrk((($774)|0)))|0);
   $875=((_sbrk(((0)|0)))|0);
   $notlhs_i=($874|0)!=-1;
   $notrhs_i=($875|0)!=-1;
   $or_cond8_not_i=$notrhs_i&$notlhs_i;
   $876=($874>>>0)<($875>>>0);
   $or_cond9_i=$or_cond8_not_i&$876;
   if (!($or_cond9_i)) {
    break;
   }
   $877=$875;
   $878=$874;
   $879=((($877)-($878))|0);
   $880=((($nb_0)+(40))|0);
   $881=($879>>>0)>($880>>>0);
   $_tsize_1_i=($881?$879:$tsize_1_i);
   $_tbase_1_i=($881?$874:-1);
   $882=($_tbase_1_i|0)==-1;
   if (!($882)) {
    $tsize_244_i=$_tsize_1_i;$tbase_245_i=$_tbase_1_i;
    label = 201;
   }
  }
 } while(0);
 do {
  if ((label|0) == 201) {


   $883=((HEAP32[((8712)>>2)])|0);
   $884=((($883)+($tsize_244_i))|0);
   HEAP32[((8712)>>2)]=$884;
   $885=((HEAP32[((8716)>>2)])|0);
   $886=($884>>>0)>($885>>>0);
   if ($886) {
    HEAP32[((8716)>>2)]=$884;
   }
   $888=((HEAP32[((8304)>>2)])|0);
   $889=($888|0)==0;
   L310: do {
    if ($889) {
     $891=((HEAP32[((8296)>>2)])|0);
     $892=($891|0)==0;
     $893=($tbase_245_i>>>0)<($891>>>0);
     $or_cond10_i=$892|$893;
     if ($or_cond10_i) {
      HEAP32[((8296)>>2)]=$tbase_245_i;
     }
     HEAP32[((8728)>>2)]=$tbase_245_i;
     HEAP32[((8732)>>2)]=$tsize_244_i;
     HEAP32[((8740)>>2)]=0;
     $895=((HEAP32[((8176)>>2)])|0);
     HEAP32[((8316)>>2)]=$895;
     HEAP32[((8312)>>2)]=-1;
     $i_02_i_i=0;
     while(1) {

      $897=$i_02_i_i<<1;
      $898=((8320+($897<<2))|0);
      $899=$898;
      $_sum_i_i=((($897)+(3))|0);
      $900=((8320+($_sum_i_i<<2))|0);
      HEAP32[(($900)>>2)]=$899;
      $_sum1_i_i=((($897)+(2))|0);
      $901=((8320+($_sum1_i_i<<2))|0);
      HEAP32[(($901)>>2)]=$899;
      $902=((($i_02_i_i)+(1))|0);
      $903=($902>>>0)<((32)>>>0);
      if ($903) {
       $i_02_i_i=$902;
      } else {
       break;
      }
     }
     $904=((($tsize_244_i)-(40))|0);
     $905=(($tbase_245_i+8)|0);
     $906=$905;
     $907=$906&7;
     $908=($907|0)==0;
     if ($908) {
      $912=0;
     } else {
      $910=(((-$906))|0);
      $911=$910&7;
      $912=$911;
     }

     $913=(($tbase_245_i+$912)|0);
     $914=$913;
     $915=((($904)-($912))|0);
     HEAP32[((8304)>>2)]=$914;
     HEAP32[((8292)>>2)]=$915;
     $916=$915|1;
     $_sum_i14_i=((($912)+(4))|0);
     $917=(($tbase_245_i+$_sum_i14_i)|0);
     $918=$917;
     HEAP32[(($918)>>2)]=$916;
     $_sum2_i_i=((($tsize_244_i)-(36))|0);
     $919=(($tbase_245_i+$_sum2_i_i)|0);
     $920=$919;
     HEAP32[(($920)>>2)]=40;
     $921=((HEAP32[((8192)>>2)])|0);
     HEAP32[((8308)>>2)]=$921;
    } else {
     $sp_067_i=8728;
     while(1) {

      $922=(($sp_067_i)|0);
      $923=((HEAP32[(($922)>>2)])|0);
      $924=(($sp_067_i+4)|0);
      $925=((HEAP32[(($924)>>2)])|0);
      $926=(($923+$925)|0);
      $927=($tbase_245_i|0)==($926|0);
      if ($927) {
       label = 213;
       break;
      }
      $929=(($sp_067_i+8)|0);
      $930=((HEAP32[(($929)>>2)])|0);
      $931=($930|0)==0;
      if ($931) {
       break;
      } else {
       $sp_067_i=$930;
      }
     }
     do {
      if ((label|0) == 213) {
       $932=(($sp_067_i+12)|0);
       $933=((HEAP32[(($932)>>2)])|0);
       $934=$933&8;
       $935=($934|0)==0;
       if (!($935)) {
        break;
       }
       $937=$888;
       $938=($937>>>0)>=($923>>>0);
       $939=($937>>>0)<($tbase_245_i>>>0);
       $or_cond47_i=$938&$939;
       if (!($or_cond47_i)) {
        break;
       }
       $941=((($925)+($tsize_244_i))|0);
       HEAP32[(($924)>>2)]=$941;
       $942=((HEAP32[((8292)>>2)])|0);
       $943=((($942)+($tsize_244_i))|0);
       $944=(($888+8)|0);
       $945=$944;
       $946=$945&7;
       $947=($946|0)==0;
       if ($947) {
        $951=0;
       } else {
        $949=(((-$945))|0);
        $950=$949&7;
        $951=$950;
       }

       $952=(($937+$951)|0);
       $953=$952;
       $954=((($943)-($951))|0);
       HEAP32[((8304)>>2)]=$953;
       HEAP32[((8292)>>2)]=$954;
       $955=$954|1;
       $_sum_i18_i=((($951)+(4))|0);
       $956=(($937+$_sum_i18_i)|0);
       $957=$956;
       HEAP32[(($957)>>2)]=$955;
       $_sum2_i19_i=((($943)+(4))|0);
       $958=(($937+$_sum2_i19_i)|0);
       $959=$958;
       HEAP32[(($959)>>2)]=40;
       $960=((HEAP32[((8192)>>2)])|0);
       HEAP32[((8308)>>2)]=$960;
       break L310;
      }
     } while(0);
     $961=((HEAP32[((8296)>>2)])|0);
     $962=($tbase_245_i>>>0)<($961>>>0);
     if ($962) {
      HEAP32[((8296)>>2)]=$tbase_245_i;
     }
     $964=(($tbase_245_i+$tsize_244_i)|0);
     $sp_160_i=8728;
     while(1) {

      $966=(($sp_160_i)|0);
      $967=((HEAP32[(($966)>>2)])|0);
      $968=($967|0)==($964|0);
      if ($968) {
       label = 223;
       break;
      }
      $970=(($sp_160_i+8)|0);
      $971=((HEAP32[(($970)>>2)])|0);
      $972=($971|0)==0;
      if ($972) {
       break;
      } else {
       $sp_160_i=$971;
      }
     }
     do {
      if ((label|0) == 223) {
       $973=(($sp_160_i+12)|0);
       $974=((HEAP32[(($973)>>2)])|0);
       $975=$974&8;
       $976=($975|0)==0;
       if (!($976)) {
        break;
       }
       HEAP32[(($966)>>2)]=$tbase_245_i;
       $978=(($sp_160_i+4)|0);
       $979=((HEAP32[(($978)>>2)])|0);
       $980=((($979)+($tsize_244_i))|0);
       HEAP32[(($978)>>2)]=$980;
       $981=(($tbase_245_i+8)|0);
       $982=$981;
       $983=$982&7;
       $984=($983|0)==0;
       if ($984) {
        $989=0;
       } else {
        $986=(((-$982))|0);
        $987=$986&7;
        $989=$987;
       }

       $990=(($tbase_245_i+$989)|0);
       $_sum93_i=((($tsize_244_i)+(8))|0);
       $991=(($tbase_245_i+$_sum93_i)|0);
       $992=$991;
       $993=$992&7;
       $994=($993|0)==0;
       if ($994) {
        $999=0;
       } else {
        $996=(((-$992))|0);
        $997=$996&7;
        $999=$997;
       }

       $_sum94_i=((($999)+($tsize_244_i))|0);
       $1000=(($tbase_245_i+$_sum94_i)|0);
       $1001=$1000;
       $1002=$1000;
       $1003=$990;
       $1004=((($1002)-($1003))|0);
       $_sum_i21_i=((($989)+($nb_0))|0);
       $1005=(($tbase_245_i+$_sum_i21_i)|0);
       $1006=$1005;
       $1007=((($1004)-($nb_0))|0);
       $1008=$nb_0|3;
       $_sum1_i22_i=((($989)+(4))|0);
       $1009=(($tbase_245_i+$_sum1_i22_i)|0);
       $1010=$1009;
       HEAP32[(($1010)>>2)]=$1008;
       $1011=((HEAP32[((8304)>>2)])|0);
       $1012=($1001|0)==($1011|0);
       do {
        if ($1012) {
         $1014=((HEAP32[((8292)>>2)])|0);
         $1015=((($1014)+($1007))|0);
         HEAP32[((8292)>>2)]=$1015;
         HEAP32[((8304)>>2)]=$1006;
         $1016=$1015|1;
         $_sum46_i_i=((($_sum_i21_i)+(4))|0);
         $1017=(($tbase_245_i+$_sum46_i_i)|0);
         $1018=$1017;
         HEAP32[(($1018)>>2)]=$1016;
        } else {
         $1020=((HEAP32[((8300)>>2)])|0);
         $1021=($1001|0)==($1020|0);
         if ($1021) {
          $1023=((HEAP32[((8288)>>2)])|0);
          $1024=((($1023)+($1007))|0);
          HEAP32[((8288)>>2)]=$1024;
          HEAP32[((8300)>>2)]=$1006;
          $1025=$1024|1;
          $_sum44_i_i=((($_sum_i21_i)+(4))|0);
          $1026=(($tbase_245_i+$_sum44_i_i)|0);
          $1027=$1026;
          HEAP32[(($1027)>>2)]=$1025;
          $_sum45_i_i=((($1024)+($_sum_i21_i))|0);
          $1028=(($tbase_245_i+$_sum45_i_i)|0);
          $1029=$1028;
          HEAP32[(($1029)>>2)]=$1024;
          break;
         }
         $_sum2_i23_i=((($tsize_244_i)+(4))|0);
         $_sum95_i=((($_sum2_i23_i)+($999))|0);
         $1031=(($tbase_245_i+$_sum95_i)|0);
         $1032=$1031;
         $1033=((HEAP32[(($1032)>>2)])|0);
         $1034=$1033&3;
         $1035=($1034|0)==1;
         if ($1035) {
          $1037=$1033&-8;
          $1038=$1033>>>3;
          $1039=($1033>>>0)<((256)>>>0);
          L355: do {
           if ($1039) {
            $_sum3940_i_i=$999|8;
            $_sum105_i=((($_sum3940_i_i)+($tsize_244_i))|0);
            $1041=(($tbase_245_i+$_sum105_i)|0);
            $1042=$1041;
            $1043=((HEAP32[(($1042)>>2)])|0);
            $_sum41_i_i=((($tsize_244_i)+(12))|0);
            $_sum106_i=((($_sum41_i_i)+($999))|0);
            $1044=(($tbase_245_i+$_sum106_i)|0);
            $1045=$1044;
            $1046=((HEAP32[(($1045)>>2)])|0);
            $1047=$1038<<1;
            $1048=((8320+($1047<<2))|0);
            $1049=$1048;
            $1050=($1043|0)==($1049|0);
            do {
             if (!($1050)) {
              $1052=$1043;
              $1053=((HEAP32[((8296)>>2)])|0);
              $1054=($1052>>>0)<($1053>>>0);
              if ($1054) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1056=(($1043+12)|0);
              $1057=((HEAP32[(($1056)>>2)])|0);
              $1058=($1057|0)==($1001|0);
              if ($1058) {
               break;
              }
              _abort(); return ((0)|0);
              return ((0)|0);
             }
            } while(0);
            $1059=($1046|0)==($1043|0);
            if ($1059) {
             $1061=1<<$1038;
             $1062=$1061^-1;
             $1063=((HEAP32[((8280)>>2)])|0);
             $1064=$1063&$1062;
             HEAP32[((8280)>>2)]=$1064;
             break;
            }
            $1066=($1046|0)==($1049|0);
            do {
             if ($1066) {
              $_pre56_i_i=(($1046+8)|0);
              $_pre_phi57_i_i=$_pre56_i_i;
             } else {
              $1068=$1046;
              $1069=((HEAP32[((8296)>>2)])|0);
              $1070=($1068>>>0)<($1069>>>0);
              if ($1070) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1072=(($1046+8)|0);
              $1073=((HEAP32[(($1072)>>2)])|0);
              $1074=($1073|0)==($1001|0);
              if ($1074) {
               $_pre_phi57_i_i=$1072;
               break;
              }
              _abort(); return ((0)|0);
              return ((0)|0);
             }
            } while(0);

            $1075=(($1043+12)|0);
            HEAP32[(($1075)>>2)]=$1046;
            HEAP32[(($_pre_phi57_i_i)>>2)]=$1043;
           } else {
            $1077=$1000;
            $_sum34_i_i=$999|24;
            $_sum96_i=((($_sum34_i_i)+($tsize_244_i))|0);
            $1078=(($tbase_245_i+$_sum96_i)|0);
            $1079=$1078;
            $1080=((HEAP32[(($1079)>>2)])|0);
            $_sum5_i_i=((($tsize_244_i)+(12))|0);
            $_sum97_i=((($_sum5_i_i)+($999))|0);
            $1081=(($tbase_245_i+$_sum97_i)|0);
            $1082=$1081;
            $1083=((HEAP32[(($1082)>>2)])|0);
            $1084=($1083|0)==($1077|0);
            do {
             if ($1084) {
              $_sum67_i_i=$999|16;
              $_sum103_i=((($_sum2_i23_i)+($_sum67_i_i))|0);
              $1102=(($tbase_245_i+$_sum103_i)|0);
              $1103=$1102;
              $1104=((HEAP32[(($1103)>>2)])|0);
              $1105=($1104|0)==0;
              if ($1105) {
               $_sum104_i=((($_sum67_i_i)+($tsize_244_i))|0);
               $1107=(($tbase_245_i+$_sum104_i)|0);
               $1108=$1107;
               $1109=((HEAP32[(($1108)>>2)])|0);
               $1110=($1109|0)==0;
               if ($1110) {
                $R_1_i_i=0;
                break;
               } else {
                $R_0_i_i=$1109;$RP_0_i_i=$1108;
               }
              } else {
               $R_0_i_i=$1104;$RP_0_i_i=$1103;
              }
              while(1) {


               $1111=(($R_0_i_i+20)|0);
               $1112=((HEAP32[(($1111)>>2)])|0);
               $1113=($1112|0)==0;
               if (!($1113)) {
                $R_0_i_i=$1112;$RP_0_i_i=$1111;
                continue;
               }
               $1115=(($R_0_i_i+16)|0);
               $1116=((HEAP32[(($1115)>>2)])|0);
               $1117=($1116|0)==0;
               if ($1117) {
                break;
               } else {
                $R_0_i_i=$1116;$RP_0_i_i=$1115;
               }
              }
              $1119=$RP_0_i_i;
              $1120=((HEAP32[((8296)>>2)])|0);
              $1121=($1119>>>0)<($1120>>>0);
              if ($1121) {
               _abort(); return ((0)|0);
               return ((0)|0);
              } else {
               HEAP32[(($RP_0_i_i)>>2)]=0;
               $R_1_i_i=$R_0_i_i;
               break;
              }
             } else {
              $_sum3637_i_i=$999|8;
              $_sum98_i=((($_sum3637_i_i)+($tsize_244_i))|0);
              $1086=(($tbase_245_i+$_sum98_i)|0);
              $1087=$1086;
              $1088=((HEAP32[(($1087)>>2)])|0);
              $1089=$1088;
              $1090=((HEAP32[((8296)>>2)])|0);
              $1091=($1089>>>0)<($1090>>>0);
              if ($1091) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1093=(($1088+12)|0);
              $1094=((HEAP32[(($1093)>>2)])|0);
              $1095=($1094|0)==($1077|0);
              if (!($1095)) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1097=(($1083+8)|0);
              $1098=((HEAP32[(($1097)>>2)])|0);
              $1099=($1098|0)==($1077|0);
              if ($1099) {
               HEAP32[(($1093)>>2)]=$1083;
               HEAP32[(($1097)>>2)]=$1088;
               $R_1_i_i=$1083;
               break;
              } else {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
             }
            } while(0);

            $1125=($1080|0)==0;
            if ($1125) {
             break;
            }
            $_sum31_i_i=((($tsize_244_i)+(28))|0);
            $_sum99_i=((($_sum31_i_i)+($999))|0);
            $1127=(($tbase_245_i+$_sum99_i)|0);
            $1128=$1127;
            $1129=((HEAP32[(($1128)>>2)])|0);
            $1130=((8584+($1129<<2))|0);
            $1131=((HEAP32[(($1130)>>2)])|0);
            $1132=($1077|0)==($1131|0);
            do {
             if ($1132) {
              HEAP32[(($1130)>>2)]=$R_1_i_i;
              $cond_i_i=($R_1_i_i|0)==0;
              if (!($cond_i_i)) {
               break;
              }
              $1134=1<<$1129;
              $1135=$1134^-1;
              $1136=((HEAP32[((8284)>>2)])|0);
              $1137=$1136&$1135;
              HEAP32[((8284)>>2)]=$1137;
              break L355;
             } else {
              $1139=$1080;
              $1140=((HEAP32[((8296)>>2)])|0);
              $1141=($1139>>>0)<($1140>>>0);
              if ($1141) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1143=(($1080+16)|0);
              $1144=((HEAP32[(($1143)>>2)])|0);
              $1145=($1144|0)==($1077|0);
              if ($1145) {
               HEAP32[(($1143)>>2)]=$R_1_i_i;
              } else {
               $1148=(($1080+20)|0);
               HEAP32[(($1148)>>2)]=$R_1_i_i;
              }
              $1151=($R_1_i_i|0)==0;
              if ($1151) {
               break L355;
              }
             }
            } while(0);
            $1153=$R_1_i_i;
            $1154=((HEAP32[((8296)>>2)])|0);
            $1155=($1153>>>0)<($1154>>>0);
            if ($1155) {
             _abort(); return ((0)|0);
             return ((0)|0);
            }
            $1157=(($R_1_i_i+24)|0);
            HEAP32[(($1157)>>2)]=$1080;
            $_sum3233_i_i=$999|16;
            $_sum100_i=((($_sum3233_i_i)+($tsize_244_i))|0);
            $1158=(($tbase_245_i+$_sum100_i)|0);
            $1159=$1158;
            $1160=((HEAP32[(($1159)>>2)])|0);
            $1161=($1160|0)==0;
            do {
             if (!($1161)) {
              $1163=$1160;
              $1164=((HEAP32[((8296)>>2)])|0);
              $1165=($1163>>>0)<($1164>>>0);
              if ($1165) {
               _abort(); return ((0)|0);
               return ((0)|0);
              } else {
               $1167=(($R_1_i_i+16)|0);
               HEAP32[(($1167)>>2)]=$1160;
               $1168=(($1160+24)|0);
               HEAP32[(($1168)>>2)]=$R_1_i_i;
               break;
              }
             }
            } while(0);
            $_sum101_i=((($_sum2_i23_i)+($_sum3233_i_i))|0);
            $1171=(($tbase_245_i+$_sum101_i)|0);
            $1172=$1171;
            $1173=((HEAP32[(($1172)>>2)])|0);
            $1174=($1173|0)==0;
            if ($1174) {
             break;
            }
            $1176=$1173;
            $1177=((HEAP32[((8296)>>2)])|0);
            $1178=($1176>>>0)<($1177>>>0);
            if ($1178) {
             _abort(); return ((0)|0);
             return ((0)|0);
            } else {
             $1180=(($R_1_i_i+20)|0);
             HEAP32[(($1180)>>2)]=$1173;
             $1181=(($1173+24)|0);
             HEAP32[(($1181)>>2)]=$R_1_i_i;
             break;
            }
           }
          } while(0);
          $_sum9_i_i=$1037|$999;
          $_sum102_i=((($_sum9_i_i)+($tsize_244_i))|0);
          $1185=(($tbase_245_i+$_sum102_i)|0);
          $1186=$1185;
          $1187=((($1037)+($1007))|0);
          $oldfirst_0_i_i=$1186;$qsize_0_i_i=$1187;
         } else {
          $oldfirst_0_i_i=$1001;$qsize_0_i_i=$1007;
         }


         $1189=(($oldfirst_0_i_i+4)|0);
         $1190=((HEAP32[(($1189)>>2)])|0);
         $1191=$1190&-2;
         HEAP32[(($1189)>>2)]=$1191;
         $1192=$qsize_0_i_i|1;
         $_sum10_i_i=((($_sum_i21_i)+(4))|0);
         $1193=(($tbase_245_i+$_sum10_i_i)|0);
         $1194=$1193;
         HEAP32[(($1194)>>2)]=$1192;
         $_sum11_i_i=((($qsize_0_i_i)+($_sum_i21_i))|0);
         $1195=(($tbase_245_i+$_sum11_i_i)|0);
         $1196=$1195;
         HEAP32[(($1196)>>2)]=$qsize_0_i_i;
         $1197=$qsize_0_i_i>>>3;
         $1198=($qsize_0_i_i>>>0)<((256)>>>0);
         if ($1198) {
          $1200=$1197<<1;
          $1201=((8320+($1200<<2))|0);
          $1202=$1201;
          $1203=((HEAP32[((8280)>>2)])|0);
          $1204=1<<$1197;
          $1205=$1203&$1204;
          $1206=($1205|0)==0;
          do {
           if ($1206) {
            $1208=$1203|$1204;
            HEAP32[((8280)>>2)]=$1208;
            $_sum27_pre_i_i=((($1200)+(2))|0);
            $_pre_i24_i=((8320+($_sum27_pre_i_i<<2))|0);
            $F4_0_i_i=$1202;$_pre_phi_i25_i=$_pre_i24_i;
           } else {
            $_sum30_i_i=((($1200)+(2))|0);
            $1210=((8320+($_sum30_i_i<<2))|0);
            $1211=((HEAP32[(($1210)>>2)])|0);
            $1212=$1211;
            $1213=((HEAP32[((8296)>>2)])|0);
            $1214=($1212>>>0)<($1213>>>0);
            if (!($1214)) {
             $F4_0_i_i=$1211;$_pre_phi_i25_i=$1210;
             break;
            }
            _abort(); return ((0)|0);
            return ((0)|0);
           }
          } while(0);


          HEAP32[(($_pre_phi_i25_i)>>2)]=$1006;
          $1217=(($F4_0_i_i+12)|0);
          HEAP32[(($1217)>>2)]=$1006;
          $_sum28_i_i=((($_sum_i21_i)+(8))|0);
          $1218=(($tbase_245_i+$_sum28_i_i)|0);
          $1219=$1218;
          HEAP32[(($1219)>>2)]=$F4_0_i_i;
          $_sum29_i_i=((($_sum_i21_i)+(12))|0);
          $1220=(($tbase_245_i+$_sum29_i_i)|0);
          $1221=$1220;
          HEAP32[(($1221)>>2)]=$1202;
          break;
         }
         $1223=$1005;
         $1224=$qsize_0_i_i>>>8;
         $1225=($1224|0)==0;
         do {
          if ($1225) {
           $I7_0_i_i=0;
          } else {
           $1227=($qsize_0_i_i>>>0)>((16777215)>>>0);
           if ($1227) {
            $I7_0_i_i=31;
            break;
           }
           $1229=((($1224)+(1048320))|0);
           $1230=$1229>>>16;
           $1231=$1230&8;
           $1232=$1224<<$1231;
           $1233=((($1232)+(520192))|0);
           $1234=$1233>>>16;
           $1235=$1234&4;
           $1236=$1235|$1231;
           $1237=$1232<<$1235;
           $1238=((($1237)+(245760))|0);
           $1239=$1238>>>16;
           $1240=$1239&2;
           $1241=$1236|$1240;
           $1242=(((14)-($1241))|0);
           $1243=$1237<<$1240;
           $1244=$1243>>>15;
           $1245=((($1242)+($1244))|0);
           $1246=$1245<<1;
           $1247=((($1245)+(7))|0);
           $1248=$qsize_0_i_i>>>($1247>>>0);
           $1249=$1248&1;
           $1250=$1249|$1246;
           $I7_0_i_i=$1250;
          }
         } while(0);

         $1252=((8584+($I7_0_i_i<<2))|0);
         $_sum12_i26_i=((($_sum_i21_i)+(28))|0);
         $1253=(($tbase_245_i+$_sum12_i26_i)|0);
         $1254=$1253;
         HEAP32[(($1254)>>2)]=$I7_0_i_i;
         $_sum13_i_i=((($_sum_i21_i)+(16))|0);
         $1255=(($tbase_245_i+$_sum13_i_i)|0);
         $_sum14_i_i=((($_sum_i21_i)+(20))|0);
         $1256=(($tbase_245_i+$_sum14_i_i)|0);
         $1257=$1256;
         HEAP32[(($1257)>>2)]=0;
         $1258=$1255;
         HEAP32[(($1258)>>2)]=0;
         $1259=((HEAP32[((8284)>>2)])|0);
         $1260=1<<$I7_0_i_i;
         $1261=$1259&$1260;
         $1262=($1261|0)==0;
         if ($1262) {
          $1264=$1259|$1260;
          HEAP32[((8284)>>2)]=$1264;
          HEAP32[(($1252)>>2)]=$1223;
          $1265=$1252;
          $_sum15_i_i=((($_sum_i21_i)+(24))|0);
          $1266=(($tbase_245_i+$_sum15_i_i)|0);
          $1267=$1266;
          HEAP32[(($1267)>>2)]=$1265;
          $_sum16_i_i=((($_sum_i21_i)+(12))|0);
          $1268=(($tbase_245_i+$_sum16_i_i)|0);
          $1269=$1268;
          HEAP32[(($1269)>>2)]=$1223;
          $_sum17_i_i=((($_sum_i21_i)+(8))|0);
          $1270=(($tbase_245_i+$_sum17_i_i)|0);
          $1271=$1270;
          HEAP32[(($1271)>>2)]=$1223;
          break;
         }
         $1273=((HEAP32[(($1252)>>2)])|0);
         $1274=($I7_0_i_i|0)==31;
         if ($1274) {
          $1279=0;
         } else {
          $1276=$I7_0_i_i>>>1;
          $1277=(((25)-($1276))|0);
          $1279=$1277;
         }

         $1280=$qsize_0_i_i<<$1279;
         $K8_0_i_i=$1280;$T_0_i27_i=$1273;
         while(1) {


          $1282=(($T_0_i27_i+4)|0);
          $1283=((HEAP32[(($1282)>>2)])|0);
          $1284=$1283&-8;
          $1285=($1284|0)==($qsize_0_i_i|0);
          if ($1285) {
           break;
          }
          $1287=$K8_0_i_i>>>31;
          $1288=(($T_0_i27_i+16+($1287<<2))|0);
          $1289=((HEAP32[(($1288)>>2)])|0);
          $1290=($1289|0)==0;
          $1291=$K8_0_i_i<<1;
          if ($1290) {
           label = 296;
           break;
          } else {
           $K8_0_i_i=$1291;$T_0_i27_i=$1289;
          }
         }
         if ((label|0) == 296) {
          $1293=$1288;
          $1294=((HEAP32[((8296)>>2)])|0);
          $1295=($1293>>>0)<($1294>>>0);
          if ($1295) {
           _abort(); return ((0)|0);
           return ((0)|0);
          } else {
           HEAP32[(($1288)>>2)]=$1223;
           $_sum24_i_i=((($_sum_i21_i)+(24))|0);
           $1297=(($tbase_245_i+$_sum24_i_i)|0);
           $1298=$1297;
           HEAP32[(($1298)>>2)]=$T_0_i27_i;
           $_sum25_i_i=((($_sum_i21_i)+(12))|0);
           $1299=(($tbase_245_i+$_sum25_i_i)|0);
           $1300=$1299;
           HEAP32[(($1300)>>2)]=$1223;
           $_sum26_i_i=((($_sum_i21_i)+(8))|0);
           $1301=(($tbase_245_i+$_sum26_i_i)|0);
           $1302=$1301;
           HEAP32[(($1302)>>2)]=$1223;
           break;
          }
         }
         $1305=(($T_0_i27_i+8)|0);
         $1306=((HEAP32[(($1305)>>2)])|0);
         $1307=$T_0_i27_i;
         $1308=((HEAP32[((8296)>>2)])|0);
         $1309=($1307>>>0)<($1308>>>0);
         if ($1309) {
          _abort(); return ((0)|0);
          return ((0)|0);
         }
         $1311=$1306;
         $1312=($1311>>>0)<($1308>>>0);
         if ($1312) {
          _abort(); return ((0)|0);
          return ((0)|0);
         } else {
          $1314=(($1306+12)|0);
          HEAP32[(($1314)>>2)]=$1223;
          HEAP32[(($1305)>>2)]=$1223;
          $_sum21_i_i=((($_sum_i21_i)+(8))|0);
          $1315=(($tbase_245_i+$_sum21_i_i)|0);
          $1316=$1315;
          HEAP32[(($1316)>>2)]=$1306;
          $_sum22_i_i=((($_sum_i21_i)+(12))|0);
          $1317=(($tbase_245_i+$_sum22_i_i)|0);
          $1318=$1317;
          HEAP32[(($1318)>>2)]=$T_0_i27_i;
          $_sum23_i_i=((($_sum_i21_i)+(24))|0);
          $1319=(($tbase_245_i+$_sum23_i_i)|0);
          $1320=$1319;
          HEAP32[(($1320)>>2)]=0;
          break;
         }
        }
       } while(0);
       $_sum1819_i_i=$989|8;
       $1321=(($tbase_245_i+$_sum1819_i_i)|0);
       $mem_0=$1321;

       return (($mem_0)|0);
      }
     } while(0);
     $1322=$888;
     $sp_0_i_i_i=8728;
     while(1) {

      $1324=(($sp_0_i_i_i)|0);
      $1325=((HEAP32[(($1324)>>2)])|0);
      $1326=($1325>>>0)>($1322>>>0);
      if (!($1326)) {
       $1328=(($sp_0_i_i_i+4)|0);
       $1329=((HEAP32[(($1328)>>2)])|0);
       $1330=(($1325+$1329)|0);
       $1331=($1330>>>0)>($1322>>>0);
       if ($1331) {
        break;
       }
      }
      $1333=(($sp_0_i_i_i+8)|0);
      $1334=((HEAP32[(($1333)>>2)])|0);
      $sp_0_i_i_i=$1334;
     }
     $_sum_i15_i=((($1329)-(47))|0);
     $_sum1_i16_i=((($1329)-(39))|0);
     $1335=(($1325+$_sum1_i16_i)|0);
     $1336=$1335;
     $1337=$1336&7;
     $1338=($1337|0)==0;
     if ($1338) {
      $1343=0;
     } else {
      $1340=(((-$1336))|0);
      $1341=$1340&7;
      $1343=$1341;
     }

     $_sum2_i17_i=((($_sum_i15_i)+($1343))|0);
     $1344=(($1325+$_sum2_i17_i)|0);
     $1345=(($888+16)|0);
     $1346=$1345;
     $1347=($1344>>>0)<($1346>>>0);
     $1348=($1347?$1322:$1344);
     $1349=(($1348+8)|0);
     $1350=$1349;
     $1351=((($tsize_244_i)-(40))|0);
     $1352=(($tbase_245_i+8)|0);
     $1353=$1352;
     $1354=$1353&7;
     $1355=($1354|0)==0;
     if ($1355) {
      $1359=0;
     } else {
      $1357=(((-$1353))|0);
      $1358=$1357&7;
      $1359=$1358;
     }

     $1360=(($tbase_245_i+$1359)|0);
     $1361=$1360;
     $1362=((($1351)-($1359))|0);
     HEAP32[((8304)>>2)]=$1361;
     HEAP32[((8292)>>2)]=$1362;
     $1363=$1362|1;
     $_sum_i_i_i=((($1359)+(4))|0);
     $1364=(($tbase_245_i+$_sum_i_i_i)|0);
     $1365=$1364;
     HEAP32[(($1365)>>2)]=$1363;
     $_sum2_i_i_i=((($tsize_244_i)-(36))|0);
     $1366=(($tbase_245_i+$_sum2_i_i_i)|0);
     $1367=$1366;
     HEAP32[(($1367)>>2)]=40;
     $1368=((HEAP32[((8192)>>2)])|0);
     HEAP32[((8308)>>2)]=$1368;
     $1369=(($1348+4)|0);
     $1370=$1369;
     HEAP32[(($1370)>>2)]=27;
     HEAP32[(($1349)>>2)]=((HEAP32[((8728)>>2)])|0);HEAP32[((($1349)+(4))>>2)]=((HEAP32[((8732)>>2)])|0);HEAP32[((($1349)+(8))>>2)]=((HEAP32[((8736)>>2)])|0);HEAP32[((($1349)+(12))>>2)]=((HEAP32[((8740)>>2)])|0);
     HEAP32[((8728)>>2)]=$tbase_245_i;
     HEAP32[((8732)>>2)]=$tsize_244_i;
     HEAP32[((8740)>>2)]=0;
     HEAP32[((8736)>>2)]=$1350;
     $1371=(($1348+28)|0);
     $1372=$1371;
     HEAP32[(($1372)>>2)]=7;
     $1373=(($1348+32)|0);
     $1374=($1373>>>0)<($1330>>>0);
     if ($1374) {
      $1375=$1372;
      while(1) {

       $1376=(($1375+4)|0);
       HEAP32[(($1376)>>2)]=7;
       $1377=(($1375+8)|0);
       $1378=$1377;
       $1379=($1378>>>0)<($1330>>>0);
       if ($1379) {
        $1375=$1376;
       } else {
        break;
       }
      }
     }
     $1380=($1348|0)==($1322|0);
     if ($1380) {
      break;
     }
     $1382=$1348;
     $1383=$888;
     $1384=((($1382)-($1383))|0);
     $1385=(($1322+$1384)|0);
     $_sum3_i_i=((($1384)+(4))|0);
     $1386=(($1322+$_sum3_i_i)|0);
     $1387=$1386;
     $1388=((HEAP32[(($1387)>>2)])|0);
     $1389=$1388&-2;
     HEAP32[(($1387)>>2)]=$1389;
     $1390=$1384|1;
     $1391=(($888+4)|0);
     HEAP32[(($1391)>>2)]=$1390;
     $1392=$1385;
     HEAP32[(($1392)>>2)]=$1384;
     $1393=$1384>>>3;
     $1394=($1384>>>0)<((256)>>>0);
     if ($1394) {
      $1396=$1393<<1;
      $1397=((8320+($1396<<2))|0);
      $1398=$1397;
      $1399=((HEAP32[((8280)>>2)])|0);
      $1400=1<<$1393;
      $1401=$1399&$1400;
      $1402=($1401|0)==0;
      do {
       if ($1402) {
        $1404=$1399|$1400;
        HEAP32[((8280)>>2)]=$1404;
        $_sum11_pre_i_i=((($1396)+(2))|0);
        $_pre_i_i=((8320+($_sum11_pre_i_i<<2))|0);
        $F_0_i_i=$1398;$_pre_phi_i_i=$_pre_i_i;
       } else {
        $_sum12_i_i=((($1396)+(2))|0);
        $1406=((8320+($_sum12_i_i<<2))|0);
        $1407=((HEAP32[(($1406)>>2)])|0);
        $1408=$1407;
        $1409=((HEAP32[((8296)>>2)])|0);
        $1410=($1408>>>0)<($1409>>>0);
        if (!($1410)) {
         $F_0_i_i=$1407;$_pre_phi_i_i=$1406;
         break;
        }
        _abort(); return ((0)|0);
        return ((0)|0);
       }
      } while(0);


      HEAP32[(($_pre_phi_i_i)>>2)]=$888;
      $1413=(($F_0_i_i+12)|0);
      HEAP32[(($1413)>>2)]=$888;
      $1414=(($888+8)|0);
      HEAP32[(($1414)>>2)]=$F_0_i_i;
      $1415=(($888+12)|0);
      HEAP32[(($1415)>>2)]=$1398;
      break;
     }
     $1417=$888;
     $1418=$1384>>>8;
     $1419=($1418|0)==0;
     do {
      if ($1419) {
       $I1_0_i_i=0;
      } else {
       $1421=($1384>>>0)>((16777215)>>>0);
       if ($1421) {
        $I1_0_i_i=31;
        break;
       }
       $1423=((($1418)+(1048320))|0);
       $1424=$1423>>>16;
       $1425=$1424&8;
       $1426=$1418<<$1425;
       $1427=((($1426)+(520192))|0);
       $1428=$1427>>>16;
       $1429=$1428&4;
       $1430=$1429|$1425;
       $1431=$1426<<$1429;
       $1432=((($1431)+(245760))|0);
       $1433=$1432>>>16;
       $1434=$1433&2;
       $1435=$1430|$1434;
       $1436=(((14)-($1435))|0);
       $1437=$1431<<$1434;
       $1438=$1437>>>15;
       $1439=((($1436)+($1438))|0);
       $1440=$1439<<1;
       $1441=((($1439)+(7))|0);
       $1442=$1384>>>($1441>>>0);
       $1443=$1442&1;
       $1444=$1443|$1440;
       $I1_0_i_i=$1444;
      }
     } while(0);

     $1446=((8584+($I1_0_i_i<<2))|0);
     $1447=(($888+28)|0);
     $I1_0_c_i_i=$I1_0_i_i;
     HEAP32[(($1447)>>2)]=$I1_0_c_i_i;
     $1448=(($888+20)|0);
     HEAP32[(($1448)>>2)]=0;
     $1449=(($888+16)|0);
     HEAP32[(($1449)>>2)]=0;
     $1450=((HEAP32[((8284)>>2)])|0);
     $1451=1<<$I1_0_i_i;
     $1452=$1450&$1451;
     $1453=($1452|0)==0;
     if ($1453) {
      $1455=$1450|$1451;
      HEAP32[((8284)>>2)]=$1455;
      HEAP32[(($1446)>>2)]=$1417;
      $1456=(($888+24)|0);
      $_c_i_i=$1446;
      HEAP32[(($1456)>>2)]=$_c_i_i;
      $1457=(($888+12)|0);
      HEAP32[(($1457)>>2)]=$888;
      $1458=(($888+8)|0);
      HEAP32[(($1458)>>2)]=$888;
      break;
     }
     $1460=((HEAP32[(($1446)>>2)])|0);
     $1461=($I1_0_i_i|0)==31;
     if ($1461) {
      $1466=0;
     } else {
      $1463=$I1_0_i_i>>>1;
      $1464=(((25)-($1463))|0);
      $1466=$1464;
     }

     $1467=$1384<<$1466;
     $K2_0_i_i=$1467;$T_0_i_i=$1460;
     while(1) {


      $1469=(($T_0_i_i+4)|0);
      $1470=((HEAP32[(($1469)>>2)])|0);
      $1471=$1470&-8;
      $1472=($1471|0)==($1384|0);
      if ($1472) {
       break;
      }
      $1474=$K2_0_i_i>>>31;
      $1475=(($T_0_i_i+16+($1474<<2))|0);
      $1476=((HEAP32[(($1475)>>2)])|0);
      $1477=($1476|0)==0;
      $1478=$K2_0_i_i<<1;
      if ($1477) {
       label = 331;
       break;
      } else {
       $K2_0_i_i=$1478;$T_0_i_i=$1476;
      }
     }
     if ((label|0) == 331) {
      $1480=$1475;
      $1481=((HEAP32[((8296)>>2)])|0);
      $1482=($1480>>>0)<($1481>>>0);
      if ($1482) {
       _abort(); return ((0)|0);
       return ((0)|0);
      } else {
       HEAP32[(($1475)>>2)]=$1417;
       $1484=(($888+24)|0);
       $T_0_c8_i_i=$T_0_i_i;
       HEAP32[(($1484)>>2)]=$T_0_c8_i_i;
       $1485=(($888+12)|0);
       HEAP32[(($1485)>>2)]=$888;
       $1486=(($888+8)|0);
       HEAP32[(($1486)>>2)]=$888;
       break;
      }
     }
     $1489=(($T_0_i_i+8)|0);
     $1490=((HEAP32[(($1489)>>2)])|0);
     $1491=$T_0_i_i;
     $1492=((HEAP32[((8296)>>2)])|0);
     $1493=($1491>>>0)<($1492>>>0);
     if ($1493) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $1495=$1490;
     $1496=($1495>>>0)<($1492>>>0);
     if ($1496) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $1498=(($1490+12)|0);
      HEAP32[(($1498)>>2)]=$1417;
      HEAP32[(($1489)>>2)]=$1417;
      $1499=(($888+8)|0);
      $_c7_i_i=$1490;
      HEAP32[(($1499)>>2)]=$_c7_i_i;
      $1500=(($888+12)|0);
      $T_0_c_i_i=$T_0_i_i;
      HEAP32[(($1500)>>2)]=$T_0_c_i_i;
      $1501=(($888+24)|0);
      HEAP32[(($1501)>>2)]=0;
      break;
     }
    }
   } while(0);
   $1502=((HEAP32[((8292)>>2)])|0);
   $1503=($1502>>>0)>($nb_0>>>0);
   if (!($1503)) {
    break;
   }
   $1505=((($1502)-($nb_0))|0);
   HEAP32[((8292)>>2)]=$1505;
   $1506=((HEAP32[((8304)>>2)])|0);
   $1507=$1506;
   $1508=(($1507+$nb_0)|0);
   $1509=$1508;
   HEAP32[((8304)>>2)]=$1509;
   $1510=$1505|1;
   $_sum_i134=((($nb_0)+(4))|0);
   $1511=(($1507+$_sum_i134)|0);
   $1512=$1511;
   HEAP32[(($1512)>>2)]=$1510;
   $1513=$nb_0|3;
   $1514=(($1506+4)|0);
   HEAP32[(($1514)>>2)]=$1513;
   $1515=(($1506+8)|0);
   $1516=$1515;
   $mem_0=$1516;

   return (($mem_0)|0);
  }
 } while(0);
 $1517=((___errno_location())|0);
 HEAP32[(($1517)>>2)]=12;
 $mem_0=0;

 return (($mem_0)|0);
}


function _free($mem){
 $mem=($mem)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$11=0,$12=0,$14=0,$_sum=0,$15=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0,$_sum232=0;
 var $24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$32=0,$33=0,$_sum276=0,$35=0,$36=0,$37=0,$_sum277=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0;
 var $46=0,$47=0,$49=0,$50=0,$51=0,$52=0,$54=0,$55=0,$56=0,$57=0,$59=0,$_pre307=0,$61=0,$62=0,$64=0,$65=0,$66=0,$_pre_phi308=0,$67=0,$69=0;
 var $_sum266=0,$70=0,$71=0,$72=0,$_sum267=0,$73=0,$74=0,$75=0,$76=0,$_sum273=0,$78=0,$79=0,$80=0,$81=0,$82=0,$84=0,$85=0,$86=0,$88=0,$89=0;
 var $90=0,$_sum269=0,$93=0,$94=0,$95=0,$96=0,$_sum268=0,$98=0,$99=0,$100=0,$101=0,$RP_0=0,$R_0=0,$102=0,$103=0,$104=0,$106=0,$107=0,$108=0,$110=0;
 var $111=0,$R_1=0,$115=0,$_sum270=0,$117=0,$118=0,$119=0,$120=0,$121=0,$122=0,$cond=0,$124=0,$125=0,$126=0,$127=0,$129=0,$130=0,$131=0,$133=0,$134=0;
 var $135=0,$138=0,$141=0,$143=0,$144=0,$145=0,$147=0,$_sum271=0,$148=0,$149=0,$150=0,$151=0,$153=0,$154=0,$155=0,$157=0,$158=0,$_sum272=0,$161=0,$162=0;
 var $163=0,$164=0,$166=0,$167=0,$168=0,$170=0,$171=0,$_sum233=0,$175=0,$176=0,$177=0,$178=0,$179=0,$181=0,$182=0,$183=0,$_sum264=0,$184=0,$185=0,$186=0;
 var $psize_0=0,$p_0=0,$188=0,$189=0,$_sum263=0,$191=0,$192=0,$193=0,$194=0,$phitmp=0,$196=0,$197=0,$199=0,$200=0,$202=0,$203=0,$204=0,$205=0,$206=0,$207=0;
 var $210=0,$211=0,$213=0,$214=0,$215=0,$216=0,$217=0,$218=0,$220=0,$221=0,$222=0,$223=0,$225=0,$226=0,$227=0,$_sum257258=0,$228=0,$229=0,$230=0,$231=0;
 var $232=0,$233=0,$234=0,$236=0,$237=0,$238=0,$240=0,$241=0,$242=0,$243=0,$245=0,$246=0,$247=0,$248=0,$250=0,$_pre305=0,$252=0,$253=0,$254=0,$256=0;
 var $257=0,$258=0,$_pre_phi306=0,$259=0,$261=0,$_sum235=0,$262=0,$263=0,$264=0,$_sum236237=0,$265=0,$266=0,$267=0,$268=0,$270=0,$271=0,$272=0,$273=0,$274=0,$275=0;
 var $277=0,$278=0,$279=0,$281=0,$282=0,$283=0,$_sum239=0,$286=0,$287=0,$288=0,$289=0,$_sum238=0,$291=0,$292=0,$293=0,$294=0,$RP9_0=0,$R7_0=0,$295=0,$296=0;
 var $297=0,$299=0,$300=0,$301=0,$303=0,$304=0,$305=0,$R7_1=0,$309=0,$_sum250=0,$311=0,$312=0,$313=0,$314=0,$315=0,$316=0,$cond298=0,$318=0,$319=0,$320=0;
 var $321=0,$323=0,$324=0,$325=0,$327=0,$328=0,$329=0,$332=0,$335=0,$337=0,$338=0,$339=0,$341=0,$_sum251=0,$342=0,$343=0,$344=0,$345=0,$347=0,$348=0;
 var $349=0,$351=0,$352=0,$_sum252=0,$355=0,$356=0,$357=0,$358=0,$360=0,$361=0,$362=0,$364=0,$365=0,$368=0,$369=0,$370=0,$371=0,$372=0,$373=0,$376=0;
 var $377=0,$378=0,$379=0,$380=0,$psize_1=0,$382=0,$383=0,$385=0,$386=0,$387=0,$388=0,$389=0,$390=0,$391=0,$393=0,$_sum248_pre=0,$_pre=0,$_sum249=0,$395=0,$396=0;
 var $397=0,$398=0,$399=0,$_pre_phi=0,$F16_0=0,$402=0,$403=0,$404=0,$406=0,$407=0,$408=0,$410=0,$412=0,$413=0,$414=0,$415=0,$416=0,$417=0,$418=0,$419=0;
 var $420=0,$421=0,$422=0,$423=0,$424=0,$425=0,$426=0,$427=0,$428=0,$429=0,$430=0,$431=0,$432=0,$433=0,$I18_0=0,$435=0,$436=0,$I18_0_c=0,$437=0,$438=0;
 var $439=0,$440=0,$441=0,$442=0,$444=0,$445=0,$_c=0,$446=0,$447=0,$449=0,$450=0,$452=0,$453=0,$455=0,$456=0,$T_0=0,$K19_0=0,$458=0,$459=0,$460=0;
 var $461=0,$463=0,$464=0,$465=0,$466=0,$467=0,$469=0,$470=0,$471=0,$473=0,$T_0_c245=0,$474=0,$475=0,$478=0,$479=0,$480=0,$481=0,$482=0,$484=0,$485=0;
 var $487=0,$488=0,$_c244=0,$489=0,$T_0_c=0,$490=0,$492=0,$493=0,$494=0,$sp_0_in_i=0,$sp_0_i=0,$495=0,$496=0,label=0;

 $1=($mem|0)==0;
 if ($1) {
  return;
 }
 $3=((($mem)-(8))|0);
 $4=$3;
 $5=((HEAP32[((8296)>>2)])|0);
 $6=($3>>>0)<($5>>>0);
 if ($6) {
  _abort();

 }
 $8=((($mem)-(4))|0);
 $9=$8;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=$10&3;
 $12=($11|0)==1;
 if ($12) {
  _abort();

 }
 $14=$10&-8;
 $_sum=((($14)-(8))|0);
 $15=(($mem+$_sum)|0);
 $16=$15;
 $17=$10&1;
 $18=($17|0)==0;
 L10: do {
  if ($18) {
   $20=$3;
   $21=((HEAP32[(($20)>>2)])|0);
   $22=($11|0)==0;
   if ($22) {
    return;
   }
   $_sum232=(((-8)-($21))|0);
   $24=(($mem+$_sum232)|0);
   $25=$24;
   $26=((($21)+($14))|0);
   $27=($24>>>0)<($5>>>0);
   if ($27) {
    _abort();

   }
   $29=((HEAP32[((8300)>>2)])|0);
   $30=($25|0)==($29|0);
   if ($30) {
    $_sum233=((($14)-(4))|0);
    $175=(($mem+$_sum233)|0);
    $176=$175;
    $177=((HEAP32[(($176)>>2)])|0);
    $178=$177&3;
    $179=($178|0)==3;
    if (!($179)) {
     $p_0=$25;$psize_0=$26;
     break;
    }
    HEAP32[((8288)>>2)]=$26;
    $181=((HEAP32[(($176)>>2)])|0);
    $182=$181&-2;
    HEAP32[(($176)>>2)]=$182;
    $183=$26|1;
    $_sum264=((($_sum232)+(4))|0);
    $184=(($mem+$_sum264)|0);
    $185=$184;
    HEAP32[(($185)>>2)]=$183;
    $186=$15;
    HEAP32[(($186)>>2)]=$26;
    return;
   }
   $32=$21>>>3;
   $33=($21>>>0)<((256)>>>0);
   if ($33) {
    $_sum276=((($_sum232)+(8))|0);
    $35=(($mem+$_sum276)|0);
    $36=$35;
    $37=((HEAP32[(($36)>>2)])|0);
    $_sum277=((($_sum232)+(12))|0);
    $38=(($mem+$_sum277)|0);
    $39=$38;
    $40=((HEAP32[(($39)>>2)])|0);
    $41=$32<<1;
    $42=((8320+($41<<2))|0);
    $43=$42;
    $44=($37|0)==($43|0);
    do {
     if (!($44)) {
      $46=$37;
      $47=($46>>>0)<($5>>>0);
      if ($47) {
       _abort();

      }
      $49=(($37+12)|0);
      $50=((HEAP32[(($49)>>2)])|0);
      $51=($50|0)==($25|0);
      if ($51) {
       break;
      }
      _abort();

     }
    } while(0);
    $52=($40|0)==($37|0);
    if ($52) {
     $54=1<<$32;
     $55=$54^-1;
     $56=((HEAP32[((8280)>>2)])|0);
     $57=$56&$55;
     HEAP32[((8280)>>2)]=$57;
     $p_0=$25;$psize_0=$26;
     break;
    }
    $59=($40|0)==($43|0);
    do {
     if ($59) {
      $_pre307=(($40+8)|0);
      $_pre_phi308=$_pre307;
     } else {
      $61=$40;
      $62=($61>>>0)<($5>>>0);
      if ($62) {
       _abort();

      }
      $64=(($40+8)|0);
      $65=((HEAP32[(($64)>>2)])|0);
      $66=($65|0)==($25|0);
      if ($66) {
       $_pre_phi308=$64;
       break;
      }
      _abort();

     }
    } while(0);

    $67=(($37+12)|0);
    HEAP32[(($67)>>2)]=$40;
    HEAP32[(($_pre_phi308)>>2)]=$37;
    $p_0=$25;$psize_0=$26;
    break;
   }
   $69=$24;
   $_sum266=((($_sum232)+(24))|0);
   $70=(($mem+$_sum266)|0);
   $71=$70;
   $72=((HEAP32[(($71)>>2)])|0);
   $_sum267=((($_sum232)+(12))|0);
   $73=(($mem+$_sum267)|0);
   $74=$73;
   $75=((HEAP32[(($74)>>2)])|0);
   $76=($75|0)==($69|0);
   do {
    if ($76) {
     $_sum269=((($_sum232)+(20))|0);
     $93=(($mem+$_sum269)|0);
     $94=$93;
     $95=((HEAP32[(($94)>>2)])|0);
     $96=($95|0)==0;
     if ($96) {
      $_sum268=((($_sum232)+(16))|0);
      $98=(($mem+$_sum268)|0);
      $99=$98;
      $100=((HEAP32[(($99)>>2)])|0);
      $101=($100|0)==0;
      if ($101) {
       $R_1=0;
       break;
      } else {
       $R_0=$100;$RP_0=$99;
      }
     } else {
      $R_0=$95;$RP_0=$94;
     }
     while(1) {


      $102=(($R_0+20)|0);
      $103=((HEAP32[(($102)>>2)])|0);
      $104=($103|0)==0;
      if (!($104)) {
       $R_0=$103;$RP_0=$102;
       continue;
      }
      $106=(($R_0+16)|0);
      $107=((HEAP32[(($106)>>2)])|0);
      $108=($107|0)==0;
      if ($108) {
       break;
      } else {
       $R_0=$107;$RP_0=$106;
      }
     }
     $110=$RP_0;
     $111=($110>>>0)<($5>>>0);
     if ($111) {
      _abort();

     } else {
      HEAP32[(($RP_0)>>2)]=0;
      $R_1=$R_0;
      break;
     }
    } else {
     $_sum273=((($_sum232)+(8))|0);
     $78=(($mem+$_sum273)|0);
     $79=$78;
     $80=((HEAP32[(($79)>>2)])|0);
     $81=$80;
     $82=($81>>>0)<($5>>>0);
     if ($82) {
      _abort();

     }
     $84=(($80+12)|0);
     $85=((HEAP32[(($84)>>2)])|0);
     $86=($85|0)==($69|0);
     if (!($86)) {
      _abort();

     }
     $88=(($75+8)|0);
     $89=((HEAP32[(($88)>>2)])|0);
     $90=($89|0)==($69|0);
     if ($90) {
      HEAP32[(($84)>>2)]=$75;
      HEAP32[(($88)>>2)]=$80;
      $R_1=$75;
      break;
     } else {
      _abort();

     }
    }
   } while(0);

   $115=($72|0)==0;
   if ($115) {
    $p_0=$25;$psize_0=$26;
    break;
   }
   $_sum270=((($_sum232)+(28))|0);
   $117=(($mem+$_sum270)|0);
   $118=$117;
   $119=((HEAP32[(($118)>>2)])|0);
   $120=((8584+($119<<2))|0);
   $121=((HEAP32[(($120)>>2)])|0);
   $122=($69|0)==($121|0);
   do {
    if ($122) {
     HEAP32[(($120)>>2)]=$R_1;
     $cond=($R_1|0)==0;
     if (!($cond)) {
      break;
     }
     $124=1<<$119;
     $125=$124^-1;
     $126=((HEAP32[((8284)>>2)])|0);
     $127=$126&$125;
     HEAP32[((8284)>>2)]=$127;
     $p_0=$25;$psize_0=$26;
     break L10;
    } else {
     $129=$72;
     $130=((HEAP32[((8296)>>2)])|0);
     $131=($129>>>0)<($130>>>0);
     if ($131) {
      _abort();

     }
     $133=(($72+16)|0);
     $134=((HEAP32[(($133)>>2)])|0);
     $135=($134|0)==($69|0);
     if ($135) {
      HEAP32[(($133)>>2)]=$R_1;
     } else {
      $138=(($72+20)|0);
      HEAP32[(($138)>>2)]=$R_1;
     }
     $141=($R_1|0)==0;
     if ($141) {
      $p_0=$25;$psize_0=$26;
      break L10;
     }
    }
   } while(0);
   $143=$R_1;
   $144=((HEAP32[((8296)>>2)])|0);
   $145=($143>>>0)<($144>>>0);
   if ($145) {
    _abort();

   }
   $147=(($R_1+24)|0);
   HEAP32[(($147)>>2)]=$72;
   $_sum271=((($_sum232)+(16))|0);
   $148=(($mem+$_sum271)|0);
   $149=$148;
   $150=((HEAP32[(($149)>>2)])|0);
   $151=($150|0)==0;
   do {
    if (!($151)) {
     $153=$150;
     $154=((HEAP32[((8296)>>2)])|0);
     $155=($153>>>0)<($154>>>0);
     if ($155) {
      _abort();

     } else {
      $157=(($R_1+16)|0);
      HEAP32[(($157)>>2)]=$150;
      $158=(($150+24)|0);
      HEAP32[(($158)>>2)]=$R_1;
      break;
     }
    }
   } while(0);
   $_sum272=((($_sum232)+(20))|0);
   $161=(($mem+$_sum272)|0);
   $162=$161;
   $163=((HEAP32[(($162)>>2)])|0);
   $164=($163|0)==0;
   if ($164) {
    $p_0=$25;$psize_0=$26;
    break;
   }
   $166=$163;
   $167=((HEAP32[((8296)>>2)])|0);
   $168=($166>>>0)<($167>>>0);
   if ($168) {
    _abort();

   } else {
    $170=(($R_1+20)|0);
    HEAP32[(($170)>>2)]=$163;
    $171=(($163+24)|0);
    HEAP32[(($171)>>2)]=$R_1;
    $p_0=$25;$psize_0=$26;
    break;
   }
  } else {
   $p_0=$4;$psize_0=$14;
  }
 } while(0);


 $188=$p_0;
 $189=($188>>>0)<($15>>>0);
 if (!($189)) {
  _abort();

 }
 $_sum263=((($14)-(4))|0);
 $191=(($mem+$_sum263)|0);
 $192=$191;
 $193=((HEAP32[(($192)>>2)])|0);
 $194=$193&1;
 $phitmp=($194|0)==0;
 if ($phitmp) {
  _abort();

 }
 $196=$193&2;
 $197=($196|0)==0;
 do {
  if ($197) {
   $199=((HEAP32[((8304)>>2)])|0);
   $200=($16|0)==($199|0);
   if ($200) {
    $202=((HEAP32[((8292)>>2)])|0);
    $203=((($202)+($psize_0))|0);
    HEAP32[((8292)>>2)]=$203;
    HEAP32[((8304)>>2)]=$p_0;
    $204=$203|1;
    $205=(($p_0+4)|0);
    HEAP32[(($205)>>2)]=$204;
    $206=((HEAP32[((8300)>>2)])|0);
    $207=($p_0|0)==($206|0);
    if (!($207)) {
     return;
    }
    HEAP32[((8300)>>2)]=0;
    HEAP32[((8288)>>2)]=0;
    return;
   }
   $210=((HEAP32[((8300)>>2)])|0);
   $211=($16|0)==($210|0);
   if ($211) {
    $213=((HEAP32[((8288)>>2)])|0);
    $214=((($213)+($psize_0))|0);
    HEAP32[((8288)>>2)]=$214;
    HEAP32[((8300)>>2)]=$p_0;
    $215=$214|1;
    $216=(($p_0+4)|0);
    HEAP32[(($216)>>2)]=$215;
    $217=(($188+$214)|0);
    $218=$217;
    HEAP32[(($218)>>2)]=$214;
    return;
   }
   $220=$193&-8;
   $221=((($220)+($psize_0))|0);
   $222=$193>>>3;
   $223=($193>>>0)<((256)>>>0);
   L112: do {
    if ($223) {
     $225=(($mem+$14)|0);
     $226=$225;
     $227=((HEAP32[(($226)>>2)])|0);
     $_sum257258=$14|4;
     $228=(($mem+$_sum257258)|0);
     $229=$228;
     $230=((HEAP32[(($229)>>2)])|0);
     $231=$222<<1;
     $232=((8320+($231<<2))|0);
     $233=$232;
     $234=($227|0)==($233|0);
     do {
      if (!($234)) {
       $236=$227;
       $237=((HEAP32[((8296)>>2)])|0);
       $238=($236>>>0)<($237>>>0);
       if ($238) {
        _abort();

       }
       $240=(($227+12)|0);
       $241=((HEAP32[(($240)>>2)])|0);
       $242=($241|0)==($16|0);
       if ($242) {
        break;
       }
       _abort();

      }
     } while(0);
     $243=($230|0)==($227|0);
     if ($243) {
      $245=1<<$222;
      $246=$245^-1;
      $247=((HEAP32[((8280)>>2)])|0);
      $248=$247&$246;
      HEAP32[((8280)>>2)]=$248;
      break;
     }
     $250=($230|0)==($233|0);
     do {
      if ($250) {
       $_pre305=(($230+8)|0);
       $_pre_phi306=$_pre305;
      } else {
       $252=$230;
       $253=((HEAP32[((8296)>>2)])|0);
       $254=($252>>>0)<($253>>>0);
       if ($254) {
        _abort();

       }
       $256=(($230+8)|0);
       $257=((HEAP32[(($256)>>2)])|0);
       $258=($257|0)==($16|0);
       if ($258) {
        $_pre_phi306=$256;
        break;
       }
       _abort();

      }
     } while(0);

     $259=(($227+12)|0);
     HEAP32[(($259)>>2)]=$230;
     HEAP32[(($_pre_phi306)>>2)]=$227;
    } else {
     $261=$15;
     $_sum235=((($14)+(16))|0);
     $262=(($mem+$_sum235)|0);
     $263=$262;
     $264=((HEAP32[(($263)>>2)])|0);
     $_sum236237=$14|4;
     $265=(($mem+$_sum236237)|0);
     $266=$265;
     $267=((HEAP32[(($266)>>2)])|0);
     $268=($267|0)==($261|0);
     do {
      if ($268) {
       $_sum239=((($14)+(12))|0);
       $286=(($mem+$_sum239)|0);
       $287=$286;
       $288=((HEAP32[(($287)>>2)])|0);
       $289=($288|0)==0;
       if ($289) {
        $_sum238=((($14)+(8))|0);
        $291=(($mem+$_sum238)|0);
        $292=$291;
        $293=((HEAP32[(($292)>>2)])|0);
        $294=($293|0)==0;
        if ($294) {
         $R7_1=0;
         break;
        } else {
         $R7_0=$293;$RP9_0=$292;
        }
       } else {
        $R7_0=$288;$RP9_0=$287;
       }
       while(1) {


        $295=(($R7_0+20)|0);
        $296=((HEAP32[(($295)>>2)])|0);
        $297=($296|0)==0;
        if (!($297)) {
         $R7_0=$296;$RP9_0=$295;
         continue;
        }
        $299=(($R7_0+16)|0);
        $300=((HEAP32[(($299)>>2)])|0);
        $301=($300|0)==0;
        if ($301) {
         break;
        } else {
         $R7_0=$300;$RP9_0=$299;
        }
       }
       $303=$RP9_0;
       $304=((HEAP32[((8296)>>2)])|0);
       $305=($303>>>0)<($304>>>0);
       if ($305) {
        _abort();

       } else {
        HEAP32[(($RP9_0)>>2)]=0;
        $R7_1=$R7_0;
        break;
       }
      } else {
       $270=(($mem+$14)|0);
       $271=$270;
       $272=((HEAP32[(($271)>>2)])|0);
       $273=$272;
       $274=((HEAP32[((8296)>>2)])|0);
       $275=($273>>>0)<($274>>>0);
       if ($275) {
        _abort();

       }
       $277=(($272+12)|0);
       $278=((HEAP32[(($277)>>2)])|0);
       $279=($278|0)==($261|0);
       if (!($279)) {
        _abort();

       }
       $281=(($267+8)|0);
       $282=((HEAP32[(($281)>>2)])|0);
       $283=($282|0)==($261|0);
       if ($283) {
        HEAP32[(($277)>>2)]=$267;
        HEAP32[(($281)>>2)]=$272;
        $R7_1=$267;
        break;
       } else {
        _abort();

       }
      }
     } while(0);

     $309=($264|0)==0;
     if ($309) {
      break;
     }
     $_sum250=((($14)+(20))|0);
     $311=(($mem+$_sum250)|0);
     $312=$311;
     $313=((HEAP32[(($312)>>2)])|0);
     $314=((8584+($313<<2))|0);
     $315=((HEAP32[(($314)>>2)])|0);
     $316=($261|0)==($315|0);
     do {
      if ($316) {
       HEAP32[(($314)>>2)]=$R7_1;
       $cond298=($R7_1|0)==0;
       if (!($cond298)) {
        break;
       }
       $318=1<<$313;
       $319=$318^-1;
       $320=((HEAP32[((8284)>>2)])|0);
       $321=$320&$319;
       HEAP32[((8284)>>2)]=$321;
       break L112;
      } else {
       $323=$264;
       $324=((HEAP32[((8296)>>2)])|0);
       $325=($323>>>0)<($324>>>0);
       if ($325) {
        _abort();

       }
       $327=(($264+16)|0);
       $328=((HEAP32[(($327)>>2)])|0);
       $329=($328|0)==($261|0);
       if ($329) {
        HEAP32[(($327)>>2)]=$R7_1;
       } else {
        $332=(($264+20)|0);
        HEAP32[(($332)>>2)]=$R7_1;
       }
       $335=($R7_1|0)==0;
       if ($335) {
        break L112;
       }
      }
     } while(0);
     $337=$R7_1;
     $338=((HEAP32[((8296)>>2)])|0);
     $339=($337>>>0)<($338>>>0);
     if ($339) {
      _abort();

     }
     $341=(($R7_1+24)|0);
     HEAP32[(($341)>>2)]=$264;
     $_sum251=((($14)+(8))|0);
     $342=(($mem+$_sum251)|0);
     $343=$342;
     $344=((HEAP32[(($343)>>2)])|0);
     $345=($344|0)==0;
     do {
      if (!($345)) {
       $347=$344;
       $348=((HEAP32[((8296)>>2)])|0);
       $349=($347>>>0)<($348>>>0);
       if ($349) {
        _abort();

       } else {
        $351=(($R7_1+16)|0);
        HEAP32[(($351)>>2)]=$344;
        $352=(($344+24)|0);
        HEAP32[(($352)>>2)]=$R7_1;
        break;
       }
      }
     } while(0);
     $_sum252=((($14)+(12))|0);
     $355=(($mem+$_sum252)|0);
     $356=$355;
     $357=((HEAP32[(($356)>>2)])|0);
     $358=($357|0)==0;
     if ($358) {
      break;
     }
     $360=$357;
     $361=((HEAP32[((8296)>>2)])|0);
     $362=($360>>>0)<($361>>>0);
     if ($362) {
      _abort();

     } else {
      $364=(($R7_1+20)|0);
      HEAP32[(($364)>>2)]=$357;
      $365=(($357+24)|0);
      HEAP32[(($365)>>2)]=$R7_1;
      break;
     }
    }
   } while(0);
   $368=$221|1;
   $369=(($p_0+4)|0);
   HEAP32[(($369)>>2)]=$368;
   $370=(($188+$221)|0);
   $371=$370;
   HEAP32[(($371)>>2)]=$221;
   $372=((HEAP32[((8300)>>2)])|0);
   $373=($p_0|0)==($372|0);
   if (!($373)) {
    $psize_1=$221;
    break;
   }
   HEAP32[((8288)>>2)]=$221;
   return;
  } else {
   $376=$193&-2;
   HEAP32[(($192)>>2)]=$376;
   $377=$psize_0|1;
   $378=(($p_0+4)|0);
   HEAP32[(($378)>>2)]=$377;
   $379=(($188+$psize_0)|0);
   $380=$379;
   HEAP32[(($380)>>2)]=$psize_0;
   $psize_1=$psize_0;
  }
 } while(0);

 $382=$psize_1>>>3;
 $383=($psize_1>>>0)<((256)>>>0);
 if ($383) {
  $385=$382<<1;
  $386=((8320+($385<<2))|0);
  $387=$386;
  $388=((HEAP32[((8280)>>2)])|0);
  $389=1<<$382;
  $390=$388&$389;
  $391=($390|0)==0;
  do {
   if ($391) {
    $393=$388|$389;
    HEAP32[((8280)>>2)]=$393;
    $_sum248_pre=((($385)+(2))|0);
    $_pre=((8320+($_sum248_pre<<2))|0);
    $F16_0=$387;$_pre_phi=$_pre;
   } else {
    $_sum249=((($385)+(2))|0);
    $395=((8320+($_sum249<<2))|0);
    $396=((HEAP32[(($395)>>2)])|0);
    $397=$396;
    $398=((HEAP32[((8296)>>2)])|0);
    $399=($397>>>0)<($398>>>0);
    if (!($399)) {
     $F16_0=$396;$_pre_phi=$395;
     break;
    }
    _abort();

   }
  } while(0);


  HEAP32[(($_pre_phi)>>2)]=$p_0;
  $402=(($F16_0+12)|0);
  HEAP32[(($402)>>2)]=$p_0;
  $403=(($p_0+8)|0);
  HEAP32[(($403)>>2)]=$F16_0;
  $404=(($p_0+12)|0);
  HEAP32[(($404)>>2)]=$387;
  return;
 }
 $406=$p_0;
 $407=$psize_1>>>8;
 $408=($407|0)==0;
 do {
  if ($408) {
   $I18_0=0;
  } else {
   $410=($psize_1>>>0)>((16777215)>>>0);
   if ($410) {
    $I18_0=31;
    break;
   }
   $412=((($407)+(1048320))|0);
   $413=$412>>>16;
   $414=$413&8;
   $415=$407<<$414;
   $416=((($415)+(520192))|0);
   $417=$416>>>16;
   $418=$417&4;
   $419=$418|$414;
   $420=$415<<$418;
   $421=((($420)+(245760))|0);
   $422=$421>>>16;
   $423=$422&2;
   $424=$419|$423;
   $425=(((14)-($424))|0);
   $426=$420<<$423;
   $427=$426>>>15;
   $428=((($425)+($427))|0);
   $429=$428<<1;
   $430=((($428)+(7))|0);
   $431=$psize_1>>>($430>>>0);
   $432=$431&1;
   $433=$432|$429;
   $I18_0=$433;
  }
 } while(0);

 $435=((8584+($I18_0<<2))|0);
 $436=(($p_0+28)|0);
 $I18_0_c=$I18_0;
 HEAP32[(($436)>>2)]=$I18_0_c;
 $437=(($p_0+20)|0);
 HEAP32[(($437)>>2)]=0;
 $438=(($p_0+16)|0);
 HEAP32[(($438)>>2)]=0;
 $439=((HEAP32[((8284)>>2)])|0);
 $440=1<<$I18_0;
 $441=$439&$440;
 $442=($441|0)==0;
 do {
  if ($442) {
   $444=$439|$440;
   HEAP32[((8284)>>2)]=$444;
   HEAP32[(($435)>>2)]=$406;
   $445=(($p_0+24)|0);
   $_c=$435;
   HEAP32[(($445)>>2)]=$_c;
   $446=(($p_0+12)|0);
   HEAP32[(($446)>>2)]=$p_0;
   $447=(($p_0+8)|0);
   HEAP32[(($447)>>2)]=$p_0;
  } else {
   $449=((HEAP32[(($435)>>2)])|0);
   $450=($I18_0|0)==31;
   if ($450) {
    $455=0;
   } else {
    $452=$I18_0>>>1;
    $453=(((25)-($452))|0);
    $455=$453;
   }

   $456=$psize_1<<$455;
   $K19_0=$456;$T_0=$449;
   while(1) {


    $458=(($T_0+4)|0);
    $459=((HEAP32[(($458)>>2)])|0);
    $460=$459&-8;
    $461=($460|0)==($psize_1|0);
    if ($461) {
     break;
    }
    $463=$K19_0>>>31;
    $464=(($T_0+16+($463<<2))|0);
    $465=((HEAP32[(($464)>>2)])|0);
    $466=($465|0)==0;
    $467=$K19_0<<1;
    if ($466) {
     label = 129;
     break;
    } else {
     $K19_0=$467;$T_0=$465;
    }
   }
   if ((label|0) == 129) {
    $469=$464;
    $470=((HEAP32[((8296)>>2)])|0);
    $471=($469>>>0)<($470>>>0);
    if ($471) {
     _abort();

    } else {
     HEAP32[(($464)>>2)]=$406;
     $473=(($p_0+24)|0);
     $T_0_c245=$T_0;
     HEAP32[(($473)>>2)]=$T_0_c245;
     $474=(($p_0+12)|0);
     HEAP32[(($474)>>2)]=$p_0;
     $475=(($p_0+8)|0);
     HEAP32[(($475)>>2)]=$p_0;
     break;
    }
   }
   $478=(($T_0+8)|0);
   $479=((HEAP32[(($478)>>2)])|0);
   $480=$T_0;
   $481=((HEAP32[((8296)>>2)])|0);
   $482=($480>>>0)<($481>>>0);
   if ($482) {
    _abort();

   }
   $484=$479;
   $485=($484>>>0)<($481>>>0);
   if ($485) {
    _abort();

   } else {
    $487=(($479+12)|0);
    HEAP32[(($487)>>2)]=$406;
    HEAP32[(($478)>>2)]=$406;
    $488=(($p_0+8)|0);
    $_c244=$479;
    HEAP32[(($488)>>2)]=$_c244;
    $489=(($p_0+12)|0);
    $T_0_c=$T_0;
    HEAP32[(($489)>>2)]=$T_0_c;
    $490=(($p_0+24)|0);
    HEAP32[(($490)>>2)]=0;
    break;
   }
  }
 } while(0);
 $492=((HEAP32[((8312)>>2)])|0);
 $493=((($492)-(1))|0);
 HEAP32[((8312)>>2)]=$493;
 $494=($493|0)==0;
 if ($494) {
  $sp_0_in_i=8736;
 } else {
  return;
 }
 while(1) {

  $sp_0_i=((HEAP32[(($sp_0_in_i)>>2)])|0);
  $495=($sp_0_i|0)==0;
  $496=(($sp_0_i+8)|0);
  if ($495) {
   break;
  } else {
   $sp_0_in_i=$496;
  }
 }
 HEAP32[((8312)>>2)]=-1;
 return;
}


function __Znwj($size){
 $size=($size)|0;
 var $1=0,$_size=0,$3=0,$4=0,$6=0,$7=0,$9=0,$lpad_phi$0=0,$lpad_phi$1=0,$11=0,$12=0,$14=0,$16=0,$17=0,$lpad_loopexit$0=0,$lpad_loopexit$1=0,$lpad_nonloopexit$0=0,$lpad_nonloopexit$1=0,label=0;

 $1=($size|0)==0;
 $_size=($1?1:$size);
 while(1) {
  $3=((_malloc($_size))|0);
  $4=($3|0)==0;
  if (!($4)) {
   label = 10;
   break;
  }
  $6=(tempValue=((HEAP32[((9624)>>2)])|0),HEAP32[((9624)>>2)]=((tempValue+0)|0),tempValue);
  $7=($6|0)==0;
  if ($7) {
   break;
  }
  $9=$6;
  FUNCTION_TABLE_v[($9)&3]();
 }
 if ((label|0) == 10) {
  return (($3)|0);
 }
 $16=((___cxa_allocate_exception(((4)|0)))|0);
 $17=$16;
 HEAP32[(($17)>>2)]=4448;
 ___cxa_throw((($16)|0),((7600)|0),(((86))|0));
 return ((0)|0);
}


function __ZnwjRKSt9nothrow_t($size,$0){
 $size=($size)|0;
 $0=($0)|0;
 var $2=0,$5=0,$6=0,$p_0=0,$10=0,$4$0=0,$4$1=0,$9$0=0,$9$1=0,label=0;

 $2=((__Znwj($size))|0);
 $p_0=$2;

 return (($p_0)|0);
}


function __ZdlPv($ptr){
 $ptr=($ptr)|0;
 var $1=0,label=0;

 $1=($ptr|0)==0;
 if ($1) {
  return;
 }
 _free($ptr);
 return;
}


function __ZNSt9bad_allocD0Ev($this){
 $this=($this)|0;
 var $1=0,$2=0,label=0;

 $1=(($this)|0);

 $2=$this;
 __ZdlPv($2);
 return;
}


function __ZNSt9bad_allocD2Ev($this){
 $this=($this)|0;
 var $1=0,label=0;

 $1=(($this)|0);

 return;
}


function __ZNKSt9bad_alloc4whatEv($this){
 $this=($this)|0;
 var label=0;

 return ((2264)|0);
}


function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[(ptr)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[(ptr)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[(dest)]=((HEAP8[(src)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[(dest)]=((HEAP8[(src)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[(dest)]=((HEAP8[(src)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[(curr)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}


function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
  }
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
  }
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
  }
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
  }
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_ctlz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((ctlz_i8)+(x >>> 24))|0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((ctlz_i8)+((x >> 16)&0xff))|0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((ctlz_i8)+((x >> 8)&0xff))|0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((ctlz_i8)+(x&0xff))|0)])|0) + 24)|0;
  }

function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))|0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))|0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))|0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))|0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================


// EMSCRIPTEN_END_FUNCS

  function v____cxa_pure_virtual__wrapper() {  ; ___cxa_pure_virtual() }

  function dynCall_ii(index,a1) {
    index = index|0;
    a1=a1|0;
    return FUNCTION_TABLE_ii[index&31](a1|0)|0;
  }


  function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    FUNCTION_TABLE_viiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0);
  }


  function dynCall_vi(index,a1) {
    index = index|0;
    a1=a1|0;
    FUNCTION_TABLE_vi[index&255](a1|0);
  }


  function dynCall_vii(index,a1,a2) {
    index = index|0;
    a1=a1|0; a2=a2|0;
    FUNCTION_TABLE_vii[index&255](a1|0,a2|0);
  }


  function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return FUNCTION_TABLE_iiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }


  function dynCall_iiii(index,a1,a2,a3) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0;
    return FUNCTION_TABLE_iiii[index&31](a1|0,a2|0,a3|0)|0;
  }


  function dynCall_fif(index,a1,a2) {
    index = index|0;
    a1=a1|0; a2=+a2;
    return +FUNCTION_TABLE_fif[index&31](a1|0,+a2);
  }


  function dynCall_viii(index,a1,a2,a3) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0;
    FUNCTION_TABLE_viii[index&31](a1|0,a2|0,a3|0);
  }


  function dynCall_v(index) {
    index = index|0;
    
    FUNCTION_TABLE_v[index&3]();
  }


  function dynCall_iiiii(index,a1,a2,a3,a4) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    return FUNCTION_TABLE_iiiii[index&15](a1|0,a2|0,a3|0,a4|0)|0;
  }


  function dynCall_viif(index,a1,a2,a3) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=+a3;
    FUNCTION_TABLE_viif[index&63](a1|0,a2|0,+a3);
  }


  function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    FUNCTION_TABLE_viiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }


  function dynCall_iii(index,a1,a2) {
    index = index|0;
    a1=a1|0; a2=a2|0;
    return FUNCTION_TABLE_iii[index&63](a1|0,a2|0)|0;
  }


  function dynCall_viiii(index,a1,a2,a3,a4) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    FUNCTION_TABLE_viiii[index&63](a1|0,a2|0,a3|0,a4|0);
  }

function b0(p0) { p0 = p0|0; abort(0); return 0 }
  function b1(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(1);  }
  function b2(p0) { p0 = p0|0; abort(2);  }
  function b3(p0,p1) { p0 = p0|0;p1 = p1|0; abort(3);  }
  function b4(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(4); return 0 }
  function b5(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(5); return 0 }
  function b6(p0,p1) { p0 = p0|0;p1 = +p1; abort(6); return +0 }
  function b7(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(7);  }
  function b8() { ; abort(8);  }
  function b9(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(9); return 0 }
  function b10(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = +p2; abort(10);  }
  function b11(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(11);  }
  function b12(p0,p1) { p0 = p0|0;p1 = p1|0; abort(12); return 0 }
  function b13(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(13);  }
  // EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_ii = [b0,b0,__ZNKSt9bad_alloc4whatEv,b0,__ZNK14b2PolygonShape13GetChildCountEv,b0,__ZNK13b2CircleShape13GetChildCountEv,b0,__ZZN16b2ParticleSystem11SolveZombieEvEN4Test14IsTriadInvalidERKNS_5TriadE,b0,__ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape13GetChildCountEv,b0,__ZL25b2ParticleContactIsZombieRK17b2ParticleContact,b0,__ZZN16b2ParticleSystem11SolveZombieEvEN4Test14IsProxyInvalidERKNS_5ProxyE,b0,__ZZN16b2ParticleSystem11SolveZombieEvEN4Test16IsContactInvalidERK17b2ParticleContact,b0,__ZZN16b2ParticleSystem11SolveZombieEvEN4Test20IsBodyContactInvalidERK21b2ParticleBodyContact,b0,__ZNK11b2EdgeShape13GetChildCountEv,b0,__ZNK12b2ChainShape13GetChildCountEv,b0,__ZZN16b2ParticleSystem11SolveZombieEvEN4Test13IsPairInvalidERKNS_4PairE,b0,b0,b0,b0
  ,b0,b0,b0];
  
  var FUNCTION_TABLE_viiiii = [b1,b1,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b1,b1,b1];
  
  var FUNCTION_TABLE_vi = [b2,b2,__ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallbackD0Ev,b2,__ZN12b2WheelJointD1Ev,b2,__ZZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterEEN20UpdateTriadsCallbackD0Ev,b2,__ZN25b2PolygonAndCircleContactD0Ev,b2,__ZZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterEEN20UpdateTriadsCallbackD2Ev,b2,__ZN22b2EdgeAndCircleContactD0Ev,b2,__ZN15b2QueryCallbackD0Ev,b2,__ZN16b2PrismaticJoint4DumpEv,b2,__ZN16b2VoronoiDiagram12NodeCallbackD0Ev,b2,__ZN15b2ParticleGroupC2Ev,b2,__ZN15b2CircleContactD0Ev,b2,__ZN17b2ContactListenerD0Ev,b2,__ZN7b2JointD0Ev,b2,__ZN11b2WeldJointD0Ev
  ,b2,__ZN15b2FrictionJointD0Ev,b2,__ZN25b2PolygonAndCircleContactD1Ev,b2,__ZN11b2RopeJointD1Ev,b2,__ZN15b2RevoluteJointD1Ev,b2,__ZN10__cxxabiv116__shim_type_infoD2Ev,b2,__ZN11b2EdgeShapeD0Ev,b2,__ZN15b2DistanceJointD0Ev,b2,__ZN13b2DynamicTreeD2Ev,b2,__ZN9b2ContactD1Ev,b2,__ZN7b2WorldD2Ev,b2,__ZN16b2PrismaticJointD0Ev,b2,__ZN16b2BlockAllocatorD2Ev,b2,__ZN12b2MouseJoint4DumpEv,b2,__ZN10__cxxabiv117__class_type_infoD0Ev,b2,__ZN22b2WorldContactListenerD1Ev
  ,b2,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b2,__ZN12b2WheelJointD0Ev,b2,__ZN23b2EdgeAndPolygonContactD0Ev,b2,__ZN22b2EdgeAndCircleContactD1Ev,b2,__ZN15b2RevoluteJoint4DumpEv,b2,__ZN13b2PulleyJointD0Ev,b2,__ZN23b2ChainAndCircleContactD1Ev,b2,__ZN15b2FrictionJointD1Ev,b2,__ZN14b2PolygonShapeD1Ev,b2,__ZN17b2ContactListenerD1Ev,b2,__ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformEN14CompositeShapeD2Ev,b2,__ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_EN24JoinParticleGroupsFilterD0Ev,b2,__ZN16b2PolygonContactD1Ev,b2,__ZNSt9bad_allocD2Ev,b2,__ZN6b2BodyD2Ev
  ,b2,__ZN11b2RopeJointD0Ev,b2,__ZN11b2WeldJoint4DumpEv,b2,__ZZN16b2ParticleSystem14SolveCollisionERK10b2TimeStepEN22SolveCollisionCallbackD2Ev,b2,__ZN9b2ContactD0Ev,b2,__ZN7b2TimerC2Ev,b2,__ZN15b2DistanceJoint4DumpEv,b2,__ZN7b2Joint4DumpEv,b2,__ZN23b2EdgeAndPolygonContactD1Ev,b2,__ZN12b2BroadPhaseD2Ev,b2,__ZN12b2MotorJointD0Ev,b2,__ZN15b2ContactFilterD0Ev,b2,__ZN16b2VoronoiDiagram12NodeCallbackD1Ev,b2,__ZN24b2ChainAndPolygonContactD1Ev,b2,__ZN7b2ShapeD0Ev,b2,__ZN7b2ShapeD1Ev
  ,b2,__ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallbackD2Ev,b2,__ZZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEvEN14ReactiveFilterD0Ev,b2,__ZN12b2BroadPhaseC2Ev,b2,__ZN16b2PolygonContactD0Ev,b2,__ZN13b2PulleyJointD1Ev,b2,__ZN13b2PulleyJoint4DumpEv,b2,__ZN23b2ChainAndCircleContactD0Ev,b2,__ZZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEvEN14ReactiveFilterD2Ev,b2,__ZN15b2FrictionJoint4DumpEv,b2,__ZN15b2CircleContactD1Ev,b2,__ZN14b2PolygonShapeD0Ev,b2,__ZN8b2IslandD2Ev,b2,__ZN16b2ParticleSystemD2Ev,b2,__ZN11b2GearJointD0Ev,b2,__ZN12b2ChainShapeD2Ev
  ,b2,__ZN15b2ContactSolverD2Ev,b2,__ZN16b2ParticleSystem16ConnectionFilterD0Ev,b2,__ZN16b2ContactManagerC2Ev,b2,__ZN16b2StackAllocatorC2Ev,b2,__ZN12b2MouseJointD1Ev,b2,__ZN13b2CircleShapeD0Ev,b2,__ZN24b2ChainAndPolygonContactD0Ev,b2,__ZN9b2FixtureC2Ev,b2,__ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformEN14CompositeShapeD0Ev,b2,__ZN16b2BlockAllocatorC2Ev,b2,__ZNSt9bad_allocD0Ev,b2,__ZN15b2ContactFilterD1Ev,b2,__ZN12b2ChainShapeD0Ev,b2,__ZN22b2WorldContactListenerD0Ev,b2,__ZN15b2QueryCallbackD1Ev
  ,b2,__ZN15b2DistanceJointD1Ev,b2,__ZN11b2GearJointD1Ev,b2,__ZN12b2MotorJointD1Ev,b2,__ZN12b2WheelJoint4DumpEv,b2,__ZN16b2VoronoiDiagramD2Ev,b2,__ZN16b2ParticleSystem16ConnectionFilterD1Ev,b2,__ZN11b2WeldJointD1Ev,b2,__ZZN16b2ParticleSystem14SolveCollisionERK10b2TimeStepEN22SolveCollisionCallbackD0Ev,b2,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,b2,__ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_EN24JoinParticleGroupsFilterD2Ev,b2,__ZN15b2RevoluteJointD0Ev,b2,__ZN11b2RopeJoint4DumpEv,b2,__ZN12b2MouseJointD0Ev,b2,__ZN11b2EdgeShapeD1Ev,b2,__ZN13b2DynamicTreeC2Ev
  ,b2,__ZN7b2JointD1Ev,b2,__ZN12b2MotorJoint4DumpEv,b2,__ZN11b2GearJoint4DumpEv,b2,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b2,__ZN16b2PrismaticJointD1Ev,b2,__ZN13b2CircleShapeD1Ev,b2,__ZN16b2StackAllocatorD2Ev,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2];
  
  var FUNCTION_TABLE_vii = [b3,b3,__ZN15b2CircleContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZNK12b2MouseJoint10GetAnchorAEv,b3,__ZN11b2WeldJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN12b2MouseJoint11ShiftOriginERK6b2Vec2,b3,__ZN15b2FrictionJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN16b2PrismaticJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK15b2RevoluteJoint10GetAnchorAEv,b3,__ZNK15b2DistanceJoint10GetAnchorBEv,b3,__ZN12b2MotorJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN12b2MouseJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN16b2PrismaticJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZNK13b2PulleyJoint10GetAnchorBEv,b3,__ZNK15b2RevoluteJoint10GetAnchorBEv,b3,__ZNK11b2GearJoint10GetAnchorBEv
  ,b3,__ZN17b2ContactListener12BeginContactEP9b2Contact,b3,__ZN25b2PolygonAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN15b2DistanceJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN11b2RopeJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN23b2ChainAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN13b2PulleyJoint11ShiftOriginERK6b2Vec2,b3,__ZN11b2GearJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN17b2ContactListener10EndContactEP9b2Contact,b3,__ZL13b2FreeDefaultPvS_,b3,__ZN15b2DistanceJointC2EPK18b2DistanceJointDef,b3,__ZN12b2WheelJointC2EPK15b2WheelJointDef,b3,__ZN16b2PolygonContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN12b2WheelJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN12b2MouseJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK12b2MotorJoint10GetAnchorAEv
  ,b3,__ZN11b2RopeJointC2EPK14b2RopeJointDef,b3,__ZN13b2PulleyJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN22b2WorldContactListener12BeginContactEP9b2Contact,b3,__ZN24b2ChainAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN15b2RevoluteJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZNK16b2PrismaticJoint10GetAnchorAEv,b3,__ZNK11b2GearJoint10GetAnchorAEv,b3,__ZN15b2DistanceJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK11b2RopeJoint10GetAnchorBEv,b3,__ZN11b2GearJointC2EPK14b2GearJointDef,b3,__ZN15b2RevoluteJointC2EPK18b2RevoluteJointDef,b3,__ZN16b2PrismaticJointC2EPK19b2PrismaticJointDef,b3,__ZN12b2WheelJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK11b2RopeJoint10GetAnchorAEv,b3,__ZN13b2PulleyJoint24SolveVelocityConstraintsERK12b2SolverData
  ,b3,__ZNK13b2PulleyJoint10GetAnchorAEv,b3,__ZNK12b2MotorJoint10GetAnchorBEv,b3,__ZN7b2Joint11ShiftOriginERK6b2Vec2,b3,__ZN12b2MotorJointC2EPK15b2MotorJointDef,b3,__ZN12b2MouseJointC2EPK15b2MouseJointDef,b3,__ZN22b2EdgeAndCircleContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZNK15b2FrictionJoint10GetAnchorBEv,b3,__ZNK11b2WeldJoint10GetAnchorBEv,b3,__ZN13b2PulleyJointC2EPK16b2PulleyJointDef,b3,__ZNK15b2FrictionJoint10GetAnchorAEv,b3,__ZNK16b2PrismaticJoint10GetAnchorBEv,b3,__ZN7b2WorldC2ERK6b2Vec2,b3,__ZNK11b2WeldJoint10GetAnchorAEv,b3,__ZN15b2FrictionJointC2EPK18b2FrictionJointDef,b3,__ZN15b2ContactSolverC2EP18b2ContactSolverDef
  ,b3,__ZN11b2WeldJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN23b2EdgeAndPolygonContact7DestroyEP9b2ContactP16b2BlockAllocator,b3,__ZN22b2WorldContactListener10EndContactEP9b2Contact,b3,__ZNK12b2MouseJoint10GetAnchorBEv,b3,__ZN15b2RevoluteJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK15b2DistanceJoint10GetAnchorAEv,b3,__ZN15b2FrictionJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZNK12b2WheelJoint10GetAnchorBEv,b3,__ZNK12b2WheelJoint10GetAnchorAEv,b3,__ZN11b2RopeJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN11b2GearJoint23InitVelocityConstraintsERK12b2SolverData,b3,__ZN12b2MotorJoint24SolveVelocityConstraintsERK12b2SolverData,b3,__ZN11b2WeldJointC2EPK14b2WeldJointDef,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3];
  
  var FUNCTION_TABLE_iiiiii = [b4,b4,__ZN16b2PolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b4,__ZN24b2ChainAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b4,__ZNK14b2PolygonShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,b4,__ZN22b2EdgeAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b4,__ZN15b2CircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b4,__ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputSA_i,b4,__ZN25b2PolygonAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b4,__ZNK12b2ChainShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,b4,__ZN23b2ChainAndCircleContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b4,__ZNK11b2EdgeShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,b4,__ZNK13b2CircleShape7RayCastEP15b2RayCastOutputRK14b2RayCastInputRK11b2Transformi,b4,__ZN23b2EdgeAndPolygonContact6CreateEP9b2FixtureiS1_iP16b2BlockAllocator,b4,b4,b4,b4
  ,b4,b4,b4];
  
  var FUNCTION_TABLE_iiii = [b5,b5,__ZNK16b2ParticleSystem16ConnectionFilter16ShouldCreatePairEii,b5,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b5,__ZN15b2QueryCallback14ReportParticleEPK16b2ParticleSystemi,b5,__ZNK14b2PolygonShape9TestPointERK11b2TransformRK6b2Vec2,b5,__ZNK11b2EdgeShape9TestPointERK11b2TransformRK6b2Vec2,b5,__ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_ENK24JoinParticleGroupsFilter16ShouldCreatePairEii,b5,__ZN15b2ContactFilter13ShouldCollideEP9b2FixtureS1_,b5,__ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape9TestPointESA_RK6b2Vec2,b5,__ZNK12b2ChainShape9TestPointERK11b2TransformRK6b2Vec2,b5,__ZNK13b2CircleShape9TestPointERK11b2TransformRK6b2Vec2,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5];
  
  var FUNCTION_TABLE_fif = [b6,b6,__ZNK15b2RevoluteJoint17GetReactionTorqueEf,b6,__ZNK12b2WheelJoint17GetReactionTorqueEf,b6,__ZNK12b2MouseJoint17GetReactionTorqueEf,b6,__ZNK12b2MotorJoint17GetReactionTorqueEf,b6,__ZNK15b2FrictionJoint17GetReactionTorqueEf,b6,__ZNK15b2DistanceJoint17GetReactionTorqueEf,b6,__ZNK11b2GearJoint17GetReactionTorqueEf,b6,__ZNK16b2PrismaticJoint17GetReactionTorqueEf,b6,__ZNK11b2RopeJoint17GetReactionTorqueEf,b6,__ZNK11b2WeldJoint17GetReactionTorqueEf,b6,__ZNK13b2PulleyJoint17GetReactionTorqueEf,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6];
  
  var FUNCTION_TABLE_viii = [b7,b7,__ZN17b2ContactListener12BeginContactEP16b2ParticleSystemP17b2ParticleContact,b7,__ZN22b2WorldContactListener8PreSolveEP9b2ContactPK10b2Manifold,b7,__ZN22b2WorldContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse,b7,__ZN17b2ContactListener9PostSolveEP9b2ContactPK16b2ContactImpulse,b7,__ZN16b2ParticleSystemC2EPK19b2ParticleSystemDefP7b2World,b7,__ZN17b2ContactListener12BeginContactEP16b2ParticleSystemP21b2ParticleBodyContact,b7,__ZN6b2BodyC2EPK9b2BodyDefP7b2World,b7,__ZN17b2ContactListener8PreSolveEP9b2ContactPK10b2Manifold,b7,__ZN16b2VoronoiDiagramC2EP16b2StackAllocatori,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7];
  
  var FUNCTION_TABLE_v = [b8,b8,v____cxa_pure_virtual__wrapper,b8];
  
  var FUNCTION_TABLE_iiiii = [b9,b9,__ZZN16b2ParticleSystem18JoinParticleGroupsEP15b2ParticleGroupS1_ENK24JoinParticleGroupsFilter17ShouldCreateTriadEiii,b9,__ZNK16b2ParticleSystem16ConnectionFilter17ShouldCreateTriadEiii,b9,__ZN15b2ContactFilter13ShouldCollideEP16b2ParticleSystemii,b9,__ZN15b2ContactFilter13ShouldCollideEP9b2FixtureP16b2ParticleSystemi,b9,b9,b9,b9,b9,b9,b9];
  
  var FUNCTION_TABLE_viif = [b10,b10,__ZNK12b2ChainShape11ComputeMassEP10b2MassDataf,b10,__ZNK15b2RevoluteJoint16GetReactionForceEf,b10,__ZNK14b2PolygonShape11ComputeMassEP10b2MassDataf,b10,__ZNK12b2MouseJoint16GetReactionForceEf,b10,__ZNK12b2WheelJoint16GetReactionForceEf,b10,__ZNK12b2MotorJoint16GetReactionForceEf,b10,__ZNK11b2WeldJoint16GetReactionForceEf,b10,__ZNK15b2DistanceJoint16GetReactionForceEf,b10,__ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape11ComputeMassEP10b2MassDataf,b10,__ZNK13b2CircleShape11ComputeMassEP10b2MassDataf,b10,__ZNK13b2PulleyJoint16GetReactionForceEf,b10,__ZNK16b2PrismaticJoint16GetReactionForceEf,b10,__ZNK11b2GearJoint16GetReactionForceEf,b10,__ZNK15b2FrictionJoint16GetReactionForceEf
  ,b10,__ZNK11b2RopeJoint16GetReactionForceEf,b10,__ZNK11b2EdgeShape11ComputeMassEP10b2MassDataf,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10];
  
  var FUNCTION_TABLE_viiiiii = [b11,b11,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,__ZNK11b2EdgeShape15ComputeDistanceERK11b2TransformRK6b2Vec2PfPS3_i,b11,__ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape15ComputeDistanceESA_RK6b2Vec2PfPSC_i,b11,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b11,__ZNK14b2PolygonShape15ComputeDistanceERK11b2TransformRK6b2Vec2PfPS3_i,b11,__ZNK13b2CircleShape15ComputeDistanceERK11b2TransformRK6b2Vec2PfPS3_i,b11,__ZN8b2IslandC2EiiiP16b2StackAllocatorP17b2ContactListener,b11,__ZNK12b2ChainShape15ComputeDistanceERK11b2TransformRK6b2Vec2PfPS3_i,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11];
  
  var FUNCTION_TABLE_iii = [b12,b12,__ZN15b2FrictionJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN13b2PulleyJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZL14b2AllocDefaultiPv,b12,__ZZN16b2ParticleSystem41UpdatePairsAndTriadsWithReactiveParticlesEvENK14ReactiveFilter11IsNecessaryEi,b12,__ZNK14b2PolygonShape5CloneEP16b2BlockAllocator,b12,__ZN16b2ParticleSystem16MatchPairIndicesERKNS_4PairES2_,b12,__ZZN16b2ParticleSystem18UpdateBodyContactsEvEN26UpdateBodyContactsCallback13ReportFixtureEP9b2Fixture,b12,__ZN16b2ParticleSystem18ComparePairIndicesERKNS_4PairES2_,b12,__ZN16b2ParticleSystem17MatchTriadIndicesERKNS_5TriadES2_,b12,__ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape5CloneEP16b2BlockAllocator,b12,__ZNK13b2CircleShape5CloneEP16b2BlockAllocator,b12,__ZN15b2QueryCallback25ShouldQueryParticleSystemEPK16b2ParticleSystem,b12,__ZN12_GLOBAL__N_115LightweightPairIiiE7CompareERKS1_S3_,b12,__ZN16b2ParticleSystem19CompareTriadIndicesERKNS_5TriadES2_
  ,b12,__ZN15b2RevoluteJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN12b2MouseJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZZN16b2ParticleSystem14SolveCollisionERK10b2TimeStepEN22SolveCollisionCallback13ReportFixtureEP9b2Fixture,b12,__ZN16b2ParticleSystem18BodyContactCompareERK21b2ParticleBodyContactS2_,b12,__ZN12_GLOBAL__N_115LightweightPairIP9b2FixtureiE7CompareERKS3_S5_,b12,__ZN16b2PrismaticJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN11b2RopeJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN15b2DistanceJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZNK16b2ParticleSystem16ConnectionFilter11IsNecessaryEi,b12,__ZN12b2WheelJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZNK11b2EdgeShape5CloneEP16b2BlockAllocator,b12,__ZN12b2MotorJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZNK12b2ChainShape5CloneEP16b2BlockAllocator,b12,__ZN11b2WeldJoint24SolvePositionConstraintsERK12b2SolverData,b12,__ZN11b2GearJoint24SolvePositionConstraintsERK12b2SolverData
  ,b12,__Z14b2PairLessThanRK6b2PairS1_,b12,b12,b12];
  
  var FUNCTION_TABLE_viiii = [b13,b13,__ZNK14b2PolygonShape11ComputeAABBEP6b2AABBRK11b2Transformi,b13,__ZN24b2ChainAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b13,__ZZN16b2ParticleSystem33CreateParticlesWithShapesForGroupEPKPK7b2ShapeiRK18b2ParticleGroupDefRK11b2TransformENK14CompositeShape11ComputeAABBEP6b2AABBSA_i,b13,__ZN15b2CircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b13,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b13,__ZN16b2PolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b13,__ZN25b2PolygonAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b13,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b13,__ZNK12b2ChainShape11ComputeAABBEP6b2AABBRK11b2Transformi,b13,__ZNK11b2EdgeShape11ComputeAABBEP6b2AABBRK11b2Transformi,b13,__ZN17b2ContactListener10EndContactEP9b2FixtureP16b2ParticleSystemi,b13,__ZN23b2EdgeAndPolygonContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b13,__ZNK13b2CircleShape11ComputeAABBEP6b2AABBRK11b2Transformi,b13,__ZZN16b2ParticleSystem20UpdatePairsAndTriadsEiiRKNS_16ConnectionFilterEEN20UpdateTriadsCallbackclEiii
  ,b13,__ZN22b2EdgeAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b13,__ZN17b2ContactListener10EndContactEP16b2ParticleSystemii,b13,__ZN23b2ChainAndCircleContact8EvaluateEP10b2ManifoldRK11b2TransformS4_,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13];
  

  return { _b2Body_GetWorldVector: _b2Body_GetWorldVector, _strlen: _strlen, _b2Body_GetAngularVelocity: _b2Body_GetAngularVelocity, _b2PrismaticJointDef_Create: _b2PrismaticJointDef_Create, _b2World_SetGravity: _b2World_SetGravity, _b2WeldJointDef_InitializeAndCreate: _b2WeldJointDef_InitializeAndCreate, _b2Body_GetTransform: _b2Body_GetTransform, _b2PrismaticJointDef_InitializeAndCreate: _b2PrismaticJointDef_InitializeAndCreate, _b2World_Delete: _b2World_Delete, _b2Body_GetAngle: _b2Body_GetAngle, _b2Body_ApplyTorque: _b2Body_ApplyTorque, _b2DistanceJointDef_InitializeAndCreate: _b2DistanceJointDef_InitializeAndCreate, _b2MotorJointDef_Create: _b2MotorJointDef_Create, _b2World_DestroyBody: _b2World_DestroyBody, _b2FrictionJointDef_InitializeAndCreate: _b2FrictionJointDef_InitializeAndCreate, _b2World_CreateParticleSystem: _b2World_CreateParticleSystem, _b2Body_ApplyForce: _b2Body_ApplyForce, _b2ParticleSystem_SetRadius: _b2ParticleSystem_SetRadius, _b2Body_GetType: _b2Body_GetType, _b2FrictionJointDef_Create: _b2FrictionJointDef_Create, _b2Manifold_GetPointCount: _b2Manifold_GetPointCount, _b2ParticleSystem_SetDensity: _b2ParticleSystem_SetDensity, _b2WheelJointDef_InitializeAndCreate: _b2WheelJointDef_InitializeAndCreate, _b2MotorJointDef_InitializeAndCreate: _b2MotorJointDef_InitializeAndCreate, _b2PolygonShape_CreateParticleGroup_4: _b2PolygonShape_CreateParticleGroup_4, _b2GearJointDef_Create: _b2GearJointDef_Create, _b2Body_GetWorldPoint: _b2Body_GetWorldPoint, _b2PulleyJointDef_InitializeAndCreate: _b2PulleyJointDef_InitializeAndCreate, _b2World_SetContactListener: _b2World_SetContactListener, _b2Body_GetPosition: _b2Body_GetPosition, _memset: _memset, _b2World_CreateBody: _b2World_CreateBody, _b2ParticleSystem_GetParticleCount: _b2ParticleSystem_GetParticleCount, _memcpy: _memcpy, _b2Body_DestroyFixture: _b2Body_DestroyFixture, _b2Body_ApplyAngularImpulse: _b2Body_ApplyAngularImpulse, _b2Body_GetWorldCenter: _b2Body_GetWorldCenter, _b2ChainShape_CreateFixture: _b2ChainShape_CreateFixture, _b2PolygonShape_CreateFixture_3: _b2PolygonShape_CreateFixture_3, _b2World_DestroyJoint: _b2World_DestroyJoint, _b2PolygonShape_CreateFixture_6: _b2PolygonShape_CreateFixture_6, _b2World_Create: _b2World_Create, _b2PolygonShape_CreateFixture_4: _b2PolygonShape_CreateFixture_4, _b2Body_GetLinearVelocity: _b2Body_GetLinearVelocity, _b2WheelJoint_SetMotorSpeed: _b2WheelJoint_SetMotorSpeed, _b2EdgeShape_CreateFixture: _b2EdgeShape_CreateFixture, _b2ParticleSystem_GetColorBuffer: _b2ParticleSystem_GetColorBuffer, _b2Body_GetMass: _b2Body_GetMass, _b2MouseJointDef_Create: _b2MouseJointDef_Create, _b2DistanceJointDef_Create: _b2DistanceJointDef_Create, _b2ParticleSystem_GetPositionBuffer: _b2ParticleSystem_GetPositionBuffer, _b2ParticleSystem_SetDamping: _b2ParticleSystem_SetDamping, _b2Body_SetType: _b2Body_SetType, _b2Body_SetTransform: _b2Body_SetTransform, _b2World_Step: _b2World_Step, _b2PulleyJointDef_Create: _b2PulleyJointDef_Create, _b2RevoluteJoint_SetMotorSpeed: _b2RevoluteJoint_SetMotorSpeed, _b2RopeJointDef_Create: _b2RopeJointDef_Create, _b2RevoluteJointDef_InitializeAndCreate: _b2RevoluteJointDef_InitializeAndCreate, _b2WeldJointDef_Create: _b2WeldJointDef_Create, _b2WheelJointDef_Create: _b2WheelJointDef_Create, _free: _free, _b2Body_GetInertia: _b2Body_GetInertia, _b2ParticleSystem_CreateParticle: _b2ParticleSystem_CreateParticle, _b2Body_SetLinearVelocity: _b2Body_SetLinearVelocity, _b2CircleShape_CreateFixture: _b2CircleShape_CreateFixture, _malloc: _malloc, _b2Body_SetAngularVelocity: _b2Body_SetAngularVelocity, _b2Contact_GetManifold: _b2Contact_GetManifold, _b2RevoluteJointDef_Create: _b2RevoluteJointDef_Create, _memmove: _memmove, _b2CircleShape_CreateParticleGroup: _b2CircleShape_CreateParticleGroup, _b2PolygonShape_CreateFixture_5: _b2PolygonShape_CreateFixture_5, _b2WheelJoint_SetSpringFrequencyHz: _b2WheelJoint_SetSpringFrequencyHz, _b2World_DestroyParticleSystem: _b2World_DestroyParticleSystem, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, setTempRet1: setTempRet1, setTempRet2: setTempRet2, setTempRet3: setTempRet3, setTempRet4: setTempRet4, setTempRet5: setTempRet5, setTempRet6: setTempRet6, setTempRet7: setTempRet7, setTempRet8: setTempRet8, setTempRet9: setTempRet9, dynCall_ii: dynCall_ii, dynCall_viiiii: dynCall_viiiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiii: dynCall_iiiiii, dynCall_iiii: dynCall_iiii, dynCall_fif: dynCall_fif, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiii: dynCall_iiiii, dynCall_viif: dynCall_viif, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_ii": invoke_ii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiii": invoke_iiiiii, "invoke_iiii": invoke_iiii, "invoke_fif": invoke_fif, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiii": invoke_iiiii, "invoke_viif": invoke_viif, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "_cosf": _cosf, "___cxa_call_unexpected": ___cxa_call_unexpected, "_floorf": _floorf, "___cxa_throw": ___cxa_throw, "_sinf": _sinf, "_abort": _abort, "___cxa_end_catch": ___cxa_end_catch, "_b2WorldBeginContactBody": _b2WorldBeginContactBody, "___cxa_free_exception": ___cxa_free_exception, "_fflush": _fflush, "_sqrtf": _sqrtf, "_sysconf": _sysconf, "___setErrNo": ___setErrNo, "_exit": _exit, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_allocate_exception": ___cxa_allocate_exception, "___cxa_pure_virtual": ___cxa_pure_virtual, "_b2WorldEndContactBody": _b2WorldEndContactBody, "_time": _time, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "__ZSt9terminatev": __ZSt9terminatev, "_b2WorldPreSolve": _b2WorldPreSolve, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_sbrk": _sbrk, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "___errno_location": ___errno_location, "___gxx_personality_v0": ___gxx_personality_v0, "_b2WorldPostSolve": _b2WorldPostSolve, "_llvm_lifetime_start": _llvm_lifetime_start, "___resumeException": ___resumeException, "__exit": __exit, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE }, buffer);
var _b2Body_GetWorldVector = Module["_b2Body_GetWorldVector"] = asm["_b2Body_GetWorldVector"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _b2Body_GetAngularVelocity = Module["_b2Body_GetAngularVelocity"] = asm["_b2Body_GetAngularVelocity"];
var _b2PrismaticJointDef_Create = Module["_b2PrismaticJointDef_Create"] = asm["_b2PrismaticJointDef_Create"];
var _b2World_SetGravity = Module["_b2World_SetGravity"] = asm["_b2World_SetGravity"];
var _b2WeldJointDef_InitializeAndCreate = Module["_b2WeldJointDef_InitializeAndCreate"] = asm["_b2WeldJointDef_InitializeAndCreate"];
var _b2Body_GetTransform = Module["_b2Body_GetTransform"] = asm["_b2Body_GetTransform"];
var _b2PrismaticJointDef_InitializeAndCreate = Module["_b2PrismaticJointDef_InitializeAndCreate"] = asm["_b2PrismaticJointDef_InitializeAndCreate"];
var _b2World_Delete = Module["_b2World_Delete"] = asm["_b2World_Delete"];
var _b2Body_GetAngle = Module["_b2Body_GetAngle"] = asm["_b2Body_GetAngle"];
var _b2Body_ApplyTorque = Module["_b2Body_ApplyTorque"] = asm["_b2Body_ApplyTorque"];
var _b2DistanceJointDef_InitializeAndCreate = Module["_b2DistanceJointDef_InitializeAndCreate"] = asm["_b2DistanceJointDef_InitializeAndCreate"];
var _b2MotorJointDef_Create = Module["_b2MotorJointDef_Create"] = asm["_b2MotorJointDef_Create"];
var _b2World_DestroyBody = Module["_b2World_DestroyBody"] = asm["_b2World_DestroyBody"];
var _b2FrictionJointDef_InitializeAndCreate = Module["_b2FrictionJointDef_InitializeAndCreate"] = asm["_b2FrictionJointDef_InitializeAndCreate"];
var _b2World_CreateParticleSystem = Module["_b2World_CreateParticleSystem"] = asm["_b2World_CreateParticleSystem"];
var _b2Body_ApplyForce = Module["_b2Body_ApplyForce"] = asm["_b2Body_ApplyForce"];
var _b2ParticleSystem_SetRadius = Module["_b2ParticleSystem_SetRadius"] = asm["_b2ParticleSystem_SetRadius"];
var _b2Body_GetType = Module["_b2Body_GetType"] = asm["_b2Body_GetType"];
var _b2FrictionJointDef_Create = Module["_b2FrictionJointDef_Create"] = asm["_b2FrictionJointDef_Create"];
var _b2Manifold_GetPointCount = Module["_b2Manifold_GetPointCount"] = asm["_b2Manifold_GetPointCount"];
var _b2ParticleSystem_SetDensity = Module["_b2ParticleSystem_SetDensity"] = asm["_b2ParticleSystem_SetDensity"];
var _b2WheelJointDef_InitializeAndCreate = Module["_b2WheelJointDef_InitializeAndCreate"] = asm["_b2WheelJointDef_InitializeAndCreate"];
var _b2MotorJointDef_InitializeAndCreate = Module["_b2MotorJointDef_InitializeAndCreate"] = asm["_b2MotorJointDef_InitializeAndCreate"];
var _b2PolygonShape_CreateParticleGroup_4 = Module["_b2PolygonShape_CreateParticleGroup_4"] = asm["_b2PolygonShape_CreateParticleGroup_4"];
var _b2GearJointDef_Create = Module["_b2GearJointDef_Create"] = asm["_b2GearJointDef_Create"];
var _b2Body_GetWorldPoint = Module["_b2Body_GetWorldPoint"] = asm["_b2Body_GetWorldPoint"];
var _b2PulleyJointDef_InitializeAndCreate = Module["_b2PulleyJointDef_InitializeAndCreate"] = asm["_b2PulleyJointDef_InitializeAndCreate"];
var _b2World_SetContactListener = Module["_b2World_SetContactListener"] = asm["_b2World_SetContactListener"];
var _b2Body_GetPosition = Module["_b2Body_GetPosition"] = asm["_b2Body_GetPosition"];
var _memset = Module["_memset"] = asm["_memset"];
var _b2World_CreateBody = Module["_b2World_CreateBody"] = asm["_b2World_CreateBody"];
var _b2ParticleSystem_GetParticleCount = Module["_b2ParticleSystem_GetParticleCount"] = asm["_b2ParticleSystem_GetParticleCount"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _b2Body_DestroyFixture = Module["_b2Body_DestroyFixture"] = asm["_b2Body_DestroyFixture"];
var _b2Body_ApplyAngularImpulse = Module["_b2Body_ApplyAngularImpulse"] = asm["_b2Body_ApplyAngularImpulse"];
var _b2Body_GetWorldCenter = Module["_b2Body_GetWorldCenter"] = asm["_b2Body_GetWorldCenter"];
var _b2ChainShape_CreateFixture = Module["_b2ChainShape_CreateFixture"] = asm["_b2ChainShape_CreateFixture"];
var _b2PolygonShape_CreateFixture_3 = Module["_b2PolygonShape_CreateFixture_3"] = asm["_b2PolygonShape_CreateFixture_3"];
var _b2World_DestroyJoint = Module["_b2World_DestroyJoint"] = asm["_b2World_DestroyJoint"];
var _b2PolygonShape_CreateFixture_6 = Module["_b2PolygonShape_CreateFixture_6"] = asm["_b2PolygonShape_CreateFixture_6"];
var _b2World_Create = Module["_b2World_Create"] = asm["_b2World_Create"];
var _b2PolygonShape_CreateFixture_4 = Module["_b2PolygonShape_CreateFixture_4"] = asm["_b2PolygonShape_CreateFixture_4"];
var _b2Body_GetLinearVelocity = Module["_b2Body_GetLinearVelocity"] = asm["_b2Body_GetLinearVelocity"];
var _b2WheelJoint_SetMotorSpeed = Module["_b2WheelJoint_SetMotorSpeed"] = asm["_b2WheelJoint_SetMotorSpeed"];
var _b2EdgeShape_CreateFixture = Module["_b2EdgeShape_CreateFixture"] = asm["_b2EdgeShape_CreateFixture"];
var _b2ParticleSystem_GetColorBuffer = Module["_b2ParticleSystem_GetColorBuffer"] = asm["_b2ParticleSystem_GetColorBuffer"];
var _b2Body_GetMass = Module["_b2Body_GetMass"] = asm["_b2Body_GetMass"];
var _b2MouseJointDef_Create = Module["_b2MouseJointDef_Create"] = asm["_b2MouseJointDef_Create"];
var _b2DistanceJointDef_Create = Module["_b2DistanceJointDef_Create"] = asm["_b2DistanceJointDef_Create"];
var _b2ParticleSystem_GetPositionBuffer = Module["_b2ParticleSystem_GetPositionBuffer"] = asm["_b2ParticleSystem_GetPositionBuffer"];
var _b2ParticleSystem_SetDamping = Module["_b2ParticleSystem_SetDamping"] = asm["_b2ParticleSystem_SetDamping"];
var _b2Body_SetType = Module["_b2Body_SetType"] = asm["_b2Body_SetType"];
var _b2Body_SetTransform = Module["_b2Body_SetTransform"] = asm["_b2Body_SetTransform"];
var _b2World_Step = Module["_b2World_Step"] = asm["_b2World_Step"];
var _b2PulleyJointDef_Create = Module["_b2PulleyJointDef_Create"] = asm["_b2PulleyJointDef_Create"];
var _b2RevoluteJoint_SetMotorSpeed = Module["_b2RevoluteJoint_SetMotorSpeed"] = asm["_b2RevoluteJoint_SetMotorSpeed"];
var _b2RopeJointDef_Create = Module["_b2RopeJointDef_Create"] = asm["_b2RopeJointDef_Create"];
var _b2RevoluteJointDef_InitializeAndCreate = Module["_b2RevoluteJointDef_InitializeAndCreate"] = asm["_b2RevoluteJointDef_InitializeAndCreate"];
var _b2WeldJointDef_Create = Module["_b2WeldJointDef_Create"] = asm["_b2WeldJointDef_Create"];
var _b2WheelJointDef_Create = Module["_b2WheelJointDef_Create"] = asm["_b2WheelJointDef_Create"];
var _free = Module["_free"] = asm["_free"];
var _b2Body_GetInertia = Module["_b2Body_GetInertia"] = asm["_b2Body_GetInertia"];
var _b2ParticleSystem_CreateParticle = Module["_b2ParticleSystem_CreateParticle"] = asm["_b2ParticleSystem_CreateParticle"];
var _b2Body_SetLinearVelocity = Module["_b2Body_SetLinearVelocity"] = asm["_b2Body_SetLinearVelocity"];
var _b2CircleShape_CreateFixture = Module["_b2CircleShape_CreateFixture"] = asm["_b2CircleShape_CreateFixture"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _b2Body_SetAngularVelocity = Module["_b2Body_SetAngularVelocity"] = asm["_b2Body_SetAngularVelocity"];
var _b2Contact_GetManifold = Module["_b2Contact_GetManifold"] = asm["_b2Contact_GetManifold"];
var _b2RevoluteJointDef_Create = Module["_b2RevoluteJointDef_Create"] = asm["_b2RevoluteJointDef_Create"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _b2CircleShape_CreateParticleGroup = Module["_b2CircleShape_CreateParticleGroup"] = asm["_b2CircleShape_CreateParticleGroup"];
var _b2PolygonShape_CreateFixture_5 = Module["_b2PolygonShape_CreateFixture_5"] = asm["_b2PolygonShape_CreateFixture_5"];
var _b2WheelJoint_SetSpringFrequencyHz = Module["_b2WheelJoint_SetSpringFrequencyHz"] = asm["_b2WheelJoint_SetSpringFrequencyHz"];
var _b2World_DestroyParticleSystem = Module["_b2World_DestroyParticleSystem"] = asm["_b2World_DestroyParticleSystem"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_fif = Module["dynCall_fif"] = asm["dynCall_fif"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viif = Module["dynCall_viif"] = asm["dynCall_viif"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };

// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



